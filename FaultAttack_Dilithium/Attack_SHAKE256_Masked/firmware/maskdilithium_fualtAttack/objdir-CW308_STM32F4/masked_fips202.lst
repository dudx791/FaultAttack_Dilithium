   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"masked_fips202.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rand32bits,"ax",%progbits
  16              		.align	1
  17              		.global	rand32bits
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	rand32bits:
  25              	.LFB0:
  26              		.file 1 "masked_fips202.c"
   1:masked_fips202.c **** #include <stddef.h>
   2:masked_fips202.c **** #include <stdint.h>
   3:masked_fips202.c **** #include "fips202.h"
   4:masked_fips202.c **** #include "params.h"
   5:masked_fips202.c **** #include <string.h>
   6:masked_fips202.c **** 
   7:masked_fips202.c **** #define NROUNDS 24
   8:masked_fips202.c **** #define ROL(a, offset) ((a << offset) ^ (a >> (64-offset)))
   9:masked_fips202.c **** unsigned long rand32bits(void)
  10:masked_fips202.c **** {
  27              		.loc 1 10 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  11:masked_fips202.c ****     unsigned long tmp_r;
  31              		.loc 1 11 5 view .LVU1
  12:masked_fips202.c ****     tmp_r = rand();
  32              		.loc 1 12 5 view .LVU2
  10:masked_fips202.c ****     unsigned long tmp_r;
  33              		.loc 1 10 1 is_stmt 0 view .LVU3
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              		.loc 1 12 13 view .LVU4
  42 0002 FFF7FEFF 		bl	rand
  43              	.LVL0:
  44 0006 0446     		mov	r4, r0
  45              	.LVL1:
  13:masked_fips202.c ****     tmp_r ^= rand() << 15;
  46              		.loc 1 13 5 is_stmt 1 view .LVU5
  47              		.loc 1 13 14 is_stmt 0 view .LVU6
  48 0008 FFF7FEFF 		bl	rand
  49              	.LVL2:
  50              		.loc 1 13 14 view .LVU7
  51 000c 0546     		mov	r5, r0
  52              	.LVL3:
  14:masked_fips202.c ****     tmp_r ^= rand() << 30;
  53              		.loc 1 14 5 is_stmt 1 view .LVU8
  54              		.loc 1 14 14 is_stmt 0 view .LVU9
  55 000e FFF7FEFF 		bl	rand
  56              	.LVL4:
  15:masked_fips202.c ****     return tmp_r;
  57              		.loc 1 15 5 is_stmt 1 view .LVU10
  14:masked_fips202.c ****     tmp_r ^= rand() << 30;
  58              		.loc 1 14 21 is_stmt 0 view .LVU11
  59 0012 8307     		lsls	r3, r0, #30
  14:masked_fips202.c ****     tmp_r ^= rand() << 30;
  60              		.loc 1 14 11 view .LVU12
  61 0014 83EAC533 		eor	r3, r3, r5, lsl #15
  16:masked_fips202.c **** }
  62              		.loc 1 16 1 view .LVU13
  63 0018 83EA0400 		eor	r0, r3, r4
  64              	.LVL5:
  65              		.loc 1 16 1 view .LVU14
  66 001c 38BD     		pop	{r3, r4, r5, pc}
  67              		.cfi_endproc
  68              	.LFE0:
  70              		.section	.text.secMult,"ax",%progbits
  71              		.align	1
  72              		.global	secMult
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu softvfp
  78              	secMult:
  79              	.LVL6:
  80              	.LFB1:
  17:masked_fips202.c **** //secMult from https://www.iacr.org/archive/ches2010/62250403/62250403.pdf
  18:masked_fips202.c **** void secMult(uint64_t* c, uint64_t* a, uint64_t* b)
  19:masked_fips202.c **** {
  81              		.loc 1 19 1 is_stmt 1 view -0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 96
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  20:masked_fips202.c ****     unsigned int i, j, offset_i, offset_j;
  85              		.loc 1 20 5 view .LVU16
  21:masked_fips202.c ****     uint64_t r_ij[(MASKING_ORDER + 1) * (MASKING_ORDER + 1)];
  86              		.loc 1 21 5 view .LVU17
  22:masked_fips202.c ****     memset(r_ij, 0, (MASKING_ORDER + 1) * (MASKING_ORDER + 1) * 8);
  87              		.loc 1 22 5 view .LVU18
  19:masked_fips202.c ****     unsigned int i, j, offset_i, offset_j;
  88              		.loc 1 19 1 is_stmt 0 view .LVU19
  89 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 36
  92              		.cfi_offset 4, -36
  93              		.cfi_offset 5, -32
  94              		.cfi_offset 6, -28
  95              		.cfi_offset 7, -24
  96              		.cfi_offset 8, -20
  97              		.cfi_offset 9, -16
  98              		.cfi_offset 10, -12
  99              		.cfi_offset 11, -8
 100              		.cfi_offset 14, -4
 101 0004 99B0     		sub	sp, sp, #100
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 136
  19:masked_fips202.c ****     unsigned int i, j, offset_i, offset_j;
 104              		.loc 1 19 1 view .LVU20
 105 0006 CDE90112 		strd	r1, r2, [sp, #4]
 106 000a 0390     		str	r0, [sp, #12]
 107              		.loc 1 22 5 view .LVU21
 108 000c 4822     		movs	r2, #72
 109              	.LVL7:
 110              		.loc 1 22 5 view .LVU22
 111 000e 0021     		movs	r1, #0
 112              	.LVL8:
 113              		.loc 1 22 5 view .LVU23
 114 0010 06A8     		add	r0, sp, #24
 115              	.LVL9:
 116              		.loc 1 22 5 view .LVU24
 117 0012 FFF7FEFF 		bl	memset
 118              	.LVL10:
  23:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 119              		.loc 1 23 5 is_stmt 1 view .LVU25
 120              		.loc 1 23 17 view .LVU26
 121 0016 DDE90167 		ldrd	r6, r7, [sp, #4]
 122 001a 06AB     		add	r3, sp, #24
 123 001c 0093     		str	r3, [sp]
  22:masked_fips202.c ****     memset(r_ij, 0, (MASKING_ORDER + 1) * (MASKING_ORDER + 1) * 8);
 124              		.loc 1 22 5 is_stmt 0 view .LVU27
 125 001e 9A46     		mov	r10, r3
 126              		.loc 1 23 12 view .LVU28
 127 0020 4FF0000B 		mov	fp, #0
 128              	.LVL11:
 129              	.L5:
  24:masked_fips202.c ****     {
  25:masked_fips202.c ****         offset_i = i * (MASKING_ORDER + 1);
 130              		.loc 1 25 9 is_stmt 1 view .LVU29
  26:masked_fips202.c ****         for (j = i + 1; j < (MASKING_ORDER + 1); j++)
 131              		.loc 1 26 9 view .LVU30
 132              		.loc 1 26 16 is_stmt 0 view .LVU31
 133 0024 0BF1010B 		add	fp, fp, #1
 134              	.LVL12:
 135              		.loc 1 26 9 view .LVU32
 136 0028 B146     		mov	r9, r6
 137 002a 5546     		mov	r5, r10
 138 002c B846     		mov	r8, r7
 139 002e 5446     		mov	r4, r10
 140              		.loc 1 26 16 view .LVU33
 141 0030 5946     		mov	r1, fp
 142              	.LVL13:
 143              	.L3:
 144              		.loc 1 26 25 is_stmt 1 discriminator 1 view .LVU34
 145              		.loc 1 26 9 is_stmt 0 discriminator 1 view .LVU35
 146 0032 0329     		cmp	r1, #3
 147 0034 04F10804 		add	r4, r4, #8
 148 0038 08F10808 		add	r8, r8, #8
 149 003c 09F10809 		add	r9, r9, #8
 150 0040 3AD1     		bne	.L4
 151              	.LVL14:
  23:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 152              		.loc 1 23 17 is_stmt 1 discriminator 1 view .LVU36
  23:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 153              		.loc 1 23 5 is_stmt 0 discriminator 1 view .LVU37
 154 0042 BBF1030F 		cmp	fp, #3
 155 0046 0AF1200A 		add	r10, r10, #32
 156 004a 07F10807 		add	r7, r7, #8
 157 004e 06F10806 		add	r6, r6, #8
 158 0052 E7D1     		bne	.L5
 159 0054 019B     		ldr	r3, [sp, #4]
 160 0056 A3F10801 		sub	r1, r3, #8
 161              	.LVL15:
  23:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 162              		.loc 1 23 5 discriminator 1 view .LVU38
 163 005a 029B     		ldr	r3, [sp, #8]
 164 005c A3F10802 		sub	r2, r3, #8
 165 0060 039B     		ldr	r3, [sp, #12]
 166 0062 A3F10800 		sub	r0, r3, #8
  27:masked_fips202.c ****         {
  28:masked_fips202.c ****             offset_j = j * (MASKING_ORDER + 1);
  29:masked_fips202.c ****             r_ij[j + offset_i] = ((uint64_t)(rand32bits()) << 32) + (uint64_t)(rand32bits());
  30:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
  31:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ r_ij[j + offset_i];
  32:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ (a[j] & b[i]);
  33:masked_fips202.c ****         }
  34:masked_fips202.c ****     }
  35:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 167              		.loc 1 35 12 view .LVU39
 168 0066 0023     		movs	r3, #0
 169              	.LVL16:
 170              	.L8:
  36:masked_fips202.c ****     {
  37:masked_fips202.c ****         c[i] = a[i] & b[i];
 171              		.loc 1 37 9 is_stmt 1 view .LVU40
 172              		.loc 1 37 21 is_stmt 0 view .LVU41
 173 0068 51F8085F 		ldr	r5, [r1, #8]!
 174 006c 52F8087F 		ldr	r7, [r2, #8]!
 175 0070 4C68     		ldr	r4, [r1, #4]
 176 0072 5668     		ldr	r6, [r2, #4]
 177              		.loc 1 37 14 view .LVU42
 178 0074 DDF800C0 		ldr	ip, [sp]
 179              		.loc 1 37 21 view .LVU43
 180 0078 3D40     		ands	r5, r5, r7
 181              		.loc 1 37 14 view .LVU44
 182 007a 40F8085F 		str	r5, [r0, #8]!
 183              		.loc 1 37 21 view .LVU45
 184 007e 3440     		ands	r4, r4, r6
 185              		.loc 1 37 14 view .LVU46
 186 0080 4460     		str	r4, [r0, #4]
  38:masked_fips202.c ****         offset_i = i * (MASKING_ORDER + 1);
 187              		.loc 1 38 9 is_stmt 1 view .LVU47
 188              	.LVL17:
  39:masked_fips202.c ****         for (j = 0; j < (MASKING_ORDER + 1); j++)
 189              		.loc 1 39 9 view .LVU48
 190              		.loc 1 39 21 view .LVU49
 191              		.loc 1 39 16 is_stmt 0 view .LVU50
 192 0082 0024     		movs	r4, #0
 193              	.LVL18:
 194              	.L7:
  40:masked_fips202.c ****         {
  41:masked_fips202.c ****             if (i != j)
 195              		.loc 1 41 13 is_stmt 1 view .LVU51
 196              		.loc 1 41 16 is_stmt 0 view .LVU52
 197 0084 A342     		cmp	r3, r4
 198 0086 09D0     		beq	.L6
  42:masked_fips202.c ****                 c[i] = c[i] ^ r_ij[j + offset_i];
 199              		.loc 1 42 17 is_stmt 1 view .LVU53
 200              		.loc 1 42 29 is_stmt 0 view .LVU54
 201 0088 D0E90065 		ldrd	r6, r5, [r0]
 202 008c 0195     		str	r5, [sp, #4]
 203 008e DCE90057 		ldrd	r5, r7, [ip]
 204 0092 6E40     		eors	r6, r6, r5
 205 0094 019D     		ldr	r5, [sp, #4]
 206 0096 7D40     		eors	r5, r5, r7
 207              		.loc 1 42 22 view .LVU55
 208 0098 C0E90065 		strd	r6, r5, [r0]
 209              	.L6:
  39:masked_fips202.c ****         for (j = 0; j < (MASKING_ORDER + 1); j++)
 210              		.loc 1 39 46 is_stmt 1 discriminator 2 view .LVU56
  39:masked_fips202.c ****         for (j = 0; j < (MASKING_ORDER + 1); j++)
 211              		.loc 1 39 47 is_stmt 0 discriminator 2 view .LVU57
 212 009c 0134     		adds	r4, r4, #1
 213              	.LVL19:
  39:masked_fips202.c ****         for (j = 0; j < (MASKING_ORDER + 1); j++)
 214              		.loc 1 39 21 is_stmt 1 discriminator 2 view .LVU58
  39:masked_fips202.c ****         for (j = 0; j < (MASKING_ORDER + 1); j++)
 215              		.loc 1 39 9 is_stmt 0 discriminator 2 view .LVU59
 216 009e 032C     		cmp	r4, #3
 217 00a0 0CF1080C 		add	ip, ip, #8
 218 00a4 EED1     		bne	.L7
  35:masked_fips202.c ****     {
 219              		.loc 1 35 42 is_stmt 1 discriminator 2 view .LVU60
  35:masked_fips202.c ****     {
 220              		.loc 1 35 5 is_stmt 0 discriminator 2 view .LVU61
 221 00a6 009C     		ldr	r4, [sp]
 222              	.LVL20:
  35:masked_fips202.c ****     {
 223              		.loc 1 35 43 discriminator 2 view .LVU62
 224 00a8 0133     		adds	r3, r3, #1
 225              	.LVL21:
  35:masked_fips202.c ****     {
 226              		.loc 1 35 17 is_stmt 1 discriminator 2 view .LVU63
  35:masked_fips202.c ****     {
 227              		.loc 1 35 5 is_stmt 0 discriminator 2 view .LVU64
 228 00aa 1834     		adds	r4, r4, #24
 229 00ac 032B     		cmp	r3, #3
 230 00ae 0094     		str	r4, [sp]
 231 00b0 DAD1     		bne	.L8
  43:masked_fips202.c ****         }
  44:masked_fips202.c ****     }
  45:masked_fips202.c ****     return;
  46:masked_fips202.c **** }
 232              		.loc 1 46 1 view .LVU65
 233 00b2 19B0     		add	sp, sp, #100
 234              	.LCFI3:
 235              		.cfi_remember_state
 236              		.cfi_def_cfa_offset 36
 237              		@ sp needed
 238 00b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 239              	.LVL22:
 240              	.L4:
 241              	.LCFI4:
 242              		.cfi_restore_state
 243              		.loc 1 46 1 view .LVU66
 244 00b8 0591     		str	r1, [sp, #20]
  28:masked_fips202.c ****             r_ij[j + offset_i] = ((uint64_t)(rand32bits()) << 32) + (uint64_t)(rand32bits());
 245              		.loc 1 28 13 is_stmt 1 discriminator 3 view .LVU67
 246              	.LVL23:
  29:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
 247              		.loc 1 29 13 discriminator 3 view .LVU68
  29:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
 248              		.loc 1 29 46 is_stmt 0 discriminator 3 view .LVU69
 249 00ba FFF7FEFF 		bl	rand32bits
 250              	.LVL24:
  29:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
 251              		.loc 1 29 46 discriminator 3 view .LVU70
 252 00be 0490     		str	r0, [sp, #16]
  29:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
 253              		.loc 1 29 80 discriminator 3 view .LVU71
 254 00c0 FFF7FEFF 		bl	rand32bits
 255              	.LVL25:
  29:masked_fips202.c ****             r_ij[i + offset_j] = (a[i] & b[j]);
 256              		.loc 1 29 32 discriminator 3 view .LVU72
 257 00c4 049B     		ldr	r3, [sp, #16]
 258 00c6 2060     		str	r0, [r4]
 259 00c8 6360     		str	r3, [r4, #4]
  30:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ r_ij[j + offset_i];
 260              		.loc 1 30 13 is_stmt 1 discriminator 3 view .LVU73
  30:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ r_ij[j + offset_i];
 261              		.loc 1 30 40 is_stmt 0 discriminator 3 view .LVU74
 262 00ca D8E90010 		ldrd	r1, r0, [r8]
 263 00ce D6E90023 		ldrd	r2, r3, [r6]
 264 00d2 02EA010C 		and	ip, r2, r1
 265 00d6 1840     		ands	r0, r0, r3
  32:masked_fips202.c ****         }
 266              		.loc 1 32 61 discriminator 3 view .LVU75
 267 00d8 D9F80010 		ldr	r1, [r9]
 268 00dc 3A68     		ldr	r2, [r7]
 269 00de D9F80430 		ldr	r3, [r9, #4]
  30:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ r_ij[j + offset_i];
 270              		.loc 1 30 32 discriminator 3 view .LVU76
 271 00e2 C5E906C0 		strd	ip, r0, [r5, #24]
  31:masked_fips202.c ****             r_ij[i + offset_j] = r_ij[i + offset_j] ^ (a[j] & b[i]);
 272              		.loc 1 31 13 is_stmt 1 discriminator 3 view .LVU77
  32:masked_fips202.c ****         }
 273              		.loc 1 32 13 discriminator 3 view .LVU78
  32:masked_fips202.c ****         }
 274              		.loc 1 32 61 is_stmt 0 discriminator 3 view .LVU79
 275 00e6 0A40     		ands	r2, r2, r1
 276 00e8 7968     		ldr	r1, [r7, #4]
 277 00ea 0B40     		ands	r3, r3, r1
  32:masked_fips202.c ****         }
 278              		.loc 1 32 53 discriminator 3 view .LVU80
 279 00ec 2168     		ldr	r1, [r4]
 280 00ee 82EA0C02 		eor	r2, r2, ip
 281 00f2 4A40     		eors	r2, r2, r1
 282 00f4 6168     		ldr	r1, [r4, #4]
 283 00f6 4340     		eors	r3, r3, r0
 284 00f8 4B40     		eors	r3, r3, r1
  26:masked_fips202.c ****         {
 285              		.loc 1 26 51 discriminator 3 view .LVU81
 286 00fa 0599     		ldr	r1, [sp, #20]
  32:masked_fips202.c ****         }
 287              		.loc 1 32 32 discriminator 3 view .LVU82
 288 00fc C5E90623 		strd	r2, r3, [r5, #24]
  26:masked_fips202.c ****         {
 289              		.loc 1 26 50 is_stmt 1 discriminator 3 view .LVU83
  26:masked_fips202.c ****         {
 290              		.loc 1 26 51 is_stmt 0 discriminator 3 view .LVU84
 291 0100 0131     		adds	r1, r1, #1
 292              	.LVL26:
  26:masked_fips202.c ****         {
 293              		.loc 1 26 51 discriminator 3 view .LVU85
 294 0102 1835     		adds	r5, r5, #24
 295 0104 95E7     		b	.L3
 296              		.cfi_endproc
 297              	.LFE1:
 299              		.section	.text.not_mult_xor,"ax",%progbits
 300              		.align	1
 301              		.global	not_mult_xor
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 307              	not_mult_xor:
 308              	.LVL27:
 309              	.LFB2:
  47:masked_fips202.c **** 
  48:masked_fips202.c **** void not_mult_xor(uint64_t* r, uint64_t* n, uint64_t* m, uint64_t* x)
  49:masked_fips202.c **** {
 310              		.loc 1 49 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
  50:masked_fips202.c ****     unsigned int i;
 314              		.loc 1 50 5 view .LVU87
  51:masked_fips202.c ****     uint64_t tmp_share;
 315              		.loc 1 51 5 view .LVU88
  52:masked_fips202.c ****     r[0] = n[0] ^ 0xFFFFFFFFFFFFFFFF;
 316              		.loc 1 52 5 view .LVU89
  49:masked_fips202.c ****     unsigned int i;
 317              		.loc 1 49 1 is_stmt 0 view .LVU90
 318 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 319              	.LCFI5:
 320              		.cfi_def_cfa_offset 24
 321              		.cfi_offset 3, -24
 322              		.cfi_offset 4, -20
 323              		.cfi_offset 5, -16
 324              		.cfi_offset 6, -12
 325              		.cfi_offset 7, -8
 326              		.cfi_offset 14, -4
  49:masked_fips202.c ****     unsigned int i;
 327              		.loc 1 49 1 view .LVU91
 328 0002 1D46     		mov	r5, r3
 329              		.loc 1 52 17 view .LVU92
 330 0004 D1E90063 		ldrd	r6, r3, [r1]
 331              	.LVL28:
 332              		.loc 1 52 17 view .LVU93
 333 0008 DB43     		mvns	r3, r3
 334 000a F643     		mvns	r6, r6
 335              		.loc 1 52 10 view .LVU94
 336 000c C0E90063 		strd	r6, r3, [r0]
  53:masked_fips202.c ****     for (i = 1; i < (MASKING_ORDER + 1); i++)
 337              		.loc 1 53 5 is_stmt 1 view .LVU95
 338              	.LVL29:
 339              		.loc 1 53 17 view .LVU96
  54:masked_fips202.c ****         r[i] = n[i];
 340              		.loc 1 54 9 view .LVU97
 341              		.loc 1 54 17 is_stmt 0 view .LVU98
 342 0010 D1E90267 		ldrd	r6, [r1, #8]
 343              		.loc 1 54 14 view .LVU99
 344 0014 C0E90267 		strd	r6, [r0, #8]
  53:masked_fips202.c ****     for (i = 1; i < (MASKING_ORDER + 1); i++)
 345              		.loc 1 53 42 is_stmt 1 view .LVU100
 346              	.LVL30:
  53:masked_fips202.c ****     for (i = 1; i < (MASKING_ORDER + 1); i++)
 347              		.loc 1 53 17 view .LVU101
 348              		.loc 1 54 9 view .LVU102
 349              		.loc 1 54 17 is_stmt 0 view .LVU103
 350 0018 D1E90467 		ldrd	r6, [r1, #16]
  49:masked_fips202.c ****     unsigned int i;
 351              		.loc 1 49 1 view .LVU104
 352 001c 0446     		mov	r4, r0
 353              		.loc 1 54 14 view .LVU105
 354 001e C0E90467 		strd	r6, [r0, #16]
  53:masked_fips202.c ****     for (i = 1; i < (MASKING_ORDER + 1); i++)
 355              		.loc 1 53 42 is_stmt 1 view .LVU106
 356              	.LVL31:
  53:masked_fips202.c ****     for (i = 1; i < (MASKING_ORDER + 1); i++)
 357              		.loc 1 53 17 view .LVU107
  55:masked_fips202.c ****     secMult(r, r, m);
 358              		.loc 1 55 5 view .LVU108
 359 0022 0146     		mov	r1, r0
 360              	.LVL32:
 361              		.loc 1 55 5 is_stmt 0 view .LVU109
 362 0024 FFF7FEFF 		bl	secMult
 363              	.LVL33:
  56:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 364              		.loc 1 56 5 is_stmt 1 view .LVU110
 365              		.loc 1 56 17 view .LVU111
 366 0028 A4F10802 		sub	r2, r4, #8
 367 002c A5F10803 		sub	r3, r5, #8
 368 0030 1034     		adds	r4, r4, #16
 369              	.LVL34:
 370              	.L13:
  57:masked_fips202.c ****     {
  58:masked_fips202.c ****         r[i] = r[i] ^ x[i];
 371              		.loc 1 58 9 discriminator 3 view .LVU112
 372              		.loc 1 58 21 is_stmt 0 discriminator 3 view .LVU113
 373 0032 52F8080F 		ldr	r0, [r2, #8]!
 374 0036 53F8086F 		ldr	r6, [r3, #8]!
 375 003a 5168     		ldr	r1, [r2, #4]
 376 003c 5D68     		ldr	r5, [r3, #4]
 377 003e 7040     		eors	r0, r0, r6
 378 0040 6940     		eors	r1, r1, r5
  56:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 379              		.loc 1 56 5 discriminator 3 view .LVU114
 380 0042 9442     		cmp	r4, r2
 381              		.loc 1 58 14 discriminator 3 view .LVU115
 382 0044 C2E90001 		strd	r0, r1, [r2]
  56:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 383              		.loc 1 56 42 is_stmt 1 discriminator 3 view .LVU116
  56:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 384              		.loc 1 56 17 discriminator 3 view .LVU117
  56:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 385              		.loc 1 56 5 is_stmt 0 discriminator 3 view .LVU118
 386 0048 F3D1     		bne	.L13
  59:masked_fips202.c ****     }
  60:masked_fips202.c ****     return;
  61:masked_fips202.c **** }
 387              		.loc 1 61 1 view .LVU119
 388 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 389              		.loc 1 61 1 view .LVU120
 390              		.cfi_endproc
 391              	.LFE2:
 393              		.section	.text.KeccakF1600_StatePermute_masked,"ax",%progbits
 394              		.align	1
 395              		.global	KeccakF1600_StatePermute_masked
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu softvfp
 401              	KeccakF1600_StatePermute_masked:
 402              	.LVL35:
 403              	.LFB5:
  62:masked_fips202.c **** 
  63:masked_fips202.c **** /*************************************************
  64:masked_fips202.c **** * Name:        load64
  65:masked_fips202.c **** *
  66:masked_fips202.c **** * Description: Load 8 bytes into uint64_t in little-endian order
  67:masked_fips202.c **** *
  68:masked_fips202.c **** * Arguments:   - const uint8_t *x: pointer to input byte array
  69:masked_fips202.c **** *
  70:masked_fips202.c **** * Returns the loaded 64-bit unsigned integer
  71:masked_fips202.c **** **************************************************/
  72:masked_fips202.c **** static uint64_t load64(const uint8_t x[8]) {
  73:masked_fips202.c **** 	unsigned int i;
  74:masked_fips202.c **** 	uint64_t r = 0;
  75:masked_fips202.c **** 
  76:masked_fips202.c **** 	for (i = 0; i < 8; i++)
  77:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
  78:masked_fips202.c **** 
  79:masked_fips202.c **** 	return r;
  80:masked_fips202.c **** }
  81:masked_fips202.c **** 
  82:masked_fips202.c **** /*************************************************
  83:masked_fips202.c **** * Name:        store64
  84:masked_fips202.c **** *
  85:masked_fips202.c **** * Description: Store a 64-bit integer to array of 8 bytes in little-endian order
  86:masked_fips202.c **** *
  87:masked_fips202.c **** * Arguments:   - uint8_t *x: pointer to the output byte array (allocated)
  88:masked_fips202.c **** *              - uint64_t u: input 64-bit unsigned integer
  89:masked_fips202.c **** **************************************************/
  90:masked_fips202.c **** static void store64(uint8_t x[8], uint64_t u) {
  91:masked_fips202.c **** 	unsigned int i;
  92:masked_fips202.c **** 
  93:masked_fips202.c **** 	for (i = 0; i < 8; i++)
  94:masked_fips202.c **** 		x[i] = u >> 8 * i;
  95:masked_fips202.c **** }
  96:masked_fips202.c **** 
  97:masked_fips202.c **** /* Keccak round constants */
  98:masked_fips202.c **** static const uint64_t KeccakF_RoundConstants[NROUNDS] = {
  99:masked_fips202.c ****   (uint64_t)0x0000000000000001ULL,
 100:masked_fips202.c ****   (uint64_t)0x0000000000008082ULL,
 101:masked_fips202.c ****   (uint64_t)0x800000000000808aULL,
 102:masked_fips202.c ****   (uint64_t)0x8000000080008000ULL,
 103:masked_fips202.c ****   (uint64_t)0x000000000000808bULL,
 104:masked_fips202.c ****   (uint64_t)0x0000000080000001ULL,
 105:masked_fips202.c ****   (uint64_t)0x8000000080008081ULL,
 106:masked_fips202.c ****   (uint64_t)0x8000000000008009ULL,
 107:masked_fips202.c ****   (uint64_t)0x000000000000008aULL,
 108:masked_fips202.c ****   (uint64_t)0x0000000000000088ULL,
 109:masked_fips202.c ****   (uint64_t)0x0000000080008009ULL,
 110:masked_fips202.c ****   (uint64_t)0x000000008000000aULL,
 111:masked_fips202.c ****   (uint64_t)0x000000008000808bULL,
 112:masked_fips202.c ****   (uint64_t)0x800000000000008bULL,
 113:masked_fips202.c ****   (uint64_t)0x8000000000008089ULL,
 114:masked_fips202.c ****   (uint64_t)0x8000000000008003ULL,
 115:masked_fips202.c ****   (uint64_t)0x8000000000008002ULL,
 116:masked_fips202.c ****   (uint64_t)0x8000000000000080ULL,
 117:masked_fips202.c ****   (uint64_t)0x000000000000800aULL,
 118:masked_fips202.c ****   (uint64_t)0x800000008000000aULL,
 119:masked_fips202.c ****   (uint64_t)0x8000000080008081ULL,
 120:masked_fips202.c ****   (uint64_t)0x8000000000008080ULL,
 121:masked_fips202.c ****   (uint64_t)0x0000000080000001ULL,
 122:masked_fips202.c ****   (uint64_t)0x8000000080008008ULL
 123:masked_fips202.c **** };
 124:masked_fips202.c **** void KeccakF1600_StatePermute_masked(uint64_t state_masked[25 * (MASKING_ORDER + 1)])
 125:masked_fips202.c **** {
 404              		.loc 1 125 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 1632
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 126:masked_fips202.c ****     int round, i;
 408              		.loc 1 126 5 view .LVU122
 127:masked_fips202.c **** 
 128:masked_fips202.c ****     uint64_t Aba[(MASKING_ORDER + 1)], Abe[(MASKING_ORDER + 1)], Abi[(MASKING_ORDER + 1)], Abo[(MAS
 409              		.loc 1 128 5 view .LVU123
 129:masked_fips202.c ****     uint64_t Aga[(MASKING_ORDER + 1)], Age[(MASKING_ORDER + 1)], Agi[(MASKING_ORDER + 1)], Ago[(MAS
 410              		.loc 1 129 5 view .LVU124
 130:masked_fips202.c ****     uint64_t Aka[(MASKING_ORDER + 1)], Ake[(MASKING_ORDER + 1)], Aki[(MASKING_ORDER + 1)], Ako[(MAS
 411              		.loc 1 130 5 view .LVU125
 131:masked_fips202.c ****     uint64_t Ama[(MASKING_ORDER + 1)], Ame[(MASKING_ORDER + 1)], Ami[(MASKING_ORDER + 1)], Amo[(MAS
 412              		.loc 1 131 5 view .LVU126
 132:masked_fips202.c ****     uint64_t Asa[(MASKING_ORDER + 1)], Ase[(MASKING_ORDER + 1)], Asi[(MASKING_ORDER + 1)], Aso[(MAS
 413              		.loc 1 132 5 view .LVU127
 133:masked_fips202.c ****     uint64_t BCa[(MASKING_ORDER + 1)], BCe[(MASKING_ORDER + 1)], BCi[(MASKING_ORDER + 1)], BCo[(MAS
 414              		.loc 1 133 5 view .LVU128
 134:masked_fips202.c ****     uint64_t Da[(MASKING_ORDER + 1)],  De[(MASKING_ORDER + 1)],  Di[(MASKING_ORDER + 1)],  Do[(MASK
 415              		.loc 1 134 5 view .LVU129
 135:masked_fips202.c ****     uint64_t Eba[(MASKING_ORDER + 1)], Ebe[(MASKING_ORDER + 1)], Ebi[(MASKING_ORDER + 1)], Ebo[(MAS
 416              		.loc 1 135 5 view .LVU130
 136:masked_fips202.c ****     uint64_t Ega[(MASKING_ORDER + 1)], Ege[(MASKING_ORDER + 1)], Egi[(MASKING_ORDER + 1)], Ego[(MAS
 417              		.loc 1 136 5 view .LVU131
 137:masked_fips202.c ****     uint64_t Eka[(MASKING_ORDER + 1)], Eke[(MASKING_ORDER + 1)], Eki[(MASKING_ORDER + 1)], Eko[(MAS
 418              		.loc 1 137 5 view .LVU132
 138:masked_fips202.c ****     uint64_t Ema[(MASKING_ORDER + 1)], Eme[(MASKING_ORDER + 1)], Emi[(MASKING_ORDER + 1)], Emo[(MAS
 419              		.loc 1 138 5 view .LVU133
 139:masked_fips202.c ****     uint64_t Esa[(MASKING_ORDER + 1)], Ese[(MASKING_ORDER + 1)], Esi[(MASKING_ORDER + 1)], Eso[(MAS
 420              		.loc 1 139 5 view .LVU134
 140:masked_fips202.c **** 
 141:masked_fips202.c ****     //copyFromState(A, state)
 142:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 421              		.loc 1 142 5 view .LVU135
 422              		.loc 1 142 17 view .LVU136
 125:masked_fips202.c ****     int round, i;
 423              		.loc 1 125 1 is_stmt 0 view .LVU137
 424 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 425              	.LCFI6:
 426              		.cfi_def_cfa_offset 36
 427              		.cfi_offset 4, -36
 428              		.cfi_offset 5, -32
 429              		.cfi_offset 6, -28
 430              		.cfi_offset 7, -24
 431              		.cfi_offset 8, -20
 432              		.cfi_offset 9, -16
 433              		.cfi_offset 10, -12
 434              		.cfi_offset 11, -8
 435              		.cfi_offset 14, -4
 436 0004 ADF2646D 		subw	sp, sp, #1636
 437              	.LCFI7:
 438              		.cfi_def_cfa_offset 1672
 439 0008 30AB     		add	r3, sp, #192
 440 000a 1F93     		str	r3, [sp, #124]
 441 000c 36AB     		add	r3, sp, #216
 442 000e 0E93     		str	r3, [sp, #56]
 443 0010 3CAB     		add	r3, sp, #240
 444 0012 0D93     		str	r3, [sp, #52]
 445 0014 42AB     		add	r3, sp, #264
 446 0016 0C93     		str	r3, [sp, #48]
 447 0018 48AB     		add	r3, sp, #288
 448 001a 0B93     		str	r3, [sp, #44]
 449 001c 4EAB     		add	r3, sp, #312
 450 001e 0A93     		str	r3, [sp, #40]
 451 0020 54AB     		add	r3, sp, #336
 125:masked_fips202.c ****     int round, i;
 452              		.loc 1 125 1 view .LVU138
 453 0022 0090     		str	r0, [sp]
 454 0024 1E93     		str	r3, [sp, #120]
 455 0026 DDE90A56 		ldrd	r5, r6, [sp, #40]
 456 002a 5AAB     		add	r3, sp, #360
 457 002c DDE90C7C 		ldrd	r7, ip, [sp, #48]
 458 0030 1D93     		str	r3, [sp, #116]
 459 0032 1846     		mov	r0, r3
 460              	.LVL36:
 125:masked_fips202.c ****     int round, i;
 461              		.loc 1 125 1 view .LVU139
 462 0034 1E9C     		ldr	r4, [sp, #120]
 463 0036 DDF838E0 		ldr	lr, [sp, #56]
 464 003a DDF87C80 		ldr	r8, [sp, #124]
 465 003e 009B     		ldr	r3, [sp]
 466 0040 0022     		movs	r2, #0
 467              	.LVL37:
 468              	.L16:
 143:masked_fips202.c ****     {
 144:masked_fips202.c ****         Aba[i] = state_masked[ 0+(i*25)];
 469              		.loc 1 144 9 is_stmt 1 discriminator 3 view .LVU140
 470              		.loc 1 144 16 is_stmt 0 discriminator 3 view .LVU141
 471 0042 D3E900AB 		ldrd	r10, [r3]
 472 0046 E8E802AB 		strd	r10, [r8], #8
 145:masked_fips202.c ****         Abe[i] = state_masked[ 1+(i*25)];
 473              		.loc 1 145 9 is_stmt 1 discriminator 3 view .LVU142
 474              		.loc 1 145 16 is_stmt 0 discriminator 3 view .LVU143
 475 004a D3E902AB 		ldrd	r10, [r3, #8]
 476 004e EEE802AB 		strd	r10, [lr], #8
 146:masked_fips202.c ****         Abi[i] = state_masked[ 2+(i*25)];
 477              		.loc 1 146 9 is_stmt 1 discriminator 3 view .LVU144
 478              		.loc 1 146 16 is_stmt 0 discriminator 3 view .LVU145
 479 0052 D3E904AB 		ldrd	r10, [r3, #16]
 480 0056 ECE802AB 		strd	r10, [ip], #8
 147:masked_fips202.c ****         Abo[i] = state_masked[ 3+(i*25)];
 481              		.loc 1 147 9 is_stmt 1 discriminator 3 view .LVU146
 482              		.loc 1 147 16 is_stmt 0 discriminator 3 view .LVU147
 483 005a D3E906AB 		ldrd	r10, [r3, #24]
 484 005e E7E802AB 		strd	r10, [r7], #8
 148:masked_fips202.c ****         Abu[i] = state_masked[ 4+(i*25)];
 485              		.loc 1 148 9 is_stmt 1 discriminator 3 view .LVU148
 486              		.loc 1 148 16 is_stmt 0 discriminator 3 view .LVU149
 487 0062 D3E908AB 		ldrd	r10, [r3, #32]
 488 0066 E6E802AB 		strd	r10, [r6], #8
 149:masked_fips202.c ****         Aga[i] = state_masked[ 5+(i*25)];
 489              		.loc 1 149 9 is_stmt 1 discriminator 3 view .LVU150
 490              		.loc 1 149 16 is_stmt 0 discriminator 3 view .LVU151
 491 006a D3E90AAB 		ldrd	r10, [r3, #40]
 492 006e E5E802AB 		strd	r10, [r5], #8
 150:masked_fips202.c ****         Age[i] = state_masked[ 6+(i*25)];
 493              		.loc 1 150 9 is_stmt 1 discriminator 3 view .LVU152
 494              		.loc 1 150 16 is_stmt 0 discriminator 3 view .LVU153
 495 0072 D3E90CAB 		ldrd	r10, [r3, #48]
 496 0076 E4E802AB 		strd	r10, [r4], #8
 151:masked_fips202.c ****         Agi[i] = state_masked[ 7+(i*25)];
 497              		.loc 1 151 9 is_stmt 1 discriminator 3 view .LVU154
 498              		.loc 1 151 16 is_stmt 0 discriminator 3 view .LVU155
 499 007a D3E90EAB 		ldrd	r10, [r3, #56]
 500 007e E0E802AB 		strd	r10, [r0], #8
 152:masked_fips202.c ****         Ago[i] = state_masked[ 8+(i*25)];
 501              		.loc 1 152 9 is_stmt 1 discriminator 3 view .LVU156
 502              		.loc 1 152 16 is_stmt 0 discriminator 3 view .LVU157
 503 0082 D3E910AB 		ldrd	r10, [r3, #64]
 504 0086 60A9     		add	r1, sp, #384
 505 0088 1144     		add	r1, r1, r2
 506 008a C1E900AB 		strd	r10, [r1]
 153:masked_fips202.c ****         Agu[i] = state_masked[ 9+(i*25)];
 507              		.loc 1 153 9 is_stmt 1 discriminator 3 view .LVU158
 508              		.loc 1 153 16 is_stmt 0 discriminator 3 view .LVU159
 509 008e D3E912AB 		ldrd	r10, [r3, #72]
 510 0092 66A9     		add	r1, sp, #408
 511 0094 1144     		add	r1, r1, r2
 512 0096 C1E900AB 		strd	r10, [r1]
 154:masked_fips202.c ****         Aka[i] = state_masked[10+(i*25)];
 513              		.loc 1 154 9 is_stmt 1 discriminator 3 view .LVU160
 514              		.loc 1 154 16 is_stmt 0 discriminator 3 view .LVU161
 515 009a D3E914AB 		ldrd	r10, [r3, #80]
 516 009e 6CA9     		add	r1, sp, #432
 517 00a0 1144     		add	r1, r1, r2
 518 00a2 C1E900AB 		strd	r10, [r1]
 155:masked_fips202.c ****         Ake[i] = state_masked[11+(i*25)];
 519              		.loc 1 155 9 is_stmt 1 discriminator 3 view .LVU162
 520              		.loc 1 155 16 is_stmt 0 discriminator 3 view .LVU163
 521 00a6 D3E916AB 		ldrd	r10, [r3, #88]
 522 00aa 72A9     		add	r1, sp, #456
 523 00ac 1144     		add	r1, r1, r2
 524 00ae C1E900AB 		strd	r10, [r1]
 156:masked_fips202.c ****         Aki[i] = state_masked[12+(i*25)];
 525              		.loc 1 156 9 is_stmt 1 discriminator 3 view .LVU164
 526              		.loc 1 156 16 is_stmt 0 discriminator 3 view .LVU165
 527 00b2 D3E918AB 		ldrd	r10, [r3, #96]
 528 00b6 78A9     		add	r1, sp, #480
 529 00b8 1144     		add	r1, r1, r2
 530 00ba C1E900AB 		strd	r10, [r1]
 157:masked_fips202.c ****         Ako[i] = state_masked[13+(i*25)];
 531              		.loc 1 157 9 is_stmt 1 discriminator 3 view .LVU166
 532              		.loc 1 157 16 is_stmt 0 discriminator 3 view .LVU167
 533 00be D3E91AAB 		ldrd	r10, [r3, #104]
 534 00c2 7EA9     		add	r1, sp, #504
 535 00c4 1144     		add	r1, r1, r2
 536 00c6 C1E900AB 		strd	r10, [r1]
 158:masked_fips202.c ****         Aku[i] = state_masked[14+(i*25)];
 537              		.loc 1 158 9 is_stmt 1 discriminator 3 view .LVU168
 538              		.loc 1 158 16 is_stmt 0 discriminator 3 view .LVU169
 539 00ca D3E91CAB 		ldrd	r10, [r3, #112]
 540 00ce 84A9     		add	r1, sp, #528
 541 00d0 1144     		add	r1, r1, r2
 542 00d2 C1E900AB 		strd	r10, [r1]
 159:masked_fips202.c ****         Ama[i] = state_masked[15+(i*25)];
 543              		.loc 1 159 9 is_stmt 1 discriminator 3 view .LVU170
 544              		.loc 1 159 16 is_stmt 0 discriminator 3 view .LVU171
 545 00d6 D3E91EAB 		ldrd	r10, [r3, #120]
 546 00da 8AA9     		add	r1, sp, #552
 547 00dc 1144     		add	r1, r1, r2
 548 00de C1E900AB 		strd	r10, [r1]
 160:masked_fips202.c ****         Ame[i] = state_masked[16+(i*25)];
 549              		.loc 1 160 9 is_stmt 1 discriminator 3 view .LVU172
 550              		.loc 1 160 16 is_stmt 0 discriminator 3 view .LVU173
 551 00e2 D3E920AB 		ldrd	r10, [r3, #128]
 552 00e6 90A9     		add	r1, sp, #576
 553 00e8 1144     		add	r1, r1, r2
 554 00ea C1E900AB 		strd	r10, [r1]
 161:masked_fips202.c ****         Ami[i] = state_masked[17+(i*25)];
 555              		.loc 1 161 9 is_stmt 1 discriminator 3 view .LVU174
 556              		.loc 1 161 16 is_stmt 0 discriminator 3 view .LVU175
 557 00ee D3E922AB 		ldrd	r10, [r3, #136]
 558 00f2 96A9     		add	r1, sp, #600
 559 00f4 1144     		add	r1, r1, r2
 560 00f6 C1E900AB 		strd	r10, [r1]
 162:masked_fips202.c ****         Amo[i] = state_masked[18+(i*25)];
 561              		.loc 1 162 9 is_stmt 1 discriminator 3 view .LVU176
 562              		.loc 1 162 16 is_stmt 0 discriminator 3 view .LVU177
 563 00fa D3E924AB 		ldrd	r10, [r3, #144]
 564 00fe 0DF5CC61 		add	r1, sp, #1632
 565 0102 1144     		add	r1, r1, r2
 566 0104 41E9FCAB 		strd	r10, [r1, #-1008]
 163:masked_fips202.c ****         Amu[i] = state_masked[19+(i*25)];
 567              		.loc 1 163 9 is_stmt 1 discriminator 3 view .LVU178
 568              		.loc 1 163 16 is_stmt 0 discriminator 3 view .LVU179
 569 0108 D3E926AB 		ldrd	r10, [r3, #152]
 570 010c 0DF5CC61 		add	r1, sp, #1632
 571 0110 1144     		add	r1, r1, r2
 572 0112 41E9F6AB 		strd	r10, [r1, #-984]
 164:masked_fips202.c ****         Asa[i] = state_masked[20+(i*25)];
 573              		.loc 1 164 9 is_stmt 1 discriminator 3 view .LVU180
 574              		.loc 1 164 16 is_stmt 0 discriminator 3 view .LVU181
 575 0116 D3E928AB 		ldrd	r10, [r3, #160]
 576 011a 0DF5CC61 		add	r1, sp, #1632
 577 011e 1144     		add	r1, r1, r2
 578 0120 41E9F0AB 		strd	r10, [r1, #-960]
 165:masked_fips202.c ****         Ase[i] = state_masked[21+(i*25)];
 579              		.loc 1 165 9 is_stmt 1 discriminator 3 view .LVU182
 580              		.loc 1 165 16 is_stmt 0 discriminator 3 view .LVU183
 581 0124 D3E92AAB 		ldrd	r10, [r3, #168]
 582 0128 0DF5CC61 		add	r1, sp, #1632
 583 012c 1144     		add	r1, r1, r2
 584 012e 41E9EAAB 		strd	r10, [r1, #-936]
 166:masked_fips202.c ****         Asi[i] = state_masked[22+(i*25)];
 585              		.loc 1 166 9 is_stmt 1 discriminator 3 view .LVU184
 586              		.loc 1 166 16 is_stmt 0 discriminator 3 view .LVU185
 587 0132 D3E92CAB 		ldrd	r10, [r3, #176]
 588 0136 0DF5CC61 		add	r1, sp, #1632
 589 013a 1144     		add	r1, r1, r2
 590 013c 41E9E4AB 		strd	r10, [r1, #-912]
 167:masked_fips202.c ****         Aso[i] = state_masked[23+(i*25)];
 591              		.loc 1 167 9 is_stmt 1 discriminator 3 view .LVU186
 592              		.loc 1 167 16 is_stmt 0 discriminator 3 view .LVU187
 593 0140 D3E92EAB 		ldrd	r10, [r3, #184]
 594 0144 0DF5CC61 		add	r1, sp, #1632
 595 0148 1144     		add	r1, r1, r2
 596 014a 41E9DEAB 		strd	r10, [r1, #-888]
 168:masked_fips202.c ****         Asu[i] = state_masked[24+(i*25)];
 597              		.loc 1 168 9 is_stmt 1 discriminator 3 view .LVU188
 598              		.loc 1 168 16 is_stmt 0 discriminator 3 view .LVU189
 599 014e D3E930AB 		ldrd	r10, [r3, #192]
 600 0152 0DF5CC61 		add	r1, sp, #1632
 601 0156 1144     		add	r1, r1, r2
 142:masked_fips202.c ****     {
 602              		.loc 1 142 5 discriminator 3 view .LVU190
 603 0158 0832     		adds	r2, r2, #8
 604 015a 182A     		cmp	r2, #24
 605              		.loc 1 168 16 discriminator 3 view .LVU191
 606 015c 41E9D8AB 		strd	r10, [r1, #-864]
 142:masked_fips202.c ****     {
 607              		.loc 1 142 42 is_stmt 1 discriminator 3 view .LVU192
 142:masked_fips202.c ****     {
 608              		.loc 1 142 17 discriminator 3 view .LVU193
 142:masked_fips202.c ****     {
 609              		.loc 1 142 5 is_stmt 0 discriminator 3 view .LVU194
 610 0160 03F1C803 		add	r3, r3, #200
 611 0164 7FF46DAF 		bne	.L16
 612 0168 0E4B     		ldr	r3, .L42
 613 016a 0593     		str	r3, [sp, #20]
 169:masked_fips202.c ****     }
 170:masked_fips202.c ****     for (round = 0; round < NROUNDS; round += 2)
 614              		.loc 1 170 16 view .LVU195
 615 016c 0023     		movs	r3, #0
 616 016e 2093     		str	r3, [sp, #128]
 617              	.L17:
 618              	.LVL38:
 171:masked_fips202.c ****     {
 172:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 619              		.loc 1 172 21 is_stmt 1 view .LVU196
 620 0170 6CAB     		add	r3, sp, #432
 621 0172 0193     		str	r3, [sp, #4]
 622 0174 8AAB     		add	r3, sp, #552
 623 0176 0393     		str	r3, [sp, #12]
 624 0178 A8AB     		add	r3, sp, #672
 625 017a 0293     		str	r3, [sp, #8]
 626 017c 78AB     		add	r3, sp, #480
 627 017e 0793     		str	r3, [sp, #28]
 628 0180 9CAB     		add	r3, sp, #624
 629 0182 0693     		str	r3, [sp, #24]
 630 0184 C0AB     		add	r3, sp, #768
 631 0186 0493     		str	r3, [sp, #16]
 125:masked_fips202.c ****     int round, i;
 632              		.loc 1 125 1 is_stmt 0 view .LVU197
 633 0188 1E9B     		ldr	r3, [sp, #120]
 634 018a 0893     		str	r3, [sp, #32]
 635 018c 029B     		ldr	r3, [sp, #8]
 636 018e 0993     		str	r3, [sp, #36]
 637 0190 039B     		ldr	r3, [sp, #12]
 638 0192 0F93     		str	r3, [sp, #60]
 639 0194 019B     		ldr	r3, [sp, #4]
 640 0196 1093     		str	r3, [sp, #64]
 641 0198 DDF87CB0 		ldr	fp, [sp, #124]
 642 019c 0A9B     		ldr	r3, [sp, #40]
 643 019e 1193     		str	r3, [sp, #68]
 644 01a0 0023     		movs	r3, #0
 645 01a2 01E0     		b	.L43
 646              	.L44:
 647              		.align	2
 648              	.L42:
 649 01a4 00000000 		.word	.LANCHOR0
 650              	.L43:
 651              	.LVL39:
 652              	.L18:
 173:masked_fips202.c ****         {
 174:masked_fips202.c ****             //    prepareTheta
 175:masked_fips202.c ****             BCa[i] = Aba[i] ^ Aga[i] ^ Aka[i] ^ Ama[i] ^ Asa[i];
 653              		.loc 1 175 13 is_stmt 1 discriminator 3 view .LVU198
 654              		.loc 1 175 34 is_stmt 0 discriminator 3 view .LVU199
 655 01a8 119A     		ldr	r2, [sp, #68]
 656 01aa D2E9001E 		ldrd	r1, lr, [r2]
 657 01ae 0832     		adds	r2, r2, #8
 658 01b0 1192     		str	r2, [sp, #68]
 659              		.loc 1 175 43 discriminator 3 view .LVU200
 660 01b2 109A     		ldr	r2, [sp, #64]
 661 01b4 D2E900C7 		ldrd	ip, r7, [r2]
 662 01b8 0832     		adds	r2, r2, #8
 663 01ba 1092     		str	r2, [sp, #64]
 664              		.loc 1 175 52 discriminator 3 view .LVU201
 665 01bc 0F9A     		ldr	r2, [sp, #60]
 666 01be D2E90064 		ldrd	r6, r4, [r2]
 667 01c2 0832     		adds	r2, r2, #8
 668 01c4 0F92     		str	r2, [sp, #60]
 669              		.loc 1 175 61 discriminator 3 view .LVU202
 670 01c6 099A     		ldr	r2, [sp, #36]
 671 01c8 D2E90050 		ldrd	r5, r0, [r2]
 672 01cc 0832     		adds	r2, r2, #8
 673 01ce 0992     		str	r2, [sp, #36]
 674              		.loc 1 175 29 discriminator 3 view .LVU203
 675 01d0 DBF80020 		ldr	r2, [fp]
 676 01d4 5140     		eors	r1, r1, r2
 677 01d6 DBF80420 		ldr	r2, [fp, #4]
 678 01da 8EEA0202 		eor	r2, lr, r2
 679              		.loc 1 175 38 discriminator 3 view .LVU204
 680 01de 7A40     		eors	r2, r2, r7
 681              		.loc 1 175 47 discriminator 3 view .LVU205
 682 01e0 6240     		eors	r2, r2, r4
 683              		.loc 1 175 56 discriminator 3 view .LVU206
 684 01e2 4240     		eors	r2, r2, r0
 685 01e4 1392     		str	r2, [sp, #76]
 176:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 686              		.loc 1 176 13 is_stmt 1 discriminator 3 view .LVU207
 687              		.loc 1 176 34 is_stmt 0 discriminator 3 view .LVU208
 688 01e6 089A     		ldr	r2, [sp, #32]
 689 01e8 1268     		ldr	r2, [r2]
 690 01ea 1692     		str	r2, [sp, #88]
 691 01ec 089A     		ldr	r2, [sp, #32]
 175:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 692              		.loc 1 175 38 discriminator 3 view .LVU209
 693 01ee 81EA0C01 		eor	r1, r1, ip
 694              		.loc 1 176 34 discriminator 3 view .LVU210
 695 01f2 5268     		ldr	r2, [r2, #4]
 696 01f4 1792     		str	r2, [sp, #92]
 175:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 697              		.loc 1 175 47 discriminator 3 view .LVU211
 698 01f6 7140     		eors	r1, r1, r6
 175:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 699              		.loc 1 175 56 discriminator 3 view .LVU212
 700 01f8 6940     		eors	r1, r1, r5
 701              		.loc 1 176 25 discriminator 3 view .LVU213
 702 01fa 36AA     		add	r2, sp, #216
 175:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 703              		.loc 1 175 56 discriminator 3 view .LVU214
 704 01fc 1291     		str	r1, [sp, #72]
 705              		.loc 1 176 25 discriminator 3 view .LVU215
 706 01fe D118     		adds	r1, r2, r3
 707              		.loc 1 176 29 discriminator 3 view .LVU216
 708 0200 D258     		ldr	r2, [r2, r3]
 709 0202 4868     		ldr	r0, [r1, #4]
 710 0204 1699     		ldr	r1, [sp, #88]
 711 0206 81EA020C 		eor	ip, r1, r2
 712 020a 179A     		ldr	r2, [sp, #92]
 713              		.loc 1 176 38 discriminator 3 view .LVU217
 714 020c 72A9     		add	r1, sp, #456
 715              		.loc 1 176 29 discriminator 3 view .LVU218
 716 020e 5040     		eors	r0, r0, r2
 717              		.loc 1 176 43 discriminator 3 view .LVU219
 718 0210 72AA     		add	r2, sp, #456
 719 0212 1A44     		add	r2, r2, r3
 720              		.loc 1 176 38 discriminator 3 view .LVU220
 721 0214 C958     		ldr	r1, [r1, r3]
 722 0216 5468     		ldr	r4, [r2, #4]
 723              		.loc 1 176 52 discriminator 3 view .LVU221
 724 0218 90AA     		add	r2, sp, #576
 725 021a 1A44     		add	r2, r2, r3
 726              		.loc 1 176 38 discriminator 3 view .LVU222
 727 021c 8CEA010C 		eor	ip, ip, r1
 728              		.loc 1 176 47 discriminator 3 view .LVU223
 729 0220 90A9     		add	r1, sp, #576
 730              		.loc 1 176 38 discriminator 3 view .LVU224
 731 0222 6040     		eors	r0, r0, r4
 732              		.loc 1 176 47 discriminator 3 view .LVU225
 733 0224 C958     		ldr	r1, [r1, r3]
 734 0226 5468     		ldr	r4, [r2, #4]
 735              		.loc 1 176 61 discriminator 3 view .LVU226
 736 0228 AEAA     		add	r2, sp, #696
 737 022a 1A44     		add	r2, r2, r3
 738              		.loc 1 176 47 discriminator 3 view .LVU227
 739 022c 6040     		eors	r0, r0, r4
 740              		.loc 1 176 56 discriminator 3 view .LVU228
 741 022e 5468     		ldr	r4, [r2, #4]
 742 0230 80EA0402 		eor	r2, r0, r4
 743 0234 1492     		str	r2, [sp, #80]
 177:masked_fips202.c ****             BCi[i] = Abi[i] ^ Agi[i] ^ Aki[i] ^ Ami[i] ^ Asi[i];
 744              		.loc 1 177 13 is_stmt 1 discriminator 3 view .LVU229
 745              		.loc 1 177 43 is_stmt 0 discriminator 3 view .LVU230
 746 0236 079A     		ldr	r2, [sp, #28]
 747 0238 1268     		ldr	r2, [r2]
 748 023a 1892     		str	r2, [sp, #96]
 176:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 749              		.loc 1 176 47 discriminator 3 view .LVU231
 750 023c 8CEA010C 		eor	ip, ip, r1
 751              		.loc 1 177 43 discriminator 3 view .LVU232
 752 0240 079A     		ldr	r2, [sp, #28]
 176:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 753              		.loc 1 176 56 discriminator 3 view .LVU233
 754 0242 AEA9     		add	r1, sp, #696
 755              		.loc 1 177 43 discriminator 3 view .LVU234
 756 0244 5268     		ldr	r2, [r2, #4]
 176:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 757              		.loc 1 176 56 discriminator 3 view .LVU235
 758 0246 C958     		ldr	r1, [r1, r3]
 759              		.loc 1 177 43 discriminator 3 view .LVU236
 760 0248 1992     		str	r2, [sp, #100]
 761              		.loc 1 177 25 discriminator 3 view .LVU237
 762 024a 3CAA     		add	r2, sp, #240
 176:masked_fips202.c ****             BCe[i] = Abe[i] ^ Age[i] ^ Ake[i] ^ Ame[i] ^ Ase[i];
 763              		.loc 1 176 56 discriminator 3 view .LVU238
 764 024c 8CEA010C 		eor	ip, ip, r1
 765              		.loc 1 177 25 discriminator 3 view .LVU239
 766 0250 D118     		adds	r1, r2, r3
 767              		.loc 1 177 29 discriminator 3 view .LVU240
 768 0252 3CA8     		add	r0, sp, #240
 769 0254 4D68     		ldr	r5, [r1, #4]
 770 0256 C058     		ldr	r0, [r0, r3]
 771 0258 5AA9     		add	r1, sp, #360
 772              		.loc 1 177 34 discriminator 3 view .LVU241
 773 025a 5AAA     		add	r2, sp, #360
 774 025c 1A44     		add	r2, r2, r3
 775              		.loc 1 177 29 discriminator 3 view .LVU242
 776 025e CE58     		ldr	r6, [r1, r3]
 777 0260 5168     		ldr	r1, [r2, #4]
 778              		.loc 1 177 38 discriminator 3 view .LVU243
 779 0262 189A     		ldr	r2, [sp, #96]
 780              		.loc 1 177 29 discriminator 3 view .LVU244
 781 0264 4640     		eors	r6, r6, r0
 782              		.loc 1 177 38 discriminator 3 view .LVU245
 783 0266 5640     		eors	r6, r6, r2
 784 0268 199A     		ldr	r2, [sp, #100]
 785              		.loc 1 177 29 discriminator 3 view .LVU246
 786 026a 4D40     		eors	r5, r5, r1
 787              		.loc 1 177 38 discriminator 3 view .LVU247
 788 026c 5540     		eors	r5, r5, r2
 789              		.loc 1 177 52 discriminator 3 view .LVU248
 790 026e 96AA     		add	r2, sp, #600
 791 0270 D118     		adds	r1, r2, r3
 792              		.loc 1 177 47 discriminator 3 view .LVU249
 793 0272 D258     		ldr	r2, [r2, r3]
 794 0274 4968     		ldr	r1, [r1, #4]
 795 0276 5640     		eors	r6, r6, r2
 796              		.loc 1 177 61 discriminator 3 view .LVU250
 797 0278 B4AA     		add	r2, sp, #720
 798              		.loc 1 177 47 discriminator 3 view .LVU251
 799 027a 4D40     		eors	r5, r5, r1
 800              		.loc 1 177 61 discriminator 3 view .LVU252
 801 027c D118     		adds	r1, r2, r3
 802              		.loc 1 177 56 discriminator 3 view .LVU253
 803 027e D258     		ldr	r2, [r2, r3]
 804 0280 4968     		ldr	r1, [r1, #4]
 805 0282 5640     		eors	r6, r6, r2
 178:masked_fips202.c ****             BCo[i] = Abo[i] ^ Ago[i] ^ Ako[i] ^ Amo[i] ^ Aso[i];
 806              		.loc 1 178 52 discriminator 3 view .LVU254
 807 0284 069A     		ldr	r2, [sp, #24]
 808 0286 1268     		ldr	r2, [r2]
 809 0288 1A92     		str	r2, [sp, #104]
 810 028a 069A     		ldr	r2, [sp, #24]
 811 028c 5268     		ldr	r2, [r2, #4]
 812 028e 1B92     		str	r2, [sp, #108]
 813              		.loc 1 178 34 discriminator 3 view .LVU255
 814 0290 60A8     		add	r0, sp, #384
 815              		.loc 1 178 25 discriminator 3 view .LVU256
 816 0292 42AA     		add	r2, sp, #264
 177:masked_fips202.c ****             BCi[i] = Abi[i] ^ Agi[i] ^ Aki[i] ^ Ami[i] ^ Asi[i];
 817              		.loc 1 177 56 discriminator 3 view .LVU257
 818 0294 4D40     		eors	r5, r5, r1
 819              		.loc 1 178 13 is_stmt 1 discriminator 3 view .LVU258
 820              		.loc 1 178 25 is_stmt 0 discriminator 3 view .LVU259
 821 0296 D418     		adds	r4, r2, r3
 822              		.loc 1 178 34 discriminator 3 view .LVU260
 823 0298 C118     		adds	r1, r0, r3
 824              		.loc 1 178 29 discriminator 3 view .LVU261
 825 029a 6468     		ldr	r4, [r4, #4]
 826 029c 4968     		ldr	r1, [r1, #4]
 827 029e C058     		ldr	r0, [r0, r3]
 828 02a0 D258     		ldr	r2, [r2, r3]
 829 02a2 4C40     		eors	r4, r4, r1
 830              		.loc 1 178 43 discriminator 3 view .LVU262
 831 02a4 7EA9     		add	r1, sp, #504
 832              		.loc 1 178 29 discriminator 3 view .LVU263
 833 02a6 4240     		eors	r2, r2, r0
 834              		.loc 1 178 43 discriminator 3 view .LVU264
 835 02a8 C818     		adds	r0, r1, r3
 836              		.loc 1 178 38 discriminator 3 view .LVU265
 837 02aa C958     		ldr	r1, [r1, r3]
 838 02ac 4068     		ldr	r0, [r0, #4]
 839 02ae 82EA010A 		eor	r10, r2, r1
 840              		.loc 1 178 47 discriminator 3 view .LVU266
 841 02b2 1A9A     		ldr	r2, [sp, #104]
 842 02b4 8AEA020A 		eor	r10, r10, r2
 843 02b8 1B9A     		ldr	r2, [sp, #108]
 844              		.loc 1 178 38 discriminator 3 view .LVU267
 845 02ba 4440     		eors	r4, r4, r0
 846              		.loc 1 178 61 discriminator 3 view .LVU268
 847 02bc BAA9     		add	r1, sp, #744
 848              		.loc 1 178 47 discriminator 3 view .LVU269
 849 02be 5440     		eors	r4, r4, r2
 850              		.loc 1 178 61 discriminator 3 view .LVU270
 851 02c0 CA18     		adds	r2, r1, r3
 852              		.loc 1 178 56 discriminator 3 view .LVU271
 853 02c2 C958     		ldr	r1, [r1, r3]
 854 02c4 5268     		ldr	r2, [r2, #4]
 855 02c6 5440     		eors	r4, r4, r2
 179:masked_fips202.c ****             BCu[i] = Abu[i] ^ Agu[i] ^ Aku[i] ^ Amu[i] ^ Asu[i];
 856              		.loc 1 179 13 is_stmt 1 discriminator 3 view .LVU272
 857              		.loc 1 179 61 is_stmt 0 discriminator 3 view .LVU273
 858 02c8 049A     		ldr	r2, [sp, #16]
 859 02ca 1268     		ldr	r2, [r2]
 860 02cc 1C92     		str	r2, [sp, #112]
 861 02ce 049A     		ldr	r2, [sp, #16]
 862              		.loc 1 179 25 discriminator 3 view .LVU274
 863 02d0 48A8     		add	r0, sp, #288
 864              		.loc 1 179 61 discriminator 3 view .LVU275
 865 02d2 5268     		ldr	r2, [r2, #4]
 866 02d4 2192     		str	r2, [sp, #132]
 178:masked_fips202.c ****             BCo[i] = Abo[i] ^ Ago[i] ^ Ako[i] ^ Amo[i] ^ Aso[i];
 867              		.loc 1 178 56 discriminator 3 view .LVU276
 868 02d6 8AEA0101 		eor	r1, r10, r1
 869              		.loc 1 179 25 discriminator 3 view .LVU277
 870 02da C218     		adds	r2, r0, r3
 871              		.loc 1 179 34 discriminator 3 view .LVU278
 872 02dc 0DF5CC7A 		add	r10, sp, #408
 178:masked_fips202.c ****             BCo[i] = Abo[i] ^ Ago[i] ^ Ako[i] ^ Amo[i] ^ Aso[i];
 873              		.loc 1 178 56 discriminator 3 view .LVU279
 874 02e0 1591     		str	r1, [sp, #84]
 875              		.loc 1 179 34 discriminator 3 view .LVU280
 876 02e2 0AEB0301 		add	r1, r10, r3
 877              		.loc 1 179 29 discriminator 3 view .LVU281
 878 02e6 C058     		ldr	r0, [r0, r3]
 879 02e8 5768     		ldr	r7, [r2, #4]
 880 02ea 5AF80320 		ldr	r2, [r10, r3]
 881 02ee 4968     		ldr	r1, [r1, #4]
 882 02f0 4240     		eors	r2, r2, r0
 883              		.loc 1 179 43 discriminator 3 view .LVU282
 884 02f2 84A8     		add	r0, sp, #528
 885              		.loc 1 179 29 discriminator 3 view .LVU283
 886 02f4 4F40     		eors	r7, r7, r1
 887              		.loc 1 179 43 discriminator 3 view .LVU284
 888 02f6 C118     		adds	r1, r0, r3
 889              		.loc 1 179 38 discriminator 3 view .LVU285
 890 02f8 C058     		ldr	r0, [r0, r3]
 891 02fa 4968     		ldr	r1, [r1, #4]
 892 02fc 4F40     		eors	r7, r7, r1
 893              		.loc 1 179 52 discriminator 3 view .LVU286
 894 02fe A2A9     		add	r1, sp, #648
 895              		.loc 1 179 38 discriminator 3 view .LVU287
 896 0300 4240     		eors	r2, r2, r0
 897              		.loc 1 179 52 discriminator 3 view .LVU288
 898 0302 C818     		adds	r0, r1, r3
 899              		.loc 1 179 47 discriminator 3 view .LVU289
 900 0304 C958     		ldr	r1, [r1, r3]
 901 0306 4068     		ldr	r0, [r0, #4]
 902 0308 4A40     		eors	r2, r2, r1
 903              		.loc 1 179 56 discriminator 3 view .LVU290
 904 030a 1C99     		ldr	r1, [sp, #112]
 905 030c 4A40     		eors	r2, r2, r1
 906 030e 2199     		ldr	r1, [sp, #132]
 907              		.loc 1 179 47 discriminator 3 view .LVU291
 908 0310 4740     		eors	r7, r7, r0
 909              		.loc 1 179 56 discriminator 3 view .LVU292
 910 0312 4F40     		eors	r7, r7, r1
 180:masked_fips202.c **** 
 181:masked_fips202.c ****             //thetaRhoPiChiIotaPrepareTheta(round  , A, E)
 182:masked_fips202.c ****             Da[i] = BCu[i] ^ ROL(BCe[i], 1);
 911              		.loc 1 182 13 is_stmt 1 discriminator 3 view .LVU293
 912              		.loc 1 182 30 is_stmt 0 discriminator 3 view .LVU294
 913 0314 1499     		ldr	r1, [sp, #80]
 914 0316 1498     		ldr	r0, [sp, #80]
 915 0318 4900     		lsls	r1, r1, #1
 916 031a 41EADC71 		orr	r1, r1, ip, lsr #31
 917              		.loc 1 182 28 discriminator 3 view .LVU295
 918 031e 7940     		eors	r1, r1, r7
 919              		.loc 1 182 30 discriminator 3 view .LVU296
 920 0320 4FEA4C09 		lsl	r9, ip, #1
 921              		.loc 1 182 28 discriminator 3 view .LVU297
 922 0324 2291     		str	r1, [sp, #136]
 923              		.loc 1 182 30 discriminator 3 view .LVU298
 924 0326 49EAD079 		orr	r9, r9, r0, lsr #31
 925              		.loc 1 182 19 discriminator 3 view .LVU299
 926 032a E4A9     		add	r1, sp, #912
 927 032c E4A8     		add	r0, sp, #912
 928              		.loc 1 182 28 discriminator 3 view .LVU300
 929 032e 89EA0209 		eor	r9, r9, r2
 930              		.loc 1 182 19 discriminator 3 view .LVU301
 931 0332 1944     		add	r1, r1, r3
 932 0334 40F80390 		str	r9, [r0, r3]
 933 0338 2298     		ldr	r0, [sp, #136]
 934 033a 4860     		str	r0, [r1, #4]
 183:masked_fips202.c ****             De[i] = BCa[i] ^ ROL(BCi[i], 1);
 935              		.loc 1 183 13 is_stmt 1 discriminator 3 view .LVU302
 936              		.loc 1 183 30 is_stmt 0 discriminator 3 view .LVU303
 937 033c 4FEA4608 		lsl	r8, r6, #1
 938              		.loc 1 183 28 discriminator 3 view .LVU304
 939 0340 1299     		ldr	r1, [sp, #72]
 940              		.loc 1 183 30 discriminator 3 view .LVU305
 941 0342 48EAD578 		orr	r8, r8, r5, lsr #31
 942              		.loc 1 183 28 discriminator 3 view .LVU306
 943 0346 88EA0108 		eor	r8, r8, r1
 944              		.loc 1 183 30 discriminator 3 view .LVU307
 945 034a 6800     		lsls	r0, r5, #1
 946              		.loc 1 183 28 discriminator 3 view .LVU308
 947 034c 1399     		ldr	r1, [sp, #76]
 948              		.loc 1 183 30 discriminator 3 view .LVU309
 949 034e 40EAD670 		orr	r0, r0, r6, lsr #31
 950              		.loc 1 183 28 discriminator 3 view .LVU310
 951 0352 4140     		eors	r1, r1, r0
 952 0354 2391     		str	r1, [sp, #140]
 953              		.loc 1 183 19 discriminator 3 view .LVU311
 954 0356 EAA8     		add	r0, sp, #936
 955 0358 EAA9     		add	r1, sp, #936
 956 035a 1944     		add	r1, r1, r3
 957 035c 40F80380 		str	r8, [r0, r3]
 958 0360 2398     		ldr	r0, [sp, #140]
 959 0362 4860     		str	r0, [r1, #4]
 184:masked_fips202.c ****             Di[i] = BCe[i] ^ ROL(BCo[i], 1);
 960              		.loc 1 184 13 is_stmt 1 discriminator 3 view .LVU312
 961              		.loc 1 184 30 is_stmt 0 discriminator 3 view .LVU313
 962 0364 1598     		ldr	r0, [sp, #84]
 963 0366 6100     		lsls	r1, r4, #1
 964 0368 41EAD071 		orr	r1, r1, r0, lsr #31
 965 036c 4FEA400E 		lsl	lr, r0, #1
 966              		.loc 1 184 28 discriminator 3 view .LVU314
 967 0370 1498     		ldr	r0, [sp, #80]
 968              		.loc 1 184 30 discriminator 3 view .LVU315
 969 0372 4EEAD47E 		orr	lr, lr, r4, lsr #31
 970              		.loc 1 184 28 discriminator 3 view .LVU316
 971 0376 4140     		eors	r1, r1, r0
 972              		.loc 1 184 19 discriminator 3 view .LVU317
 973 0378 F0A8     		add	r0, sp, #960
 974              		.loc 1 184 28 discriminator 3 view .LVU318
 975 037a 8EEA0C0C 		eor	ip, lr, ip
 976              		.loc 1 184 19 discriminator 3 view .LVU319
 977 037e 00EB030E 		add	lr, r0, r3
 978 0382 40F803C0 		str	ip, [r0, r3]
 979 0386 CEF80410 		str	r1, [lr, #4]
 185:masked_fips202.c ****             Do[i] = BCi[i] ^ ROL(BCu[i], 1);
 980              		.loc 1 185 13 is_stmt 1 discriminator 3 view .LVU320
 981              		.loc 1 185 30 is_stmt 0 discriminator 3 view .LVU321
 982 038a 4FEA470E 		lsl	lr, r7, #1
 983 038e 4EEAD27E 		orr	lr, lr, r2, lsr #31
 984 0392 5200     		lsls	r2, r2, #1
 985 0394 42EAD772 		orr	r2, r2, r7, lsr #31
 986              		.loc 1 185 28 discriminator 3 view .LVU322
 987 0398 5640     		eors	r6, r6, r2
 988              		.loc 1 185 19 discriminator 3 view .LVU323
 989 039a F6AA     		add	r2, sp, #984
 990 039c 1A44     		add	r2, r2, r3
 991 039e F6A8     		add	r0, sp, #984
 992              		.loc 1 185 28 discriminator 3 view .LVU324
 993 03a0 8EEA0507 		eor	r7, lr, r5
 994              		.loc 1 185 19 discriminator 3 view .LVU325
 995 03a4 C650     		str	r6, [r0, r3]
 996 03a6 5760     		str	r7, [r2, #4]
 186:masked_fips202.c ****             Du[i] = BCo[i] ^ ROL(BCa[i], 1);
 997              		.loc 1 186 13 is_stmt 1 discriminator 3 view .LVU326
 998              		.loc 1 186 30 is_stmt 0 discriminator 3 view .LVU327
 999 03a8 139A     		ldr	r2, [sp, #76]
 1000 03aa 1298     		ldr	r0, [sp, #72]
 1001 03ac 5200     		lsls	r2, r2, #1
 1002 03ae 42EAD072 		orr	r2, r2, r0, lsr #31
 1003 03b2 4500     		lsls	r5, r0, #1
 1004 03b4 1398     		ldr	r0, [sp, #76]
 1005 03b6 45EAD075 		orr	r5, r5, r0, lsr #31
 1006              		.loc 1 186 28 discriminator 3 view .LVU328
 1007 03ba 1598     		ldr	r0, [sp, #84]
 1008 03bc 5440     		eors	r4, r4, r2
 1009              		.loc 1 186 19 discriminator 3 view .LVU329
 1010 03be FCAA     		add	r2, sp, #1008
 1011              		.loc 1 186 28 discriminator 3 view .LVU330
 1012 03c0 4540     		eors	r5, r5, r0
 1013              		.loc 1 186 19 discriminator 3 view .LVU331
 1014 03c2 1A44     		add	r2, r2, r3
 1015 03c4 FCA8     		add	r0, sp, #1008
 1016 03c6 C550     		str	r5, [r0, r3]
 1017 03c8 5460     		str	r4, [r2, #4]
 187:masked_fips202.c **** 
 188:masked_fips202.c ****             Aba[i] ^= Da[i];
 1018              		.loc 1 188 13 is_stmt 1 discriminator 3 view .LVU332
 1019              		.loc 1 188 20 is_stmt 0 discriminator 3 view .LVU333
 1020 03ca DBF80020 		ldr	r2, [fp]
 1021 03ce 2298     		ldr	r0, [sp, #136]
 1022 03d0 82EA0909 		eor	r9, r2, r9
 1023 03d4 DBF80420 		ldr	r2, [fp, #4]
 1024 03d8 4BF8089B 		str	r9, [fp], #8
 1025 03dc 4240     		eors	r2, r2, r0
 189:masked_fips202.c ****             BCa[i] = Aba[i];
 1026              		.loc 1 189 20 discriminator 3 view .LVU334
 1027 03de C6A8     		add	r0, sp, #792
 1028 03e0 00EB030E 		add	lr, r0, r3
 1029 03e4 40F80390 		str	r9, [r0, r3]
 188:masked_fips202.c ****             BCa[i] = Aba[i];
 1030              		.loc 1 188 20 discriminator 3 view .LVU335
 1031 03e8 4BF8042C 		str	r2, [fp, #-4]
 1032              		.loc 1 189 13 is_stmt 1 discriminator 3 view .LVU336
 1033              		.loc 1 189 20 is_stmt 0 discriminator 3 view .LVU337
 1034 03ec CEF80420 		str	r2, [lr, #4]
 190:masked_fips202.c ****             Age[i] ^= De[i];
 1035              		.loc 1 190 13 is_stmt 1 discriminator 3 view .LVU338
 1036              		.loc 1 190 20 is_stmt 0 discriminator 3 view .LVU339
 1037 03f0 169A     		ldr	r2, [sp, #88]
 1038 03f2 2398     		ldr	r0, [sp, #140]
 1039 03f4 82EA0808 		eor	r8, r2, r8
 1040 03f8 179A     		ldr	r2, [sp, #92]
 1041 03fa 5040     		eors	r0, r0, r2
 1042 03fc 089A     		ldr	r2, [sp, #32]
 1043 03fe 42F8088B 		str	r8, [r2], #8
 1044 0402 42F8040C 		str	r0, [r2, #-4]
 191:masked_fips202.c ****             BCe[i] = ROL(Age[i], 44);
 1045              		.loc 1 191 13 is_stmt 1 discriminator 3 view .LVU340
 190:masked_fips202.c ****             Age[i] ^= De[i];
 1046              		.loc 1 190 20 is_stmt 0 discriminator 3 view .LVU341
 1047 0406 0892     		str	r2, [sp, #32]
 1048              		.loc 1 191 20 discriminator 3 view .LVU342
 1049 0408 CCAA     		add	r2, sp, #816
 1050 040a 02EB030E 		add	lr, r2, r3
 1051              		.loc 1 191 22 discriminator 3 view .LVU343
 1052 040e 4FEA1852 		lsr	r2, r8, #20
 1053 0412 42EA0032 		orr	r2, r2, r0, lsl #12
 1054 0416 000D     		lsrs	r0, r0, #20
 1055 0418 40EA0830 		orr	r0, r0, r8, lsl #12
 1056              		.loc 1 191 20 discriminator 3 view .LVU344
 1057 041c 0DF54C78 		add	r8, sp, #816
 1058 0420 48F80320 		str	r2, [r8, r3]
 192:masked_fips202.c ****             Aki[i] ^= Di[i];
 1059              		.loc 1 192 20 discriminator 3 view .LVU345
 1060 0424 189A     		ldr	r2, [sp, #96]
 191:masked_fips202.c ****             BCe[i] = ROL(Age[i], 44);
 1061              		.loc 1 191 20 discriminator 3 view .LVU346
 1062 0426 CEF80400 		str	r0, [lr, #4]
 1063              		.loc 1 192 13 is_stmt 1 discriminator 3 view .LVU347
 1064              		.loc 1 192 20 is_stmt 0 discriminator 3 view .LVU348
 1065 042a 82EA0C00 		eor	r0, r2, ip
 1066 042e 199A     		ldr	r2, [sp, #100]
 1067 0430 5140     		eors	r1, r1, r2
 1068 0432 079A     		ldr	r2, [sp, #28]
 1069 0434 42F8080B 		str	r0, [r2], #8
 1070 0438 42F8041C 		str	r1, [r2, #-4]
 193:masked_fips202.c ****             BCi[i] = ROL(Aki[i], 43);
 1071              		.loc 1 193 13 is_stmt 1 discriminator 3 view .LVU349
 192:masked_fips202.c ****             Aki[i] ^= Di[i];
 1072              		.loc 1 192 20 is_stmt 0 discriminator 3 view .LVU350
 1073 043c 0792     		str	r2, [sp, #28]
 1074              		.loc 1 193 20 discriminator 3 view .LVU351
 1075 043e D2AA     		add	r2, sp, #840
 1076 0440 02EB0308 		add	r8, r2, r3
 1077              		.loc 1 193 22 discriminator 3 view .LVU352
 1078 0444 420D     		lsrs	r2, r0, #21
 1079 0446 42EAC122 		orr	r2, r2, r1, lsl #11
 1080 044a 490D     		lsrs	r1, r1, #21
 1081 044c 41EAC021 		orr	r1, r1, r0, lsl #11
 1082              		.loc 1 193 20 discriminator 3 view .LVU353
 1083 0450 D2A8     		add	r0, sp, #840
 1084 0452 C250     		str	r2, [r0, r3]
 194:masked_fips202.c ****             Amo[i] ^= Do[i];
 1085              		.loc 1 194 20 discriminator 3 view .LVU354
 1086 0454 1A9A     		ldr	r2, [sp, #104]
 193:masked_fips202.c ****             BCi[i] = ROL(Aki[i], 43);
 1087              		.loc 1 193 20 discriminator 3 view .LVU355
 1088 0456 C8F80410 		str	r1, [r8, #4]
 1089              		.loc 1 194 13 is_stmt 1 discriminator 3 view .LVU356
 1090              		.loc 1 194 20 is_stmt 0 discriminator 3 view .LVU357
 1091 045a 5640     		eors	r6, r6, r2
 1092 045c 1B9A     		ldr	r2, [sp, #108]
 1093 045e 5740     		eors	r7, r7, r2
 1094 0460 069A     		ldr	r2, [sp, #24]
 1095 0462 42F8086B 		str	r6, [r2], #8
 195:masked_fips202.c ****             BCo[i] = ROL(Amo[i], 21);
 1096              		.loc 1 195 22 discriminator 3 view .LVU358
 1097 0466 7905     		lsls	r1, r7, #21
 1098 0468 41EAD621 		orr	r1, r1, r6, lsr #11
 194:masked_fips202.c ****             Amo[i] ^= Do[i];
 1099              		.loc 1 194 20 discriminator 3 view .LVU359
 1100 046c 42F8047C 		str	r7, [r2, #-4]
 1101              		.loc 1 195 13 is_stmt 1 discriminator 3 view .LVU360
 194:masked_fips202.c ****             Amo[i] ^= Do[i];
 1102              		.loc 1 194 20 is_stmt 0 discriminator 3 view .LVU361
 1103 0470 0692     		str	r2, [sp, #24]
 1104              		.loc 1 195 22 discriminator 3 view .LVU362
 1105 0472 7605     		lsls	r6, r6, #21
 1106              		.loc 1 195 20 discriminator 3 view .LVU363
 1107 0474 D8AA     		add	r2, sp, #864
 1108              		.loc 1 195 22 discriminator 3 view .LVU364
 1109 0476 46EAD726 		orr	r6, r6, r7, lsr #11
 1110              		.loc 1 195 20 discriminator 3 view .LVU365
 1111 047a D650     		str	r6, [r2, r3]
 1112 047c D018     		adds	r0, r2, r3
 196:masked_fips202.c ****             Asu[i] ^= Du[i];
 1113              		.loc 1 196 20 discriminator 3 view .LVU366
 1114 047e 1C9A     		ldr	r2, [sp, #112]
 195:masked_fips202.c ****             BCo[i] = ROL(Amo[i], 21);
 1115              		.loc 1 195 20 discriminator 3 view .LVU367
 1116 0480 4160     		str	r1, [r0, #4]
 1117              		.loc 1 196 13 is_stmt 1 discriminator 3 view .LVU368
 1118              		.loc 1 196 20 is_stmt 0 discriminator 3 view .LVU369
 1119 0482 5540     		eors	r5, r5, r2
 1120 0484 219A     		ldr	r2, [sp, #132]
 1121 0486 5440     		eors	r4, r4, r2
 1122 0488 049A     		ldr	r2, [sp, #16]
 1123 048a 42F8085B 		str	r5, [r2], #8
 197:masked_fips202.c ****             BCu[i] = ROL(Asu[i], 14);
 1124              		.loc 1 197 22 discriminator 3 view .LVU370
 1125 048e A103     		lsls	r1, r4, #14
 1126 0490 41EA9541 		orr	r1, r1, r5, lsr #18
 196:masked_fips202.c ****             Asu[i] ^= Du[i];
 1127              		.loc 1 196 20 discriminator 3 view .LVU371
 1128 0494 0492     		str	r2, [sp, #16]
 1129 0496 42F8044C 		str	r4, [r2, #-4]
 1130              		.loc 1 197 13 is_stmt 1 discriminator 3 view .LVU372
 1131              		.loc 1 197 22 is_stmt 0 discriminator 3 view .LVU373
 1132 049a AD03     		lsls	r5, r5, #14
 1133              		.loc 1 197 20 discriminator 3 view .LVU374
 1134 049c DEAA     		add	r2, sp, #888
 1135              		.loc 1 197 22 discriminator 3 view .LVU375
 1136 049e 45EA9445 		orr	r5, r5, r4, lsr #18
 1137              		.loc 1 197 20 discriminator 3 view .LVU376
 1138 04a2 D550     		str	r5, [r2, r3]
 1139 04a4 D018     		adds	r0, r2, r3
 172:masked_fips202.c ****         {
 1140              		.loc 1 172 9 discriminator 3 view .LVU377
 1141 04a6 0833     		adds	r3, r3, #8
 1142 04a8 182B     		cmp	r3, #24
 1143              		.loc 1 197 20 discriminator 3 view .LVU378
 1144 04aa 4160     		str	r1, [r0, #4]
 172:masked_fips202.c ****         {
 1145              		.loc 1 172 46 is_stmt 1 discriminator 3 view .LVU379
 172:masked_fips202.c ****         {
 1146              		.loc 1 172 21 discriminator 3 view .LVU380
 172:masked_fips202.c ****         {
 1147              		.loc 1 172 9 is_stmt 0 discriminator 3 view .LVU381
 1148 04ac 7FF47CAE 		bne	.L18
 198:masked_fips202.c ****         }
 199:masked_fips202.c ****         not_mult_xor(Eba, BCe, BCi, BCa);
 1149              		.loc 1 199 9 is_stmt 1 view .LVU382
 1150 04b0 C6AB     		add	r3, sp, #792
 1151 04b2 D2AA     		add	r2, sp, #840
 1152 04b4 CCA9     		add	r1, sp, #816
 1153 04b6 0DF58160 		add	r0, sp, #1032
 1154 04ba FFF7FEFF 		bl	not_mult_xor
 1155              	.LVL40:
 200:masked_fips202.c ****         Eba[0] ^= (uint64_t)KeccakF_RoundConstants[round];
 1156              		.loc 1 200 9 view .LVU383
 1157              		.loc 1 200 16 is_stmt 0 view .LVU384
 1158 04be 0599     		ldr	r1, [sp, #20]
 1159 04c0 DDF80824 		ldr	r2, [sp, #1032]
 1160 04c4 DDF80C34 		ldr	r3, [sp, #1036]
 1161 04c8 D1E90001 		ldrd	r0, r1, [r1]
 1162 04cc 4240     		eors	r2, r2, r0
 1163 04ce 4B40     		eors	r3, r3, r1
 1164 04d0 CDF80824 		str	r2, [sp, #1032]
 1165 04d4 CDF80C34 		str	r3, [sp, #1036]
 201:masked_fips202.c ****         not_mult_xor(Ebe, BCi, BCo, BCe);
 1166              		.loc 1 201 9 is_stmt 1 view .LVU385
 1167 04d8 D8AA     		add	r2, sp, #864
 1168 04da CCAB     		add	r3, sp, #816
 1169 04dc D2A9     		add	r1, sp, #840
 1170 04de 0DF58460 		add	r0, sp, #1056
 1171 04e2 FFF7FEFF 		bl	not_mult_xor
 1172              	.LVL41:
 202:masked_fips202.c ****         not_mult_xor(Ebi, BCo, BCu, BCi);
 1173              		.loc 1 202 9 view .LVU386
 1174 04e6 D2AB     		add	r3, sp, #840
 1175 04e8 DEAA     		add	r2, sp, #888
 1176 04ea D8A9     		add	r1, sp, #864
 1177 04ec 0DF58760 		add	r0, sp, #1080
 1178 04f0 FFF7FEFF 		bl	not_mult_xor
 1179              	.LVL42:
 203:masked_fips202.c ****         not_mult_xor(Ebo, BCu, BCa, BCo);
 1180              		.loc 1 203 9 view .LVU387
 1181 04f4 D8AB     		add	r3, sp, #864
 1182 04f6 C6AA     		add	r2, sp, #792
 1183 04f8 DEA9     		add	r1, sp, #888
 1184 04fa 0DF58A60 		add	r0, sp, #1104
 1185 04fe FFF7FEFF 		bl	not_mult_xor
 1186              	.LVL43:
 204:masked_fips202.c ****         not_mult_xor(Ebu, BCa, BCe, BCu);
 1187              		.loc 1 204 9 view .LVU388
 1188 0502 DEAB     		add	r3, sp, #888
 1189 0504 CCAA     		add	r2, sp, #816
 1190 0506 C6A9     		add	r1, sp, #792
 1191 0508 0DF58D60 		add	r0, sp, #1128
 1192 050c FFF7FEFF 		bl	not_mult_xor
 1193              	.LVL44:
 205:masked_fips202.c ****         //Eba[i] = BCa ^ ((~BCe) & BCi);
 206:masked_fips202.c ****         //Eba[i] ^= (uint64_t)KeccakF_RoundConstants[round];
 207:masked_fips202.c ****         //Ebe[i] = BCe ^ ((~BCi) & BCo);
 208:masked_fips202.c ****         //Ebi[i] = BCi ^ ((~BCo) & BCu);
 209:masked_fips202.c ****         //Ebo[i] = BCo ^ ((~BCu) & BCa);
 210:masked_fips202.c ****         //Ebu[i] = BCu ^ ((~BCa) & BCe);
 211:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 1194              		.loc 1 211 9 view .LVU389
 1195              		.loc 1 211 21 view .LVU390
 1196 0510 F6AB     		add	r3, sp, #984
 1197 0512 1A93     		str	r3, [sp, #104]
 1198 0514 C6AB     		add	r3, sp, #792
 1199 0516 1B93     		str	r3, [sp, #108]
 1200 0518 FCAB     		add	r3, sp, #1008
 1201 051a 1893     		str	r3, [sp, #96]
 1202 051c CCAB     		add	r3, sp, #816
 1203 051e 1993     		str	r3, [sp, #100]
 1204 0520 E4AB     		add	r3, sp, #912
 1205 0522 1693     		str	r3, [sp, #88]
 1206 0524 D2AB     		add	r3, sp, #840
 1207 0526 1793     		str	r3, [sp, #92]
 1208 0528 EAAB     		add	r3, sp, #936
 1209 052a 1493     		str	r3, [sp, #80]
 1210 052c D8AB     		add	r3, sp, #864
 1211 052e 1593     		str	r3, [sp, #84]
 1212 0530 F0AB     		add	r3, sp, #960
 1213 0532 1C93     		str	r3, [sp, #112]
 1214 0534 DEAB     		add	r3, sp, #888
 1215 0536 1393     		str	r3, [sp, #76]
 1216 0538 0C9B     		ldr	r3, [sp, #48]
 1217 053a 1833     		adds	r3, r3, #24
 1218 053c 0993     		str	r3, [sp, #36]
 204:masked_fips202.c ****         not_mult_xor(Ebu, BCa, BCe, BCu);
 1219              		.loc 1 204 9 is_stmt 0 view .LVU391
 1220 053e DEAB     		add	r3, sp, #888
 1221 0540 0493     		str	r3, [sp, #16]
 1222 0542 D8AB     		add	r3, sp, #864
 1223 0544 0693     		str	r3, [sp, #24]
 1224 0546 C6AB     		add	r3, sp, #792
 1225 0548 FCAC     		add	r4, sp, #1008
 1226 054a 0893     		str	r3, [sp, #32]
 1227 054c 0C9B     		ldr	r3, [sp, #48]
 1228 054e 0794     		str	r4, [sp, #28]
 1229 0550 5046     		mov	r0, r10
 1230 0552 90A9     		add	r1, sp, #576
 1231 0554 B4AA     		add	r2, sp, #720
 1232 0556 F0AD     		add	r5, sp, #960
 1233 0558 0DF56A7E 		add	lr, sp, #936
 1234 055c 0DF55278 		add	r8, sp, #840
 1235 0560 0DF56479 		add	r9, sp, #912
 1236 0564 0DF54C7A 		add	r10, sp, #816
 1237 0568 0DF5767C 		add	ip, sp, #984
 1238              	.LVL45:
 1239              	.L19:
 212:masked_fips202.c ****         {
 213:masked_fips202.c ****             Abo[i] ^= Do[i];
 1240              		.loc 1 213 13 is_stmt 1 discriminator 3 view .LVU392
 1241              		.loc 1 213 25 is_stmt 0 discriminator 3 view .LVU393
 1242 056c DCE90076 		ldrd	r7, r6, [ip]
 1243              		.loc 1 213 20 discriminator 3 view .LVU394
 1244 0570 1C68     		ldr	r4, [r3]
 1245 0572 6740     		eors	r7, r7, r4
 1246 0574 5C68     		ldr	r4, [r3, #4]
 1247 0576 43F8087B 		str	r7, [r3], #8
 1248 057a 84EA060B 		eor	fp, r4, r6
 214:masked_fips202.c ****             BCa[i] = ROL(Abo[i], 28);
 1249              		.loc 1 214 22 discriminator 3 view .LVU395
 1250 057e 4FEA0B76 		lsl	r6, fp, #28
 1251              		.loc 1 214 20 discriminator 3 view .LVU396
 1252 0582 089C     		ldr	r4, [sp, #32]
 213:masked_fips202.c ****             BCa[i] = ROL(Abo[i], 28);
 1253              		.loc 1 213 20 discriminator 3 view .LVU397
 1254 0584 43F804BC 		str	fp, [r3, #-4]
 1255              		.loc 1 214 13 is_stmt 1 discriminator 3 view .LVU398
 1256              		.loc 1 214 22 is_stmt 0 discriminator 3 view .LVU399
 1257 0588 46EA1716 		orr	r6, r6, r7, lsr #4
 1258 058c 3F07     		lsls	r7, r7, #28
 1259 058e 47EA1B17 		orr	r7, r7, fp, lsr #4
 1260              		.loc 1 214 20 discriminator 3 view .LVU400
 1261 0592 C4E90076 		strd	r7, r6, [r4]
 1262 0596 0834     		adds	r4, r4, #8
 1263 0598 0894     		str	r4, [sp, #32]
 215:masked_fips202.c ****             Agu[i] ^= Du[i];
 1264              		.loc 1 215 13 is_stmt 1 discriminator 3 view .LVU401
 1265              		.loc 1 215 25 is_stmt 0 discriminator 3 view .LVU402
 1266 059a 079C     		ldr	r4, [sp, #28]
 1267 059c D4E90076 		ldrd	r7, r6, [r4]
 1268 05a0 0834     		adds	r4, r4, #8
 1269 05a2 0794     		str	r4, [sp, #28]
 1270              		.loc 1 215 20 discriminator 3 view .LVU403
 1271 05a4 0468     		ldr	r4, [r0]
 1272 05a6 6740     		eors	r7, r7, r4
 1273 05a8 4468     		ldr	r4, [r0, #4]
 1274 05aa 40F8087B 		str	r7, [r0], #8
 1275 05ae 84EA060B 		eor	fp, r4, r6
 216:masked_fips202.c ****             BCe[i] = ROL(Agu[i], 20);
 217:masked_fips202.c ****             Aka[i] ^= Da[i];
 1276              		.loc 1 217 20 discriminator 3 view .LVU404
 1277 05b2 019C     		ldr	r4, [sp, #4]
 215:masked_fips202.c ****             Agu[i] ^= Du[i];
 1278              		.loc 1 215 20 discriminator 3 view .LVU405
 1279 05b4 40F804BC 		str	fp, [r0, #-4]
 216:masked_fips202.c ****             BCe[i] = ROL(Agu[i], 20);
 1280              		.loc 1 216 13 is_stmt 1 discriminator 3 view .LVU406
 1281              		.loc 1 217 20 is_stmt 0 discriminator 3 view .LVU407
 1282 05b8 2468     		ldr	r4, [r4]
 1283 05ba 0F94     		str	r4, [sp, #60]
 216:masked_fips202.c ****             BCe[i] = ROL(Agu[i], 20);
 1284              		.loc 1 216 22 discriminator 3 view .LVU408
 1285 05bc 4FEA0B56 		lsl	r6, fp, #20
 1286 05c0 46EA1736 		orr	r6, r6, r7, lsr #12
 1287              		.loc 1 217 20 discriminator 3 view .LVU409
 1288 05c4 019C     		ldr	r4, [sp, #4]
 216:masked_fips202.c ****             BCe[i] = ROL(Agu[i], 20);
 1289              		.loc 1 216 22 discriminator 3 view .LVU410
 1290 05c6 3F05     		lsls	r7, r7, #20
 1291 05c8 47EA1B37 		orr	r7, r7, fp, lsr #12
 1292              		.loc 1 217 20 discriminator 3 view .LVU411
 1293 05cc 6468     		ldr	r4, [r4, #4]
 1294 05ce 1094     		str	r4, [sp, #64]
 216:masked_fips202.c ****             BCe[i] = ROL(Agu[i], 20);
 1295              		.loc 1 216 20 discriminator 3 view .LVU412
 1296 05d0 CAE90076 		strd	r7, r6, [r10]
 1297              		.loc 1 217 25 discriminator 3 view .LVU413
 1298 05d4 D9E90076 		ldrd	r7, r6, [r9]
 1299              		.loc 1 217 20 discriminator 3 view .LVU414
 1300 05d8 0F9C     		ldr	r4, [sp, #60]
 1301 05da 6740     		eors	r7, r7, r4
 1302 05dc 109C     		ldr	r4, [sp, #64]
 1303 05de 84EA060B 		eor	fp, r4, r6
 1304 05e2 019C     		ldr	r4, [sp, #4]
 218:masked_fips202.c ****             BCi[i] = ROL(Aka[i], 3);
 1305              		.loc 1 218 22 discriminator 3 view .LVU415
 1306 05e4 4FEACB06 		lsl	r6, fp, #3
 217:masked_fips202.c ****             BCi[i] = ROL(Aka[i], 3);
 1307              		.loc 1 217 20 discriminator 3 view .LVU416
 1308 05e8 44F8087B 		str	r7, [r4], #8
 1309              		.loc 1 218 22 discriminator 3 view .LVU417
 1310 05ec 46EA5776 		orr	r6, r6, r7, lsr #29
 1311 05f0 FF00     		lsls	r7, r7, #3
 1312 05f2 47EA5B77 		orr	r7, r7, fp, lsr #29
 217:masked_fips202.c ****             BCi[i] = ROL(Aka[i], 3);
 1313              		.loc 1 217 20 discriminator 3 view .LVU418
 1314 05f6 0194     		str	r4, [sp, #4]
 1315              		.loc 1 218 20 discriminator 3 view .LVU419
 1316 05f8 C8E90076 		strd	r7, r6, [r8]
 219:masked_fips202.c ****             Ame[i] ^= De[i];
 1317              		.loc 1 219 25 discriminator 3 view .LVU420
 1318 05fc DEE90076 		ldrd	r7, r6, [lr]
 217:masked_fips202.c ****             BCi[i] = ROL(Aka[i], 3);
 1319              		.loc 1 217 20 discriminator 3 view .LVU421
 1320 0600 44F804BC 		str	fp, [r4, #-4]
 1321              		.loc 1 219 20 discriminator 3 view .LVU422
 1322 0604 0C68     		ldr	r4, [r1]
 1323 0606 6740     		eors	r7, r7, r4
 1324 0608 4C68     		ldr	r4, [r1, #4]
 1325 060a 41F8087B 		str	r7, [r1], #8
 1326 060e 6640     		eors	r6, r6, r4
 220:masked_fips202.c ****             BCo[i] = ROL(Ame[i], 45);
 1327              		.loc 1 220 22 discriminator 3 view .LVU423
 1328 0610 4FEAD74B 		lsr	fp, r7, #19
 1329              		.loc 1 220 20 discriminator 3 view .LVU424
 1330 0614 069C     		ldr	r4, [sp, #24]
 219:masked_fips202.c ****             Ame[i] ^= De[i];
 1331              		.loc 1 219 20 discriminator 3 view .LVU425
 1332 0616 41F8046C 		str	r6, [r1, #-4]
 1333              		.loc 1 220 22 discriminator 3 view .LVU426
 1334 061a 4BEA463B 		orr	fp, fp, r6, lsl #13
 1335 061e F60C     		lsrs	r6, r6, #19
 1336 0620 46EA4736 		orr	r6, r6, r7, lsl #13
 1337              		.loc 1 220 20 discriminator 3 view .LVU427
 1338 0624 C4E900B6 		strd	fp, r6, [r4]
 221:masked_fips202.c ****             Asi[i] ^= Di[i];
 1339              		.loc 1 221 25 discriminator 3 view .LVU428
 1340 0628 D5E90076 		ldrd	r7, r6, [r5]
 1341 062c 0834     		adds	r4, r4, #8
 1342 062e 0694     		str	r4, [sp, #24]
 1343              		.loc 1 221 20 discriminator 3 view .LVU429
 1344 0630 1468     		ldr	r4, [r2]
 1345 0632 6740     		eors	r7, r7, r4
 1346 0634 5468     		ldr	r4, [r2, #4]
 1347 0636 42F8087B 		str	r7, [r2], #8
 1348 063a 6640     		eors	r6, r6, r4
 222:masked_fips202.c ****             BCu[i] = ROL(Asi[i], 61);
 1349              		.loc 1 222 22 discriminator 3 view .LVU430
 1350 063c 4FEAD70B 		lsr	fp, r7, #3
 1351              		.loc 1 222 20 discriminator 3 view .LVU431
 1352 0640 049C     		ldr	r4, [sp, #16]
 221:masked_fips202.c ****             Asi[i] ^= Di[i];
 1353              		.loc 1 221 20 discriminator 3 view .LVU432
 1354 0642 42F8046C 		str	r6, [r2, #-4]
 1355              		.loc 1 222 22 discriminator 3 view .LVU433
 1356 0646 4BEA467B 		orr	fp, fp, r6, lsl #29
 1357 064a F608     		lsrs	r6, r6, #3
 1358 064c 46EA4776 		orr	r6, r6, r7, lsl #29
 1359              		.loc 1 222 20 discriminator 3 view .LVU434
 1360 0650 C4E900B6 		strd	fp, r6, [r4]
 1361 0654 0834     		adds	r4, r4, #8
 1362 0656 0494     		str	r4, [sp, #16]
 211:masked_fips202.c ****         {
 1363              		.loc 1 211 9 discriminator 3 view .LVU435
 1364 0658 099C     		ldr	r4, [sp, #36]
 1365 065a 9C42     		cmp	r4, r3
 1366 065c 0CF1080C 		add	ip, ip, #8
 1367 0660 0AF1080A 		add	r10, r10, #8
 217:masked_fips202.c ****             BCi[i] = ROL(Aka[i], 3);
 1368              		.loc 1 217 13 is_stmt 1 discriminator 3 view .LVU436
 218:masked_fips202.c ****             Ame[i] ^= De[i];
 1369              		.loc 1 218 13 discriminator 3 view .LVU437
 1370 0664 09F10809 		add	r9, r9, #8
 1371 0668 08F10808 		add	r8, r8, #8
 219:masked_fips202.c ****             BCo[i] = ROL(Ame[i], 45);
 1372              		.loc 1 219 13 discriminator 3 view .LVU438
 220:masked_fips202.c ****             Asi[i] ^= Di[i];
 1373              		.loc 1 220 13 discriminator 3 view .LVU439
 221:masked_fips202.c ****             BCu[i] = ROL(Asi[i], 61);
 1374              		.loc 1 221 13 discriminator 3 view .LVU440
 1375              		.loc 1 222 13 discriminator 3 view .LVU441
 211:masked_fips202.c ****         {
 1376              		.loc 1 211 46 discriminator 3 view .LVU442
 211:masked_fips202.c ****         {
 1377              		.loc 1 211 21 discriminator 3 view .LVU443
 1378 066c 0EF1080E 		add	lr, lr, #8
 1379 0670 05F10805 		add	r5, r5, #8
 211:masked_fips202.c ****         {
 1380              		.loc 1 211 9 is_stmt 0 discriminator 3 view .LVU444
 1381 0674 7FF47AAF 		bne	.L19
 223:masked_fips202.c ****         }
 224:masked_fips202.c ****         not_mult_xor(Ega, BCe, BCi, BCa);
 1382              		.loc 1 224 9 is_stmt 1 view .LVU445
 1383 0678 C6AB     		add	r3, sp, #792
 1384 067a D2AA     		add	r2, sp, #840
 1385 067c CCA9     		add	r1, sp, #816
 1386 067e 0DF59060 		add	r0, sp, #1152
 1387 0682 FFF7FEFF 		bl	not_mult_xor
 1388              	.LVL46:
 225:masked_fips202.c ****         not_mult_xor(Ege, BCi, BCo, BCe);
 1389              		.loc 1 225 9 view .LVU446
 1390 0686 CCAB     		add	r3, sp, #816
 1391 0688 D8AA     		add	r2, sp, #864
 1392 068a D2A9     		add	r1, sp, #840
 1393 068c 0DF59360 		add	r0, sp, #1176
 1394 0690 FFF7FEFF 		bl	not_mult_xor
 1395              	.LVL47:
 226:masked_fips202.c ****         not_mult_xor(Egi, BCo, BCu, BCi);
 1396              		.loc 1 226 9 view .LVU447
 1397 0694 D2AB     		add	r3, sp, #840
 1398 0696 DEAA     		add	r2, sp, #888
 1399 0698 D8A9     		add	r1, sp, #864
 1400 069a 0DF59660 		add	r0, sp, #1200
 1401 069e FFF7FEFF 		bl	not_mult_xor
 1402              	.LVL48:
 227:masked_fips202.c ****         not_mult_xor(Ego, BCu, BCa, BCo);
 1403              		.loc 1 227 9 view .LVU448
 1404 06a2 D8AB     		add	r3, sp, #864
 1405 06a4 C6AA     		add	r2, sp, #792
 1406 06a6 DEA9     		add	r1, sp, #888
 1407 06a8 0DF59960 		add	r0, sp, #1224
 1408 06ac FFF7FEFF 		bl	not_mult_xor
 1409              	.LVL49:
 228:masked_fips202.c ****         not_mult_xor(Egu, BCa, BCe, BCu);
 1410              		.loc 1 228 9 view .LVU449
 1411 06b0 DEAB     		add	r3, sp, #888
 1412 06b2 CCAA     		add	r2, sp, #816
 1413 06b4 C6A9     		add	r1, sp, #792
 1414 06b6 0DF59C60 		add	r0, sp, #1248
 1415 06ba FFF7FEFF 		bl	not_mult_xor
 1416              	.LVL50:
 229:masked_fips202.c ****         //Ega = BCa ^ ((~BCe) & BCi);
 230:masked_fips202.c ****         //Ege = BCe ^ ((~BCi) & BCo);
 231:masked_fips202.c ****         //Egi = BCi ^ ((~BCo) & BCu);
 232:masked_fips202.c ****         //Ego = BCo ^ ((~BCu) & BCa);
 233:masked_fips202.c ****         //Egu = BCu ^ ((~BCa) & BCe);
 234:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 1417              		.loc 1 234 9 view .LVU450
 1418              		.loc 1 234 21 view .LVU451
 1419 06be 0E9B     		ldr	r3, [sp, #56]
 228:masked_fips202.c ****         not_mult_xor(Egu, BCa, BCe, BCu);
 1420              		.loc 1 228 9 is_stmt 0 view .LVU452
 1421 06c0 1D98     		ldr	r0, [sp, #116]
 1422 06c2 1833     		adds	r3, r3, #24
 1423 06c4 0893     		str	r3, [sp, #32]
 1424 06c6 DEAB     		add	r3, sp, #888
 1425 06c8 0193     		str	r3, [sp, #4]
 1426 06ca D8AB     		add	r3, sp, #864
 1427 06cc 0493     		str	r3, [sp, #16]
 1428 06ce C6AB     		add	r3, sp, #792
 1429 06d0 F0AC     		add	r4, sp, #960
 1430 06d2 0793     		str	r3, [sp, #28]
 1431 06d4 0E9B     		ldr	r3, [sp, #56]
 1432 06d6 0694     		str	r4, [sp, #24]
 1433 06d8 7EA9     		add	r1, sp, #504
 1434 06da A2AA     		add	r2, sp, #648
 1435 06dc E4AD     		add	r5, sp, #912
 1436 06de 0DF57C7E 		add	lr, sp, #1008
 1437 06e2 0DF55278 		add	r8, sp, #840
 1438 06e6 0DF57679 		add	r9, sp, #984
 1439 06ea 0DF54C7A 		add	r10, sp, #816
 1440 06ee 0DF56A7C 		add	ip, sp, #936
 1441              	.LVL51:
 1442              	.L20:
 235:masked_fips202.c ****         {
 236:masked_fips202.c ****             Abe[i] ^= De[i];
 1443              		.loc 1 236 13 is_stmt 1 discriminator 3 view .LVU453
 1444              		.loc 1 236 25 is_stmt 0 discriminator 3 view .LVU454
 1445 06f2 DCE90076 		ldrd	r7, r6, [ip]
 1446              		.loc 1 236 20 discriminator 3 view .LVU455
 1447 06f6 1C68     		ldr	r4, [r3]
 1448 06f8 6740     		eors	r7, r7, r4
 1449 06fa 5C68     		ldr	r4, [r3, #4]
 1450 06fc 43F8087B 		str	r7, [r3], #8
 1451 0700 84EA060B 		eor	fp, r4, r6
 237:masked_fips202.c ****             BCa[i] = ROL(Abe[i], 1);
 1452              		.loc 1 237 22 discriminator 3 view .LVU456
 1453 0704 4FEA4B06 		lsl	r6, fp, #1
 1454              		.loc 1 237 20 discriminator 3 view .LVU457
 1455 0708 079C     		ldr	r4, [sp, #28]
 236:masked_fips202.c ****             BCa[i] = ROL(Abe[i], 1);
 1456              		.loc 1 236 20 discriminator 3 view .LVU458
 1457 070a 43F804BC 		str	fp, [r3, #-4]
 1458              		.loc 1 237 13 is_stmt 1 discriminator 3 view .LVU459
 1459              		.loc 1 237 22 is_stmt 0 discriminator 3 view .LVU460
 1460 070e 46EAD776 		orr	r6, r6, r7, lsr #31
 1461 0712 7F00     		lsls	r7, r7, #1
 1462 0714 47EADB77 		orr	r7, r7, fp, lsr #31
 1463              		.loc 1 237 20 discriminator 3 view .LVU461
 1464 0718 C4E90076 		strd	r7, r6, [r4]
 1465 071c 0834     		adds	r4, r4, #8
 1466 071e 0794     		str	r4, [sp, #28]
 238:masked_fips202.c ****             Agi[i] ^= Di[i];
 1467              		.loc 1 238 13 is_stmt 1 discriminator 3 view .LVU462
 1468              		.loc 1 238 25 is_stmt 0 discriminator 3 view .LVU463
 1469 0720 069C     		ldr	r4, [sp, #24]
 1470 0722 D4E90076 		ldrd	r7, r6, [r4]
 1471 0726 0834     		adds	r4, r4, #8
 1472 0728 0694     		str	r4, [sp, #24]
 1473              		.loc 1 238 20 discriminator 3 view .LVU464
 1474 072a 0468     		ldr	r4, [r0]
 1475 072c 6740     		eors	r7, r7, r4
 1476 072e 4468     		ldr	r4, [r0, #4]
 1477 0730 40F8087B 		str	r7, [r0], #8
 1478 0734 84EA060B 		eor	fp, r4, r6
 239:masked_fips202.c ****             BCe[i] = ROL(Agi[i], 6);
 1479              		.loc 1 239 22 discriminator 3 view .LVU465
 1480 0738 4FEA8B16 		lsl	r6, fp, #6
 1481 073c 46EA9766 		orr	r6, r6, r7, lsr #26
 1482 0740 BF01     		lsls	r7, r7, #6
 1483 0742 47EA9B67 		orr	r7, r7, fp, lsr #26
 1484              		.loc 1 239 20 discriminator 3 view .LVU466
 1485 0746 CAE90076 		strd	r7, r6, [r10]
 240:masked_fips202.c ****             Ako[i] ^= Do[i];
 1486              		.loc 1 240 25 discriminator 3 view .LVU467
 1487 074a D9E90076 		ldrd	r7, r6, [r9]
 1488              		.loc 1 240 20 discriminator 3 view .LVU468
 1489 074e 0C68     		ldr	r4, [r1]
 238:masked_fips202.c ****             Agi[i] ^= Di[i];
 1490              		.loc 1 238 20 discriminator 3 view .LVU469
 1491 0750 40F804BC 		str	fp, [r0, #-4]
 239:masked_fips202.c ****             BCe[i] = ROL(Agi[i], 6);
 1492              		.loc 1 239 13 is_stmt 1 discriminator 3 view .LVU470
 1493              		.loc 1 240 20 is_stmt 0 discriminator 3 view .LVU471
 1494 0754 6740     		eors	r7, r7, r4
 1495 0756 4C68     		ldr	r4, [r1, #4]
 1496 0758 41F8087B 		str	r7, [r1], #8
 1497 075c 84EA060B 		eor	fp, r4, r6
 241:masked_fips202.c ****             BCi[i] = ROL(Ako[i], 25);
 1498              		.loc 1 241 22 discriminator 3 view .LVU472
 1499 0760 4FEA4B66 		lsl	r6, fp, #25
 1500 0764 46EAD716 		orr	r6, r6, r7, lsr #7
 1501 0768 7F06     		lsls	r7, r7, #25
 1502 076a 47EADB17 		orr	r7, r7, fp, lsr #7
 1503              		.loc 1 241 20 discriminator 3 view .LVU473
 1504 076e C8E90076 		strd	r7, r6, [r8]
 242:masked_fips202.c ****             Amu[i] ^= Du[i];
 1505              		.loc 1 242 25 discriminator 3 view .LVU474
 1506 0772 DEE90076 		ldrd	r7, r6, [lr]
 1507              		.loc 1 242 20 discriminator 3 view .LVU475
 1508 0776 1468     		ldr	r4, [r2]
 240:masked_fips202.c ****             Ako[i] ^= Do[i];
 1509              		.loc 1 240 20 discriminator 3 view .LVU476
 1510 0778 41F804BC 		str	fp, [r1, #-4]
 1511              		.loc 1 242 20 discriminator 3 view .LVU477
 1512 077c 6740     		eors	r7, r7, r4
 1513 077e 5468     		ldr	r4, [r2, #4]
 1514 0780 42F8087B 		str	r7, [r2], #8
 1515 0784 84EA060B 		eor	fp, r4, r6
 243:masked_fips202.c ****             BCo[i] = ROL(Amu[i], 8);
 1516              		.loc 1 243 22 discriminator 3 view .LVU478
 1517 0788 4FEA0B26 		lsl	r6, fp, #8
 1518              		.loc 1 243 20 discriminator 3 view .LVU479
 1519 078c 049C     		ldr	r4, [sp, #16]
 242:masked_fips202.c ****             Amu[i] ^= Du[i];
 1520              		.loc 1 242 20 discriminator 3 view .LVU480
 1521 078e 42F804BC 		str	fp, [r2, #-4]
 1522              		.loc 1 243 22 discriminator 3 view .LVU481
 1523 0792 46EA1766 		orr	r6, r6, r7, lsr #24
 1524 0796 3F02     		lsls	r7, r7, #8
 1525 0798 47EA1B67 		orr	r7, r7, fp, lsr #24
 1526              		.loc 1 243 20 discriminator 3 view .LVU482
 1527 079c C4E90076 		strd	r7, r6, [r4]
 1528 07a0 0834     		adds	r4, r4, #8
 1529 07a2 0494     		str	r4, [sp, #16]
 244:masked_fips202.c ****             Asa[i] ^= Da[i];
 1530              		.loc 1 244 20 discriminator 3 view .LVU483
 1531 07a4 029C     		ldr	r4, [sp, #8]
 1532 07a6 2468     		ldr	r4, [r4]
 1533 07a8 0994     		str	r4, [sp, #36]
 1534 07aa 029C     		ldr	r4, [sp, #8]
 1535              		.loc 1 244 25 discriminator 3 view .LVU484
 1536 07ac D5E90076 		ldrd	r7, r6, [r5]
 1537              		.loc 1 244 20 discriminator 3 view .LVU485
 1538 07b0 6468     		ldr	r4, [r4, #4]
 1539 07b2 0F94     		str	r4, [sp, #60]
 1540 07b4 099C     		ldr	r4, [sp, #36]
 1541 07b6 6740     		eors	r7, r7, r4
 1542 07b8 0F9C     		ldr	r4, [sp, #60]
 1543 07ba 84EA060B 		eor	fp, r4, r6
 1544 07be 029C     		ldr	r4, [sp, #8]
 1545 07c0 44F8087B 		str	r7, [r4], #8
 245:masked_fips202.c ****             BCu[i] = ROL(Asa[i], 18);
 1546              		.loc 1 245 22 discriminator 3 view .LVU486
 1547 07c4 4FEA8B46 		lsl	r6, fp, #18
 1548 07c8 46EA9736 		orr	r6, r6, r7, lsr #14
 244:masked_fips202.c ****             Asa[i] ^= Da[i];
 1549              		.loc 1 244 20 discriminator 3 view .LVU487
 1550 07cc 0294     		str	r4, [sp, #8]
 1551 07ce 44F804BC 		str	fp, [r4, #-4]
 1552              		.loc 1 245 22 discriminator 3 view .LVU488
 1553 07d2 BF04     		lsls	r7, r7, #18
 1554              		.loc 1 245 20 discriminator 3 view .LVU489
 1555 07d4 019C     		ldr	r4, [sp, #4]
 1556              		.loc 1 245 22 discriminator 3 view .LVU490
 1557 07d6 47EA9B37 		orr	r7, r7, fp, lsr #14
 1558              		.loc 1 245 20 discriminator 3 view .LVU491
 1559 07da C4E90076 		strd	r7, r6, [r4]
 1560 07de 0834     		adds	r4, r4, #8
 1561 07e0 0194     		str	r4, [sp, #4]
 234:masked_fips202.c ****         {
 1562              		.loc 1 234 9 discriminator 3 view .LVU492
 1563 07e2 089C     		ldr	r4, [sp, #32]
 1564 07e4 9C42     		cmp	r4, r3
 1565 07e6 0CF1080C 		add	ip, ip, #8
 1566 07ea 0AF1080A 		add	r10, r10, #8
 240:masked_fips202.c ****             BCi[i] = ROL(Ako[i], 25);
 1567              		.loc 1 240 13 is_stmt 1 discriminator 3 view .LVU493
 241:masked_fips202.c ****             Amu[i] ^= Du[i];
 1568              		.loc 1 241 13 discriminator 3 view .LVU494
 1569 07ee 09F10809 		add	r9, r9, #8
 1570 07f2 08F10808 		add	r8, r8, #8
 242:masked_fips202.c ****             BCo[i] = ROL(Amu[i], 8);
 1571              		.loc 1 242 13 discriminator 3 view .LVU495
 243:masked_fips202.c ****             Asa[i] ^= Da[i];
 1572              		.loc 1 243 13 discriminator 3 view .LVU496
 244:masked_fips202.c ****             BCu[i] = ROL(Asa[i], 18);
 1573              		.loc 1 244 13 discriminator 3 view .LVU497
 1574              		.loc 1 245 13 discriminator 3 view .LVU498
 234:masked_fips202.c ****         {
 1575              		.loc 1 234 46 discriminator 3 view .LVU499
 234:masked_fips202.c ****         {
 1576              		.loc 1 234 21 discriminator 3 view .LVU500
 1577 07f6 0EF1080E 		add	lr, lr, #8
 1578 07fa 05F10805 		add	r5, r5, #8
 234:masked_fips202.c ****         {
 1579              		.loc 1 234 9 is_stmt 0 discriminator 3 view .LVU501
 1580 07fe 7FF478AF 		bne	.L20
 246:masked_fips202.c ****         }
 247:masked_fips202.c ****         not_mult_xor(Eka, BCe, BCi, BCa);
 1581              		.loc 1 247 9 is_stmt 1 view .LVU502
 1582 0802 C6AB     		add	r3, sp, #792
 1583 0804 D2AA     		add	r2, sp, #840
 1584 0806 CCA9     		add	r1, sp, #816
 1585 0808 0DF59F60 		add	r0, sp, #1272
 1586 080c FFF7FEFF 		bl	not_mult_xor
 1587              	.LVL52:
 248:masked_fips202.c ****         not_mult_xor(Eke, BCi, BCo, BCe);
 1588              		.loc 1 248 9 view .LVU503
 1589 0810 CCAB     		add	r3, sp, #816
 1590 0812 D8AA     		add	r2, sp, #864
 1591 0814 D2A9     		add	r1, sp, #840
 1592 0816 0DF5A260 		add	r0, sp, #1296
 1593 081a FFF7FEFF 		bl	not_mult_xor
 1594              	.LVL53:
 249:masked_fips202.c ****         not_mult_xor(Eki, BCo, BCu, BCi);
 1595              		.loc 1 249 9 view .LVU504
 1596 081e D2AB     		add	r3, sp, #840
 1597 0820 DEAA     		add	r2, sp, #888
 1598 0822 D8A9     		add	r1, sp, #864
 1599 0824 0DF5A560 		add	r0, sp, #1320
 1600 0828 FFF7FEFF 		bl	not_mult_xor
 1601              	.LVL54:
 250:masked_fips202.c ****         not_mult_xor(Eko, BCu, BCa, BCo);
 1602              		.loc 1 250 9 view .LVU505
 1603 082c D8AB     		add	r3, sp, #864
 1604 082e C6AA     		add	r2, sp, #792
 1605 0830 DEA9     		add	r1, sp, #888
 1606 0832 0DF5A860 		add	r0, sp, #1344
 1607 0836 FFF7FEFF 		bl	not_mult_xor
 1608              	.LVL55:
 251:masked_fips202.c ****         not_mult_xor(Eku, BCa, BCe, BCu);
 1609              		.loc 1 251 9 view .LVU506
 1610 083a DEAB     		add	r3, sp, #888
 1611 083c CCAA     		add	r2, sp, #816
 1612 083e C6A9     		add	r1, sp, #792
 1613 0840 0DF5AB60 		add	r0, sp, #1368
 1614 0844 FFF7FEFF 		bl	not_mult_xor
 1615              	.LVL56:
 252:masked_fips202.c ****         //Eka = BCa ^ ((~BCe) & BCi);
 253:masked_fips202.c ****         //Eke = BCe ^ ((~BCi) & BCo);
 254:masked_fips202.c ****         //Eki = BCi ^ ((~BCo) & BCu);
 255:masked_fips202.c ****         //Eko = BCo ^ ((~BCu) & BCa);
 256:masked_fips202.c ****         //Eku = BCu ^ ((~BCa) & BCe);
 257:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 1616              		.loc 1 257 9 view .LVU507
 1617              		.loc 1 257 21 view .LVU508
 1618 0848 0B9B     		ldr	r3, [sp, #44]
 251:masked_fips202.c ****         not_mult_xor(Eku, BCa, BCe, BCu);
 1619              		.loc 1 251 9 is_stmt 0 view .LVU509
 1620 084a 0A9C     		ldr	r4, [sp, #40]
 1621 084c 1833     		adds	r3, r3, #24
 1622 084e 0893     		str	r3, [sp, #32]
 1623 0850 DEAB     		add	r3, sp, #888
 1624 0852 0193     		str	r3, [sp, #4]
 1625 0854 D8AB     		add	r3, sp, #864
 1626 0856 0293     		str	r3, [sp, #8]
 1627 0858 CCAB     		add	r3, sp, #816
 1628 085a 0493     		str	r3, [sp, #16]
 1629 085c C6AB     		add	r3, sp, #792
 1630 085e E4AD     		add	r5, sp, #912
 1631 0860 0793     		str	r3, [sp, #28]
 1632 0862 0B9B     		ldr	r3, [sp, #44]
 1633 0864 0695     		str	r5, [sp, #24]
 1634 0866 72A8     		add	r0, sp, #456
 1635 0868 96A9     		add	r1, sp, #600
 1636 086a BAAA     		add	r2, sp, #744
 1637 086c 0DF5767C 		add	ip, sp, #984
 1638 0870 0DF57078 		add	r8, sp, #960
 1639 0874 0DF55279 		add	r9, sp, #840
 1640 0878 0DF56A7A 		add	r10, sp, #936
 1641 087c 0DF57C7E 		add	lr, sp, #1008
 1642              	.LVL57:
 1643              	.L21:
 258:masked_fips202.c ****         {
 259:masked_fips202.c ****             Abu[i] ^= Du[i];
 1644              		.loc 1 259 13 is_stmt 1 discriminator 3 view .LVU510
 1645              		.loc 1 259 25 is_stmt 0 discriminator 3 view .LVU511
 1646 0880 DEE90076 		ldrd	r7, r6, [lr]
 1647              		.loc 1 259 20 discriminator 3 view .LVU512
 1648 0884 1D68     		ldr	r5, [r3]
 1649 0886 6F40     		eors	r7, r7, r5
 1650 0888 5D68     		ldr	r5, [r3, #4]
 1651 088a 43F8087B 		str	r7, [r3], #8
 1652 088e 85EA060B 		eor	fp, r5, r6
 260:masked_fips202.c ****             BCa[i] = ROL(Abu[i], 27);
 1653              		.loc 1 260 22 discriminator 3 view .LVU513
 1654 0892 4FEACB66 		lsl	r6, fp, #27
 1655              		.loc 1 260 20 discriminator 3 view .LVU514
 1656 0896 079D     		ldr	r5, [sp, #28]
 259:masked_fips202.c ****             BCa[i] = ROL(Abu[i], 27);
 1657              		.loc 1 259 20 discriminator 3 view .LVU515
 1658 0898 43F804BC 		str	fp, [r3, #-4]
 1659              		.loc 1 260 13 is_stmt 1 discriminator 3 view .LVU516
 1660              		.loc 1 260 22 is_stmt 0 discriminator 3 view .LVU517
 1661 089c 46EA5716 		orr	r6, r6, r7, lsr #5
 1662 08a0 FF06     		lsls	r7, r7, #27
 1663 08a2 47EA5B17 		orr	r7, r7, fp, lsr #5
 1664              		.loc 1 260 20 discriminator 3 view .LVU518
 1665 08a6 C5E90076 		strd	r7, r6, [r5]
 1666 08aa 0835     		adds	r5, r5, #8
 1667 08ac 0795     		str	r5, [sp, #28]
 261:masked_fips202.c ****             Aga[i] ^= Da[i];
 1668              		.loc 1 261 13 is_stmt 1 discriminator 3 view .LVU519
 1669              		.loc 1 261 25 is_stmt 0 discriminator 3 view .LVU520
 1670 08ae 069D     		ldr	r5, [sp, #24]
 1671 08b0 D5E90076 		ldrd	r7, r6, [r5]
 1672 08b4 0835     		adds	r5, r5, #8
 1673 08b6 0695     		str	r5, [sp, #24]
 1674              		.loc 1 261 20 discriminator 3 view .LVU521
 1675 08b8 2568     		ldr	r5, [r4]
 1676 08ba 6F40     		eors	r7, r7, r5
 1677 08bc 6568     		ldr	r5, [r4, #4]
 1678 08be 44F8087B 		str	r7, [r4], #8
 1679 08c2 6E40     		eors	r6, r6, r5
 262:masked_fips202.c ****             BCe[i] = ROL(Aga[i], 36);
 1680              		.loc 1 262 22 discriminator 3 view .LVU522
 1681 08c4 4FEA177B 		lsr	fp, r7, #28
 1682              		.loc 1 262 20 discriminator 3 view .LVU523
 1683 08c8 049D     		ldr	r5, [sp, #16]
 261:masked_fips202.c ****             Aga[i] ^= Da[i];
 1684              		.loc 1 261 20 discriminator 3 view .LVU524
 1685 08ca 44F8046C 		str	r6, [r4, #-4]
 1686              		.loc 1 262 13 is_stmt 1 discriminator 3 view .LVU525
 1687              		.loc 1 262 22 is_stmt 0 discriminator 3 view .LVU526
 1688 08ce 4BEA061B 		orr	fp, fp, r6, lsl #4
 1689 08d2 360F     		lsrs	r6, r6, #28
 1690 08d4 46EA0716 		orr	r6, r6, r7, lsl #4
 1691              		.loc 1 262 20 discriminator 3 view .LVU527
 1692 08d8 C5E900B6 		strd	fp, r6, [r5]
 263:masked_fips202.c ****             Ake[i] ^= De[i];
 1693              		.loc 1 263 25 discriminator 3 view .LVU528
 1694 08dc DAE90076 		ldrd	r7, r6, [r10]
 1695 08e0 0835     		adds	r5, r5, #8
 1696 08e2 0495     		str	r5, [sp, #16]
 1697              		.loc 1 263 13 is_stmt 1 discriminator 3 view .LVU529
 1698              		.loc 1 263 20 is_stmt 0 discriminator 3 view .LVU530
 1699 08e4 0568     		ldr	r5, [r0]
 1700 08e6 6F40     		eors	r7, r7, r5
 1701 08e8 4568     		ldr	r5, [r0, #4]
 1702 08ea 40F8087B 		str	r7, [r0], #8
 1703 08ee 85EA060B 		eor	fp, r5, r6
 264:masked_fips202.c ****             BCi[i] = ROL(Ake[i], 10);
 1704              		.loc 1 264 22 discriminator 3 view .LVU531
 1705 08f2 4FEA8B26 		lsl	r6, fp, #10
 1706 08f6 46EA9756 		orr	r6, r6, r7, lsr #22
 1707 08fa BF02     		lsls	r7, r7, #10
 1708 08fc 47EA9B57 		orr	r7, r7, fp, lsr #22
 1709              		.loc 1 264 20 discriminator 3 view .LVU532
 1710 0900 C9E90076 		strd	r7, r6, [r9]
 265:masked_fips202.c ****             Ami[i] ^= Di[i];
 1711              		.loc 1 265 25 discriminator 3 view .LVU533
 1712 0904 D8E90076 		ldrd	r7, r6, [r8]
 263:masked_fips202.c ****             Ake[i] ^= De[i];
 1713              		.loc 1 263 20 discriminator 3 view .LVU534
 1714 0908 40F804BC 		str	fp, [r0, #-4]
 264:masked_fips202.c ****             BCi[i] = ROL(Ake[i], 10);
 1715              		.loc 1 264 13 is_stmt 1 discriminator 3 view .LVU535
 1716              		.loc 1 265 20 is_stmt 0 discriminator 3 view .LVU536
 1717 090c 0D68     		ldr	r5, [r1]
 1718 090e 6F40     		eors	r7, r7, r5
 1719 0910 4D68     		ldr	r5, [r1, #4]
 1720 0912 41F8087B 		str	r7, [r1], #8
 1721 0916 85EA060B 		eor	fp, r5, r6
 266:masked_fips202.c ****             BCo[i] = ROL(Ami[i], 15);
 1722              		.loc 1 266 22 discriminator 3 view .LVU537
 1723 091a 4FEACB36 		lsl	r6, fp, #15
 1724              		.loc 1 266 20 discriminator 3 view .LVU538
 1725 091e 029D     		ldr	r5, [sp, #8]
 265:masked_fips202.c ****             Ami[i] ^= Di[i];
 1726              		.loc 1 265 20 discriminator 3 view .LVU539
 1727 0920 41F804BC 		str	fp, [r1, #-4]
 1728              		.loc 1 266 22 discriminator 3 view .LVU540
 1729 0924 46EA5746 		orr	r6, r6, r7, lsr #17
 1730 0928 FF03     		lsls	r7, r7, #15
 1731 092a 47EA5B47 		orr	r7, r7, fp, lsr #17
 1732              		.loc 1 266 20 discriminator 3 view .LVU541
 1733 092e C5E90076 		strd	r7, r6, [r5]
 267:masked_fips202.c ****             Aso[i] ^= Do[i];
 1734              		.loc 1 267 25 discriminator 3 view .LVU542
 1735 0932 DCE90076 		ldrd	r7, r6, [ip]
 1736 0936 0835     		adds	r5, r5, #8
 1737 0938 0295     		str	r5, [sp, #8]
 1738              		.loc 1 267 20 discriminator 3 view .LVU543
 1739 093a 1568     		ldr	r5, [r2]
 1740 093c 6F40     		eors	r7, r7, r5
 1741 093e 5568     		ldr	r5, [r2, #4]
 1742 0940 42F8087B 		str	r7, [r2], #8
 1743 0944 6E40     		eors	r6, r6, r5
 268:masked_fips202.c ****             BCu[i] = ROL(Aso[i], 56);
 1744              		.loc 1 268 22 discriminator 3 view .LVU544
 1745 0946 4FEA172B 		lsr	fp, r7, #8
 1746              		.loc 1 268 20 discriminator 3 view .LVU545
 1747 094a 019D     		ldr	r5, [sp, #4]
 267:masked_fips202.c ****             Aso[i] ^= Do[i];
 1748              		.loc 1 267 20 discriminator 3 view .LVU546
 1749 094c 42F8046C 		str	r6, [r2, #-4]
 1750              		.loc 1 268 22 discriminator 3 view .LVU547
 1751 0950 4BEA066B 		orr	fp, fp, r6, lsl #24
 1752 0954 360A     		lsrs	r6, r6, #8
 1753 0956 46EA0766 		orr	r6, r6, r7, lsl #24
 1754              		.loc 1 268 20 discriminator 3 view .LVU548
 1755 095a C5E900B6 		strd	fp, r6, [r5]
 1756 095e 0835     		adds	r5, r5, #8
 1757 0960 0195     		str	r5, [sp, #4]
 257:masked_fips202.c ****         {
 1758              		.loc 1 257 9 discriminator 3 view .LVU549
 1759 0962 089D     		ldr	r5, [sp, #32]
 1760 0964 9D42     		cmp	r5, r3
 1761 0966 0EF1080E 		add	lr, lr, #8
 1762 096a 0AF1080A 		add	r10, r10, #8
 1763 096e 09F10809 		add	r9, r9, #8
 265:masked_fips202.c ****             BCo[i] = ROL(Ami[i], 15);
 1764              		.loc 1 265 13 is_stmt 1 discriminator 3 view .LVU550
 266:masked_fips202.c ****             Aso[i] ^= Do[i];
 1765              		.loc 1 266 13 discriminator 3 view .LVU551
 267:masked_fips202.c ****             BCu[i] = ROL(Aso[i], 56);
 1766              		.loc 1 267 13 discriminator 3 view .LVU552
 1767              		.loc 1 268 13 discriminator 3 view .LVU553
 257:masked_fips202.c ****         {
 1768              		.loc 1 257 46 discriminator 3 view .LVU554
 257:masked_fips202.c ****         {
 1769              		.loc 1 257 21 discriminator 3 view .LVU555
 1770 0972 08F10808 		add	r8, r8, #8
 1771 0976 0CF1080C 		add	ip, ip, #8
 257:masked_fips202.c ****         {
 1772              		.loc 1 257 9 is_stmt 0 discriminator 3 view .LVU556
 1773 097a 81D1     		bne	.L21
 269:masked_fips202.c ****         }
 270:masked_fips202.c ****         not_mult_xor(Ema, BCe, BCi, BCa);
 1774              		.loc 1 270 9 is_stmt 1 view .LVU557
 1775 097c C6AB     		add	r3, sp, #792
 1776 097e D2AA     		add	r2, sp, #840
 1777 0980 CCA9     		add	r1, sp, #816
 1778 0982 0DF5AE60 		add	r0, sp, #1392
 1779 0986 FFF7FEFF 		bl	not_mult_xor
 1780              	.LVL58:
 271:masked_fips202.c ****         not_mult_xor(Eme, BCi, BCo, BCe);
 1781              		.loc 1 271 9 view .LVU558
 1782 098a CCAB     		add	r3, sp, #816
 1783 098c D8AA     		add	r2, sp, #864
 1784 098e D2A9     		add	r1, sp, #840
 1785 0990 0DF5B160 		add	r0, sp, #1416
 1786 0994 FFF7FEFF 		bl	not_mult_xor
 1787              	.LVL59:
 272:masked_fips202.c ****         not_mult_xor(Emi, BCo, BCu, BCi);
 1788              		.loc 1 272 9 view .LVU559
 1789 0998 D2AB     		add	r3, sp, #840
 1790 099a DEAA     		add	r2, sp, #888
 1791 099c D8A9     		add	r1, sp, #864
 1792 099e 0DF5B460 		add	r0, sp, #1440
 1793 09a2 FFF7FEFF 		bl	not_mult_xor
 1794              	.LVL60:
 273:masked_fips202.c ****         not_mult_xor(Emo, BCu, BCa, BCo);
 1795              		.loc 1 273 9 view .LVU560
 1796 09a6 D8AB     		add	r3, sp, #864
 1797 09a8 C6AA     		add	r2, sp, #792
 1798 09aa DEA9     		add	r1, sp, #888
 1799 09ac 0DF5B760 		add	r0, sp, #1464
 1800 09b0 FFF7FEFF 		bl	not_mult_xor
 1801              	.LVL61:
 274:masked_fips202.c ****         not_mult_xor(Emu, BCa, BCe, BCu);
 1802              		.loc 1 274 9 view .LVU561
 1803 09b4 DEAB     		add	r3, sp, #888
 1804 09b6 CCAA     		add	r2, sp, #816
 1805 09b8 C6A9     		add	r1, sp, #792
 1806 09ba 0DF5BA60 		add	r0, sp, #1488
 1807 09be FFF7FEFF 		bl	not_mult_xor
 1808              	.LVL62:
 275:masked_fips202.c ****         //Ema = BCa ^ ((~BCe) & BCi);
 276:masked_fips202.c ****         //Eme = BCe ^ ((~BCi) & BCo);
 277:masked_fips202.c ****         //Emi = BCi ^ ((~BCo) & BCu);
 278:masked_fips202.c ****         //Emo = BCo ^ ((~BCu) & BCa);
 279:masked_fips202.c ****         //Emu = BCu ^ ((~BCa) & BCe);
 280:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 1809              		.loc 1 280 9 view .LVU562
 1810              		.loc 1 280 21 view .LVU563
 1811 09c2 0D9B     		ldr	r3, [sp, #52]
 1812 09c4 1833     		adds	r3, r3, #24
 1813 09c6 0793     		str	r3, [sp, #28]
 274:masked_fips202.c ****         not_mult_xor(Emu, BCa, BCe, BCu);
 1814              		.loc 1 274 9 is_stmt 0 view .LVU564
 1815 09c8 DEAB     		add	r3, sp, #888
 1816 09ca 0193     		str	r3, [sp, #4]
 1817 09cc D8AB     		add	r3, sp, #864
 1818 09ce 0293     		str	r3, [sp, #8]
 1819 09d0 C6AB     		add	r3, sp, #792
 1820 09d2 F6AC     		add	r4, sp, #984
 1821 09d4 0693     		str	r3, [sp, #24]
 1822 09d6 0D9B     		ldr	r3, [sp, #52]
 1823 09d8 0494     		str	r4, [sp, #16]
 1824 09da 60A8     		add	r0, sp, #384
 1825 09dc 84A9     		add	r1, sp, #528
 1826 09de AEAA     		add	r2, sp, #696
 1827 09e0 EAAD     		add	r5, sp, #936
 1828 09e2 0DF5647E 		add	lr, sp, #912
 1829 09e6 0DF55278 		add	r8, sp, #840
 1830 09ea 0DF57C79 		add	r9, sp, #1008
 1831 09ee 0DF54C7A 		add	r10, sp, #816
 1832 09f2 0DF5707C 		add	ip, sp, #960
 1833              	.LVL63:
 1834              	.L22:
 281:masked_fips202.c ****         {
 282:masked_fips202.c ****             Abi[i] ^= Di[i];
 1835              		.loc 1 282 13 is_stmt 1 discriminator 3 view .LVU565
 1836              		.loc 1 282 25 is_stmt 0 discriminator 3 view .LVU566
 1837 09f6 DCE90076 		ldrd	r7, r6, [ip]
 1838              		.loc 1 282 20 discriminator 3 view .LVU567
 1839 09fa 1C68     		ldr	r4, [r3]
 1840 09fc 6740     		eors	r7, r7, r4
 1841 09fe 5C68     		ldr	r4, [r3, #4]
 1842 0a00 43F8087B 		str	r7, [r3], #8
 1843 0a04 6640     		eors	r6, r6, r4
 283:masked_fips202.c ****             BCa[i] = ROL(Abi[i], 62);
 1844              		.loc 1 283 22 discriminator 3 view .LVU568
 1845 0a06 4FEA970B 		lsr	fp, r7, #2
 1846              		.loc 1 283 20 discriminator 3 view .LVU569
 1847 0a0a 069C     		ldr	r4, [sp, #24]
 282:masked_fips202.c ****             BCa[i] = ROL(Abi[i], 62);
 1848              		.loc 1 282 20 discriminator 3 view .LVU570
 1849 0a0c 43F8046C 		str	r6, [r3, #-4]
 1850              		.loc 1 283 13 is_stmt 1 discriminator 3 view .LVU571
 1851              		.loc 1 283 22 is_stmt 0 discriminator 3 view .LVU572
 1852 0a10 4BEA867B 		orr	fp, fp, r6, lsl #30
 1853 0a14 B608     		lsrs	r6, r6, #2
 1854 0a16 46EA8776 		orr	r6, r6, r7, lsl #30
 1855              		.loc 1 283 20 discriminator 3 view .LVU573
 1856 0a1a C4E900B6 		strd	fp, r6, [r4]
 1857 0a1e 0834     		adds	r4, r4, #8
 1858 0a20 0694     		str	r4, [sp, #24]
 284:masked_fips202.c ****             Ago[i] ^= Do[i];
 1859              		.loc 1 284 13 is_stmt 1 discriminator 3 view .LVU574
 1860              		.loc 1 284 25 is_stmt 0 discriminator 3 view .LVU575
 1861 0a22 049C     		ldr	r4, [sp, #16]
 1862 0a24 D4E90076 		ldrd	r7, r6, [r4]
 1863 0a28 0834     		adds	r4, r4, #8
 1864 0a2a 0494     		str	r4, [sp, #16]
 1865              		.loc 1 284 20 discriminator 3 view .LVU576
 1866 0a2c 0468     		ldr	r4, [r0]
 1867 0a2e 6740     		eors	r7, r7, r4
 1868 0a30 4468     		ldr	r4, [r0, #4]
 1869 0a32 40F8087B 		str	r7, [r0], #8
 1870 0a36 6640     		eors	r6, r6, r4
 285:masked_fips202.c ****             BCe[i] = ROL(Ago[i], 55);
 1871              		.loc 1 285 22 discriminator 3 view .LVU577
 1872 0a38 4FEA572B 		lsr	fp, r7, #9
 1873 0a3c 4BEAC65B 		orr	fp, fp, r6, lsl #23
 284:masked_fips202.c ****             Ago[i] ^= Do[i];
 1874              		.loc 1 284 20 discriminator 3 view .LVU578
 1875 0a40 40F8046C 		str	r6, [r0, #-4]
 1876              		.loc 1 285 13 is_stmt 1 discriminator 3 view .LVU579
 1877              		.loc 1 285 22 is_stmt 0 discriminator 3 view .LVU580
 1878 0a44 760A     		lsrs	r6, r6, #9
 1879 0a46 46EAC756 		orr	r6, r6, r7, lsl #23
 1880              		.loc 1 285 20 discriminator 3 view .LVU581
 1881 0a4a CAE900B6 		strd	fp, r6, [r10]
 286:masked_fips202.c ****             Aku[i] ^= Du[i];
 1882              		.loc 1 286 25 discriminator 3 view .LVU582
 1883 0a4e D9E90076 		ldrd	r7, r6, [r9]
 1884              		.loc 1 286 20 discriminator 3 view .LVU583
 1885 0a52 0C68     		ldr	r4, [r1]
 1886 0a54 6740     		eors	r7, r7, r4
 1887 0a56 4C68     		ldr	r4, [r1, #4]
 1888 0a58 41F8087B 		str	r7, [r1], #8
 1889 0a5c 6640     		eors	r6, r6, r4
 287:masked_fips202.c ****             BCi[i] = ROL(Aku[i], 39);
 288:masked_fips202.c ****             Ama[i] ^= Da[i];
 1890              		.loc 1 288 20 discriminator 3 view .LVU584
 1891 0a5e 039C     		ldr	r4, [sp, #12]
 286:masked_fips202.c ****             Aku[i] ^= Du[i];
 1892              		.loc 1 286 20 discriminator 3 view .LVU585
 1893 0a60 41F8046C 		str	r6, [r1, #-4]
 1894              		.loc 1 288 20 discriminator 3 view .LVU586
 1895 0a64 2468     		ldr	r4, [r4]
 1896 0a66 0894     		str	r4, [sp, #32]
 287:masked_fips202.c ****             BCi[i] = ROL(Aku[i], 39);
 1897              		.loc 1 287 22 discriminator 3 view .LVU587
 1898 0a68 4FEA576B 		lsr	fp, r7, #25
 1899 0a6c 4BEAC61B 		orr	fp, fp, r6, lsl #7
 1900              		.loc 1 288 20 discriminator 3 view .LVU588
 1901 0a70 039C     		ldr	r4, [sp, #12]
 287:masked_fips202.c ****             BCi[i] = ROL(Aku[i], 39);
 1902              		.loc 1 287 22 discriminator 3 view .LVU589
 1903 0a72 760E     		lsrs	r6, r6, #25
 1904 0a74 46EAC716 		orr	r6, r6, r7, lsl #7
 287:masked_fips202.c ****             BCi[i] = ROL(Aku[i], 39);
 1905              		.loc 1 287 20 discriminator 3 view .LVU590
 1906 0a78 C8E900B6 		strd	fp, r6, [r8]
 1907              		.loc 1 288 20 discriminator 3 view .LVU591
 1908 0a7c 6468     		ldr	r4, [r4, #4]
 1909 0a7e 0994     		str	r4, [sp, #36]
 1910              		.loc 1 288 25 discriminator 3 view .LVU592
 1911 0a80 DEE90076 		ldrd	r7, r6, [lr]
 1912              		.loc 1 288 20 discriminator 3 view .LVU593
 1913 0a84 089C     		ldr	r4, [sp, #32]
 1914 0a86 6740     		eors	r7, r7, r4
 1915 0a88 099C     		ldr	r4, [sp, #36]
 1916 0a8a 6640     		eors	r6, r6, r4
 1917 0a8c 039C     		ldr	r4, [sp, #12]
 1918 0a8e 44F8087B 		str	r7, [r4], #8
 289:masked_fips202.c ****             BCo[i] = ROL(Ama[i], 41);
 1919              		.loc 1 289 22 discriminator 3 view .LVU594
 1920 0a92 4FEAD75B 		lsr	fp, r7, #23
 1921 0a96 4BEA462B 		orr	fp, fp, r6, lsl #9
 288:masked_fips202.c ****             BCo[i] = ROL(Ama[i], 41);
 1922              		.loc 1 288 20 discriminator 3 view .LVU595
 1923 0a9a 44F8046C 		str	r6, [r4, #-4]
 1924 0a9e 0394     		str	r4, [sp, #12]
 1925              		.loc 1 289 22 discriminator 3 view .LVU596
 1926 0aa0 F60D     		lsrs	r6, r6, #23
 1927              		.loc 1 289 20 discriminator 3 view .LVU597
 1928 0aa2 029C     		ldr	r4, [sp, #8]
 1929              		.loc 1 289 22 discriminator 3 view .LVU598
 1930 0aa4 46EA4726 		orr	r6, r6, r7, lsl #9
 1931              		.loc 1 289 20 discriminator 3 view .LVU599
 1932 0aa8 C4E900B6 		strd	fp, r6, [r4]
 290:masked_fips202.c ****             Ase[i] ^= De[i];
 1933              		.loc 1 290 25 discriminator 3 view .LVU600
 1934 0aac D5E90076 		ldrd	r7, r6, [r5]
 1935 0ab0 0834     		adds	r4, r4, #8
 1936 0ab2 0294     		str	r4, [sp, #8]
 1937              		.loc 1 290 20 discriminator 3 view .LVU601
 1938 0ab4 1468     		ldr	r4, [r2]
 1939 0ab6 6740     		eors	r7, r7, r4
 1940 0ab8 5468     		ldr	r4, [r2, #4]
 1941 0aba 42F8087B 		str	r7, [r2], #8
 1942 0abe 84EA060B 		eor	fp, r4, r6
 291:masked_fips202.c ****             BCu[i] = ROL(Ase[i], 2);
 1943              		.loc 1 291 22 discriminator 3 view .LVU602
 1944 0ac2 4FEA8B06 		lsl	r6, fp, #2
 1945              		.loc 1 291 20 discriminator 3 view .LVU603
 1946 0ac6 019C     		ldr	r4, [sp, #4]
 290:masked_fips202.c ****             Ase[i] ^= De[i];
 1947              		.loc 1 290 20 discriminator 3 view .LVU604
 1948 0ac8 42F804BC 		str	fp, [r2, #-4]
 1949              		.loc 1 291 22 discriminator 3 view .LVU605
 1950 0acc 46EA9776 		orr	r6, r6, r7, lsr #30
 1951 0ad0 BF00     		lsls	r7, r7, #2
 1952 0ad2 47EA9B77 		orr	r7, r7, fp, lsr #30
 1953              		.loc 1 291 20 discriminator 3 view .LVU606
 1954 0ad6 C4E90076 		strd	r7, r6, [r4]
 1955 0ada 0834     		adds	r4, r4, #8
 1956 0adc 0194     		str	r4, [sp, #4]
 280:masked_fips202.c ****         {
 1957              		.loc 1 280 9 discriminator 3 view .LVU607
 1958 0ade 079C     		ldr	r4, [sp, #28]
 1959 0ae0 9C42     		cmp	r4, r3
 1960 0ae2 0CF1080C 		add	ip, ip, #8
 1961 0ae6 0AF1080A 		add	r10, r10, #8
 286:masked_fips202.c ****             BCi[i] = ROL(Aku[i], 39);
 1962              		.loc 1 286 13 is_stmt 1 discriminator 3 view .LVU608
 287:masked_fips202.c ****             Ama[i] ^= Da[i];
 1963              		.loc 1 287 13 discriminator 3 view .LVU609
 1964 0aea 09F10809 		add	r9, r9, #8
 1965 0aee 08F10808 		add	r8, r8, #8
 288:masked_fips202.c ****             BCo[i] = ROL(Ama[i], 41);
 1966              		.loc 1 288 13 discriminator 3 view .LVU610
 289:masked_fips202.c ****             Ase[i] ^= De[i];
 1967              		.loc 1 289 13 discriminator 3 view .LVU611
 290:masked_fips202.c ****             BCu[i] = ROL(Ase[i], 2);
 1968              		.loc 1 290 13 discriminator 3 view .LVU612
 1969              		.loc 1 291 13 discriminator 3 view .LVU613
 280:masked_fips202.c ****         {
 1970              		.loc 1 280 46 discriminator 3 view .LVU614
 280:masked_fips202.c ****         {
 1971              		.loc 1 280 21 discriminator 3 view .LVU615
 1972 0af2 0EF1080E 		add	lr, lr, #8
 1973 0af6 05F10805 		add	r5, r5, #8
 280:masked_fips202.c ****         {
 1974              		.loc 1 280 9 is_stmt 0 discriminator 3 view .LVU616
 1975 0afa 7FF47CAF 		bne	.L22
 292:masked_fips202.c ****         }
 293:masked_fips202.c ****         not_mult_xor(Esa, BCe, BCi, BCa);
 1976              		.loc 1 293 9 is_stmt 1 view .LVU617
 1977 0afe C6AB     		add	r3, sp, #792
 1978 0b00 D2AA     		add	r2, sp, #840
 1979 0b02 CCA9     		add	r1, sp, #816
 1980 0b04 0DF5BD60 		add	r0, sp, #1512
 294:masked_fips202.c ****         not_mult_xor(Ese, BCi, BCo, BCe);
 1981              		.loc 1 294 9 is_stmt 0 view .LVU618
 1982 0b08 0DF5C065 		add	r5, sp, #1536
 293:masked_fips202.c ****         not_mult_xor(Ese, BCi, BCo, BCe);
 1983              		.loc 1 293 9 view .LVU619
 1984 0b0c FFF7FEFF 		bl	not_mult_xor
 1985              	.LVL64:
 1986              		.loc 1 294 9 is_stmt 1 view .LVU620
 295:masked_fips202.c ****         not_mult_xor(Esi, BCo, BCu, BCi);
 1987              		.loc 1 295 9 is_stmt 0 view .LVU621
 1988 0b10 0DF5C364 		add	r4, sp, #1560
 294:masked_fips202.c ****         not_mult_xor(Ese, BCi, BCo, BCe);
 1989              		.loc 1 294 9 view .LVU622
 1990 0b14 CCAB     		add	r3, sp, #816
 1991 0b16 D8AA     		add	r2, sp, #864
 1992 0b18 D2A9     		add	r1, sp, #840
 1993 0b1a 2846     		mov	r0, r5
 1994 0b1c FFF7FEFF 		bl	not_mult_xor
 1995              	.LVL65:
 1996              		.loc 1 295 9 is_stmt 1 view .LVU623
 1997 0b20 D2AB     		add	r3, sp, #840
 1998 0b22 DEAA     		add	r2, sp, #888
 1999 0b24 D8A9     		add	r1, sp, #864
 2000 0b26 2046     		mov	r0, r4
 2001 0b28 FFF7FEFF 		bl	not_mult_xor
 2002              	.LVL66:
 296:masked_fips202.c ****         not_mult_xor(Eso, BCu, BCa, BCo);
 2003              		.loc 1 296 9 view .LVU624
 2004 0b2c D8AB     		add	r3, sp, #864
 2005 0b2e C6AA     		add	r2, sp, #792
 2006 0b30 DEA9     		add	r1, sp, #888
 2007 0b32 0DF5C660 		add	r0, sp, #1584
 2008 0b36 FFF7FEFF 		bl	not_mult_xor
 2009              	.LVL67:
 297:masked_fips202.c ****         not_mult_xor(Esu, BCa, BCe, BCu);
 2010              		.loc 1 297 9 view .LVU625
 2011 0b3a DEAB     		add	r3, sp, #888
 2012 0b3c CCAA     		add	r2, sp, #816
 2013 0b3e C6A9     		add	r1, sp, #792
 2014 0b40 0DF5C960 		add	r0, sp, #1608
 2015 0b44 FFF7FEFF 		bl	not_mult_xor
 2016              	.LVL68:
 298:masked_fips202.c ****         //Esa = BCa ^ ((~BCe) & BCi);
 299:masked_fips202.c ****         //Ese = BCe ^ ((~BCi) & BCo);
 300:masked_fips202.c ****         //Esi = BCi ^ ((~BCo) & BCu);
 301:masked_fips202.c ****         //Eso = BCo ^ ((~BCu) & BCa);
 302:masked_fips202.c ****         //Esu = BCu ^ ((~BCa) & BCe);
 303:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 2017              		.loc 1 303 9 view .LVU626
 2018              		.loc 1 303 21 view .LVU627
 2019 0b48 0DF58163 		add	r3, sp, #1032
 2020 0b4c 0993     		str	r3, [sp, #36]
 2021 0b4e 0DF59063 		add	r3, sp, #1152
 2022 0b52 0393     		str	r3, [sp, #12]
 2023 0b54 0DF59F63 		add	r3, sp, #1272
 2024 0b58 0193     		str	r3, [sp, #4]
 2025 0b5a 0DF5AE63 		add	r3, sp, #1392
 2026 0b5e 0493     		str	r3, [sp, #16]
 2027 0b60 0DF5BD63 		add	r3, sp, #1512
 2028 0b64 0293     		str	r3, [sp, #8]
 2029 0b66 0DF59363 		add	r3, sp, #1176
 2030 0b6a 0893     		str	r3, [sp, #32]
 2031 0b6c 0DF5A563 		add	r3, sp, #1320
 2032 0b70 0793     		str	r3, [sp, #28]
 2033 0b72 0DF5C963 		add	r3, sp, #1608
 2034 0b76 0693     		str	r3, [sp, #24]
 297:masked_fips202.c ****         not_mult_xor(Esu, BCa, BCe, BCu);
 2035              		.loc 1 297 9 is_stmt 0 view .LVU628
 2036 0b78 029B     		ldr	r3, [sp, #8]
 2037 0b7a 0F93     		str	r3, [sp, #60]
 2038 0b7c 049B     		ldr	r3, [sp, #16]
 2039 0b7e 1093     		str	r3, [sp, #64]
 2040 0b80 019B     		ldr	r3, [sp, #4]
 2041 0b82 1193     		str	r3, [sp, #68]
 2042 0b84 039B     		ldr	r3, [sp, #12]
 2043 0b86 1293     		str	r3, [sp, #72]
 2044 0b88 0DF5B76B 		add	fp, sp, #1464
 2045 0b8c 0023     		movs	r3, #0
 304:masked_fips202.c ****         {
 305:masked_fips202.c ****             //    prepareTheta
 306:masked_fips202.c ****             BCa[i] = Eba[i] ^ Ega[i] ^ Eka[i] ^ Ema[i] ^ Esa[i];
 307:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2046              		.loc 1 307 61 view .LVU629
 2047 0b8e 2695     		str	r5, [sp, #152]
 308:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2048              		.loc 1 308 61 view .LVU630
 2049 0b90 2194     		str	r4, [sp, #132]
 2050              	.LVL69:
 2051              	.L23:
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2052              		.loc 1 306 13 is_stmt 1 discriminator 3 view .LVU631
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2053              		.loc 1 306 25 is_stmt 0 discriminator 3 view .LVU632
 2054 0b92 099A     		ldr	r2, [sp, #36]
 2055 0b94 1268     		ldr	r2, [r2]
 2056 0b96 2792     		str	r2, [sp, #156]
 2057 0b98 099A     		ldr	r2, [sp, #36]
 2058 0b9a 5268     		ldr	r2, [r2, #4]
 2059 0b9c 2892     		str	r2, [sp, #160]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2060              		.loc 1 306 34 discriminator 3 view .LVU633
 2061 0b9e 129A     		ldr	r2, [sp, #72]
 2062 0ba0 D2E9001E 		ldrd	r1, lr, [r2]
 2063 0ba4 0832     		adds	r2, r2, #8
 2064 0ba6 1292     		str	r2, [sp, #72]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2065              		.loc 1 306 43 discriminator 3 view .LVU634
 2066 0ba8 119A     		ldr	r2, [sp, #68]
 2067 0baa D2E900C6 		ldrd	ip, r6, [r2]
 2068 0bae 0832     		adds	r2, r2, #8
 2069 0bb0 1192     		str	r2, [sp, #68]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2070              		.loc 1 306 52 discriminator 3 view .LVU635
 2071 0bb2 109A     		ldr	r2, [sp, #64]
 2072 0bb4 D2E90075 		ldrd	r7, r5, [r2]
 2073 0bb8 0832     		adds	r2, r2, #8
 2074 0bba 1092     		str	r2, [sp, #64]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2075              		.loc 1 306 61 discriminator 3 view .LVU636
 2076 0bbc 0F9A     		ldr	r2, [sp, #60]
 2077 0bbe D2E90040 		ldrd	r4, r0, [r2]
 2078 0bc2 0832     		adds	r2, r2, #8
 2079 0bc4 0F92     		str	r2, [sp, #60]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2080              		.loc 1 306 29 discriminator 3 view .LVU637
 2081 0bc6 279A     		ldr	r2, [sp, #156]
 2082 0bc8 5140     		eors	r1, r1, r2
 2083 0bca 289A     		ldr	r2, [sp, #160]
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2084              		.loc 1 306 38 discriminator 3 view .LVU638
 2085 0bcc 81EA0C01 		eor	r1, r1, ip
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2086              		.loc 1 306 29 discriminator 3 view .LVU639
 2087 0bd0 8EEA0202 		eor	r2, lr, r2
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2088              		.loc 1 306 47 discriminator 3 view .LVU640
 2089 0bd4 7940     		eors	r1, r1, r7
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2090              		.loc 1 306 38 discriminator 3 view .LVU641
 2091 0bd6 7240     		eors	r2, r2, r6
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2092              		.loc 1 306 47 discriminator 3 view .LVU642
 2093 0bd8 82EA0506 		eor	r6, r2, r5
 306:masked_fips202.c ****             BCe[i] = Ebe[i] ^ Ege[i] ^ Eke[i] ^ Eme[i] ^ Ese[i];
 2094              		.loc 1 306 56 discriminator 3 view .LVU643
 2095 0bdc 81EA0402 		eor	r2, r1, r4
 2096 0be0 2292     		str	r2, [sp, #136]
 2097 0be2 86EA0002 		eor	r2, r6, r0
 2098 0be6 2392     		str	r2, [sp, #140]
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2099              		.loc 1 307 13 is_stmt 1 discriminator 3 view .LVU644
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2100              		.loc 1 307 34 is_stmt 0 discriminator 3 view .LVU645
 2101 0be8 089A     		ldr	r2, [sp, #32]
 2102 0bea 1268     		ldr	r2, [r2]
 2103 0bec 2992     		str	r2, [sp, #164]
 2104 0bee 089A     		ldr	r2, [sp, #32]
 2105 0bf0 5268     		ldr	r2, [r2, #4]
 2106 0bf2 2A92     		str	r2, [sp, #168]
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2107              		.loc 1 307 25 discriminator 3 view .LVU646
 2108 0bf4 0DF58462 		add	r2, sp, #1056
 2109 0bf8 1A44     		add	r2, r2, r3
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2110              		.loc 1 307 29 discriminator 3 view .LVU647
 2111 0bfa 0DF58461 		add	r1, sp, #1056
 2112 0bfe CF58     		ldr	r7, [r1, r3]
 2113 0c00 5168     		ldr	r1, [r2, #4]
 2114 0c02 299A     		ldr	r2, [sp, #164]
 2115 0c04 5740     		eors	r7, r7, r2
 2116 0c06 2A9A     		ldr	r2, [sp, #168]
 2117 0c08 5140     		eors	r1, r1, r2
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2118              		.loc 1 307 43 discriminator 3 view .LVU648
 2119 0c0a 0DF5A262 		add	r2, sp, #1296
 2120 0c0e D018     		adds	r0, r2, r3
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2121              		.loc 1 307 38 discriminator 3 view .LVU649
 2122 0c10 D258     		ldr	r2, [r2, r3]
 2123 0c12 4068     		ldr	r0, [r0, #4]
 2124 0c14 5740     		eors	r7, r7, r2
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2125              		.loc 1 307 52 discriminator 3 view .LVU650
 2126 0c16 0DF5B162 		add	r2, sp, #1416
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2127              		.loc 1 307 38 discriminator 3 view .LVU651
 2128 0c1a 4140     		eors	r1, r1, r0
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2129              		.loc 1 307 52 discriminator 3 view .LVU652
 2130 0c1c D018     		adds	r0, r2, r3
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2131              		.loc 1 307 47 discriminator 3 view .LVU653
 2132 0c1e D258     		ldr	r2, [r2, r3]
 2133 0c20 4068     		ldr	r0, [r0, #4]
 2134 0c22 5740     		eors	r7, r7, r2
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2135              		.loc 1 307 61 discriminator 3 view .LVU654
 2136 0c24 269A     		ldr	r2, [sp, #152]
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2137              		.loc 1 307 47 discriminator 3 view .LVU655
 2138 0c26 4140     		eors	r1, r1, r0
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2139              		.loc 1 307 61 discriminator 3 view .LVU656
 2140 0c28 D018     		adds	r0, r2, r3
 307:masked_fips202.c ****             BCi[i] = Ebi[i] ^ Egi[i] ^ Eki[i] ^ Emi[i] ^ Esi[i];
 2141              		.loc 1 307 56 discriminator 3 view .LVU657
 2142 0c2a D258     		ldr	r2, [r2, r3]
 2143 0c2c 4068     		ldr	r0, [r0, #4]
 2144 0c2e 87EA020A 		eor	r10, r7, r2
 2145 0c32 81EA0002 		eor	r2, r1, r0
 2146 0c36 2492     		str	r2, [sp, #144]
 2147              		.loc 1 308 13 is_stmt 1 discriminator 3 view .LVU658
 2148              		.loc 1 308 43 is_stmt 0 discriminator 3 view .LVU659
 2149 0c38 079A     		ldr	r2, [sp, #28]
 2150 0c3a 1268     		ldr	r2, [r2]
 2151 0c3c 2B92     		str	r2, [sp, #172]
 2152 0c3e 079A     		ldr	r2, [sp, #28]
 2153              		.loc 1 308 29 discriminator 3 view .LVU660
 2154 0c40 0DF58760 		add	r0, sp, #1080
 2155              		.loc 1 308 43 discriminator 3 view .LVU661
 2156 0c44 5268     		ldr	r2, [r2, #4]
 2157 0c46 2C92     		str	r2, [sp, #176]
 2158              		.loc 1 308 25 discriminator 3 view .LVU662
 2159 0c48 0DF58762 		add	r2, sp, #1080
 2160              		.loc 1 308 29 discriminator 3 view .LVU663
 2161 0c4c C458     		ldr	r4, [r0, r3]
 2162              		.loc 1 308 25 discriminator 3 view .LVU664
 2163 0c4e D118     		adds	r1, r2, r3
 2164              		.loc 1 308 29 discriminator 3 view .LVU665
 2165 0c50 0DF59660 		add	r0, sp, #1200
 2166              		.loc 1 308 34 discriminator 3 view .LVU666
 2167 0c54 0DF59662 		add	r2, sp, #1200
 2168 0c58 1A44     		add	r2, r2, r3
 2169              		.loc 1 308 29 discriminator 3 view .LVU667
 2170 0c5a C558     		ldr	r5, [r0, r3]
 2171 0c5c 5068     		ldr	r0, [r2, #4]
 2172              		.loc 1 308 38 discriminator 3 view .LVU668
 2173 0c5e 2B9A     		ldr	r2, [sp, #172]
 2174              		.loc 1 308 29 discriminator 3 view .LVU669
 2175 0c60 4968     		ldr	r1, [r1, #4]
 2176 0c62 6540     		eors	r5, r5, r4
 2177              		.loc 1 308 38 discriminator 3 view .LVU670
 2178 0c64 5540     		eors	r5, r5, r2
 2179 0c66 2C9A     		ldr	r2, [sp, #176]
 2180              		.loc 1 308 29 discriminator 3 view .LVU671
 2181 0c68 4140     		eors	r1, r1, r0
 2182              		.loc 1 308 38 discriminator 3 view .LVU672
 2183 0c6a 5140     		eors	r1, r1, r2
 2184              		.loc 1 308 52 discriminator 3 view .LVU673
 2185 0c6c 0DF5B462 		add	r2, sp, #1440
 2186 0c70 D018     		adds	r0, r2, r3
 2187              		.loc 1 308 47 discriminator 3 view .LVU674
 2188 0c72 D258     		ldr	r2, [r2, r3]
 2189 0c74 4068     		ldr	r0, [r0, #4]
 2190 0c76 5540     		eors	r5, r5, r2
 2191              		.loc 1 308 61 discriminator 3 view .LVU675
 2192 0c78 219A     		ldr	r2, [sp, #132]
 2193              		.loc 1 308 47 discriminator 3 view .LVU676
 2194 0c7a 4140     		eors	r1, r1, r0
 2195              		.loc 1 308 61 discriminator 3 view .LVU677
 2196 0c7c D018     		adds	r0, r2, r3
 2197              		.loc 1 308 56 discriminator 3 view .LVU678
 2198 0c7e D258     		ldr	r2, [r2, r3]
 2199 0c80 4068     		ldr	r0, [r0, #4]
 2200 0c82 5540     		eors	r5, r5, r2
 2201 0c84 81EA0002 		eor	r2, r1, r0
 2202 0c88 2592     		str	r2, [sp, #148]
 309:masked_fips202.c ****             BCo[i] = Ebo[i] ^ Ego[i] ^ Eko[i] ^ Emo[i] ^ Eso[i];
 2203              		.loc 1 309 13 is_stmt 1 discriminator 3 view .LVU679
 2204              		.loc 1 309 34 is_stmt 0 discriminator 3 view .LVU680
 2205 0c8a 0DF59960 		add	r0, sp, #1224
 2206              		.loc 1 309 25 discriminator 3 view .LVU681
 2207 0c8e 0DF58A62 		add	r2, sp, #1104
 2208 0c92 D418     		adds	r4, r2, r3
 2209              		.loc 1 309 34 discriminator 3 view .LVU682
 2210 0c94 C118     		adds	r1, r0, r3
 2211              		.loc 1 309 29 discriminator 3 view .LVU683
 2212 0c96 D258     		ldr	r2, [r2, r3]
 2213 0c98 6468     		ldr	r4, [r4, #4]
 2214 0c9a C058     		ldr	r0, [r0, r3]
 2215 0c9c 4968     		ldr	r1, [r1, #4]
 2216 0c9e 4C40     		eors	r4, r4, r1
 2217              		.loc 1 309 43 discriminator 3 view .LVU684
 2218 0ca0 0DF5A861 		add	r1, sp, #1344
 2219              		.loc 1 309 29 discriminator 3 view .LVU685
 2220 0ca4 4240     		eors	r2, r2, r0
 2221              		.loc 1 309 43 discriminator 3 view .LVU686
 2222 0ca6 C818     		adds	r0, r1, r3
 2223              		.loc 1 309 38 discriminator 3 view .LVU687
 2224 0ca8 C958     		ldr	r1, [r1, r3]
 2225 0caa 4068     		ldr	r0, [r0, #4]
 2226 0cac 82EA0108 		eor	r8, r2, r1
 2227              		.loc 1 309 47 discriminator 3 view .LVU688
 2228 0cb0 DBF80020 		ldr	r2, [fp]
 2229 0cb4 88EA0208 		eor	r8, r8, r2
 2230 0cb8 DBF80420 		ldr	r2, [fp, #4]
 2231              		.loc 1 309 38 discriminator 3 view .LVU689
 2232 0cbc 4440     		eors	r4, r4, r0
 2233              		.loc 1 309 61 discriminator 3 view .LVU690
 2234 0cbe 0DF5C661 		add	r1, sp, #1584
 2235              		.loc 1 309 47 discriminator 3 view .LVU691
 2236 0cc2 5440     		eors	r4, r4, r2
 2237              		.loc 1 309 61 discriminator 3 view .LVU692
 2238 0cc4 CA18     		adds	r2, r1, r3
 2239              		.loc 1 309 56 discriminator 3 view .LVU693
 2240 0cc6 C958     		ldr	r1, [r1, r3]
 2241 0cc8 5268     		ldr	r2, [r2, #4]
 2242 0cca 5440     		eors	r4, r4, r2
 310:masked_fips202.c ****             BCu[i] = Ebu[i] ^ Egu[i] ^ Eku[i] ^ Emu[i] ^ Esu[i];
 2243              		.loc 1 310 13 is_stmt 1 discriminator 3 view .LVU694
 2244              		.loc 1 310 61 is_stmt 0 discriminator 3 view .LVU695
 2245 0ccc 069A     		ldr	r2, [sp, #24]
 2246 0cce 1268     		ldr	r2, [r2]
 2247 0cd0 2D92     		str	r2, [sp, #180]
 2248 0cd2 069A     		ldr	r2, [sp, #24]
 2249 0cd4 5268     		ldr	r2, [r2, #4]
 2250 0cd6 2E92     		str	r2, [sp, #184]
 2251              		.loc 1 310 25 discriminator 3 view .LVU696
 2252 0cd8 0DF58D62 		add	r2, sp, #1128
 2253 0cdc 1A44     		add	r2, r2, r3
 309:masked_fips202.c ****             BCo[i] = Ebo[i] ^ Ego[i] ^ Eko[i] ^ Emo[i] ^ Eso[i];
 2254              		.loc 1 309 56 discriminator 3 view .LVU697
 2255 0cde 88EA0108 		eor	r8, r8, r1
 2256              		.loc 1 310 29 discriminator 3 view .LVU698
 2257 0ce2 5668     		ldr	r6, [r2, #4]
 2258              		.loc 1 310 34 discriminator 3 view .LVU699
 2259 0ce4 0DF59C61 		add	r1, sp, #1248
 2260              		.loc 1 310 29 discriminator 3 view .LVU700
 2261 0ce8 0DF58D60 		add	r0, sp, #1128
 2262 0cec 0DF59C62 		add	r2, sp, #1248
 2263              		.loc 1 310 34 discriminator 3 view .LVU701
 2264 0cf0 1944     		add	r1, r1, r3
 2265              		.loc 1 310 29 discriminator 3 view .LVU702
 2266 0cf2 C058     		ldr	r0, [r0, r3]
 2267 0cf4 D258     		ldr	r2, [r2, r3]
 2268 0cf6 4968     		ldr	r1, [r1, #4]
 2269 0cf8 4240     		eors	r2, r2, r0
 2270              		.loc 1 310 43 discriminator 3 view .LVU703
 2271 0cfa 0DF5AB60 		add	r0, sp, #1368
 2272              		.loc 1 310 29 discriminator 3 view .LVU704
 2273 0cfe 4E40     		eors	r6, r6, r1
 2274              		.loc 1 310 43 discriminator 3 view .LVU705
 2275 0d00 C118     		adds	r1, r0, r3
 2276              		.loc 1 310 38 discriminator 3 view .LVU706
 2277 0d02 C058     		ldr	r0, [r0, r3]
 2278 0d04 4968     		ldr	r1, [r1, #4]
 2279 0d06 4E40     		eors	r6, r6, r1
 2280              		.loc 1 310 52 discriminator 3 view .LVU707
 2281 0d08 0DF5BA61 		add	r1, sp, #1488
 2282              		.loc 1 310 38 discriminator 3 view .LVU708
 2283 0d0c 4240     		eors	r2, r2, r0
 2284              		.loc 1 310 52 discriminator 3 view .LVU709
 2285 0d0e C818     		adds	r0, r1, r3
 2286              		.loc 1 310 47 discriminator 3 view .LVU710
 2287 0d10 C958     		ldr	r1, [r1, r3]
 2288 0d12 4068     		ldr	r0, [r0, #4]
 2289 0d14 4A40     		eors	r2, r2, r1
 2290              		.loc 1 310 56 discriminator 3 view .LVU711
 2291 0d16 2D99     		ldr	r1, [sp, #180]
 2292 0d18 4A40     		eors	r2, r2, r1
 2293 0d1a 2E99     		ldr	r1, [sp, #184]
 2294              		.loc 1 310 47 discriminator 3 view .LVU712
 2295 0d1c 4640     		eors	r6, r6, r0
 2296              		.loc 1 310 56 discriminator 3 view .LVU713
 2297 0d1e 4E40     		eors	r6, r6, r1
 311:masked_fips202.c **** 
 312:masked_fips202.c ****             //thetaRhoPiChiIotaPrepareTheta(round+1, E, A)
 313:masked_fips202.c ****             Da[i] = BCu[i] ^ ROL(BCe[i], 1);
 2298              		.loc 1 313 13 is_stmt 1 discriminator 3 view .LVU714
 2299              		.loc 1 313 30 is_stmt 0 discriminator 3 view .LVU715
 2300 0d20 2499     		ldr	r1, [sp, #144]
 2301 0d22 4FEA4A0E 		lsl	lr, r10, #1
 2302 0d26 4FEA4109 		lsl	r9, r1, #1
 2303 0d2a 4EEAD17E 		orr	lr, lr, r1, lsr #31
 2304              		.loc 1 313 19 discriminator 3 view .LVU716
 2305 0d2e E4A9     		add	r1, sp, #912
 2306              		.loc 1 313 28 discriminator 3 view .LVU717
 2307 0d30 8EEA020E 		eor	lr, lr, r2
 2308              		.loc 1 313 19 discriminator 3 view .LVU718
 2309 0d34 41F803E0 		str	lr, [r1, r3]
 2310 0d38 C818     		adds	r0, r1, r3
 2311              		.loc 1 313 30 discriminator 3 view .LVU719
 2312 0d3a 49EADA79 		orr	r9, r9, r10, lsr #31
 314:masked_fips202.c ****             De[i] = BCa[i] ^ ROL(BCi[i], 1);
 2313              		.loc 1 314 30 discriminator 3 view .LVU720
 2314 0d3e 2599     		ldr	r1, [sp, #148]
 313:masked_fips202.c ****             De[i] = BCa[i] ^ ROL(BCi[i], 1);
 2315              		.loc 1 313 28 discriminator 3 view .LVU721
 2316 0d40 89EA0609 		eor	r9, r9, r6
 2317              		.loc 1 314 30 discriminator 3 view .LVU722
 2318 0d44 4FEA450C 		lsl	ip, r5, #1
 313:masked_fips202.c ****             De[i] = BCa[i] ^ ROL(BCi[i], 1);
 2319              		.loc 1 313 19 discriminator 3 view .LVU723
 2320 0d48 C0F80490 		str	r9, [r0, #4]
 2321              		.loc 1 314 13 is_stmt 1 discriminator 3 view .LVU724
 2322              		.loc 1 314 30 is_stmt 0 discriminator 3 view .LVU725
 2323 0d4c 4CEAD17C 		orr	ip, ip, r1, lsr #31
 2324 0d50 4800     		lsls	r0, r1, #1
 2325              		.loc 1 314 28 discriminator 3 view .LVU726
 2326 0d52 2299     		ldr	r1, [sp, #136]
 2327 0d54 8CEA010C 		eor	ip, ip, r1
 2328 0d58 2399     		ldr	r1, [sp, #140]
 2329              		.loc 1 314 30 discriminator 3 view .LVU727
 2330 0d5a 40EAD570 		orr	r0, r0, r5, lsr #31
 2331              		.loc 1 314 28 discriminator 3 view .LVU728
 2332 0d5e 4140     		eors	r1, r1, r0
 2333 0d60 2F91     		str	r1, [sp, #188]
 2334              		.loc 1 314 19 discriminator 3 view .LVU729
 2335 0d62 EAA9     		add	r1, sp, #936
 2336 0d64 CF18     		adds	r7, r1, r3
 2337 0d66 41F803C0 		str	ip, [r1, r3]
 2338 0d6a 2F99     		ldr	r1, [sp, #188]
 2339 0d6c 7960     		str	r1, [r7, #4]
 315:masked_fips202.c ****             Di[i] = BCe[i] ^ ROL(BCo[i], 1);
 2340              		.loc 1 315 13 is_stmt 1 discriminator 3 view .LVU730
 2341              		.loc 1 315 30 is_stmt 0 discriminator 3 view .LVU731
 2342 0d6e 4FEA4807 		lsl	r7, r8, #1
 2343 0d72 47EAD477 		orr	r7, r7, r4, lsr #31
 2344              		.loc 1 315 28 discriminator 3 view .LVU732
 2345 0d76 2498     		ldr	r0, [sp, #144]
 2346 0d78 87EA0A07 		eor	r7, r7, r10
 2347              		.loc 1 315 30 discriminator 3 view .LVU733
 2348 0d7c 6100     		lsls	r1, r4, #1
 2349              		.loc 1 315 19 discriminator 3 view .LVU734
 2350 0d7e 0DF5707A 		add	r10, sp, #960
 2351              		.loc 1 315 30 discriminator 3 view .LVU735
 2352 0d82 41EAD871 		orr	r1, r1, r8, lsr #31
 2353              		.loc 1 315 19 discriminator 3 view .LVU736
 2354 0d86 4AF80370 		str	r7, [r10, r3]
 2355              		.loc 1 315 28 discriminator 3 view .LVU737
 2356 0d8a 4140     		eors	r1, r1, r0
 2357              		.loc 1 315 19 discriminator 3 view .LVU738
 2358 0d8c 0AEB0300 		add	r0, r10, r3
 316:masked_fips202.c ****             Do[i] = BCi[i] ^ ROL(BCu[i], 1);
 2359              		.loc 1 316 30 discriminator 3 view .LVU739
 2360 0d90 4FEA460A 		lsl	r10, r6, #1
 2361 0d94 4AEAD27A 		orr	r10, r10, r2, lsr #31
 2362 0d98 5200     		lsls	r2, r2, #1
 2363 0d9a 42EAD672 		orr	r2, r2, r6, lsr #31
 2364              		.loc 1 316 28 discriminator 3 view .LVU740
 2365 0d9e 5540     		eors	r5, r5, r2
 2366 0da0 259A     		ldr	r2, [sp, #148]
 315:masked_fips202.c ****             Di[i] = BCe[i] ^ ROL(BCo[i], 1);
 2367              		.loc 1 315 19 discriminator 3 view .LVU741
 2368 0da2 4160     		str	r1, [r0, #4]
 2369              		.loc 1 316 13 is_stmt 1 discriminator 3 view .LVU742
 2370              		.loc 1 316 19 is_stmt 0 discriminator 3 view .LVU743
 2371 0da4 F6AE     		add	r6, sp, #984
 2372              		.loc 1 316 28 discriminator 3 view .LVU744
 2373 0da6 8AEA0202 		eor	r2, r10, r2
 317:masked_fips202.c ****             Du[i] = BCo[i] ^ ROL(BCa[i], 1);
 2374              		.loc 1 317 30 discriminator 3 view .LVU745
 2375 0daa 2398     		ldr	r0, [sp, #140]
 316:masked_fips202.c ****             Do[i] = BCi[i] ^ ROL(BCu[i], 1);
 2376              		.loc 1 316 19 discriminator 3 view .LVU746
 2377 0dac F550     		str	r5, [r6, r3]
 2378 0dae 06EB030A 		add	r10, r6, r3
 316:masked_fips202.c ****             Do[i] = BCi[i] ^ ROL(BCu[i], 1);
 2379              		.loc 1 316 28 discriminator 3 view .LVU747
 2380 0db2 2492     		str	r2, [sp, #144]
 316:masked_fips202.c ****             Do[i] = BCi[i] ^ ROL(BCu[i], 1);
 2381              		.loc 1 316 19 discriminator 3 view .LVU748
 2382 0db4 CAF80420 		str	r2, [r10, #4]
 2383              		.loc 1 317 13 is_stmt 1 discriminator 3 view .LVU749
 2384              		.loc 1 317 30 is_stmt 0 discriminator 3 view .LVU750
 2385 0db8 4FEA400A 		lsl	r10, r0, #1
 2386 0dbc 2298     		ldr	r0, [sp, #136]
 318:masked_fips202.c **** 
 319:masked_fips202.c ****             Eba[i] ^= Da[i];
 320:masked_fips202.c ****             BCa[i] = Eba[i];
 321:masked_fips202.c ****             Ege[i] ^= De[i];
 2387              		.loc 1 321 20 discriminator 3 view .LVU751
 2388 0dbe 2F9A     		ldr	r2, [sp, #188]
 317:masked_fips202.c ****             Du[i] = BCo[i] ^ ROL(BCa[i], 1);
 2389              		.loc 1 317 30 discriminator 3 view .LVU752
 2390 0dc0 4AEAD07A 		orr	r10, r10, r0, lsr #31
 2391 0dc4 4600     		lsls	r6, r0, #1
 2392 0dc6 2398     		ldr	r0, [sp, #140]
 2393 0dc8 46EAD076 		orr	r6, r6, r0, lsr #31
 319:masked_fips202.c ****             BCa[i] = Eba[i];
 2394              		.loc 1 319 20 discriminator 3 view .LVU753
 2395 0dcc 2798     		ldr	r0, [sp, #156]
 2396 0dce 80EA0E0E 		eor	lr, r0, lr
 2397 0dd2 2898     		ldr	r0, [sp, #160]
 2398 0dd4 80EA0909 		eor	r9, r0, r9
 2399 0dd8 0998     		ldr	r0, [sp, #36]
 2400 0dda 40F808EB 		str	lr, [r0], #8
 317:masked_fips202.c ****             Du[i] = BCo[i] ^ ROL(BCa[i], 1);
 2401              		.loc 1 317 28 discriminator 3 view .LVU754
 2402 0dde 86EA0806 		eor	r6, r6, r8
 319:masked_fips202.c ****             BCa[i] = Eba[i];
 2403              		.loc 1 319 20 discriminator 3 view .LVU755
 2404 0de2 0990     		str	r0, [sp, #36]
 317:masked_fips202.c ****             Du[i] = BCo[i] ^ ROL(BCa[i], 1);
 2405              		.loc 1 317 19 discriminator 3 view .LVU756
 2406 0de4 0DF57C78 		add	r8, sp, #1008
 319:masked_fips202.c ****             BCa[i] = Eba[i];
 2407              		.loc 1 319 20 discriminator 3 view .LVU757
 2408 0de8 40F8049C 		str	r9, [r0, #-4]
 320:masked_fips202.c ****             Ege[i] ^= De[i];
 2409              		.loc 1 320 20 discriminator 3 view .LVU758
 2410 0dec C6A8     		add	r0, sp, #792
 317:masked_fips202.c **** 
 2411              		.loc 1 317 19 discriminator 3 view .LVU759
 2412 0dee 48F80360 		str	r6, [r8, r3]
 320:masked_fips202.c ****             Ege[i] ^= De[i];
 2413              		.loc 1 320 20 discriminator 3 view .LVU760
 2414 0df2 40F803E0 		str	lr, [r0, r3]
 317:masked_fips202.c **** 
 2415              		.loc 1 317 28 discriminator 3 view .LVU761
 2416 0df6 8AEA0404 		eor	r4, r10, r4
 317:masked_fips202.c **** 
 2417              		.loc 1 317 19 discriminator 3 view .LVU762
 2418 0dfa 08EB030A 		add	r10, r8, r3
 320:masked_fips202.c ****             Ege[i] ^= De[i];
 2419              		.loc 1 320 20 discriminator 3 view .LVU763
 2420 0dfe 00EB0308 		add	r8, r0, r3
 2421              		.loc 1 321 20 discriminator 3 view .LVU764
 2422 0e02 2998     		ldr	r0, [sp, #164]
 2423 0e04 DDF820E0 		ldr	lr, [sp, #32]
 320:masked_fips202.c ****             Ege[i] ^= De[i];
 2424              		.loc 1 320 20 discriminator 3 view .LVU765
 2425 0e08 C8F80490 		str	r9, [r8, #4]
 2426              		.loc 1 321 20 discriminator 3 view .LVU766
 2427 0e0c 80EA0C0C 		eor	ip, r0, ip
 2428 0e10 2A98     		ldr	r0, [sp, #168]
 2429 0e12 4EF808CB 		str	ip, [lr], #8
 2430 0e16 4240     		eors	r2, r2, r0
 2431 0e18 4EF8042C 		str	r2, [lr, #-4]
 2432 0e1c CDF820E0 		str	lr, [sp, #32]
 322:masked_fips202.c ****             BCe[i] = ROL(Ege[i], 44);
 2433              		.loc 1 322 22 discriminator 3 view .LVU767
 2434 0e20 100D     		lsrs	r0, r2, #20
 2435              		.loc 1 322 20 discriminator 3 view .LVU768
 2436 0e22 0DF54C7E 		add	lr, sp, #816
 2437 0e26 0EEB0308 		add	r8, lr, r3
 2438              		.loc 1 322 22 discriminator 3 view .LVU769
 2439 0e2a 40EA0C30 		orr	r0, r0, ip, lsl #12
 2440 0e2e 4FEA1C5E 		lsr	lr, ip, #20
 2441              		.loc 1 322 20 discriminator 3 view .LVU770
 2442 0e32 0DF54C7C 		add	ip, sp, #816
 2443              		.loc 1 322 22 discriminator 3 view .LVU771
 2444 0e36 4EEA023E 		orr	lr, lr, r2, lsl #12
 2445              		.loc 1 322 20 discriminator 3 view .LVU772
 2446 0e3a 4CF803E0 		str	lr, [ip, r3]
 2447 0e3e C8F80400 		str	r0, [r8, #4]
 323:masked_fips202.c ****             Eki[i] ^= Di[i];
 2448              		.loc 1 323 20 discriminator 3 view .LVU773
 2449 0e42 2B98     		ldr	r0, [sp, #172]
 317:masked_fips202.c **** 
 2450              		.loc 1 317 19 discriminator 3 view .LVU774
 2451 0e44 CAF80440 		str	r4, [r10, #4]
 319:masked_fips202.c ****             BCa[i] = Eba[i];
 2452              		.loc 1 319 13 is_stmt 1 discriminator 3 view .LVU775
 320:masked_fips202.c ****             Ege[i] ^= De[i];
 2453              		.loc 1 320 13 discriminator 3 view .LVU776
 321:masked_fips202.c ****             BCe[i] = ROL(Ege[i], 44);
 2454              		.loc 1 321 13 discriminator 3 view .LVU777
 322:masked_fips202.c ****             Eki[i] ^= Di[i];
 2455              		.loc 1 322 13 discriminator 3 view .LVU778
 2456              		.loc 1 323 13 discriminator 3 view .LVU779
 2457              		.loc 1 323 20 is_stmt 0 discriminator 3 view .LVU780
 2458 0e48 4740     		eors	r7, r7, r0
 2459 0e4a 2C98     		ldr	r0, [sp, #176]
 324:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 325:masked_fips202.c ****             Emo[i] ^= Do[i];
 2460              		.loc 1 325 20 discriminator 3 view .LVU781
 2461 0e4c 249A     		ldr	r2, [sp, #144]
 323:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2462              		.loc 1 323 20 discriminator 3 view .LVU782
 2463 0e4e 4140     		eors	r1, r1, r0
 2464 0e50 0798     		ldr	r0, [sp, #28]
 2465 0e52 40F8087B 		str	r7, [r0], #8
 2466 0e56 40F8041C 		str	r1, [r0, #-4]
 324:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2467              		.loc 1 324 13 is_stmt 1 discriminator 3 view .LVU783
 323:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2468              		.loc 1 323 20 is_stmt 0 discriminator 3 view .LVU784
 2469 0e5a 0790     		str	r0, [sp, #28]
 324:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2470              		.loc 1 324 20 discriminator 3 view .LVU785
 2471 0e5c D2A8     		add	r0, sp, #840
 2472 0e5e 00EB030C 		add	ip, r0, r3
 324:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2473              		.loc 1 324 22 discriminator 3 view .LVU786
 2474 0e62 780D     		lsrs	r0, r7, #21
 2475 0e64 40EAC120 		orr	r0, r0, r1, lsl #11
 2476 0e68 490D     		lsrs	r1, r1, #21
 2477 0e6a 41EAC721 		orr	r1, r1, r7, lsl #11
 324:masked_fips202.c ****             BCi[i] = ROL(Eki[i], 43);
 2478              		.loc 1 324 20 discriminator 3 view .LVU787
 2479 0e6e D2AF     		add	r7, sp, #840
 2480 0e70 F850     		str	r0, [r7, r3]
 2481 0e72 CCF80410 		str	r1, [ip, #4]
 2482              		.loc 1 325 13 is_stmt 1 discriminator 3 view .LVU788
 2483              		.loc 1 325 20 is_stmt 0 discriminator 3 view .LVU789
 2484 0e76 DBF80010 		ldr	r1, [fp]
 2485 0e7a 4D40     		eors	r5, r5, r1
 2486 0e7c DBF80410 		ldr	r1, [fp, #4]
 2487 0e80 4BF8085B 		str	r5, [fp], #8
 2488 0e84 4A40     		eors	r2, r2, r1
 326:masked_fips202.c ****             BCo[i] = ROL(Emo[i], 21);
 2489              		.loc 1 326 20 discriminator 3 view .LVU790
 2490 0e86 D8A9     		add	r1, sp, #864
 2491 0e88 C818     		adds	r0, r1, r3
 2492              		.loc 1 326 22 discriminator 3 view .LVU791
 2493 0e8a 5105     		lsls	r1, r2, #21
 2494 0e8c 41EAD521 		orr	r1, r1, r5, lsr #11
 2495 0e90 6D05     		lsls	r5, r5, #21
 2496 0e92 45EAD225 		orr	r5, r5, r2, lsr #11
 325:masked_fips202.c ****             BCo[i] = ROL(Emo[i], 21);
 2497              		.loc 1 325 20 discriminator 3 view .LVU792
 2498 0e96 4BF8042C 		str	r2, [fp, #-4]
 2499              		.loc 1 326 13 is_stmt 1 discriminator 3 view .LVU793
 2500              		.loc 1 326 20 is_stmt 0 discriminator 3 view .LVU794
 2501 0e9a D8AA     		add	r2, sp, #864
 2502 0e9c D550     		str	r5, [r2, r3]
 327:masked_fips202.c ****             Esu[i] ^= Du[i];
 2503              		.loc 1 327 20 discriminator 3 view .LVU795
 2504 0e9e 2D9A     		ldr	r2, [sp, #180]
 326:masked_fips202.c ****             BCo[i] = ROL(Emo[i], 21);
 2505              		.loc 1 326 20 discriminator 3 view .LVU796
 2506 0ea0 4160     		str	r1, [r0, #4]
 2507              		.loc 1 327 13 is_stmt 1 discriminator 3 view .LVU797
 2508              		.loc 1 327 20 is_stmt 0 discriminator 3 view .LVU798
 2509 0ea2 5640     		eors	r6, r6, r2
 2510 0ea4 2E9A     		ldr	r2, [sp, #184]
 2511 0ea6 5440     		eors	r4, r4, r2
 2512 0ea8 069A     		ldr	r2, [sp, #24]
 2513 0eaa 42F8086B 		str	r6, [r2], #8
 2514 0eae 42F8044C 		str	r4, [r2, #-4]
 328:masked_fips202.c ****             BCu[i] = ROL(Esu[i], 14);
 2515              		.loc 1 328 13 is_stmt 1 discriminator 3 view .LVU799
 327:masked_fips202.c ****             Esu[i] ^= Du[i];
 2516              		.loc 1 327 20 is_stmt 0 discriminator 3 view .LVU800
 2517 0eb2 0692     		str	r2, [sp, #24]
 2518              		.loc 1 328 20 discriminator 3 view .LVU801
 2519 0eb4 DEAA     		add	r2, sp, #888
 2520 0eb6 D118     		adds	r1, r2, r3
 2521              		.loc 1 328 22 discriminator 3 view .LVU802
 2522 0eb8 A203     		lsls	r2, r4, #14
 2523 0eba 42EA9642 		orr	r2, r2, r6, lsr #18
 2524              		.loc 1 328 20 discriminator 3 view .LVU803
 2525 0ebe DEA8     		add	r0, sp, #888
 2526              		.loc 1 328 22 discriminator 3 view .LVU804
 2527 0ec0 B603     		lsls	r6, r6, #14
 2528 0ec2 46EA9444 		orr	r4, r6, r4, lsr #18
 2529              		.loc 1 328 20 discriminator 3 view .LVU805
 2530 0ec6 C450     		str	r4, [r0, r3]
 303:masked_fips202.c ****         {
 2531              		.loc 1 303 9 discriminator 3 view .LVU806
 2532 0ec8 0833     		adds	r3, r3, #8
 2533 0eca 182B     		cmp	r3, #24
 2534              		.loc 1 328 20 discriminator 3 view .LVU807
 2535 0ecc 4A60     		str	r2, [r1, #4]
 303:masked_fips202.c ****         {
 2536              		.loc 1 303 46 is_stmt 1 discriminator 3 view .LVU808
 303:masked_fips202.c ****         {
 2537              		.loc 1 303 21 discriminator 3 view .LVU809
 303:masked_fips202.c ****         {
 2538              		.loc 1 303 9 is_stmt 0 discriminator 3 view .LVU810
 2539 0ece 7FF460AE 		bne	.L23
 329:masked_fips202.c ****         }
 330:masked_fips202.c ****         not_mult_xor(Aba, BCe, BCi, BCa);
 2540              		.loc 1 330 9 is_stmt 1 view .LVU811
 2541 0ed2 C6AB     		add	r3, sp, #792
 2542 0ed4 3A46     		mov	r2, r7
 2543 0ed6 CCA9     		add	r1, sp, #816
 2544 0ed8 30A8     		add	r0, sp, #192
 2545 0eda FFF7FEFF 		bl	not_mult_xor
 2546              	.LVL70:
 331:masked_fips202.c ****         Aba[0] ^= (uint64_t)KeccakF_RoundConstants[round + 1];
 2547              		.loc 1 331 9 view .LVU812
 2548              		.loc 1 331 16 is_stmt 0 view .LVU813
 2549 0ede 0599     		ldr	r1, [sp, #20]
 2550 0ee0 DDE93023 		ldrd	r2, r3, [sp, #192]
 2551 0ee4 D1E90201 		ldrd	r0, r1, [r1, #8]
 2552 0ee8 4240     		eors	r2, r2, r0
 2553 0eea 4B40     		eors	r3, r3, r1
 2554 0eec CDE93023 		strd	r2, r3, [sp, #192]
 332:masked_fips202.c ****         not_mult_xor(Abe, BCi, BCo, BCe);
 2555              		.loc 1 332 9 is_stmt 1 view .LVU814
 2556 0ef0 3946     		mov	r1, r7
 2557 0ef2 CCAB     		add	r3, sp, #816
 2558 0ef4 D8AA     		add	r2, sp, #864
 2559 0ef6 36A8     		add	r0, sp, #216
 2560 0ef8 FFF7FEFF 		bl	not_mult_xor
 2561              	.LVL71:
 333:masked_fips202.c ****         not_mult_xor(Abi, BCo, BCu, BCi);
 2562              		.loc 1 333 9 view .LVU815
 2563 0efc 3B46     		mov	r3, r7
 2564 0efe DEAA     		add	r2, sp, #888
 2565 0f00 D8A9     		add	r1, sp, #864
 2566 0f02 3CA8     		add	r0, sp, #240
 2567 0f04 FFF7FEFF 		bl	not_mult_xor
 2568              	.LVL72:
 334:masked_fips202.c ****         not_mult_xor(Abo, BCu, BCa, BCo);
 2569              		.loc 1 334 9 view .LVU816
 2570 0f08 D8AB     		add	r3, sp, #864
 2571 0f0a C6AA     		add	r2, sp, #792
 2572 0f0c DEA9     		add	r1, sp, #888
 2573 0f0e 42A8     		add	r0, sp, #264
 2574 0f10 FFF7FEFF 		bl	not_mult_xor
 2575              	.LVL73:
 335:masked_fips202.c ****         not_mult_xor(Abu, BCa, BCe, BCu);
 2576              		.loc 1 335 9 view .LVU817
 2577 0f14 0DF58D64 		add	r4, sp, #1128
 2578 0f18 DEAB     		add	r3, sp, #888
 2579 0f1a CCAA     		add	r2, sp, #816
 2580 0f1c C6A9     		add	r1, sp, #792
 2581 0f1e 48A8     		add	r0, sp, #288
 2582 0f20 FFF7FEFF 		bl	not_mult_xor
 2583              	.LVL74:
 336:masked_fips202.c ****         //Aba = BCa ^ ((~BCe) & BCi);
 337:masked_fips202.c ****         //Aba ^= (uint64_t)KeccakF_RoundConstants[round + 1];
 338:masked_fips202.c ****         //Abe = BCe ^ ((~BCi) & BCo);
 339:masked_fips202.c ****         //Abi = BCi ^ ((~BCo) & BCu);
 340:masked_fips202.c ****         //Abo = BCo ^ ((~BCu) & BCa);
 341:masked_fips202.c ****         //Abu = BCu ^ ((~BCa) & BCe);
 342:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 2584              		.loc 1 342 9 view .LVU818
 2585              		.loc 1 342 21 view .LVU819
 2586 0f24 0F94     		str	r4, [sp, #60]
 335:masked_fips202.c ****         not_mult_xor(Abu, BCa, BCe, BCu);
 2587              		.loc 1 335 9 is_stmt 0 view .LVU820
 2588 0f26 DEAC     		add	r4, sp, #888
 2589 0f28 0694     		str	r4, [sp, #24]
 2590 0f2a D8AC     		add	r4, sp, #864
 2591 0f2c 0794     		str	r4, [sp, #28]
 2592 0f2e FCAC     		add	r4, sp, #1008
 2593 0f30 0894     		str	r4, [sp, #32]
 2594 0f32 219A     		ldr	r2, [sp, #132]
 2595 0f34 C6AC     		add	r4, sp, #792
 2596 0f36 0DF58A63 		add	r3, sp, #1104
 2597 0f3a 0DF59C60 		add	r0, sp, #1248
 2598 0f3e 0DF5B161 		add	r1, sp, #1416
 2599 0f42 F0AD     		add	r5, sp, #960
 2600 0f44 0DF56A7E 		add	lr, sp, #936
 2601 0f48 B846     		mov	r8, r7
 2602 0f4a 0DF56479 		add	r9, sp, #912
 2603 0f4e 0DF54C7A 		add	r10, sp, #816
 2604 0f52 0994     		str	r4, [sp, #36]
 2605 0f54 0DF5767C 		add	ip, sp, #984
 2606              	.LVL75:
 2607              	.L24:
 343:masked_fips202.c ****         {
 344:masked_fips202.c ****             Ebo[i] ^= Do[i];
 2608              		.loc 1 344 13 is_stmt 1 discriminator 3 view .LVU821
 2609              		.loc 1 344 25 is_stmt 0 discriminator 3 view .LVU822
 2610 0f58 DCE90076 		ldrd	r7, r6, [ip]
 2611              		.loc 1 344 20 discriminator 3 view .LVU823
 2612 0f5c 1C68     		ldr	r4, [r3]
 2613 0f5e 6740     		eors	r7, r7, r4
 2614 0f60 5C68     		ldr	r4, [r3, #4]
 2615 0f62 43F8087B 		str	r7, [r3], #8
 2616 0f66 84EA060B 		eor	fp, r4, r6
 345:masked_fips202.c ****             BCa[i] = ROL(Ebo[i], 28);
 2617              		.loc 1 345 22 discriminator 3 view .LVU824
 2618 0f6a 4FEA0B76 		lsl	r6, fp, #28
 2619              		.loc 1 345 20 discriminator 3 view .LVU825
 2620 0f6e 099C     		ldr	r4, [sp, #36]
 344:masked_fips202.c ****             BCa[i] = ROL(Ebo[i], 28);
 2621              		.loc 1 344 20 discriminator 3 view .LVU826
 2622 0f70 43F804BC 		str	fp, [r3, #-4]
 2623              		.loc 1 345 13 is_stmt 1 discriminator 3 view .LVU827
 2624              		.loc 1 345 22 is_stmt 0 discriminator 3 view .LVU828
 2625 0f74 46EA1716 		orr	r6, r6, r7, lsr #4
 2626 0f78 3F07     		lsls	r7, r7, #28
 2627 0f7a 47EA1B17 		orr	r7, r7, fp, lsr #4
 2628              		.loc 1 345 20 discriminator 3 view .LVU829
 2629 0f7e C4E90076 		strd	r7, r6, [r4]
 2630 0f82 0834     		adds	r4, r4, #8
 2631 0f84 0994     		str	r4, [sp, #36]
 346:masked_fips202.c ****             Egu[i] ^= Du[i];
 2632              		.loc 1 346 13 is_stmt 1 discriminator 3 view .LVU830
 2633              		.loc 1 346 25 is_stmt 0 discriminator 3 view .LVU831
 2634 0f86 089C     		ldr	r4, [sp, #32]
 2635 0f88 D4E90076 		ldrd	r7, r6, [r4]
 2636 0f8c 0834     		adds	r4, r4, #8
 2637 0f8e 0894     		str	r4, [sp, #32]
 2638              		.loc 1 346 20 discriminator 3 view .LVU832
 2639 0f90 0468     		ldr	r4, [r0]
 2640 0f92 6740     		eors	r7, r7, r4
 2641 0f94 4468     		ldr	r4, [r0, #4]
 2642 0f96 40F8087B 		str	r7, [r0], #8
 2643 0f9a 84EA060B 		eor	fp, r4, r6
 347:masked_fips202.c ****             BCe[i] = ROL(Egu[i], 20);
 348:masked_fips202.c ****             Eka[i] ^= Da[i];
 2644              		.loc 1 348 20 discriminator 3 view .LVU833
 2645 0f9e 019C     		ldr	r4, [sp, #4]
 346:masked_fips202.c ****             Egu[i] ^= Du[i];
 2646              		.loc 1 346 20 discriminator 3 view .LVU834
 2647 0fa0 40F804BC 		str	fp, [r0, #-4]
 347:masked_fips202.c ****             BCe[i] = ROL(Egu[i], 20);
 2648              		.loc 1 347 13 is_stmt 1 discriminator 3 view .LVU835
 2649              		.loc 1 348 20 is_stmt 0 discriminator 3 view .LVU836
 2650 0fa4 2468     		ldr	r4, [r4]
 2651 0fa6 1094     		str	r4, [sp, #64]
 347:masked_fips202.c ****             BCe[i] = ROL(Egu[i], 20);
 2652              		.loc 1 347 22 discriminator 3 view .LVU837
 2653 0fa8 4FEA0B56 		lsl	r6, fp, #20
 2654 0fac 46EA1736 		orr	r6, r6, r7, lsr #12
 2655              		.loc 1 348 20 discriminator 3 view .LVU838
 2656 0fb0 019C     		ldr	r4, [sp, #4]
 347:masked_fips202.c ****             BCe[i] = ROL(Egu[i], 20);
 2657              		.loc 1 347 22 discriminator 3 view .LVU839
 2658 0fb2 3F05     		lsls	r7, r7, #20
 2659 0fb4 47EA1B37 		orr	r7, r7, fp, lsr #12
 2660              		.loc 1 348 20 discriminator 3 view .LVU840
 2661 0fb8 6468     		ldr	r4, [r4, #4]
 2662 0fba 1194     		str	r4, [sp, #68]
 347:masked_fips202.c ****             BCe[i] = ROL(Egu[i], 20);
 2663              		.loc 1 347 20 discriminator 3 view .LVU841
 2664 0fbc CAE90076 		strd	r7, r6, [r10]
 2665              		.loc 1 348 25 discriminator 3 view .LVU842
 2666 0fc0 D9E90076 		ldrd	r7, r6, [r9]
 2667              		.loc 1 348 20 discriminator 3 view .LVU843
 2668 0fc4 109C     		ldr	r4, [sp, #64]
 2669 0fc6 6740     		eors	r7, r7, r4
 2670 0fc8 119C     		ldr	r4, [sp, #68]
 2671 0fca 84EA060B 		eor	fp, r4, r6
 2672 0fce 019C     		ldr	r4, [sp, #4]
 349:masked_fips202.c ****             BCi[i] = ROL(Eka[i], 3);
 2673              		.loc 1 349 22 discriminator 3 view .LVU844
 2674 0fd0 4FEACB06 		lsl	r6, fp, #3
 348:masked_fips202.c ****             BCi[i] = ROL(Eka[i], 3);
 2675              		.loc 1 348 20 discriminator 3 view .LVU845
 2676 0fd4 44F8087B 		str	r7, [r4], #8
 2677              		.loc 1 349 22 discriminator 3 view .LVU846
 2678 0fd8 46EA5776 		orr	r6, r6, r7, lsr #29
 2679 0fdc FF00     		lsls	r7, r7, #3
 2680 0fde 47EA5B77 		orr	r7, r7, fp, lsr #29
 348:masked_fips202.c ****             BCi[i] = ROL(Eka[i], 3);
 2681              		.loc 1 348 20 discriminator 3 view .LVU847
 2682 0fe2 0194     		str	r4, [sp, #4]
 2683              		.loc 1 349 20 discriminator 3 view .LVU848
 2684 0fe4 C8E90076 		strd	r7, r6, [r8]
 350:masked_fips202.c ****             Eme[i] ^= De[i];
 2685              		.loc 1 350 25 discriminator 3 view .LVU849
 2686 0fe8 DEE90076 		ldrd	r7, r6, [lr]
 348:masked_fips202.c ****             BCi[i] = ROL(Eka[i], 3);
 2687              		.loc 1 348 20 discriminator 3 view .LVU850
 2688 0fec 44F804BC 		str	fp, [r4, #-4]
 2689              		.loc 1 350 20 discriminator 3 view .LVU851
 2690 0ff0 0C68     		ldr	r4, [r1]
 2691 0ff2 6740     		eors	r7, r7, r4
 2692 0ff4 4C68     		ldr	r4, [r1, #4]
 2693 0ff6 41F8087B 		str	r7, [r1], #8
 2694 0ffa 6640     		eors	r6, r6, r4
 351:masked_fips202.c ****             BCo[i] = ROL(Eme[i], 45);
 2695              		.loc 1 351 22 discriminator 3 view .LVU852
 2696 0ffc 4FEAD74B 		lsr	fp, r7, #19
 2697              		.loc 1 351 20 discriminator 3 view .LVU853
 2698 1000 079C     		ldr	r4, [sp, #28]
 350:masked_fips202.c ****             Eme[i] ^= De[i];
 2699              		.loc 1 350 20 discriminator 3 view .LVU854
 2700 1002 41F8046C 		str	r6, [r1, #-4]
 2701              		.loc 1 351 22 discriminator 3 view .LVU855
 2702 1006 4BEA463B 		orr	fp, fp, r6, lsl #13
 2703 100a F60C     		lsrs	r6, r6, #19
 2704 100c 46EA4736 		orr	r6, r6, r7, lsl #13
 2705              		.loc 1 351 20 discriminator 3 view .LVU856
 2706 1010 C4E900B6 		strd	fp, r6, [r4]
 352:masked_fips202.c ****             Esi[i] ^= Di[i];
 2707              		.loc 1 352 25 discriminator 3 view .LVU857
 2708 1014 D5E90076 		ldrd	r7, r6, [r5]
 2709 1018 0834     		adds	r4, r4, #8
 2710 101a 0794     		str	r4, [sp, #28]
 2711              		.loc 1 352 20 discriminator 3 view .LVU858
 2712 101c 1468     		ldr	r4, [r2]
 2713 101e 6740     		eors	r7, r7, r4
 2714 1020 5468     		ldr	r4, [r2, #4]
 2715 1022 42F8087B 		str	r7, [r2], #8
 2716 1026 6640     		eors	r6, r6, r4
 353:masked_fips202.c ****             BCu[i] = ROL(Esi[i], 61);
 2717              		.loc 1 353 22 discriminator 3 view .LVU859
 2718 1028 4FEAD70B 		lsr	fp, r7, #3
 2719              		.loc 1 353 20 discriminator 3 view .LVU860
 2720 102c 069C     		ldr	r4, [sp, #24]
 352:masked_fips202.c ****             Esi[i] ^= Di[i];
 2721              		.loc 1 352 20 discriminator 3 view .LVU861
 2722 102e 42F8046C 		str	r6, [r2, #-4]
 2723              		.loc 1 353 22 discriminator 3 view .LVU862
 2724 1032 4BEA467B 		orr	fp, fp, r6, lsl #29
 2725 1036 F608     		lsrs	r6, r6, #3
 2726 1038 46EA4776 		orr	r6, r6, r7, lsl #29
 2727              		.loc 1 353 20 discriminator 3 view .LVU863
 2728 103c C4E900B6 		strd	fp, r6, [r4]
 2729 1040 0834     		adds	r4, r4, #8
 2730 1042 0694     		str	r4, [sp, #24]
 342:masked_fips202.c ****         {
 2731              		.loc 1 342 9 discriminator 3 view .LVU864
 2732 1044 0F9C     		ldr	r4, [sp, #60]
 2733 1046 9C42     		cmp	r4, r3
 2734 1048 0CF1080C 		add	ip, ip, #8
 2735 104c 0AF1080A 		add	r10, r10, #8
 348:masked_fips202.c ****             BCi[i] = ROL(Eka[i], 3);
 2736              		.loc 1 348 13 is_stmt 1 discriminator 3 view .LVU865
 349:masked_fips202.c ****             Eme[i] ^= De[i];
 2737              		.loc 1 349 13 discriminator 3 view .LVU866
 2738 1050 09F10809 		add	r9, r9, #8
 2739 1054 08F10808 		add	r8, r8, #8
 350:masked_fips202.c ****             BCo[i] = ROL(Eme[i], 45);
 2740              		.loc 1 350 13 discriminator 3 view .LVU867
 351:masked_fips202.c ****             Esi[i] ^= Di[i];
 2741              		.loc 1 351 13 discriminator 3 view .LVU868
 352:masked_fips202.c ****             BCu[i] = ROL(Esi[i], 61);
 2742              		.loc 1 352 13 discriminator 3 view .LVU869
 2743              		.loc 1 353 13 discriminator 3 view .LVU870
 342:masked_fips202.c ****         {
 2744              		.loc 1 342 46 discriminator 3 view .LVU871
 342:masked_fips202.c ****         {
 2745              		.loc 1 342 21 discriminator 3 view .LVU872
 2746 1058 0EF1080E 		add	lr, lr, #8
 2747 105c 05F10805 		add	r5, r5, #8
 342:masked_fips202.c ****         {
 2748              		.loc 1 342 9 is_stmt 0 discriminator 3 view .LVU873
 2749 1060 7FF47AAF 		bne	.L24
 354:masked_fips202.c ****         }
 355:masked_fips202.c ****         not_mult_xor(Aga, BCe, BCi, BCa);
 2750              		.loc 1 355 9 is_stmt 1 view .LVU874
 2751 1064 C6AB     		add	r3, sp, #792
 2752 1066 D2AA     		add	r2, sp, #840
 2753 1068 CCA9     		add	r1, sp, #816
 2754 106a 4EA8     		add	r0, sp, #312
 2755 106c FFF7FEFF 		bl	not_mult_xor
 2756              	.LVL76:
 356:masked_fips202.c ****         not_mult_xor(Age, BCi, BCo, BCe);
 2757              		.loc 1 356 9 view .LVU875
 2758 1070 CCAB     		add	r3, sp, #816
 2759 1072 D8AA     		add	r2, sp, #864
 2760 1074 D2A9     		add	r1, sp, #840
 2761 1076 54A8     		add	r0, sp, #336
 2762 1078 FFF7FEFF 		bl	not_mult_xor
 2763              	.LVL77:
 357:masked_fips202.c ****         not_mult_xor(Agi, BCo, BCu, BCi);
 2764              		.loc 1 357 9 view .LVU876
 2765 107c D2AB     		add	r3, sp, #840
 2766 107e DEAA     		add	r2, sp, #888
 2767 1080 D8A9     		add	r1, sp, #864
 2768 1082 5AA8     		add	r0, sp, #360
 2769 1084 FFF7FEFF 		bl	not_mult_xor
 2770              	.LVL78:
 358:masked_fips202.c ****         not_mult_xor(Ago, BCu, BCa, BCo);
 2771              		.loc 1 358 9 view .LVU877
 2772 1088 D8AB     		add	r3, sp, #864
 2773 108a C6AA     		add	r2, sp, #792
 2774 108c DEA9     		add	r1, sp, #888
 2775 108e 60A8     		add	r0, sp, #384
 2776 1090 FFF7FEFF 		bl	not_mult_xor
 2777              	.LVL79:
 359:masked_fips202.c ****         not_mult_xor(Agu, BCa, BCe, BCu);
 2778              		.loc 1 359 9 view .LVU878
 2779 1094 DEAC     		add	r4, sp, #888
 2780 1096 DEAB     		add	r3, sp, #888
 2781 1098 CCAA     		add	r2, sp, #816
 2782 109a C6A9     		add	r1, sp, #792
 2783 109c 66A8     		add	r0, sp, #408
 2784 109e FFF7FEFF 		bl	not_mult_xor
 2785              	.LVL80:
 360:masked_fips202.c ****         //Aga = BCa ^ ((~BCe) & BCi);
 361:masked_fips202.c ****         //Age = BCe ^ ((~BCi) & BCo);
 362:masked_fips202.c ****         //Agi = BCi ^ ((~BCo) & BCu);
 363:masked_fips202.c ****         //Ago = BCo ^ ((~BCu) & BCa);
 364:masked_fips202.c ****         //Agu = BCu ^ ((~BCa) & BCe);
 365:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 2786              		.loc 1 365 9 view .LVU879
 2787              		.loc 1 365 21 view .LVU880
 359:masked_fips202.c ****         not_mult_xor(Agu, BCa, BCe, BCu);
 2788              		.loc 1 359 9 is_stmt 0 view .LVU881
 2789 10a2 0194     		str	r4, [sp, #4]
 2790 10a4 D8AC     		add	r4, sp, #864
 2791 10a6 0694     		str	r4, [sp, #24]
 2792 10a8 F0AC     		add	r4, sp, #960
 2793 10aa 0794     		str	r4, [sp, #28]
 2794 10ac C6AC     		add	r4, sp, #792
 2795 10ae 0DF58463 		add	r3, sp, #1056
 2796 10b2 0DF59660 		add	r0, sp, #1200
 2797 10b6 0DF5A861 		add	r1, sp, #1344
 2798 10ba 0DF5BA62 		add	r2, sp, #1488
 2799 10be E4AD     		add	r5, sp, #912
 2800 10c0 0DF57C7E 		add	lr, sp, #1008
 2801 10c4 0DF55278 		add	r8, sp, #840
 2802 10c8 0DF57679 		add	r9, sp, #984
 2803 10cc 0DF54C7A 		add	r10, sp, #816
 2804 10d0 0894     		str	r4, [sp, #32]
 2805 10d2 0DF56A7C 		add	ip, sp, #936
 2806              	.LVL81:
 2807              	.L25:
 366:masked_fips202.c ****         {
 367:masked_fips202.c ****             Ebe[i] ^= De[i];
 2808              		.loc 1 367 13 is_stmt 1 discriminator 3 view .LVU882
 2809              		.loc 1 367 25 is_stmt 0 discriminator 3 view .LVU883
 2810 10d6 DCE90076 		ldrd	r7, r6, [ip]
 2811              		.loc 1 367 20 discriminator 3 view .LVU884
 2812 10da 1C68     		ldr	r4, [r3]
 2813 10dc 6740     		eors	r7, r7, r4
 2814 10de 5C68     		ldr	r4, [r3, #4]
 2815 10e0 43F8087B 		str	r7, [r3], #8
 2816 10e4 84EA060B 		eor	fp, r4, r6
 368:masked_fips202.c ****             BCa[i] = ROL(Ebe[i], 1);
 2817              		.loc 1 368 22 discriminator 3 view .LVU885
 2818 10e8 4FEA4B06 		lsl	r6, fp, #1
 2819              		.loc 1 368 20 discriminator 3 view .LVU886
 2820 10ec 089C     		ldr	r4, [sp, #32]
 367:masked_fips202.c ****             BCa[i] = ROL(Ebe[i], 1);
 2821              		.loc 1 367 20 discriminator 3 view .LVU887
 2822 10ee 43F804BC 		str	fp, [r3, #-4]
 2823              		.loc 1 368 13 is_stmt 1 discriminator 3 view .LVU888
 2824              		.loc 1 368 22 is_stmt 0 discriminator 3 view .LVU889
 2825 10f2 46EAD776 		orr	r6, r6, r7, lsr #31
 2826 10f6 7F00     		lsls	r7, r7, #1
 2827 10f8 47EADB77 		orr	r7, r7, fp, lsr #31
 2828              		.loc 1 368 20 discriminator 3 view .LVU890
 2829 10fc C4E90076 		strd	r7, r6, [r4]
 2830 1100 0834     		adds	r4, r4, #8
 2831 1102 0894     		str	r4, [sp, #32]
 369:masked_fips202.c ****             Egi[i] ^= Di[i];
 2832              		.loc 1 369 13 is_stmt 1 discriminator 3 view .LVU891
 2833              		.loc 1 369 25 is_stmt 0 discriminator 3 view .LVU892
 2834 1104 079C     		ldr	r4, [sp, #28]
 2835 1106 D4E90076 		ldrd	r7, r6, [r4]
 2836 110a 0834     		adds	r4, r4, #8
 2837 110c 0794     		str	r4, [sp, #28]
 2838              		.loc 1 369 20 discriminator 3 view .LVU893
 2839 110e 0468     		ldr	r4, [r0]
 2840 1110 6740     		eors	r7, r7, r4
 2841 1112 4468     		ldr	r4, [r0, #4]
 2842 1114 40F8087B 		str	r7, [r0], #8
 2843 1118 84EA060B 		eor	fp, r4, r6
 370:masked_fips202.c ****             BCe[i] = ROL(Egi[i], 6);
 2844              		.loc 1 370 22 discriminator 3 view .LVU894
 2845 111c 4FEA8B16 		lsl	r6, fp, #6
 2846 1120 46EA9766 		orr	r6, r6, r7, lsr #26
 2847 1124 BF01     		lsls	r7, r7, #6
 2848 1126 47EA9B67 		orr	r7, r7, fp, lsr #26
 2849              		.loc 1 370 20 discriminator 3 view .LVU895
 2850 112a CAE90076 		strd	r7, r6, [r10]
 371:masked_fips202.c ****             Eko[i] ^= Do[i];
 2851              		.loc 1 371 25 discriminator 3 view .LVU896
 2852 112e D9E90076 		ldrd	r7, r6, [r9]
 2853              		.loc 1 371 20 discriminator 3 view .LVU897
 2854 1132 0C68     		ldr	r4, [r1]
 369:masked_fips202.c ****             Egi[i] ^= Di[i];
 2855              		.loc 1 369 20 discriminator 3 view .LVU898
 2856 1134 40F804BC 		str	fp, [r0, #-4]
 370:masked_fips202.c ****             BCe[i] = ROL(Egi[i], 6);
 2857              		.loc 1 370 13 is_stmt 1 discriminator 3 view .LVU899
 2858              		.loc 1 371 20 is_stmt 0 discriminator 3 view .LVU900
 2859 1138 6740     		eors	r7, r7, r4
 2860 113a 4C68     		ldr	r4, [r1, #4]
 2861 113c 41F8087B 		str	r7, [r1], #8
 2862 1140 84EA060B 		eor	fp, r4, r6
 372:masked_fips202.c ****             BCi[i] = ROL(Eko[i], 25);
 2863              		.loc 1 372 22 discriminator 3 view .LVU901
 2864 1144 4FEA4B66 		lsl	r6, fp, #25
 2865 1148 46EAD716 		orr	r6, r6, r7, lsr #7
 2866 114c 7F06     		lsls	r7, r7, #25
 2867 114e 47EADB17 		orr	r7, r7, fp, lsr #7
 2868              		.loc 1 372 20 discriminator 3 view .LVU902
 2869 1152 C8E90076 		strd	r7, r6, [r8]
 373:masked_fips202.c ****             Emu[i] ^= Du[i];
 2870              		.loc 1 373 25 discriminator 3 view .LVU903
 2871 1156 DEE90076 		ldrd	r7, r6, [lr]
 2872              		.loc 1 373 20 discriminator 3 view .LVU904
 2873 115a 1468     		ldr	r4, [r2]
 371:masked_fips202.c ****             Eko[i] ^= Do[i];
 2874              		.loc 1 371 20 discriminator 3 view .LVU905
 2875 115c 41F804BC 		str	fp, [r1, #-4]
 2876              		.loc 1 373 20 discriminator 3 view .LVU906
 2877 1160 6740     		eors	r7, r7, r4
 2878 1162 5468     		ldr	r4, [r2, #4]
 2879 1164 42F8087B 		str	r7, [r2], #8
 2880 1168 84EA060B 		eor	fp, r4, r6
 374:masked_fips202.c ****             BCo[i] = ROL(Emu[i], 8);
 2881              		.loc 1 374 22 discriminator 3 view .LVU907
 2882 116c 4FEA0B26 		lsl	r6, fp, #8
 2883              		.loc 1 374 20 discriminator 3 view .LVU908
 2884 1170 069C     		ldr	r4, [sp, #24]
 373:masked_fips202.c ****             Emu[i] ^= Du[i];
 2885              		.loc 1 373 20 discriminator 3 view .LVU909
 2886 1172 42F804BC 		str	fp, [r2, #-4]
 2887              		.loc 1 374 22 discriminator 3 view .LVU910
 2888 1176 46EA1766 		orr	r6, r6, r7, lsr #24
 2889 117a 3F02     		lsls	r7, r7, #8
 2890 117c 47EA1B67 		orr	r7, r7, fp, lsr #24
 2891              		.loc 1 374 20 discriminator 3 view .LVU911
 2892 1180 C4E90076 		strd	r7, r6, [r4]
 2893 1184 0834     		adds	r4, r4, #8
 2894 1186 0694     		str	r4, [sp, #24]
 375:masked_fips202.c ****             Esa[i] ^= Da[i];
 2895              		.loc 1 375 20 discriminator 3 view .LVU912
 2896 1188 029C     		ldr	r4, [sp, #8]
 2897 118a 2468     		ldr	r4, [r4]
 2898 118c 0994     		str	r4, [sp, #36]
 2899 118e 029C     		ldr	r4, [sp, #8]
 2900              		.loc 1 375 25 discriminator 3 view .LVU913
 2901 1190 D5E90076 		ldrd	r7, r6, [r5]
 2902              		.loc 1 375 20 discriminator 3 view .LVU914
 2903 1194 6468     		ldr	r4, [r4, #4]
 2904 1196 0F94     		str	r4, [sp, #60]
 2905 1198 099C     		ldr	r4, [sp, #36]
 2906 119a 6740     		eors	r7, r7, r4
 2907 119c 0F9C     		ldr	r4, [sp, #60]
 2908 119e 84EA060B 		eor	fp, r4, r6
 2909 11a2 029C     		ldr	r4, [sp, #8]
 2910 11a4 44F8087B 		str	r7, [r4], #8
 376:masked_fips202.c ****             BCu[i] = ROL(Esa[i], 18);
 2911              		.loc 1 376 22 discriminator 3 view .LVU915
 2912 11a8 4FEA8B46 		lsl	r6, fp, #18
 2913 11ac 46EA9736 		orr	r6, r6, r7, lsr #14
 375:masked_fips202.c ****             Esa[i] ^= Da[i];
 2914              		.loc 1 375 20 discriminator 3 view .LVU916
 2915 11b0 0294     		str	r4, [sp, #8]
 2916 11b2 44F804BC 		str	fp, [r4, #-4]
 2917              		.loc 1 376 22 discriminator 3 view .LVU917
 2918 11b6 BF04     		lsls	r7, r7, #18
 2919              		.loc 1 376 20 discriminator 3 view .LVU918
 2920 11b8 019C     		ldr	r4, [sp, #4]
 2921              		.loc 1 376 22 discriminator 3 view .LVU919
 2922 11ba 47EA9B37 		orr	r7, r7, fp, lsr #14
 2923              		.loc 1 376 20 discriminator 3 view .LVU920
 2924 11be C4E90076 		strd	r7, r6, [r4]
 2925 11c2 0834     		adds	r4, r4, #8
 2926 11c4 0194     		str	r4, [sp, #4]
 365:masked_fips202.c ****         {
 2927              		.loc 1 365 9 discriminator 3 view .LVU921
 2928 11c6 0DF58764 		add	r4, sp, #1080
 2929 11ca 9C42     		cmp	r4, r3
 2930 11cc 0CF1080C 		add	ip, ip, #8
 2931 11d0 0AF1080A 		add	r10, r10, #8
 371:masked_fips202.c ****             BCi[i] = ROL(Eko[i], 25);
 2932              		.loc 1 371 13 is_stmt 1 discriminator 3 view .LVU922
 372:masked_fips202.c ****             Emu[i] ^= Du[i];
 2933              		.loc 1 372 13 discriminator 3 view .LVU923
 2934 11d4 09F10809 		add	r9, r9, #8
 2935 11d8 08F10808 		add	r8, r8, #8
 373:masked_fips202.c ****             BCo[i] = ROL(Emu[i], 8);
 2936              		.loc 1 373 13 discriminator 3 view .LVU924
 374:masked_fips202.c ****             Esa[i] ^= Da[i];
 2937              		.loc 1 374 13 discriminator 3 view .LVU925
 375:masked_fips202.c ****             BCu[i] = ROL(Esa[i], 18);
 2938              		.loc 1 375 13 discriminator 3 view .LVU926
 2939              		.loc 1 376 13 discriminator 3 view .LVU927
 365:masked_fips202.c ****         {
 2940              		.loc 1 365 46 discriminator 3 view .LVU928
 365:masked_fips202.c ****         {
 2941              		.loc 1 365 21 discriminator 3 view .LVU929
 2942 11dc 0EF1080E 		add	lr, lr, #8
 2943 11e0 05F10805 		add	r5, r5, #8
 365:masked_fips202.c ****         {
 2944              		.loc 1 365 9 is_stmt 0 discriminator 3 view .LVU930
 2945 11e4 7FF477AF 		bne	.L25
 377:masked_fips202.c ****         }
 378:masked_fips202.c ****         not_mult_xor(Aka, BCe, BCi, BCa);
 2946              		.loc 1 378 9 is_stmt 1 view .LVU931
 2947 11e8 C6AB     		add	r3, sp, #792
 2948 11ea D2AA     		add	r2, sp, #840
 2949 11ec CCA9     		add	r1, sp, #816
 2950 11ee 6CA8     		add	r0, sp, #432
 2951 11f0 FFF7FEFF 		bl	not_mult_xor
 2952              	.LVL82:
 379:masked_fips202.c ****         not_mult_xor(Ake, BCi, BCo, BCe);
 2953              		.loc 1 379 9 view .LVU932
 2954 11f4 CCAB     		add	r3, sp, #816
 2955 11f6 D8AA     		add	r2, sp, #864
 2956 11f8 D2A9     		add	r1, sp, #840
 2957 11fa 72A8     		add	r0, sp, #456
 2958 11fc FFF7FEFF 		bl	not_mult_xor
 2959              	.LVL83:
 380:masked_fips202.c ****         not_mult_xor(Aki, BCo, BCu, BCi);
 2960              		.loc 1 380 9 view .LVU933
 2961 1200 D2AB     		add	r3, sp, #840
 2962 1202 DEAA     		add	r2, sp, #888
 2963 1204 D8A9     		add	r1, sp, #864
 2964 1206 78A8     		add	r0, sp, #480
 2965 1208 FFF7FEFF 		bl	not_mult_xor
 2966              	.LVL84:
 381:masked_fips202.c ****         not_mult_xor(Ako, BCu, BCa, BCo);
 2967              		.loc 1 381 9 view .LVU934
 2968 120c D8AB     		add	r3, sp, #864
 2969 120e C6AA     		add	r2, sp, #792
 2970 1210 DEA9     		add	r1, sp, #888
 2971 1212 7EA8     		add	r0, sp, #504
 2972 1214 FFF7FEFF 		bl	not_mult_xor
 2973              	.LVL85:
 382:masked_fips202.c ****         not_mult_xor(Aku, BCa, BCe, BCu);
 2974              		.loc 1 382 9 view .LVU935
 2975 1218 DEAC     		add	r4, sp, #888
 2976 121a DEAB     		add	r3, sp, #888
 2977 121c CCAA     		add	r2, sp, #816
 2978 121e C6A9     		add	r1, sp, #792
 2979 1220 84A8     		add	r0, sp, #528
 2980 1222 FFF7FEFF 		bl	not_mult_xor
 2981              	.LVL86:
 383:masked_fips202.c ****         //Aka = BCa ^ ((~BCe) & BCi);
 384:masked_fips202.c ****         //Ake = BCe ^ ((~BCi) & BCo);
 385:masked_fips202.c ****         //Aki = BCi ^ ((~BCo) & BCu);
 386:masked_fips202.c ****         //Ako = BCo ^ ((~BCu) & BCa);
 387:masked_fips202.c ****         //Aku = BCu ^ ((~BCa) & BCe);
 388:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 2982              		.loc 1 388 9 view .LVU936
 2983              		.loc 1 388 21 view .LVU937
 382:masked_fips202.c ****         not_mult_xor(Aku, BCa, BCe, BCu);
 2984              		.loc 1 382 9 is_stmt 0 view .LVU938
 2985 1226 0194     		str	r4, [sp, #4]
 2986 1228 D8AC     		add	r4, sp, #864
 2987 122a 0294     		str	r4, [sp, #8]
 2988 122c E4AC     		add	r4, sp, #912
 2989 122e 0694     		str	r4, [sp, #24]
 2990 1230 C6AC     		add	r4, sp, #792
 2991 1232 0DF58D63 		add	r3, sp, #1128
 2992 1236 0DF5A260 		add	r0, sp, #1296
 2993 123a 0DF5B461 		add	r1, sp, #1440
 2994 123e 0DF5C662 		add	r2, sp, #1584
 2995 1242 F6AD     		add	r5, sp, #984
 2996 1244 0DF5707E 		add	lr, sp, #960
 2997 1248 0DF55278 		add	r8, sp, #840
 2998 124c 0DF56A79 		add	r9, sp, #936
 2999 1250 0DF54C7A 		add	r10, sp, #816
 3000 1254 0794     		str	r4, [sp, #28]
 3001 1256 0DF57C7C 		add	ip, sp, #1008
 3002              	.LVL87:
 3003              	.L26:
 389:masked_fips202.c ****         {
 390:masked_fips202.c ****             Ebu[i] ^= Du[i];
 3004              		.loc 1 390 13 is_stmt 1 discriminator 3 view .LVU939
 3005              		.loc 1 390 25 is_stmt 0 discriminator 3 view .LVU940
 3006 125a DCE90076 		ldrd	r7, r6, [ip]
 3007              		.loc 1 390 20 discriminator 3 view .LVU941
 3008 125e 1C68     		ldr	r4, [r3]
 3009 1260 6740     		eors	r7, r7, r4
 3010 1262 5C68     		ldr	r4, [r3, #4]
 3011 1264 43F8087B 		str	r7, [r3], #8
 3012 1268 84EA060B 		eor	fp, r4, r6
 391:masked_fips202.c ****             BCa[i] = ROL(Ebu[i], 27);
 3013              		.loc 1 391 22 discriminator 3 view .LVU942
 3014 126c 4FEACB66 		lsl	r6, fp, #27
 3015              		.loc 1 391 20 discriminator 3 view .LVU943
 3016 1270 079C     		ldr	r4, [sp, #28]
 390:masked_fips202.c ****             BCa[i] = ROL(Ebu[i], 27);
 3017              		.loc 1 390 20 discriminator 3 view .LVU944
 3018 1272 43F804BC 		str	fp, [r3, #-4]
 3019              		.loc 1 391 13 is_stmt 1 discriminator 3 view .LVU945
 3020              		.loc 1 391 22 is_stmt 0 discriminator 3 view .LVU946
 3021 1276 46EA5716 		orr	r6, r6, r7, lsr #5
 3022 127a FF06     		lsls	r7, r7, #27
 3023 127c 47EA5B17 		orr	r7, r7, fp, lsr #5
 3024              		.loc 1 391 20 discriminator 3 view .LVU947
 3025 1280 C4E90076 		strd	r7, r6, [r4]
 3026 1284 0834     		adds	r4, r4, #8
 3027 1286 0794     		str	r4, [sp, #28]
 392:masked_fips202.c ****             Ega[i] ^= Da[i];
 3028              		.loc 1 392 13 is_stmt 1 discriminator 3 view .LVU948
 3029              		.loc 1 392 20 is_stmt 0 discriminator 3 view .LVU949
 3030 1288 039C     		ldr	r4, [sp, #12]
 3031 128a 2468     		ldr	r4, [r4]
 3032 128c 0894     		str	r4, [sp, #32]
 3033 128e 039C     		ldr	r4, [sp, #12]
 3034 1290 6468     		ldr	r4, [r4, #4]
 3035 1292 0994     		str	r4, [sp, #36]
 3036              		.loc 1 392 25 discriminator 3 view .LVU950
 3037 1294 069C     		ldr	r4, [sp, #24]
 3038 1296 D4E90076 		ldrd	r7, r6, [r4]
 3039 129a 0834     		adds	r4, r4, #8
 3040 129c 0694     		str	r4, [sp, #24]
 3041              		.loc 1 392 20 discriminator 3 view .LVU951
 3042 129e 089C     		ldr	r4, [sp, #32]
 3043 12a0 6740     		eors	r7, r7, r4
 3044 12a2 099C     		ldr	r4, [sp, #36]
 3045 12a4 6640     		eors	r6, r6, r4
 3046 12a6 039C     		ldr	r4, [sp, #12]
 3047 12a8 44F8087B 		str	r7, [r4], #8
 393:masked_fips202.c ****             BCe[i] = ROL(Ega[i], 36);
 3048              		.loc 1 393 22 discriminator 3 view .LVU952
 3049 12ac 4FEA177B 		lsr	fp, r7, #28
 392:masked_fips202.c ****             Ega[i] ^= Da[i];
 3050              		.loc 1 392 20 discriminator 3 view .LVU953
 3051 12b0 44F8046C 		str	r6, [r4, #-4]
 3052              		.loc 1 393 13 is_stmt 1 discriminator 3 view .LVU954
 3053              		.loc 1 393 22 is_stmt 0 discriminator 3 view .LVU955
 3054 12b4 4BEA061B 		orr	fp, fp, r6, lsl #4
 3055 12b8 360F     		lsrs	r6, r6, #28
 3056 12ba 46EA0716 		orr	r6, r6, r7, lsl #4
 3057              		.loc 1 393 20 discriminator 3 view .LVU956
 3058 12be CAE900B6 		strd	fp, r6, [r10]
 394:masked_fips202.c ****             Eke[i] ^= De[i];
 3059              		.loc 1 394 25 discriminator 3 view .LVU957
 3060 12c2 D9E90076 		ldrd	r7, r6, [r9]
 392:masked_fips202.c ****             Ega[i] ^= Da[i];
 3061              		.loc 1 392 20 discriminator 3 view .LVU958
 3062 12c6 0394     		str	r4, [sp, #12]
 3063              		.loc 1 394 20 discriminator 3 view .LVU959
 3064 12c8 0468     		ldr	r4, [r0]
 3065 12ca 6740     		eors	r7, r7, r4
 3066 12cc 4468     		ldr	r4, [r0, #4]
 3067 12ce 40F8087B 		str	r7, [r0], #8
 3068 12d2 84EA060B 		eor	fp, r4, r6
 395:masked_fips202.c ****             BCi[i] = ROL(Eke[i], 10);
 3069              		.loc 1 395 22 discriminator 3 view .LVU960
 3070 12d6 4FEA8B26 		lsl	r6, fp, #10
 3071 12da 46EA9756 		orr	r6, r6, r7, lsr #22
 3072 12de BF02     		lsls	r7, r7, #10
 3073 12e0 47EA9B57 		orr	r7, r7, fp, lsr #22
 3074              		.loc 1 395 20 discriminator 3 view .LVU961
 3075 12e4 C8E90076 		strd	r7, r6, [r8]
 396:masked_fips202.c ****             Emi[i] ^= Di[i];
 3076              		.loc 1 396 25 discriminator 3 view .LVU962
 3077 12e8 DEE90076 		ldrd	r7, r6, [lr]
 3078              		.loc 1 396 20 discriminator 3 view .LVU963
 3079 12ec 0C68     		ldr	r4, [r1]
 394:masked_fips202.c ****             Eke[i] ^= De[i];
 3080              		.loc 1 394 20 discriminator 3 view .LVU964
 3081 12ee 40F804BC 		str	fp, [r0, #-4]
 3082              		.loc 1 396 20 discriminator 3 view .LVU965
 3083 12f2 6740     		eors	r7, r7, r4
 3084 12f4 4C68     		ldr	r4, [r1, #4]
 3085 12f6 41F8087B 		str	r7, [r1], #8
 3086 12fa 84EA060B 		eor	fp, r4, r6
 397:masked_fips202.c ****             BCo[i] = ROL(Emi[i], 15);
 3087              		.loc 1 397 22 discriminator 3 view .LVU966
 3088 12fe 4FEACB36 		lsl	r6, fp, #15
 3089              		.loc 1 397 20 discriminator 3 view .LVU967
 3090 1302 029C     		ldr	r4, [sp, #8]
 396:masked_fips202.c ****             Emi[i] ^= Di[i];
 3091              		.loc 1 396 20 discriminator 3 view .LVU968
 3092 1304 41F804BC 		str	fp, [r1, #-4]
 3093              		.loc 1 397 22 discriminator 3 view .LVU969
 3094 1308 46EA5746 		orr	r6, r6, r7, lsr #17
 3095 130c FF03     		lsls	r7, r7, #15
 3096 130e 47EA5B47 		orr	r7, r7, fp, lsr #17
 3097              		.loc 1 397 20 discriminator 3 view .LVU970
 3098 1312 C4E90076 		strd	r7, r6, [r4]
 398:masked_fips202.c ****             Eso[i] ^= Do[i];
 3099              		.loc 1 398 25 discriminator 3 view .LVU971
 3100 1316 D5E90076 		ldrd	r7, r6, [r5]
 3101 131a 0834     		adds	r4, r4, #8
 3102 131c 0294     		str	r4, [sp, #8]
 3103              		.loc 1 398 20 discriminator 3 view .LVU972
 3104 131e 1468     		ldr	r4, [r2]
 3105 1320 6740     		eors	r7, r7, r4
 3106 1322 5468     		ldr	r4, [r2, #4]
 3107 1324 42F8087B 		str	r7, [r2], #8
 3108 1328 6640     		eors	r6, r6, r4
 399:masked_fips202.c ****             BCu[i] = ROL(Eso[i], 56);
 3109              		.loc 1 399 22 discriminator 3 view .LVU973
 3110 132a 4FEA172B 		lsr	fp, r7, #8
 3111              		.loc 1 399 20 discriminator 3 view .LVU974
 3112 132e 019C     		ldr	r4, [sp, #4]
 398:masked_fips202.c ****             Eso[i] ^= Do[i];
 3113              		.loc 1 398 20 discriminator 3 view .LVU975
 3114 1330 42F8046C 		str	r6, [r2, #-4]
 3115              		.loc 1 399 22 discriminator 3 view .LVU976
 3116 1334 4BEA066B 		orr	fp, fp, r6, lsl #24
 3117 1338 360A     		lsrs	r6, r6, #8
 3118 133a 46EA0766 		orr	r6, r6, r7, lsl #24
 3119              		.loc 1 399 20 discriminator 3 view .LVU977
 3120 133e C4E900B6 		strd	fp, r6, [r4]
 3121 1342 0834     		adds	r4, r4, #8
 3122 1344 0194     		str	r4, [sp, #4]
 388:masked_fips202.c ****         {
 3123              		.loc 1 388 9 discriminator 3 view .LVU978
 3124 1346 0DF59064 		add	r4, sp, #1152
 3125 134a 9C42     		cmp	r4, r3
 3126 134c 0CF1080C 		add	ip, ip, #8
 3127 1350 0AF1080A 		add	r10, r10, #8
 394:masked_fips202.c ****             BCi[i] = ROL(Eke[i], 10);
 3128              		.loc 1 394 13 is_stmt 1 discriminator 3 view .LVU979
 395:masked_fips202.c ****             Emi[i] ^= Di[i];
 3129              		.loc 1 395 13 discriminator 3 view .LVU980
 3130 1354 09F10809 		add	r9, r9, #8
 3131 1358 08F10808 		add	r8, r8, #8
 396:masked_fips202.c ****             BCo[i] = ROL(Emi[i], 15);
 3132              		.loc 1 396 13 discriminator 3 view .LVU981
 397:masked_fips202.c ****             Eso[i] ^= Do[i];
 3133              		.loc 1 397 13 discriminator 3 view .LVU982
 398:masked_fips202.c ****             BCu[i] = ROL(Eso[i], 56);
 3134              		.loc 1 398 13 discriminator 3 view .LVU983
 3135              		.loc 1 399 13 discriminator 3 view .LVU984
 388:masked_fips202.c ****         {
 3136              		.loc 1 388 46 discriminator 3 view .LVU985
 388:masked_fips202.c ****         {
 3137              		.loc 1 388 21 discriminator 3 view .LVU986
 3138 135c 0EF1080E 		add	lr, lr, #8
 3139 1360 05F10805 		add	r5, r5, #8
 388:masked_fips202.c ****         {
 3140              		.loc 1 388 9 is_stmt 0 discriminator 3 view .LVU987
 3141 1364 7FF479AF 		bne	.L26
 400:masked_fips202.c ****         }
 401:masked_fips202.c ****         not_mult_xor(Ama, BCe, BCi, BCa);
 3142              		.loc 1 401 9 is_stmt 1 view .LVU988
 3143 1368 C6AB     		add	r3, sp, #792
 3144 136a D2AA     		add	r2, sp, #840
 3145 136c CCA9     		add	r1, sp, #816
 3146 136e 8AA8     		add	r0, sp, #552
 3147 1370 FFF7FEFF 		bl	not_mult_xor
 3148              	.LVL88:
 402:masked_fips202.c ****         not_mult_xor(Ame, BCi, BCo, BCe);
 3149              		.loc 1 402 9 view .LVU989
 3150 1374 CCAB     		add	r3, sp, #816
 3151 1376 D8AA     		add	r2, sp, #864
 3152 1378 D2A9     		add	r1, sp, #840
 3153 137a 90A8     		add	r0, sp, #576
 3154 137c FFF7FEFF 		bl	not_mult_xor
 3155              	.LVL89:
 403:masked_fips202.c ****         not_mult_xor(Ami, BCo, BCu, BCi);
 3156              		.loc 1 403 9 view .LVU990
 3157 1380 D2AB     		add	r3, sp, #840
 3158 1382 DEAA     		add	r2, sp, #888
 3159 1384 D8A9     		add	r1, sp, #864
 3160 1386 96A8     		add	r0, sp, #600
 3161 1388 FFF7FEFF 		bl	not_mult_xor
 3162              	.LVL90:
 404:masked_fips202.c ****         not_mult_xor(Amo, BCu, BCa, BCo);
 3163              		.loc 1 404 9 view .LVU991
 3164 138c D8AB     		add	r3, sp, #864
 3165 138e C6AA     		add	r2, sp, #792
 3166 1390 DEA9     		add	r1, sp, #888
 3167 1392 9CA8     		add	r0, sp, #624
 3168 1394 FFF7FEFF 		bl	not_mult_xor
 3169              	.LVL91:
 405:masked_fips202.c ****         not_mult_xor(Amu, BCa, BCe, BCu);
 3170              		.loc 1 405 9 view .LVU992
 3171 1398 DEAB     		add	r3, sp, #888
 3172 139a CCAA     		add	r2, sp, #816
 3173 139c C6A9     		add	r1, sp, #792
 3174 139e A2A8     		add	r0, sp, #648
 3175 13a0 FFF7FEFF 		bl	not_mult_xor
 3176              	.LVL92:
 406:masked_fips202.c ****         //Ama = BCa ^ ((~BCe) & BCi);
 407:masked_fips202.c ****         //Ame = BCe ^ ((~BCi) & BCo);
 408:masked_fips202.c ****         //Ami = BCi ^ ((~BCo) & BCu);
 409:masked_fips202.c ****         //Amo = BCo ^ ((~BCu) & BCa);
 410:masked_fips202.c ****         //Amu = BCu ^ ((~BCa) & BCe);
 411:masked_fips202.c ****         for (i = 0; i < (MASKING_ORDER + 1); i++)
 3177              		.loc 1 411 9 view .LVU993
 3178              		.loc 1 411 21 view .LVU994
 3179 13a4 0DF58763 		add	r3, sp, #1080
 3180 13a8 0DF59960 		add	r0, sp, #1224
 3181 13ac 0DF5AB61 		add	r1, sp, #1368
 3182 13b0 0DF5C062 		add	r2, sp, #1536
 3183 13b4 0DF58A6C 		add	ip, sp, #1104
 3184              	.LVL93:
 3185              	.L27:
 412:masked_fips202.c ****         {
 413:masked_fips202.c ****             Ebi[i] ^= Di[i];
 3186              		.loc 1 413 13 discriminator 3 view .LVU995
 3187              		.loc 1 413 25 is_stmt 0 discriminator 3 view .LVU996
 3188 13b8 1C9C     		ldr	r4, [sp, #112]
 3189              		.loc 1 413 20 discriminator 3 view .LVU997
 3190 13ba 5D68     		ldr	r5, [r3, #4]
 3191              		.loc 1 413 25 discriminator 3 view .LVU998
 3192 13bc D4E90067 		ldrd	r6, r7, [r4]
 3193 13c0 0834     		adds	r4, r4, #8
 3194 13c2 1C94     		str	r4, [sp, #112]
 3195              		.loc 1 413 20 discriminator 3 view .LVU999
 3196 13c4 1C68     		ldr	r4, [r3]
 3197 13c6 6640     		eors	r6, r6, r4
 3198 13c8 43F8086B 		str	r6, [r3], #8
 3199 13cc 7D40     		eors	r5, r5, r7
 414:masked_fips202.c ****             BCa[i] = ROL(Ebi[i], 62);
 3200              		.loc 1 414 22 discriminator 3 view .LVU1000
 3201 13ce B708     		lsrs	r7, r6, #2
 3202              		.loc 1 414 20 discriminator 3 view .LVU1001
 3203 13d0 1B9C     		ldr	r4, [sp, #108]
 413:masked_fips202.c ****             BCa[i] = ROL(Ebi[i], 62);
 3204              		.loc 1 413 20 discriminator 3 view .LVU1002
 3205 13d2 43F8045C 		str	r5, [r3, #-4]
 3206              		.loc 1 414 13 is_stmt 1 discriminator 3 view .LVU1003
 3207              		.loc 1 414 22 is_stmt 0 discriminator 3 view .LVU1004
 3208 13d6 47EA8577 		orr	r7, r7, r5, lsl #30
 3209 13da AD08     		lsrs	r5, r5, #2
 3210 13dc 45EA8675 		orr	r5, r5, r6, lsl #30
 3211              		.loc 1 414 20 discriminator 3 view .LVU1005
 3212 13e0 C4E90075 		strd	r7, r5, [r4]
 3213 13e4 0834     		adds	r4, r4, #8
 3214 13e6 1B94     		str	r4, [sp, #108]
 415:masked_fips202.c ****             Ego[i] ^= Do[i];
 3215              		.loc 1 415 13 is_stmt 1 discriminator 3 view .LVU1006
 3216              		.loc 1 415 25 is_stmt 0 discriminator 3 view .LVU1007
 3217 13e8 1A9C     		ldr	r4, [sp, #104]
 3218              		.loc 1 415 20 discriminator 3 view .LVU1008
 3219 13ea 4568     		ldr	r5, [r0, #4]
 3220              		.loc 1 415 25 discriminator 3 view .LVU1009
 3221 13ec D4E90067 		ldrd	r6, r7, [r4]
 3222 13f0 0834     		adds	r4, r4, #8
 3223 13f2 1A94     		str	r4, [sp, #104]
 3224              		.loc 1 415 20 discriminator 3 view .LVU1010
 3225 13f4 0468     		ldr	r4, [r0]
 3226 13f6 6640     		eors	r6, r6, r4
 3227 13f8 40F8086B 		str	r6, [r0], #8
 3228 13fc 7D40     		eors	r5, r5, r7
 416:masked_fips202.c ****             BCe[i] = ROL(Ego[i], 55);
 3229              		.loc 1 416 22 discriminator 3 view .LVU1011
 3230 13fe 770A     		lsrs	r7, r6, #9
 3231              		.loc 1 416 20 discriminator 3 view .LVU1012
 3232 1400 199C     		ldr	r4, [sp, #100]
 415:masked_fips202.c ****             Ego[i] ^= Do[i];
 3233              		.loc 1 415 20 discriminator 3 view .LVU1013
 3234 1402 40F8045C 		str	r5, [r0, #-4]
 3235              		.loc 1 416 13 is_stmt 1 discriminator 3 view .LVU1014
 3236              		.loc 1 416 22 is_stmt 0 discriminator 3 view .LVU1015
 3237 1406 47EAC557 		orr	r7, r7, r5, lsl #23
 3238 140a 6D0A     		lsrs	r5, r5, #9
 3239 140c 45EAC655 		orr	r5, r5, r6, lsl #23
 3240              		.loc 1 416 20 discriminator 3 view .LVU1016
 3241 1410 C4E90075 		strd	r7, r5, [r4]
 3242 1414 0834     		adds	r4, r4, #8
 3243 1416 1994     		str	r4, [sp, #100]
 417:masked_fips202.c ****             Eku[i] ^= Du[i];
 3244              		.loc 1 417 13 is_stmt 1 discriminator 3 view .LVU1017
 3245              		.loc 1 417 25 is_stmt 0 discriminator 3 view .LVU1018
 3246 1418 189C     		ldr	r4, [sp, #96]
 3247              		.loc 1 417 20 discriminator 3 view .LVU1019
 3248 141a 4D68     		ldr	r5, [r1, #4]
 3249              		.loc 1 417 25 discriminator 3 view .LVU1020
 3250 141c D4E90067 		ldrd	r6, r7, [r4]
 3251 1420 0834     		adds	r4, r4, #8
 3252 1422 1894     		str	r4, [sp, #96]
 3253              		.loc 1 417 20 discriminator 3 view .LVU1021
 3254 1424 0C68     		ldr	r4, [r1]
 3255 1426 6640     		eors	r6, r6, r4
 3256 1428 41F8086B 		str	r6, [r1], #8
 3257 142c 7D40     		eors	r5, r5, r7
 418:masked_fips202.c ****             BCi[i] = ROL(Eku[i], 39);
 3258              		.loc 1 418 22 discriminator 3 view .LVU1022
 3259 142e 770E     		lsrs	r7, r6, #25
 3260 1430 47EAC517 		orr	r7, r7, r5, lsl #7
 417:masked_fips202.c ****             Eku[i] ^= Du[i];
 3261              		.loc 1 417 20 discriminator 3 view .LVU1023
 3262 1434 41F8045C 		str	r5, [r1, #-4]
 3263              		.loc 1 418 13 is_stmt 1 discriminator 3 view .LVU1024
 3264              		.loc 1 418 20 is_stmt 0 discriminator 3 view .LVU1025
 3265 1438 179C     		ldr	r4, [sp, #92]
 3266              		.loc 1 418 22 discriminator 3 view .LVU1026
 3267 143a 6D0E     		lsrs	r5, r5, #25
 3268 143c 45EAC615 		orr	r5, r5, r6, lsl #7
 3269              		.loc 1 418 20 discriminator 3 view .LVU1027
 3270 1440 C4E90075 		strd	r7, r5, [r4]
 3271 1444 0834     		adds	r4, r4, #8
 3272 1446 1794     		str	r4, [sp, #92]
 419:masked_fips202.c ****             Ema[i] ^= Da[i];
 3273              		.loc 1 419 13 is_stmt 1 discriminator 3 view .LVU1028
 3274              		.loc 1 419 20 is_stmt 0 discriminator 3 view .LVU1029
 3275 1448 049C     		ldr	r4, [sp, #16]
 3276 144a 2468     		ldr	r4, [r4]
 3277 144c 0194     		str	r4, [sp, #4]
 3278 144e 049C     		ldr	r4, [sp, #16]
 3279 1450 6568     		ldr	r5, [r4, #4]
 3280              		.loc 1 419 25 discriminator 3 view .LVU1030
 3281 1452 169C     		ldr	r4, [sp, #88]
 3282 1454 D4E90067 		ldrd	r6, r7, [r4]
 3283 1458 0834     		adds	r4, r4, #8
 3284 145a 1694     		str	r4, [sp, #88]
 3285              		.loc 1 419 20 discriminator 3 view .LVU1031
 3286 145c 019C     		ldr	r4, [sp, #4]
 3287 145e 6640     		eors	r6, r6, r4
 3288 1460 049C     		ldr	r4, [sp, #16]
 3289 1462 44F8086B 		str	r6, [r4], #8
 3290 1466 7D40     		eors	r5, r5, r7
 420:masked_fips202.c ****             BCo[i] = ROL(Ema[i], 41);
 3291              		.loc 1 420 22 discriminator 3 view .LVU1032
 3292 1468 F70D     		lsrs	r7, r6, #23
 419:masked_fips202.c ****             Ema[i] ^= Da[i];
 3293              		.loc 1 419 20 discriminator 3 view .LVU1033
 3294 146a 44F8045C 		str	r5, [r4, #-4]
 3295              		.loc 1 420 13 is_stmt 1 discriminator 3 view .LVU1034
 3296              		.loc 1 420 22 is_stmt 0 discriminator 3 view .LVU1035
 3297 146e 47EA4527 		orr	r7, r7, r5, lsl #9
 419:masked_fips202.c ****             Ema[i] ^= Da[i];
 3298              		.loc 1 419 20 discriminator 3 view .LVU1036
 3299 1472 0494     		str	r4, [sp, #16]
 3300              		.loc 1 420 22 discriminator 3 view .LVU1037
 3301 1474 ED0D     		lsrs	r5, r5, #23
 3302              		.loc 1 420 20 discriminator 3 view .LVU1038
 3303 1476 159C     		ldr	r4, [sp, #84]
 3304              		.loc 1 420 22 discriminator 3 view .LVU1039
 3305 1478 45EA4625 		orr	r5, r5, r6, lsl #9
 3306              		.loc 1 420 20 discriminator 3 view .LVU1040
 3307 147c C4E90075 		strd	r7, r5, [r4]
 3308 1480 0834     		adds	r4, r4, #8
 3309 1482 1594     		str	r4, [sp, #84]
 421:masked_fips202.c ****             Ese[i] ^= De[i];
 3310              		.loc 1 421 13 is_stmt 1 discriminator 3 view .LVU1041
 3311              		.loc 1 421 25 is_stmt 0 discriminator 3 view .LVU1042
 3312 1484 149C     		ldr	r4, [sp, #80]
 3313              		.loc 1 421 20 discriminator 3 view .LVU1043
 3314 1486 1668     		ldr	r6, [r2]
 3315              		.loc 1 421 25 discriminator 3 view .LVU1044
 3316 1488 D4E90075 		ldrd	r7, r5, [r4]
 3317 148c 0834     		adds	r4, r4, #8
 3318 148e 1494     		str	r4, [sp, #80]
 3319              		.loc 1 421 20 discriminator 3 view .LVU1045
 3320 1490 5468     		ldr	r4, [r2, #4]
 3321 1492 7E40     		eors	r6, r6, r7
 3322 1494 84EA0507 		eor	r7, r4, r5
 422:masked_fips202.c ****             BCu[i] = ROL(Ese[i], 2);
 3323              		.loc 1 422 22 discriminator 3 view .LVU1046
 3324 1498 BD00     		lsls	r5, r7, #2
 421:masked_fips202.c ****             Ese[i] ^= De[i];
 3325              		.loc 1 421 20 discriminator 3 view .LVU1047
 3326 149a 42F8086B 		str	r6, [r2], #8
 3327              		.loc 1 422 20 discriminator 3 view .LVU1048
 3328 149e 139C     		ldr	r4, [sp, #76]
 421:masked_fips202.c ****             Ese[i] ^= De[i];
 3329              		.loc 1 421 20 discriminator 3 view .LVU1049
 3330 14a0 42F8047C 		str	r7, [r2, #-4]
 3331              		.loc 1 422 13 is_stmt 1 discriminator 3 view .LVU1050
 3332              		.loc 1 422 22 is_stmt 0 discriminator 3 view .LVU1051
 3333 14a4 45EA9675 		orr	r5, r5, r6, lsr #30
 3334 14a8 B600     		lsls	r6, r6, #2
 3335 14aa 46EA9776 		orr	r6, r6, r7, lsr #30
 3336              		.loc 1 422 20 discriminator 3 view .LVU1052
 3337 14ae C4E90065 		strd	r6, r5, [r4]
 411:masked_fips202.c ****         {
 3338              		.loc 1 411 9 discriminator 3 view .LVU1053
 3339 14b2 9C45     		cmp	ip, r3
 3340 14b4 04F10804 		add	r4, r4, #8
 3341 14b8 1394     		str	r4, [sp, #76]
 411:masked_fips202.c ****         {
 3342              		.loc 1 411 46 is_stmt 1 discriminator 3 view .LVU1054
 411:masked_fips202.c ****         {
 3343              		.loc 1 411 21 discriminator 3 view .LVU1055
 411:masked_fips202.c ****         {
 3344              		.loc 1 411 9 is_stmt 0 discriminator 3 view .LVU1056
 3345 14ba 7FF47DAF 		bne	.L27
 423:masked_fips202.c ****         }
 424:masked_fips202.c ****         not_mult_xor(Asa, BCe, BCi, BCa);
 3346              		.loc 1 424 9 is_stmt 1 discriminator 2 view .LVU1057
 3347 14be C6AB     		add	r3, sp, #792
 3348 14c0 D2AA     		add	r2, sp, #840
 3349 14c2 CCA9     		add	r1, sp, #816
 3350 14c4 A8A8     		add	r0, sp, #672
 3351 14c6 FFF7FEFF 		bl	not_mult_xor
 3352              	.LVL94:
 425:masked_fips202.c ****         not_mult_xor(Ase, BCi, BCo, BCe);
 3353              		.loc 1 425 9 discriminator 2 view .LVU1058
 3354 14ca CCAB     		add	r3, sp, #816
 3355 14cc D8AA     		add	r2, sp, #864
 3356 14ce D2A9     		add	r1, sp, #840
 3357 14d0 AEA8     		add	r0, sp, #696
 3358 14d2 FFF7FEFF 		bl	not_mult_xor
 3359              	.LVL95:
 426:masked_fips202.c ****         not_mult_xor(Asi, BCo, BCu, BCi);
 3360              		.loc 1 426 9 discriminator 2 view .LVU1059
 3361 14d6 D2AB     		add	r3, sp, #840
 3362 14d8 DEAA     		add	r2, sp, #888
 3363 14da D8A9     		add	r1, sp, #864
 3364 14dc B4A8     		add	r0, sp, #720
 3365 14de FFF7FEFF 		bl	not_mult_xor
 3366              	.LVL96:
 427:masked_fips202.c ****         not_mult_xor(Aso, BCu, BCa, BCo);
 3367              		.loc 1 427 9 discriminator 2 view .LVU1060
 3368 14e2 D8AB     		add	r3, sp, #864
 3369 14e4 C6AA     		add	r2, sp, #792
 3370 14e6 DEA9     		add	r1, sp, #888
 3371 14e8 BAA8     		add	r0, sp, #744
 3372 14ea FFF7FEFF 		bl	not_mult_xor
 3373              	.LVL97:
 428:masked_fips202.c ****         not_mult_xor(Asu, BCa, BCe, BCu);
 3374              		.loc 1 428 9 discriminator 2 view .LVU1061
 3375 14ee DEAB     		add	r3, sp, #888
 3376 14f0 CCAA     		add	r2, sp, #816
 3377 14f2 C6A9     		add	r1, sp, #792
 3378 14f4 C0A8     		add	r0, sp, #768
 3379 14f6 FFF7FEFF 		bl	not_mult_xor
 3380              	.LVL98:
 170:masked_fips202.c ****     {
 3381              		.loc 1 170 38 discriminator 2 view .LVU1062
 170:masked_fips202.c ****     {
 3382              		.loc 1 170 44 is_stmt 0 discriminator 2 view .LVU1063
 3383 14fa 209B     		ldr	r3, [sp, #128]
 3384 14fc 0233     		adds	r3, r3, #2
 3385 14fe 2093     		str	r3, [sp, #128]
 3386              	.LVL99:
 170:masked_fips202.c ****     {
 3387              		.loc 1 170 21 is_stmt 1 discriminator 2 view .LVU1064
 170:masked_fips202.c ****     {
 3388              		.loc 1 170 5 is_stmt 0 discriminator 2 view .LVU1065
 3389 1500 059B     		ldr	r3, [sp, #20]
 3390              	.LVL100:
 170:masked_fips202.c ****     {
 3391              		.loc 1 170 5 discriminator 2 view .LVU1066
 3392 1502 1033     		adds	r3, r3, #16
 3393 1504 0593     		str	r3, [sp, #20]
 3394 1506 209B     		ldr	r3, [sp, #128]
 3395 1508 182B     		cmp	r3, #24
 3396 150a 7EF431AE 		bne	.L17
 3397 150e 0021     		movs	r1, #0
 3398              	.LVL101:
 3399              	.L28:
 429:masked_fips202.c ****         //Asa = BCa ^ ((~BCe) & BCi);
 430:masked_fips202.c ****         //Ase = BCe ^ ((~BCi) & BCo);
 431:masked_fips202.c ****         //Asi = BCi ^ ((~BCo) & BCu);
 432:masked_fips202.c ****         //Aso = BCo ^ ((~BCu) & BCa);
 433:masked_fips202.c ****         //Asu = BCu ^ ((~BCa) & BCe);
 434:masked_fips202.c ****     }
 435:masked_fips202.c **** 
 436:masked_fips202.c ****     for (i = 0; i < (MASKING_ORDER + 1); i++)
 437:masked_fips202.c ****     {
 438:masked_fips202.c ****         //copyToState(state, A)
 439:masked_fips202.c ****         state_masked[ 0+(i*25)] = Aba[i];
 3400              		.loc 1 439 9 is_stmt 1 discriminator 3 view .LVU1067
 3401              		.loc 1 439 38 is_stmt 0 discriminator 3 view .LVU1068
 3402 1510 1F98     		ldr	r0, [sp, #124]
 3403 1512 F0E80223 		ldrd	r2, [r0], #8
 3404 1516 1F90     		str	r0, [sp, #124]
 3405              		.loc 1 439 33 discriminator 3 view .LVU1069
 3406 1518 0098     		ldr	r0, [sp]
 3407 151a C0E90023 		strd	r2, [r0]
 440:masked_fips202.c ****         state_masked[ 1+(i*25)] = Abe[i];
 3408              		.loc 1 440 9 is_stmt 1 discriminator 3 view .LVU1070
 3409              		.loc 1 440 38 is_stmt 0 discriminator 3 view .LVU1071
 3410 151e 0E98     		ldr	r0, [sp, #56]
 3411 1520 F0E80223 		ldrd	r2, [r0], #8
 3412 1524 0E90     		str	r0, [sp, #56]
 3413              		.loc 1 440 33 discriminator 3 view .LVU1072
 3414 1526 0098     		ldr	r0, [sp]
 3415 1528 C0E90223 		strd	r2, [r0, #8]
 441:masked_fips202.c ****         state_masked[ 2+(i*25)] = Abi[i];
 3416              		.loc 1 441 9 is_stmt 1 discriminator 3 view .LVU1073
 3417              		.loc 1 441 38 is_stmt 0 discriminator 3 view .LVU1074
 3418 152c 0D98     		ldr	r0, [sp, #52]
 3419 152e F0E80223 		ldrd	r2, [r0], #8
 3420 1532 0D90     		str	r0, [sp, #52]
 3421              		.loc 1 441 33 discriminator 3 view .LVU1075
 3422 1534 0098     		ldr	r0, [sp]
 3423 1536 C0E90423 		strd	r2, [r0, #16]
 442:masked_fips202.c ****         state_masked[ 3+(i*25)] = Abo[i];
 3424              		.loc 1 442 9 is_stmt 1 discriminator 3 view .LVU1076
 3425              		.loc 1 442 38 is_stmt 0 discriminator 3 view .LVU1077
 3426 153a 0C98     		ldr	r0, [sp, #48]
 3427 153c F0E80223 		ldrd	r2, [r0], #8
 3428 1540 0C90     		str	r0, [sp, #48]
 3429              		.loc 1 442 33 discriminator 3 view .LVU1078
 3430 1542 0098     		ldr	r0, [sp]
 3431 1544 C0E90623 		strd	r2, [r0, #24]
 443:masked_fips202.c ****         state_masked[ 4+(i*25)] = Abu[i];
 3432              		.loc 1 443 9 is_stmt 1 discriminator 3 view .LVU1079
 3433              		.loc 1 443 38 is_stmt 0 discriminator 3 view .LVU1080
 3434 1548 0B98     		ldr	r0, [sp, #44]
 3435 154a F0E80223 		ldrd	r2, [r0], #8
 3436 154e 0B90     		str	r0, [sp, #44]
 3437              		.loc 1 443 33 discriminator 3 view .LVU1081
 3438 1550 0098     		ldr	r0, [sp]
 3439 1552 C0E90823 		strd	r2, [r0, #32]
 444:masked_fips202.c ****         state_masked[ 5+(i*25)] = Aga[i];
 3440              		.loc 1 444 9 is_stmt 1 discriminator 3 view .LVU1082
 3441              		.loc 1 444 38 is_stmt 0 discriminator 3 view .LVU1083
 3442 1556 0A98     		ldr	r0, [sp, #40]
 3443 1558 F0E80223 		ldrd	r2, [r0], #8
 3444 155c 0A90     		str	r0, [sp, #40]
 3445              		.loc 1 444 33 discriminator 3 view .LVU1084
 3446 155e 0098     		ldr	r0, [sp]
 3447 1560 C0E90A23 		strd	r2, [r0, #40]
 445:masked_fips202.c ****         state_masked[ 6+(i*25)] = Age[i];
 3448              		.loc 1 445 9 is_stmt 1 discriminator 3 view .LVU1085
 3449              		.loc 1 445 38 is_stmt 0 discriminator 3 view .LVU1086
 3450 1564 1E98     		ldr	r0, [sp, #120]
 3451 1566 F0E80223 		ldrd	r2, [r0], #8
 3452 156a 1E90     		str	r0, [sp, #120]
 3453              		.loc 1 445 33 discriminator 3 view .LVU1087
 3454 156c 0098     		ldr	r0, [sp]
 3455 156e C0E90C23 		strd	r2, [r0, #48]
 446:masked_fips202.c ****         state_masked[ 7+(i*25)] = Agi[i];
 3456              		.loc 1 446 9 is_stmt 1 discriminator 3 view .LVU1088
 3457              		.loc 1 446 38 is_stmt 0 discriminator 3 view .LVU1089
 3458 1572 1D98     		ldr	r0, [sp, #116]
 3459 1574 F0E80223 		ldrd	r2, [r0], #8
 3460 1578 1D90     		str	r0, [sp, #116]
 3461              		.loc 1 446 33 discriminator 3 view .LVU1090
 3462 157a 0098     		ldr	r0, [sp]
 3463 157c C0E90E23 		strd	r2, [r0, #56]
 447:masked_fips202.c ****         state_masked[ 8+(i*25)] = Ago[i];
 3464              		.loc 1 447 9 is_stmt 1 discriminator 3 view .LVU1091
 3465              		.loc 1 447 38 is_stmt 0 discriminator 3 view .LVU1092
 3466 1580 60AB     		add	r3, sp, #384
 3467 1582 0B44     		add	r3, r3, r1
 3468              		.loc 1 447 33 discriminator 3 view .LVU1093
 3469 1584 D3E90023 		ldrd	r2, [r3]
 3470 1588 C0E91023 		strd	r2, [r0, #64]
 448:masked_fips202.c ****         state_masked[ 9+(i*25)] = Agu[i];
 3471              		.loc 1 448 9 is_stmt 1 discriminator 3 view .LVU1094
 3472              		.loc 1 448 38 is_stmt 0 discriminator 3 view .LVU1095
 3473 158c 66AB     		add	r3, sp, #408
 3474 158e 0B44     		add	r3, r3, r1
 3475              		.loc 1 448 33 discriminator 3 view .LVU1096
 3476 1590 D3E90023 		ldrd	r2, [r3]
 3477 1594 C0E91223 		strd	r2, [r0, #72]
 449:masked_fips202.c ****         state_masked[10+(i*25)] = Aka[i];
 3478              		.loc 1 449 9 is_stmt 1 discriminator 3 view .LVU1097
 3479              		.loc 1 449 38 is_stmt 0 discriminator 3 view .LVU1098
 3480 1598 6CAB     		add	r3, sp, #432
 3481 159a 0B44     		add	r3, r3, r1
 3482              		.loc 1 449 33 discriminator 3 view .LVU1099
 3483 159c D3E90023 		ldrd	r2, [r3]
 3484 15a0 C0E91423 		strd	r2, [r0, #80]
 450:masked_fips202.c ****         state_masked[11+(i*25)] = Ake[i];
 3485              		.loc 1 450 9 is_stmt 1 discriminator 3 view .LVU1100
 3486              		.loc 1 450 38 is_stmt 0 discriminator 3 view .LVU1101
 3487 15a4 72AB     		add	r3, sp, #456
 3488 15a6 0B44     		add	r3, r3, r1
 3489              		.loc 1 450 33 discriminator 3 view .LVU1102
 3490 15a8 D3E90023 		ldrd	r2, [r3]
 3491 15ac C0E91623 		strd	r2, [r0, #88]
 451:masked_fips202.c ****         state_masked[12+(i*25)] = Aki[i];
 3492              		.loc 1 451 9 is_stmt 1 discriminator 3 view .LVU1103
 3493              		.loc 1 451 38 is_stmt 0 discriminator 3 view .LVU1104
 3494 15b0 78AB     		add	r3, sp, #480
 3495 15b2 0B44     		add	r3, r3, r1
 3496              		.loc 1 451 33 discriminator 3 view .LVU1105
 3497 15b4 D3E90023 		ldrd	r2, [r3]
 3498 15b8 C0E91823 		strd	r2, [r0, #96]
 452:masked_fips202.c ****         state_masked[13+(i*25)] = Ako[i];
 3499              		.loc 1 452 9 is_stmt 1 discriminator 3 view .LVU1106
 3500              		.loc 1 452 38 is_stmt 0 discriminator 3 view .LVU1107
 3501 15bc 7EAB     		add	r3, sp, #504
 3502 15be 0B44     		add	r3, r3, r1
 3503              		.loc 1 452 33 discriminator 3 view .LVU1108
 3504 15c0 D3E90023 		ldrd	r2, [r3]
 3505 15c4 C0E91A23 		strd	r2, [r0, #104]
 453:masked_fips202.c ****         state_masked[14+(i*25)] = Aku[i];
 3506              		.loc 1 453 9 is_stmt 1 discriminator 3 view .LVU1109
 3507              		.loc 1 453 38 is_stmt 0 discriminator 3 view .LVU1110
 3508 15c8 84AB     		add	r3, sp, #528
 3509 15ca 0B44     		add	r3, r3, r1
 3510              		.loc 1 453 33 discriminator 3 view .LVU1111
 3511 15cc D3E90023 		ldrd	r2, [r3]
 3512 15d0 C0E91C23 		strd	r2, [r0, #112]
 454:masked_fips202.c ****         state_masked[15+(i*25)] = Ama[i];
 3513              		.loc 1 454 9 is_stmt 1 discriminator 3 view .LVU1112
 3514              		.loc 1 454 38 is_stmt 0 discriminator 3 view .LVU1113
 3515 15d4 8AAB     		add	r3, sp, #552
 3516 15d6 0B44     		add	r3, r3, r1
 3517              		.loc 1 454 33 discriminator 3 view .LVU1114
 3518 15d8 D3E90023 		ldrd	r2, [r3]
 3519 15dc C0E91E23 		strd	r2, [r0, #120]
 455:masked_fips202.c ****         state_masked[16+(i*25)] = Ame[i];
 3520              		.loc 1 455 9 is_stmt 1 discriminator 3 view .LVU1115
 3521              		.loc 1 455 38 is_stmt 0 discriminator 3 view .LVU1116
 3522 15e0 90AB     		add	r3, sp, #576
 3523 15e2 0B44     		add	r3, r3, r1
 3524              		.loc 1 455 33 discriminator 3 view .LVU1117
 3525 15e4 D3E90023 		ldrd	r2, [r3]
 3526 15e8 C0E92023 		strd	r2, [r0, #128]
 456:masked_fips202.c ****         state_masked[17+(i*25)] = Ami[i];
 3527              		.loc 1 456 9 is_stmt 1 discriminator 3 view .LVU1118
 3528              		.loc 1 456 38 is_stmt 0 discriminator 3 view .LVU1119
 3529 15ec 96AB     		add	r3, sp, #600
 3530 15ee 0B44     		add	r3, r3, r1
 3531              		.loc 1 456 33 discriminator 3 view .LVU1120
 3532 15f0 D3E90023 		ldrd	r2, [r3]
 3533 15f4 C0E92223 		strd	r2, [r0, #136]
 457:masked_fips202.c ****         state_masked[18+(i*25)] = Amo[i];
 3534              		.loc 1 457 9 is_stmt 1 discriminator 3 view .LVU1121
 3535              		.loc 1 457 38 is_stmt 0 discriminator 3 view .LVU1122
 3536 15f8 0DF5CC63 		add	r3, sp, #1632
 3537 15fc 0B44     		add	r3, r3, r1
 3538              		.loc 1 457 33 discriminator 3 view .LVU1123
 3539 15fe 53E9FC23 		ldrd	r2, [r3, #-1008]
 3540 1602 C0E92423 		strd	r2, [r0, #144]
 458:masked_fips202.c ****         state_masked[19+(i*25)] = Amu[i];
 3541              		.loc 1 458 9 is_stmt 1 discriminator 3 view .LVU1124
 3542              		.loc 1 458 38 is_stmt 0 discriminator 3 view .LVU1125
 3543 1606 0DF5CC63 		add	r3, sp, #1632
 3544 160a 0B44     		add	r3, r3, r1
 3545              		.loc 1 458 33 discriminator 3 view .LVU1126
 3546 160c 53E9F623 		ldrd	r2, [r3, #-984]
 3547 1610 C0E92623 		strd	r2, [r0, #152]
 459:masked_fips202.c ****         state_masked[20+(i*25)] = Asa[i];
 3548              		.loc 1 459 9 is_stmt 1 discriminator 3 view .LVU1127
 3549              		.loc 1 459 38 is_stmt 0 discriminator 3 view .LVU1128
 3550 1614 A8AB     		add	r3, sp, #672
 3551 1616 0B44     		add	r3, r3, r1
 3552              		.loc 1 459 33 discriminator 3 view .LVU1129
 3553 1618 D3E90023 		ldrd	r2, [r3]
 3554 161c C0E92823 		strd	r2, [r0, #160]
 460:masked_fips202.c ****         state_masked[21+(i*25)] = Ase[i];
 3555              		.loc 1 460 9 is_stmt 1 discriminator 3 view .LVU1130
 3556              		.loc 1 460 38 is_stmt 0 discriminator 3 view .LVU1131
 3557 1620 AEAB     		add	r3, sp, #696
 3558 1622 0B44     		add	r3, r3, r1
 3559              		.loc 1 460 33 discriminator 3 view .LVU1132
 3560 1624 D3E90023 		ldrd	r2, [r3]
 3561 1628 C0E92A23 		strd	r2, [r0, #168]
 461:masked_fips202.c ****         state_masked[22+(i*25)] = Asi[i];
 3562              		.loc 1 461 9 is_stmt 1 discriminator 3 view .LVU1133
 3563              		.loc 1 461 38 is_stmt 0 discriminator 3 view .LVU1134
 3564 162c 0DF5CC63 		add	r3, sp, #1632
 3565 1630 0B44     		add	r3, r3, r1
 3566              		.loc 1 461 33 discriminator 3 view .LVU1135
 3567 1632 53E9E423 		ldrd	r2, [r3, #-912]
 3568 1636 C0E92C23 		strd	r2, [r0, #176]
 462:masked_fips202.c ****         state_masked[23+(i*25)] = Aso[i];
 3569              		.loc 1 462 9 is_stmt 1 discriminator 3 view .LVU1136
 3570              		.loc 1 462 38 is_stmt 0 discriminator 3 view .LVU1137
 3571 163a 0DF5CC63 		add	r3, sp, #1632
 3572 163e 0B44     		add	r3, r3, r1
 3573              		.loc 1 462 33 discriminator 3 view .LVU1138
 3574 1640 53E9DE23 		ldrd	r2, [r3, #-888]
 3575 1644 C0E92E23 		strd	r2, [r0, #184]
 463:masked_fips202.c ****         state_masked[24+(i*25)] = Asu[i];
 3576              		.loc 1 463 9 is_stmt 1 discriminator 3 view .LVU1139
 3577              		.loc 1 463 38 is_stmt 0 discriminator 3 view .LVU1140
 3578 1648 0DF5CC63 		add	r3, sp, #1632
 3579 164c 0B44     		add	r3, r3, r1
 3580              		.loc 1 463 33 discriminator 3 view .LVU1141
 3581 164e 53E9D823 		ldrd	r2, [r3, #-864]
 436:masked_fips202.c ****     {
 3582              		.loc 1 436 5 discriminator 3 view .LVU1142
 3583 1652 0831     		adds	r1, r1, #8
 3584              		.loc 1 463 33 discriminator 3 view .LVU1143
 3585 1654 C0E93023 		strd	r2, [r0, #192]
 436:masked_fips202.c ****     {
 3586              		.loc 1 436 42 is_stmt 1 discriminator 3 view .LVU1144
 436:masked_fips202.c ****     {
 3587              		.loc 1 436 17 discriminator 3 view .LVU1145
 436:masked_fips202.c ****     {
 3588              		.loc 1 436 5 is_stmt 0 discriminator 3 view .LVU1146
 3589 1658 0346     		mov	r3, r0
 3590 165a C833     		adds	r3, r3, #200
 3591 165c 1829     		cmp	r1, #24
 3592 165e 0093     		str	r3, [sp]
 3593 1660 7FF456AF 		bne	.L28
 464:masked_fips202.c ****     }
 465:masked_fips202.c **** 	return;
 466:masked_fips202.c **** }
 3594              		.loc 1 466 1 view .LVU1147
 3595 1664 0DF2646D 		addw	sp, sp, #1636
 3596              	.LCFI8:
 3597              		.cfi_def_cfa_offset 36
 3598              		@ sp needed
 3599 1668 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3600              		.loc 1 466 1 view .LVU1148
 3601              		.cfi_endproc
 3602              	.LFE5:
 3604              		.section	.text.keccak_squeezeblocks_masked,"ax",%progbits
 3605              		.align	1
 3606              		.syntax unified
 3607              		.thumb
 3608              		.thumb_func
 3609              		.fpu softvfp
 3611              	keccak_squeezeblocks_masked:
 3612              	.LVL102:
 3613              	.LFB7:
 467:masked_fips202.c **** 
 468:masked_fips202.c **** /*************************************************
 469:masked_fips202.c **** * Name:        keccak_absorb_masked
 470:masked_fips202.c **** *
 471:masked_fips202.c **** * Description: Absorb step of Keccak;
 472:masked_fips202.c **** *              non-incremental, starts by zeroeing the state.
 473:masked_fips202.c **** *
 474:masked_fips202.c **** * Arguments:   - uint64_t *s: pointer to (uninitialized) output Keccak state
 475:masked_fips202.c **** *              - unsigned int r: rate in bytes (e.g., 168 for SHAKE128)
 476:masked_fips202.c **** *              - const uint8_t *m: pointer to input to be absorbed into s
 477:masked_fips202.c **** *              - size_t mlen: length of input in bytes
 478:masked_fips202.c **** *              - uint8_t p: domain-separation byte for different
 479:masked_fips202.c **** *                           Keccak-derived functions
 480:masked_fips202.c **** **************************************************/
 481:masked_fips202.c ****  void keccak_absorb_masked(uint64_t s_masked[25 * (MASKING_ORDER + 1)],
 482:masked_fips202.c ****                            unsigned int r,
 483:masked_fips202.c ****                            const uint8_t* m_masked,
 484:masked_fips202.c ****                            size_t mlen,
 485:masked_fips202.c ****                            uint8_t p)
 486:masked_fips202.c **** {
 487:masked_fips202.c ****     size_t i, tmp_mlen;
 488:masked_fips202.c ****     unsigned int l;
 489:masked_fips202.c ****     uint8_t t[200*(MASKING_ORDER+1)] = { 0 };
 490:masked_fips202.c ****     tmp_mlen = mlen;
 491:masked_fips202.c ****     /* Zero state */
 492:masked_fips202.c ****     for (l = 0; l < (MASKING_ORDER + 1); l++)
 493:masked_fips202.c ****     {
 494:masked_fips202.c ****         for (i = 0; i < 25; i++)
 495:masked_fips202.c ****             s_masked[i+(25*l)] = 0;
 496:masked_fips202.c ****     }
 497:masked_fips202.c ****     
 498:masked_fips202.c ****     while (mlen >= r) {
 499:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 500:masked_fips202.c ****         {
 501:masked_fips202.c ****             for (i = 0; i < r / 8; i++)
 502:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 503:masked_fips202.c ****         }
 504:masked_fips202.c ****         KeccakF1600_StatePermute_masked(s_masked);
 505:masked_fips202.c ****         mlen -= r;
 506:masked_fips202.c ****         m_masked += r;
 507:masked_fips202.c ****     }
 508:masked_fips202.c ****     for (l = 0; l < (MASKING_ORDER + 1); l++)
 509:masked_fips202.c ****     {
 510:masked_fips202.c **** 		
 511:masked_fips202.c **** 		for (i = 0; i < mlen; i++)
 512:masked_fips202.c **** 			t[i + (200 * l)] = m_masked[i + (l * tmp_mlen)];
 513:masked_fips202.c **** 		
 514:masked_fips202.c ****         t[i] = p; //Only in the first share
 515:masked_fips202.c ****         t[r - 1] |= 128; //Only in the first share
 516:masked_fips202.c **** 		
 517:masked_fips202.c ****         for (i = 0; i < r / 8; i++)
 518:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 519:masked_fips202.c ****     }
 520:masked_fips202.c **** }
 521:masked_fips202.c **** /*************************************************
 522:masked_fips202.c **** * Name:        keccak_squeezeblocks
 523:masked_fips202.c **** *
 524:masked_fips202.c **** * Description: Squeeze step of Keccak. Squeezes full blocks of r bytes each.
 525:masked_fips202.c **** *              Modifies the state. Can be called multiple times to keep
 526:masked_fips202.c **** *              squeezing, i.e., is incremental.
 527:masked_fips202.c **** *
 528:masked_fips202.c **** * Arguments:   - uint8_t *h: pointer to output blocks
 529:masked_fips202.c **** *              - size_t nblocks: number of blocks to be squeezed (written to h)
 530:masked_fips202.c **** *              - uint64_t *s: pointer to input/output Keccak state
 531:masked_fips202.c **** *              - unsigned int r: rate in bytes (e.g., 168 for SHAKE128)
 532:masked_fips202.c **** **************************************************/
 533:masked_fips202.c **** static void keccak_squeezeblocks_masked(uint8_t* out_masked,
 534:masked_fips202.c ****                                         size_t nblocks,
 535:masked_fips202.c ****                                         uint64_t s_masked[25*(MASKING_ORDER+1)],
 536:masked_fips202.c ****                                         unsigned int r,
 537:masked_fips202.c ****                                         size_t outlen)
 538:masked_fips202.c **** {
 3614              		.loc 1 538 1 is_stmt 1 view -0
 3615              		.cfi_startproc
 3616              		@ args = 4, pretend = 0, frame = 16
 3617              		@ frame_needed = 0, uses_anonymous_args = 0
 539:masked_fips202.c ****     unsigned int i,l,offset;
 3618              		.loc 1 539 5 view .LVU1150
 540:masked_fips202.c ****     if (outlen == 0)
 3619              		.loc 1 540 5 view .LVU1151
 538:masked_fips202.c ****     unsigned int i,l,offset;
 3620              		.loc 1 538 1 is_stmt 0 view .LVU1152
 3621 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3622              	.LCFI9:
 3623              		.cfi_def_cfa_offset 36
 3624              		.cfi_offset 4, -36
 3625              		.cfi_offset 5, -32
 3626              		.cfi_offset 6, -28
 3627              		.cfi_offset 7, -24
 3628              		.cfi_offset 8, -20
 3629              		.cfi_offset 9, -16
 3630              		.cfi_offset 10, -12
 3631              		.cfi_offset 11, -8
 3632              		.cfi_offset 14, -4
 3633 0004 85B0     		sub	sp, sp, #20
 3634              	.LCFI10:
 3635              		.cfi_def_cfa_offset 56
 538:masked_fips202.c ****     unsigned int i,l,offset;
 3636              		.loc 1 538 1 view .LVU1153
 3637 0006 9A46     		mov	r10, r3
 3638              		.loc 1 540 8 view .LVU1154
 3639 0008 0E9B     		ldr	r3, [sp, #56]
 3640              	.LVL103:
 538:masked_fips202.c ****     unsigned int i,l,offset;
 3641              		.loc 1 538 1 view .LVU1155
 3642 000a 8346     		mov	fp, r0
 3643 000c 0C46     		mov	r4, r1
 3644 000e 9046     		mov	r8, r2
 3645              		.loc 1 540 8 view .LVU1156
 3646 0010 13B9     		cbnz	r3, .L46
 541:masked_fips202.c ****         offset = r * nblocks;
 3647              		.loc 1 541 9 is_stmt 1 view .LVU1157
 3648              		.loc 1 541 16 is_stmt 0 view .LVU1158
 3649 0012 0AFB01F3 		mul	r3, r10, r1
 3650 0016 0E93     		str	r3, [sp, #56]
 3651              	.LVL104:
 3652              	.L46:
 542:masked_fips202.c ****     else
 543:masked_fips202.c ****         offset = outlen;
 544:masked_fips202.c ****     while (nblocks > 0)
 545:masked_fips202.c ****     {
 546:masked_fips202.c ****         KeccakF1600_StatePermute_masked(s_masked);
 547:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 548:masked_fips202.c ****         {
 549:masked_fips202.c ****             for (i = 0; i < r / 8; i++)
 3653              		.loc 1 549 31 view .LVU1159
 3654 0018 4FEADA03 		lsr	r3, r10, #3
 3655 001c 0293     		str	r3, [sp, #8]
 3656 001e 36E0     		b	.L51
 3657              	.LVL105:
 3658              	.L52:
 546:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 3659              		.loc 1 546 9 is_stmt 1 view .LVU1160
 3660 0020 4046     		mov	r0, r8
 3661 0022 FFF7FEFF 		bl	KeccakF1600_StatePermute_masked
 3662              	.LVL106:
 547:masked_fips202.c ****         {
 3663              		.loc 1 547 9 view .LVU1161
 547:masked_fips202.c ****         {
 3664              		.loc 1 547 21 view .LVU1162
 546:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 3665              		.loc 1 546 9 is_stmt 0 view .LVU1163
 3666 0026 0022     		movs	r2, #0
 3667 0028 1746     		mov	r7, r2
 3668              	.LVL107:
 3669              	.L47:
 3670              		.loc 1 549 25 is_stmt 1 view .LVU1164
 3671 002a 08EBC200 		add	r0, r8, r2, lsl #3
 538:masked_fips202.c ****     unsigned int i,l,offset;
 3672              		.loc 1 538 1 is_stmt 0 view .LVU1165
 3673 002e 3E46     		mov	r6, r7
 3674              		.loc 1 549 20 view .LVU1166
 3675 0030 0025     		movs	r5, #0
 3676              	.LVL108:
 3677              	.L49:
 550:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3678              		.loc 1 550 17 is_stmt 1 discriminator 3 view .LVU1167
 3679 0032 0368     		ldr	r3, [r0]
 3680 0034 0393     		str	r3, [sp, #12]
 3681 0036 4368     		ldr	r3, [r0, #4]
 3682 0038 9946     		mov	r9, r3
 3683 003a 0BEB0603 		add	r3, fp, r6
 3684 003e 0193     		str	r3, [sp, #4]
 3685 0040 0830     		adds	r0, r0, #8
 3686              	.LVL109:
 3687              	.LBB4:
 3688              	.LBI4:
  90:masked_fips202.c **** 	unsigned int i;
 3689              		.loc 1 90 13 discriminator 3 view .LVU1168
 3690              	.LBB5:
  91:masked_fips202.c **** 
 3691              		.loc 1 91 2 discriminator 3 view .LVU1169
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3692              		.loc 1 93 2 discriminator 3 view .LVU1170
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3693              		.loc 1 93 14 discriminator 3 view .LVU1171
 3694              	.LBE5:
 3695              	.LBE4:
 3696              		.loc 1 550 17 is_stmt 0 discriminator 3 view .LVU1172
 3697 0042 0023     		movs	r3, #0
 3698              	.LVL110:
 3699              	.L48:
 3700              	.LBB7:
 3701              	.LBB6:
  94:masked_fips202.c **** }
 3702              		.loc 1 94 3 is_stmt 1 view .LVU1173
  94:masked_fips202.c **** }
 3703              		.loc 1 94 12 is_stmt 0 view .LVU1174
 3704 0044 0399     		ldr	r1, [sp, #12]
 3705 0046 C3F1200E 		rsb	lr, r3, #32
 3706 004a A3F1200C 		sub	ip, r3, #32
 3707 004e D940     		lsrs	r1, r1, r3
 3708 0050 09FA0EFE 		lsl	lr, r9, lr
 3709 0054 41EA0E01 		orr	r1, r1, lr
 3710 0058 29FA0CFC 		lsr	ip, r9, ip
 3711 005c 41EA0C01 		orr	r1, r1, ip
  94:masked_fips202.c **** }
 3712              		.loc 1 94 8 view .LVU1175
 3713 0060 DDF804C0 		ldr	ip, [sp, #4]
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3714              		.loc 1 93 2 view .LVU1176
 3715 0064 0833     		adds	r3, r3, #8
  94:masked_fips202.c **** }
 3716              		.loc 1 94 8 view .LVU1177
 3717 0066 0CF8011B 		strb	r1, [ip], #1
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3718              		.loc 1 93 2 view .LVU1178
 3719 006a 402B     		cmp	r3, #64
  94:masked_fips202.c **** }
 3720              		.loc 1 94 12 view .LVU1179
 3721 006c CE46     		mov	lr, r9
  94:masked_fips202.c **** }
 3722              		.loc 1 94 8 view .LVU1180
 3723 006e CDF804C0 		str	ip, [sp, #4]
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3724              		.loc 1 93 21 is_stmt 1 view .LVU1181
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3725              		.loc 1 93 14 view .LVU1182
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3726              		.loc 1 93 2 is_stmt 0 view .LVU1183
 3727 0072 E7D1     		bne	.L48
 3728              	.LVL111:
  93:masked_fips202.c **** 		x[i] = u >> 8 * i;
 3729              		.loc 1 93 2 view .LVU1184
 3730              	.LBE6:
 3731              	.LBE7:
 549:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3732              		.loc 1 549 36 is_stmt 1 discriminator 3 view .LVU1185
 549:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3733              		.loc 1 549 13 is_stmt 0 discriminator 3 view .LVU1186
 3734 0074 029B     		ldr	r3, [sp, #8]
 549:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3735              		.loc 1 549 37 discriminator 3 view .LVU1187
 3736 0076 0135     		adds	r5, r5, #1
 3737              	.LVL112:
 549:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3738              		.loc 1 549 25 is_stmt 1 discriminator 3 view .LVU1188
 549:masked_fips202.c ****                 store64(out_masked + (8 * i) + (l* offset), s_masked[i+(l*25)]);
 3739              		.loc 1 549 13 is_stmt 0 discriminator 3 view .LVU1189
 3740 0078 AB42     		cmp	r3, r5
 3741 007a 06F10806 		add	r6, r6, #8
 3742 007e D8D8     		bhi	.L49
 547:masked_fips202.c ****         {
 3743              		.loc 1 547 46 is_stmt 1 discriminator 2 view .LVU1190
 547:masked_fips202.c ****         {
 3744              		.loc 1 547 21 discriminator 2 view .LVU1191
 547:masked_fips202.c ****         {
 3745              		.loc 1 547 9 is_stmt 0 discriminator 2 view .LVU1192
 3746 0080 0E9B     		ldr	r3, [sp, #56]
 3747 0082 1932     		adds	r2, r2, #25
 3748 0084 4B2A     		cmp	r2, #75
 3749 0086 1F44     		add	r7, r7, r3
 3750 0088 CFD1     		bne	.L47
 551:masked_fips202.c ****         }
 552:masked_fips202.c ****         out_masked += r;
 3751              		.loc 1 552 9 is_stmt 1 view .LVU1193
 3752              		.loc 1 552 20 is_stmt 0 view .LVU1194
 3753 008a D344     		add	fp, fp, r10
 3754              	.LVL113:
 553:masked_fips202.c ****         --nblocks;
 3755              		.loc 1 553 9 is_stmt 1 view .LVU1195
 3756 008c 013C     		subs	r4, r4, #1
 3757              	.LVL114:
 3758              	.L51:
 544:masked_fips202.c ****     {
 3759              		.loc 1 544 11 view .LVU1196
 3760 008e 002C     		cmp	r4, #0
 3761 0090 C6D1     		bne	.L52
 554:masked_fips202.c ****     }
 555:masked_fips202.c ****     return;
 556:masked_fips202.c **** }
 3762              		.loc 1 556 1 is_stmt 0 view .LVU1197
 3763 0092 05B0     		add	sp, sp, #20
 3764              	.LCFI11:
 3765              		.cfi_def_cfa_offset 36
 3766              		@ sp needed
 3767 0094 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3768              		.loc 1 556 1 view .LVU1198
 3769              		.cfi_endproc
 3770              	.LFE7:
 3772              		.section	.text.keccak_absorb_masked,"ax",%progbits
 3773              		.align	1
 3774              		.global	keccak_absorb_masked
 3775              		.syntax unified
 3776              		.thumb
 3777              		.thumb_func
 3778              		.fpu softvfp
 3780              	keccak_absorb_masked:
 3781              	.LVL115:
 3782              	.LFB6:
 486:masked_fips202.c ****     size_t i, tmp_mlen;
 3783              		.loc 1 486 1 is_stmt 1 view -0
 3784              		.cfi_startproc
 3785              		@ args = 4, pretend = 0, frame = 624
 3786              		@ frame_needed = 0, uses_anonymous_args = 0
 487:masked_fips202.c ****     unsigned int l;
 3787              		.loc 1 487 5 view .LVU1200
 488:masked_fips202.c ****     uint8_t t[200*(MASKING_ORDER+1)] = { 0 };
 3788              		.loc 1 488 5 view .LVU1201
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3789              		.loc 1 489 5 view .LVU1202
 486:masked_fips202.c ****     size_t i, tmp_mlen;
 3790              		.loc 1 486 1 is_stmt 0 view .LVU1203
 3791 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3792              	.LCFI12:
 3793              		.cfi_def_cfa_offset 36
 3794              		.cfi_offset 4, -36
 3795              		.cfi_offset 5, -32
 3796              		.cfi_offset 6, -28
 3797              		.cfi_offset 7, -24
 3798              		.cfi_offset 8, -20
 3799              		.cfi_offset 9, -16
 3800              		.cfi_offset 10, -12
 3801              		.cfi_offset 11, -8
 3802              		.cfi_offset 14, -4
 3803 0004 ADF51D7D 		sub	sp, sp, #628
 3804              	.LCFI13:
 3805              		.cfi_def_cfa_offset 664
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3806              		.loc 1 489 13 view .LVU1204
 3807 0008 0027     		movs	r7, #0
 486:masked_fips202.c ****     size_t i, tmp_mlen;
 3808              		.loc 1 486 1 view .LVU1205
 3809 000a 0646     		mov	r6, r0
 3810 000c 0C46     		mov	r4, r1
 3811 000e 0193     		str	r3, [sp, #4]
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3812              		.loc 1 489 13 view .LVU1206
 3813 0010 3946     		mov	r1, r7
 3814              	.LVL116:
 486:masked_fips202.c ****     size_t i, tmp_mlen;
 3815              		.loc 1 486 1 view .LVU1207
 3816 0012 9DF89832 		ldrb	r3, [sp, #664]	@ zero_extendqisi2
 3817              	.LVL117:
 486:masked_fips202.c ****     size_t i, tmp_mlen;
 3818              		.loc 1 486 1 view .LVU1208
 3819 0016 0593     		str	r3, [sp, #20]
 3820 0018 1546     		mov	r5, r2
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3821              		.loc 1 489 13 view .LVU1209
 3822 001a 07A8     		add	r0, sp, #28
 3823              	.LVL118:
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3824              		.loc 1 489 13 view .LVU1210
 3825 001c 4FF41572 		mov	r2, #596
 3826              	.LVL119:
 489:masked_fips202.c ****     tmp_mlen = mlen;
 3827              		.loc 1 489 13 view .LVU1211
 3828 0020 0697     		str	r7, [sp, #24]
 3829 0022 FFF7FEFF 		bl	memset
 3830              	.LVL120:
 490:masked_fips202.c ****     /* Zero state */
 3831              		.loc 1 490 5 is_stmt 1 view .LVU1212
 492:masked_fips202.c ****     {
 3832              		.loc 1 492 5 view .LVU1213
 492:masked_fips202.c ****     {
 3833              		.loc 1 492 17 view .LVU1214
 495:masked_fips202.c ****     }
 3834              		.loc 1 495 32 is_stmt 0 view .LVU1215
 3835 0026 4FF41672 		mov	r2, #600
 3836 002a 3946     		mov	r1, r7
 3837 002c 3046     		mov	r0, r6
 3838 002e FFF7FEFF 		bl	memset
 3839              	.LVL121:
 495:masked_fips202.c ****     }
 3840              		.loc 1 495 32 view .LVU1216
 3841 0032 24F00703 		bic	r3, r4, #7
 501:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 3842              		.loc 1 501 31 view .LVU1217
 3843 0036 DDF804B0 		ldr	fp, [sp, #4]
 3844 003a 0393     		str	r3, [sp, #12]
 3845              	.LVL122:
 3846              	.L56:
 498:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 3847              		.loc 1 498 11 is_stmt 1 view .LVU1218
 3848 003c A345     		cmp	fp, r4
 3849 003e 4ED2     		bcs	.L67
 498:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 3850              		.loc 1 498 11 is_stmt 0 view .LVU1219
 3851 0040 DDF80C90 		ldr	r9, [sp, #12]
 3852 0044 0027     		movs	r7, #0
 3853 0046 B144     		add	r9, r9, r6
 515:masked_fips202.c **** 		
 3854              		.loc 1 515 18 view .LVU1220
 3855 0048 013C     		subs	r4, r4, #1
 3856              	.LVL123:
 3857              	.L62:
 512:masked_fips202.c **** 		
 3858              		.loc 1 512 21 view .LVU1221
 3859 004a 06AB     		add	r3, sp, #24
 3860 004c 5A46     		mov	r2, fp
 3861 004e 2946     		mov	r1, r5
 3862 0050 03EBC700 		add	r0, r3, r7, lsl #3
 3863 0054 FFF7FEFF 		bl	memcpy
 3864              	.LVL124:
 514:masked_fips202.c ****         t[r - 1] |= 128; //Only in the first share
 3865              		.loc 1 514 9 is_stmt 1 view .LVU1222
 514:masked_fips202.c ****         t[r - 1] |= 128; //Only in the first share
 3866              		.loc 1 514 14 is_stmt 0 view .LVU1223
 3867 0058 06AA     		add	r2, sp, #24
 3868 005a 059B     		ldr	r3, [sp, #20]
 3869 005c 02F80B30 		strb	r3, [r2, fp]
 515:masked_fips202.c **** 		
 3870              		.loc 1 515 9 is_stmt 1 view .LVU1224
 515:masked_fips202.c **** 		
 3871              		.loc 1 515 18 is_stmt 0 view .LVU1225
 3872 0060 135D     		ldrb	r3, [r2, r4]	@ zero_extendqisi2
 3873 0062 4FEAC708 		lsl	r8, r7, #3
 3874 0066 63F07F03 		orn	r3, r3, #127
 3875 006a 1355     		strb	r3, [r2, r4]
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 3876              		.loc 1 517 9 is_stmt 1 view .LVU1226
 3877              	.LVL125:
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 3878              		.loc 1 517 9 is_stmt 0 view .LVU1227
 3879 006c 06EB0801 		add	r1, r6, r8
 3880 0070 66E0     		b	.L66
 3881              	.LVL126:
 3882              	.L58:
 502:masked_fips202.c ****         }
 3883              		.loc 1 502 17 is_stmt 1 discriminator 3 view .LVU1228
 3884              	.LBB12:
 3885              	.LBI12:
  72:masked_fips202.c **** 	unsigned int i;
 3886              		.loc 1 72 17 discriminator 3 view .LVU1229
 3887              	.LBB13:
  73:masked_fips202.c **** 	uint64_t r = 0;
 3888              		.loc 1 73 2 discriminator 3 view .LVU1230
  74:masked_fips202.c **** 
 3889              		.loc 1 74 2 discriminator 3 view .LVU1231
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3890              		.loc 1 76 2 discriminator 3 view .LVU1232
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3891              		.loc 1 76 14 discriminator 3 view .LVU1233
 3892 0072 EB19     		adds	r3, r5, r7
 3893              	.LVL127:
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3894              		.loc 1 76 14 is_stmt 0 discriminator 3 view .LVU1234
 3895 0074 0293     		str	r3, [sp, #8]
 3896              	.LBE13:
 3897              	.LBE12:
 501:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 3898              		.loc 1 501 13 discriminator 3 view .LVU1235
 3899 0076 0023     		movs	r3, #0
 3900              	.LVL128:
 3901              	.LBB16:
 3902              	.LBB14:
  74:masked_fips202.c **** 
 3903              		.loc 1 74 11 discriminator 3 view .LVU1236
 3904 0078 9846     		mov	r8, r3
 3905 007a 9E46     		mov	lr, r3
 3906              	.LVL129:
 3907              	.L57:
  77:masked_fips202.c **** 
 3908              		.loc 1 77 3 is_stmt 1 view .LVU1237
  77:masked_fips202.c **** 
 3909              		.loc 1 77 19 is_stmt 0 view .LVU1238
 3910 007c 0298     		ldr	r0, [sp, #8]
 3911 007e 10F8019B 		ldrb	r9, [r0], #1	@ zero_extendqisi2
 3912 0082 0290     		str	r0, [sp, #8]
  77:masked_fips202.c **** 
 3913              		.loc 1 77 23 view .LVU1239
 3914 0084 A3F1200A 		sub	r10, r3, #32
 3915 0088 C3F12000 		rsb	r0, r3, #32
 3916 008c 09FA0AFA 		lsl	r10, r9, r10
 3917 0090 29FA00F0 		lsr	r0, r9, r0
 3918 0094 09FA03F9 		lsl	r9, r9, r3
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3919              		.loc 1 76 2 view .LVU1240
 3920 0098 0833     		adds	r3, r3, #8
  77:masked_fips202.c **** 
 3921              		.loc 1 77 23 view .LVU1241
 3922 009a 4AEA0000 		orr	r0, r10, r0
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3923              		.loc 1 76 2 view .LVU1242
 3924 009e 402B     		cmp	r3, #64
  77:masked_fips202.c **** 
 3925              		.loc 1 77 5 view .LVU1243
 3926 00a0 49EA0808 		orr	r8, r9, r8
 3927              	.LVL130:
  77:masked_fips202.c **** 
 3928              		.loc 1 77 5 view .LVU1244
 3929 00a4 40EA0E0E 		orr	lr, r0, lr
 3930              	.LVL131:
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3931              		.loc 1 76 21 is_stmt 1 view .LVU1245
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3932              		.loc 1 76 14 view .LVU1246
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 3933              		.loc 1 76 2 is_stmt 0 view .LVU1247
 3934 00a8 E8D1     		bne	.L57
  79:masked_fips202.c **** }
 3935              		.loc 1 79 2 is_stmt 1 view .LVU1248
 3936              	.LVL132:
  79:masked_fips202.c **** }
 3937              		.loc 1 79 2 is_stmt 0 view .LVU1249
 3938              	.LBE14:
 3939              	.LBE16:
 502:masked_fips202.c ****         }
 3940              		.loc 1 502 40 view .LVU1250
 3941 00aa D2E90003 		ldrd	r0, r3, [r2]
 3942 00ae 80EA0800 		eor	r0, r0, r8
 3943 00b2 42F8080B 		str	r0, [r2], #8
 3944 00b6 83EA0E03 		eor	r3, r3, lr
 3945 00ba 42F8043C 		str	r3, [r2, #-4]
 501:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 3946              		.loc 1 501 36 is_stmt 1 view .LVU1251
 3947 00be 0837     		adds	r7, r7, #8
 3948              	.L60:
 501:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 3949              		.loc 1 501 25 discriminator 1 view .LVU1252
 501:masked_fips202.c ****                 s_masked[i + (l * 25)] ^= load64(m_masked + (8 * i) + (l*tmp_mlen));
 3950              		.loc 1 501 13 is_stmt 0 discriminator 1 view .LVU1253
 3951 00c0 049B     		ldr	r3, [sp, #16]
 3952 00c2 9F42     		cmp	r7, r3
 3953 00c4 D5D1     		bne	.L58
 499:masked_fips202.c ****         {
 3954              		.loc 1 499 46 is_stmt 1 discriminator 2 view .LVU1254
 499:masked_fips202.c ****         {
 3955              		.loc 1 499 21 discriminator 2 view .LVU1255
 499:masked_fips202.c ****         {
 3956              		.loc 1 499 9 is_stmt 0 discriminator 2 view .LVU1256
 3957 00c6 019B     		ldr	r3, [sp, #4]
 3958 00c8 1931     		adds	r1, r1, #25
 3959 00ca 4B29     		cmp	r1, #75
 3960 00cc 9C44     		add	ip, ip, r3
 3961 00ce 08D1     		bne	.L61
 504:masked_fips202.c ****         mlen -= r;
 3962              		.loc 1 504 9 is_stmt 1 view .LVU1257
 3963 00d0 3046     		mov	r0, r6
 3964 00d2 FFF7FEFF 		bl	KeccakF1600_StatePermute_masked
 3965              	.LVL133:
 505:masked_fips202.c ****         m_masked += r;
 3966              		.loc 1 505 9 view .LVU1258
 505:masked_fips202.c ****         m_masked += r;
 3967              		.loc 1 505 14 is_stmt 0 view .LVU1259
 3968 00d6 ABEB040B 		sub	fp, fp, r4
 3969              	.LVL134:
 506:masked_fips202.c ****     }
 3970              		.loc 1 506 9 is_stmt 1 view .LVU1260
 506:masked_fips202.c ****     }
 3971              		.loc 1 506 18 is_stmt 0 view .LVU1261
 3972 00da 2544     		add	r5, r5, r4
 3973              	.LVL135:
 506:masked_fips202.c ****     }
 3974              		.loc 1 506 18 view .LVU1262
 3975 00dc AEE7     		b	.L56
 3976              	.L67:
 506:masked_fips202.c ****     }
 3977              		.loc 1 506 18 view .LVU1263
 3978 00de 0021     		movs	r1, #0
 3979 00e0 8C46     		mov	ip, r1
 3980              	.L61:
 506:masked_fips202.c ****     }
 3981              		.loc 1 506 18 view .LVU1264
 3982 00e2 039B     		ldr	r3, [sp, #12]
 3983 00e4 6344     		add	r3, r3, ip
 3984 00e6 06EBC102 		add	r2, r6, r1, lsl #3
 3985 00ea 0493     		str	r3, [sp, #16]
 3986              	.LBB17:
 3987              	.LBB15:
  74:masked_fips202.c **** 
 3988              		.loc 1 74 11 view .LVU1265
 3989 00ec 6746     		mov	r7, ip
 3990 00ee E7E7     		b	.L60
 3991              	.LVL136:
 3992              	.L64:
  74:masked_fips202.c **** 
 3993              		.loc 1 74 11 view .LVU1266
 3994              	.LBE15:
 3995              	.LBE17:
 518:masked_fips202.c ****     }
 3996              		.loc 1 518 3 is_stmt 1 discriminator 3 view .LVU1267
 3997              	.LBB18:
 3998              	.LBI18:
  72:masked_fips202.c **** 	unsigned int i;
 3999              		.loc 1 72 17 discriminator 3 view .LVU1268
 4000              	.LBB19:
  73:masked_fips202.c **** 	uint64_t r = 0;
 4001              		.loc 1 73 2 discriminator 3 view .LVU1269
  74:masked_fips202.c **** 
 4002              		.loc 1 74 2 discriminator 3 view .LVU1270
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4003              		.loc 1 76 2 discriminator 3 view .LVU1271
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4004              		.loc 1 76 14 discriminator 3 view .LVU1272
 4005 00f0 06AB     		add	r3, sp, #24
 4006 00f2 4344     		add	r3, r3, r8
 4007 00f4 0293     		str	r3, [sp, #8]
 4008              	.LBE19:
 4009              	.LBE18:
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 4010              		.loc 1 517 9 is_stmt 0 discriminator 3 view .LVU1273
 4011 00f6 0023     		movs	r3, #0
 4012              	.LBB21:
 4013              	.LBB20:
  74:masked_fips202.c **** 
 4014              		.loc 1 74 11 discriminator 3 view .LVU1274
 4015 00f8 9A46     		mov	r10, r3
 4016 00fa 9E46     		mov	lr, r3
 4017              	.LVL137:
 4018              	.L63:
  77:masked_fips202.c **** 
 4019              		.loc 1 77 3 is_stmt 1 view .LVU1275
  77:masked_fips202.c **** 
 4020              		.loc 1 77 19 is_stmt 0 view .LVU1276
 4021 00fc 029A     		ldr	r2, [sp, #8]
 4022 00fe 12F801CB 		ldrb	ip, [r2], #1	@ zero_extendqisi2
 4023 0102 0292     		str	r2, [sp, #8]
  77:masked_fips202.c **** 
 4024              		.loc 1 77 23 view .LVU1277
 4025 0104 C3F12000 		rsb	r0, r3, #32
 4026 0108 A3F12002 		sub	r2, r3, #32
 4027 010c 0CFA02F2 		lsl	r2, ip, r2
 4028 0110 2CFA00F0 		lsr	r0, ip, r0
 4029 0114 0CFA03FC 		lsl	ip, ip, r3
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4030              		.loc 1 76 2 view .LVU1278
 4031 0118 0833     		adds	r3, r3, #8
  77:masked_fips202.c **** 
 4032              		.loc 1 77 23 view .LVU1279
 4033 011a 0243     		orrs	r2, r2, r0
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4034              		.loc 1 76 2 view .LVU1280
 4035 011c 402B     		cmp	r3, #64
  77:masked_fips202.c **** 
 4036              		.loc 1 77 5 view .LVU1281
 4037 011e 4CEA0A0A 		orr	r10, ip, r10
 4038              	.LVL138:
  77:masked_fips202.c **** 
 4039              		.loc 1 77 5 view .LVU1282
 4040 0122 42EA0E0E 		orr	lr, r2, lr
 4041              	.LVL139:
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4042              		.loc 1 76 21 is_stmt 1 view .LVU1283
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4043              		.loc 1 76 14 view .LVU1284
  76:masked_fips202.c **** 		r |= (uint64_t)x[i] << 8 * i;
 4044              		.loc 1 76 2 is_stmt 0 view .LVU1285
 4045 0126 E9D1     		bne	.L63
  79:masked_fips202.c **** }
 4046              		.loc 1 79 2 is_stmt 1 view .LVU1286
 4047              	.LVL140:
  79:masked_fips202.c **** }
 4048              		.loc 1 79 2 is_stmt 0 view .LVU1287
 4049              	.LBE20:
 4050              	.LBE21:
 518:masked_fips202.c ****     }
 4051              		.loc 1 518 26 view .LVU1288
 4052 0128 D1E90023 		ldrd	r2, r3, [r1]
 4053 012c 82EA0A02 		eor	r2, r2, r10
 4054 0130 41F8082B 		str	r2, [r1], #8
 4055 0134 83EA0E03 		eor	r3, r3, lr
 4056 0138 41F8043C 		str	r3, [r1, #-4]
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 4057              		.loc 1 517 32 is_stmt 1 view .LVU1289
 4058 013c 08F10808 		add	r8, r8, #8
 4059              	.L66:
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 4060              		.loc 1 517 21 discriminator 1 view .LVU1290
 517:masked_fips202.c **** 		s_masked[i + (25 * l)] ^= load64(t + (8 * i) + (200 * l));
 4061              		.loc 1 517 9 is_stmt 0 discriminator 1 view .LVU1291
 4062 0140 8945     		cmp	r9, r1
 4063 0142 D5D1     		bne	.L64
 508:masked_fips202.c ****     {
 4064              		.loc 1 508 42 is_stmt 1 discriminator 2 view .LVU1292
 508:masked_fips202.c ****     {
 4065              		.loc 1 508 17 discriminator 2 view .LVU1293
 508:masked_fips202.c ****     {
 4066              		.loc 1 508 5 is_stmt 0 discriminator 2 view .LVU1294
 4067 0144 019B     		ldr	r3, [sp, #4]
 4068 0146 1937     		adds	r7, r7, #25
 4069 0148 4B2F     		cmp	r7, #75
 4070 014a 1D44     		add	r5, r5, r3
 4071 014c 09F1C809 		add	r9, r9, #200
 4072 0150 7FF47BAF 		bne	.L62
 520:masked_fips202.c **** /*************************************************
 4073              		.loc 1 520 1 view .LVU1295
 4074 0154 0DF51D7D 		add	sp, sp, #628
 4075              	.LCFI14:
 4076              		.cfi_def_cfa_offset 36
 4077              		@ sp needed
 4078 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 520:masked_fips202.c **** /*************************************************
 4079              		.loc 1 520 1 view .LVU1296
 4080              		.cfi_endproc
 4081              	.LFE6:
 4083              		.section	.text.shake128_absorb_masked,"ax",%progbits
 4084              		.align	1
 4085              		.global	shake128_absorb_masked
 4086              		.syntax unified
 4087              		.thumb
 4088              		.thumb_func
 4089              		.fpu softvfp
 4091              	shake128_absorb_masked:
 4092              	.LVL141:
 4093              	.LFB8:
 557:masked_fips202.c **** /*************************************************
 558:masked_fips202.c **** * Name:        shake128_absorb_masked
 559:masked_fips202.c **** *
 560:masked_fips202.c **** * Description: Absorb step of the SHAKE128 XOF.
 561:masked_fips202.c **** *              non-incremental, starts by zeroeing the state.
 562:masked_fips202.c **** *
 563:masked_fips202.c **** * Arguments:   - keccak_state *state: pointer to (uninitialized) output
 564:masked_fips202.c **** *                                     Keccak state
 565:masked_fips202.c **** *              - const uint8_t *in:   pointer to input to be absorbed into s
 566:masked_fips202.c **** *              - size_t inlen:        length of input in bytes
 567:masked_fips202.c **** **************************************************/
 568:masked_fips202.c **** void shake128_absorb_masked(keccak_state_masked* state_masked, const uint8_t* in_masked, size_t inl
 569:masked_fips202.c **** {
 4094              		.loc 1 569 1 is_stmt 1 view -0
 4095              		.cfi_startproc
 4096              		@ args = 0, pretend = 0, frame = 0
 4097              		@ frame_needed = 0, uses_anonymous_args = 0
 570:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE128_RATE, in_masked, inlen, 0x1F);
 4098              		.loc 1 570 5 view .LVU1298
 569:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE128_RATE, in_masked, inlen, 0x1F);
 4099              		.loc 1 569 1 is_stmt 0 view .LVU1299
 4100 0000 07B5     		push	{r0, r1, r2, lr}
 4101              	.LCFI15:
 4102              		.cfi_def_cfa_offset 16
 4103              		.cfi_offset 14, -4
 569:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE128_RATE, in_masked, inlen, 0x1F);
 4104              		.loc 1 569 1 view .LVU1300
 4105 0002 1346     		mov	r3, r2
 4106              		.loc 1 570 5 view .LVU1301
 4107 0004 1F22     		movs	r2, #31
 4108              	.LVL142:
 4109              		.loc 1 570 5 view .LVU1302
 4110 0006 0092     		str	r2, [sp]
 4111 0008 0A46     		mov	r2, r1
 4112 000a A821     		movs	r1, #168
 4113              	.LVL143:
 4114              		.loc 1 570 5 view .LVU1303
 4115 000c FFF7FEFF 		bl	keccak_absorb_masked
 4116              	.LVL144:
 571:masked_fips202.c **** }
 4117              		.loc 1 571 1 view .LVU1304
 4118 0010 03B0     		add	sp, sp, #12
 4119              	.LCFI16:
 4120              		.cfi_def_cfa_offset 4
 4121              		@ sp needed
 4122 0012 5DF804FB 		ldr	pc, [sp], #4
 4123              		.cfi_endproc
 4124              	.LFE8:
 4126              		.section	.text.shake128_squeezeblocks_masked,"ax",%progbits
 4127              		.align	1
 4128              		.global	shake128_squeezeblocks_masked
 4129              		.syntax unified
 4130              		.thumb
 4131              		.thumb_func
 4132              		.fpu softvfp
 4134              	shake128_squeezeblocks_masked:
 4135              	.LVL145:
 4136              	.LFB9:
 572:masked_fips202.c **** 
 573:masked_fips202.c **** /*************************************************
 574:masked_fips202.c **** * Name:        shake128_squeezeblocks
 575:masked_fips202.c **** *
 576:masked_fips202.c **** * Description: Squeeze step of SHAKE128 XOF. Squeezes full blocks of
 577:masked_fips202.c **** *              SHAKE128_RATE bytes each. Modifies the state. Can be called
 578:masked_fips202.c **** *              multiple times to keep squeezing, i.e., is incremental.
 579:masked_fips202.c **** *
 580:masked_fips202.c **** * Arguments:   - uint8_t *out:    pointer to output blocks
 581:masked_fips202.c **** *              - size_t nblocks:  number of blocks to be squeezed
 582:masked_fips202.c **** *                                 (written to output)
 583:masked_fips202.c **** *              - keccak_state *s: pointer to input/output Keccak state
 584:masked_fips202.c **** **************************************************/
 585:masked_fips202.c **** void shake128_squeezeblocks_masked(uint8_t* out_masked, size_t nblocks, keccak_state_masked* state_
 586:masked_fips202.c **** {
 4137              		.loc 1 586 1 is_stmt 1 view -0
 4138              		.cfi_startproc
 4139              		@ args = 0, pretend = 0, frame = 0
 4140              		@ frame_needed = 0, uses_anonymous_args = 0
 587:masked_fips202.c ****     keccak_squeezeblocks_masked(out_masked, nblocks, state_masked->s_masked, SHAKE128_RATE, outlen)
 4141              		.loc 1 587 5 view .LVU1306
 586:masked_fips202.c ****     keccak_squeezeblocks_masked(out_masked, nblocks, state_masked->s_masked, SHAKE128_RATE, outlen)
 4142              		.loc 1 586 1 is_stmt 0 view .LVU1307
 4143 0000 07B5     		push	{r0, r1, r2, lr}
 4144              	.LCFI17:
 4145              		.cfi_def_cfa_offset 16
 4146              		.cfi_offset 14, -4
 4147              		.loc 1 587 5 view .LVU1308
 4148 0002 0093     		str	r3, [sp]
 4149 0004 A823     		movs	r3, #168
 4150              	.LVL146:
 4151              		.loc 1 587 5 view .LVU1309
 4152 0006 FFF7FEFF 		bl	keccak_squeezeblocks_masked
 4153              	.LVL147:
 588:masked_fips202.c **** }
 4154              		.loc 1 588 1 view .LVU1310
 4155 000a 03B0     		add	sp, sp, #12
 4156              	.LCFI18:
 4157              		.cfi_def_cfa_offset 4
 4158              		@ sp needed
 4159 000c 5DF804FB 		ldr	pc, [sp], #4
 4160              		.cfi_endproc
 4161              	.LFE9:
 4163              		.section	.text.shake256_absorb_masked,"ax",%progbits
 4164              		.align	1
 4165              		.global	shake256_absorb_masked
 4166              		.syntax unified
 4167              		.thumb
 4168              		.thumb_func
 4169              		.fpu softvfp
 4171              	shake256_absorb_masked:
 4172              	.LVL148:
 4173              	.LFB10:
 589:masked_fips202.c **** 
 590:masked_fips202.c **** /*************************************************
 591:masked_fips202.c **** * Name:        shake256_absorb
 592:masked_fips202.c **** *
 593:masked_fips202.c **** * Description: Absorb step of the SHAKE256 XOF.
 594:masked_fips202.c **** *              non-incremental, starts by zeroeing the state.
 595:masked_fips202.c **** *
 596:masked_fips202.c **** * Arguments:   - keccak_state *s:   pointer to (uninitialized) output Keccak state
 597:masked_fips202.c **** *              - const uint8_t *in: pointer to input to be absorbed into s
 598:masked_fips202.c **** *              - size_t inlen:      length of input in bytes
 599:masked_fips202.c **** **************************************************/
 600:masked_fips202.c **** void shake256_absorb_masked(keccak_state_masked* state_masked, const uint8_t* in_masked, size_t inl
 601:masked_fips202.c **** {
 4174              		.loc 1 601 1 is_stmt 1 view -0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 0
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 602:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE256_RATE, in_masked, inlen, 0x1F);
 4178              		.loc 1 602 5 view .LVU1312
 601:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE256_RATE, in_masked, inlen, 0x1F);
 4179              		.loc 1 601 1 is_stmt 0 view .LVU1313
 4180 0000 07B5     		push	{r0, r1, r2, lr}
 4181              	.LCFI19:
 4182              		.cfi_def_cfa_offset 16
 4183              		.cfi_offset 14, -4
 601:masked_fips202.c ****     keccak_absorb_masked(state_masked->s_masked, SHAKE256_RATE, in_masked, inlen, 0x1F);
 4184              		.loc 1 601 1 view .LVU1314
 4185 0002 1346     		mov	r3, r2
 4186              		.loc 1 602 5 view .LVU1315
 4187 0004 1F22     		movs	r2, #31
 4188              	.LVL149:
 4189              		.loc 1 602 5 view .LVU1316
 4190 0006 0092     		str	r2, [sp]
 4191 0008 0A46     		mov	r2, r1
 4192 000a 8821     		movs	r1, #136
 4193              	.LVL150:
 4194              		.loc 1 602 5 view .LVU1317
 4195 000c FFF7FEFF 		bl	keccak_absorb_masked
 4196              	.LVL151:
 603:masked_fips202.c **** }
 4197              		.loc 1 603 1 view .LVU1318
 4198 0010 03B0     		add	sp, sp, #12
 4199              	.LCFI20:
 4200              		.cfi_def_cfa_offset 4
 4201              		@ sp needed
 4202 0012 5DF804FB 		ldr	pc, [sp], #4
 4203              		.cfi_endproc
 4204              	.LFE10:
 4206              		.section	.text.shake256_squeezeblocks_masked,"ax",%progbits
 4207              		.align	1
 4208              		.global	shake256_squeezeblocks_masked
 4209              		.syntax unified
 4210              		.thumb
 4211              		.thumb_func
 4212              		.fpu softvfp
 4214              	shake256_squeezeblocks_masked:
 4215              	.LVL152:
 4216              	.LFB11:
 604:masked_fips202.c **** 
 605:masked_fips202.c **** /*************************************************
 606:masked_fips202.c **** * Name:        shake256_squeezeblocks
 607:masked_fips202.c **** *
 608:masked_fips202.c **** * Description: Squeeze step of SHAKE256 XOF. Squeezes full blocks of
 609:masked_fips202.c **** *              SHAKE256_RATE bytes each. Modifies the state. Can be called
 610:masked_fips202.c **** *              multiple times to keep squeezing, i.e., is incremental.
 611:masked_fips202.c **** *
 612:masked_fips202.c **** * Arguments:   - uint8_t *out:    pointer to output blocks
 613:masked_fips202.c **** *              - size_t nblocks:  number of blocks to be squeezed
 614:masked_fips202.c **** *                                 (written to output)
 615:masked_fips202.c **** *              - keccak_State *s: pointer to input/output Keccak state
 616:masked_fips202.c **** **************************************************/
 617:masked_fips202.c **** void shake256_squeezeblocks_masked(uint8_t* out_masked, size_t nblocks, keccak_state_masked* state_
 618:masked_fips202.c **** {
 4217              		.loc 1 618 1 is_stmt 1 view -0
 4218              		.cfi_startproc
 4219              		@ args = 0, pretend = 0, frame = 0
 4220              		@ frame_needed = 0, uses_anonymous_args = 0
 619:masked_fips202.c ****     keccak_squeezeblocks_masked(out_masked, nblocks, state_masked->s_masked, SHAKE256_RATE, outlen)
 4221              		.loc 1 619 5 view .LVU1320
 618:masked_fips202.c ****     keccak_squeezeblocks_masked(out_masked, nblocks, state_masked->s_masked, SHAKE256_RATE, outlen)
 4222              		.loc 1 618 1 is_stmt 0 view .LVU1321
 4223 0000 07B5     		push	{r0, r1, r2, lr}
 4224              	.LCFI21:
 4225              		.cfi_def_cfa_offset 16
 4226              		.cfi_offset 14, -4
 4227              		.loc 1 619 5 view .LVU1322
 4228 0002 0093     		str	r3, [sp]
 4229 0004 8823     		movs	r3, #136
 4230              	.LVL153:
 4231              		.loc 1 619 5 view .LVU1323
 4232 0006 FFF7FEFF 		bl	keccak_squeezeblocks_masked
 4233              	.LVL154:
 620:masked_fips202.c **** }
 4234              		.loc 1 620 1 view .LVU1324
 4235 000a 03B0     		add	sp, sp, #12
 4236              	.LCFI22:
 4237              		.cfi_def_cfa_offset 4
 4238              		@ sp needed
 4239 000c 5DF804FB 		ldr	pc, [sp], #4
 4240              		.cfi_endproc
 4241              	.LFE11:
 4243              		.section	.text.shake128_masked,"ax",%progbits
 4244              		.align	1
 4245              		.global	shake128_masked
 4246              		.syntax unified
 4247              		.thumb
 4248              		.thumb_func
 4249              		.fpu softvfp
 4251              	shake128_masked:
 4252              	.LVL155:
 4253              	.LFB12:
 621:masked_fips202.c **** 
 622:masked_fips202.c **** /*************************************************
 623:masked_fips202.c **** * Name:        shake128
 624:masked_fips202.c **** *
 625:masked_fips202.c **** * Description: SHAKE128 XOF with non-incremental API
 626:masked_fips202.c **** *
 627:masked_fips202.c **** * Arguments:   - uint8_t *out:      pointer to output
 628:masked_fips202.c **** *              - size_t outlen:     requested output length in bytes
 629:masked_fips202.c **** *              - const uint8_t *in: pointer to input
 630:masked_fips202.c **** *              - size_t inlen:      length of input in bytes
 631:masked_fips202.c **** **************************************************/
 632:masked_fips202.c **** void shake128_masked(uint8_t* out_masked, size_t outlen, const uint8_t* in_masked, size_t inlen)
 633:masked_fips202.c **** {
 4254              		.loc 1 633 1 is_stmt 1 view -0
 4255              		.cfi_startproc
 4256              		@ args = 0, pretend = 0, frame = 1104
 4257              		@ frame_needed = 0, uses_anonymous_args = 0
 634:masked_fips202.c ****     unsigned int i,l;
 4258              		.loc 1 634 5 view .LVU1326
 635:masked_fips202.c ****     size_t tmp_outlen;
 4259              		.loc 1 635 5 view .LVU1327
 636:masked_fips202.c ****     size_t nblocks = outlen / SHAKE128_RATE;
 4260              		.loc 1 636 5 view .LVU1328
 633:masked_fips202.c ****     unsigned int i,l;
 4261              		.loc 1 633 1 is_stmt 0 view .LVU1329
 4262 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4263              	.LCFI23:
 4264              		.cfi_def_cfa_offset 24
 4265              		.cfi_offset 4, -24
 4266              		.cfi_offset 5, -20
 4267              		.cfi_offset 6, -16
 4268              		.cfi_offset 7, -12
 4269              		.cfi_offset 8, -8
 4270              		.cfi_offset 14, -4
 4271 0004 ADF58A6D 		sub	sp, sp, #1104
 4272              	.LCFI24:
 4273              		.cfi_def_cfa_offset 1128
 633:masked_fips202.c ****     unsigned int i,l;
 4274              		.loc 1 633 1 view .LVU1330
 4275 0008 0D46     		mov	r5, r1
 4276 000a 0446     		mov	r4, r0
 4277 000c 1146     		mov	r1, r2
 4278              	.LVL156:
 4279              		.loc 1 636 12 view .LVU1331
 4280 000e A827     		movs	r7, #168
 637:masked_fips202.c ****     uint8_t t_masked[SHAKE128_RATE*(MASKING_ORDER+1)];
 638:masked_fips202.c ****     keccak_state_masked state_masked;
 639:masked_fips202.c **** 
 640:masked_fips202.c ****     tmp_outlen = outlen;
 641:masked_fips202.c ****     shake128_absorb_masked(&state_masked, in_masked, inlen);
 4281              		.loc 1 641 5 view .LVU1332
 4282 0010 1A46     		mov	r2, r3
 4283              	.LVL157:
 4284              		.loc 1 641 5 view .LVU1333
 4285 0012 7EA8     		add	r0, sp, #504
 4286              	.LVL158:
 4287              		.loc 1 641 5 view .LVU1334
 4288 0014 FFF7FEFF 		bl	shake128_absorb_masked
 4289              	.LVL159:
 636:masked_fips202.c ****     uint8_t t_masked[SHAKE128_RATE*(MASKING_ORDER+1)];
 4290              		.loc 1 636 12 view .LVU1335
 4291 0018 B5FBF7F6 		udiv	r6, r5, r7
 4292              	.LVL160:
 637:masked_fips202.c ****     uint8_t t_masked[SHAKE128_RATE*(MASKING_ORDER+1)];
 4293              		.loc 1 637 5 is_stmt 1 view .LVU1336
 638:masked_fips202.c **** 
 4294              		.loc 1 638 5 view .LVU1337
 640:masked_fips202.c ****     shake128_absorb_masked(&state_masked, in_masked, inlen);
 4295              		.loc 1 640 5 view .LVU1338
 4296              		.loc 1 641 5 view .LVU1339
 642:masked_fips202.c ****     shake128_squeezeblocks_masked(out_masked, nblocks, &state_masked, tmp_outlen);
 4297              		.loc 1 642 5 view .LVU1340
 4298 001c 2B46     		mov	r3, r5
 4299 001e 3146     		mov	r1, r6
 4300 0020 7EAA     		add	r2, sp, #504
 4301 0022 2046     		mov	r0, r4
 4302 0024 7E43     		muls	r6, r7, r6
 4303              	.LVL161:
 4304              		.loc 1 642 5 is_stmt 0 view .LVU1341
 4305 0026 FFF7FEFF 		bl	shake128_squeezeblocks_masked
 4306              	.LVL162:
 643:masked_fips202.c **** 
 644:masked_fips202.c ****     out_masked += nblocks * SHAKE128_RATE;
 4307              		.loc 1 644 5 is_stmt 1 view .LVU1342
 645:masked_fips202.c ****     outlen -= nblocks * SHAKE128_RATE;
 4308              		.loc 1 645 5 view .LVU1343
 646:masked_fips202.c **** 
 647:masked_fips202.c ****     if (outlen) {
 4309              		.loc 1 647 5 view .LVU1344
 4310              		.loc 1 647 8 is_stmt 0 view .LVU1345
 4311 002a B5EB0608 		subs	r8, r5, r6
 4312              	.LVL163:
 4313              		.loc 1 647 8 view .LVU1346
 4314 002e 12D0     		beq	.L74
 648:masked_fips202.c ****         shake128_squeezeblocks_masked(t_masked, 1, &state_masked, 0);
 4315              		.loc 1 648 9 is_stmt 1 view .LVU1347
 4316 0030 0023     		movs	r3, #0
 4317 0032 7EAA     		add	r2, sp, #504
 4318 0034 0121     		movs	r1, #1
 4319 0036 6846     		mov	r0, sp
 4320 0038 FFF7FEFF 		bl	shake128_squeezeblocks_masked
 4321              	.LVL164:
 649:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4322              		.loc 1 649 9 view .LVU1348
 4323              		.loc 1 649 21 view .LVU1349
 4324 003c 3444     		add	r4, r4, r6
 4325              		.loc 1 649 16 is_stmt 0 view .LVU1350
 4326 003e 0026     		movs	r6, #0
 4327              	.LVL165:
 4328              	.L76:
 650:masked_fips202.c ****         {
 651:masked_fips202.c ****             for (i = 0; i < outlen; i++)
 4329              		.loc 1 651 25 is_stmt 1 view .LVU1351
 652:masked_fips202.c ****                 out_masked[i+(l* tmp_outlen)] = t_masked[i+(l* SHAKE128_RATE)];
 4330              		.loc 1 652 47 is_stmt 0 view .LVU1352
 4331 0040 6B46     		mov	r3, sp
 4332 0042 07FB0631 		mla	r1, r7, r6, r3
 4333 0046 2046     		mov	r0, r4
 4334 0048 4246     		mov	r2, r8
 649:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4335              		.loc 1 649 47 view .LVU1353
 4336 004a 0136     		adds	r6, r6, #1
 4337              	.LVL166:
 4338              		.loc 1 652 47 view .LVU1354
 4339 004c FFF7FEFF 		bl	memcpy
 4340              	.LVL167:
 649:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4341              		.loc 1 649 46 is_stmt 1 view .LVU1355
 649:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4342              		.loc 1 649 21 view .LVU1356
 649:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4343              		.loc 1 649 9 is_stmt 0 view .LVU1357
 4344 0050 032E     		cmp	r6, #3
 4345 0052 2C44     		add	r4, r4, r5
 4346 0054 F4D1     		bne	.L76
 4347              	.LVL168:
 4348              	.L74:
 653:masked_fips202.c ****         }
 654:masked_fips202.c ****     }
 655:masked_fips202.c **** }
 4349              		.loc 1 655 1 view .LVU1358
 4350 0056 0DF58A6D 		add	sp, sp, #1104
 4351              	.LCFI25:
 4352              		.cfi_def_cfa_offset 24
 4353              		@ sp needed
 4354 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4355              		.loc 1 655 1 view .LVU1359
 4356              		.cfi_endproc
 4357              	.LFE12:
 4359              		.section	.text.shake256_masked,"ax",%progbits
 4360              		.align	1
 4361              		.global	shake256_masked
 4362              		.syntax unified
 4363              		.thumb
 4364              		.thumb_func
 4365              		.fpu softvfp
 4367              	shake256_masked:
 4368              	.LVL169:
 4369              	.LFB13:
 656:masked_fips202.c **** 
 657:masked_fips202.c **** /*************************************************
 658:masked_fips202.c **** * Name:        shake256
 659:masked_fips202.c **** *
 660:masked_fips202.c **** * Description: SHAKE256 XOF with non-incremental API
 661:masked_fips202.c **** *
 662:masked_fips202.c **** * Arguments:   - uint8_t *out:      pointer to output
 663:masked_fips202.c **** *              - size_t outlen:     requested output length in bytes
 664:masked_fips202.c **** *              - const uint8_t *in: pointer to input
 665:masked_fips202.c **** *              - size_t inlen:      length of input in bytes
 666:masked_fips202.c **** **************************************************/
 667:masked_fips202.c **** void shake256_masked(uint8_t* out_masked, size_t outlen, const uint8_t* in_masked, size_t inlen)
 668:masked_fips202.c **** {
 4370              		.loc 1 668 1 is_stmt 1 view -0
 4371              		.cfi_startproc
 4372              		@ args = 0, pretend = 0, frame = 1008
 4373              		@ frame_needed = 0, uses_anonymous_args = 0
 669:masked_fips202.c ****     unsigned int i,l;
 4374              		.loc 1 669 5 view .LVU1361
 670:masked_fips202.c ****     size_t tmp_outlen;
 4375              		.loc 1 670 5 view .LVU1362
 671:masked_fips202.c ****     size_t nblocks = outlen / SHAKE256_RATE;
 4376              		.loc 1 671 5 view .LVU1363
 668:masked_fips202.c ****     unsigned int i,l;
 4377              		.loc 1 668 1 is_stmt 0 view .LVU1364
 4378 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4379              	.LCFI26:
 4380              		.cfi_def_cfa_offset 24
 4381              		.cfi_offset 4, -24
 4382              		.cfi_offset 5, -20
 4383              		.cfi_offset 6, -16
 4384              		.cfi_offset 7, -12
 4385              		.cfi_offset 8, -8
 4386              		.cfi_offset 14, -4
 4387 0004 ADF57C7D 		sub	sp, sp, #1008
 4388              	.LCFI27:
 4389              		.cfi_def_cfa_offset 1032
 668:masked_fips202.c ****     unsigned int i,l;
 4390              		.loc 1 668 1 view .LVU1365
 4391 0008 0D46     		mov	r5, r1
 4392 000a 0446     		mov	r4, r0
 4393 000c 1146     		mov	r1, r2
 4394              	.LVL170:
 4395              		.loc 1 671 12 view .LVU1366
 4396 000e 8827     		movs	r7, #136
 672:masked_fips202.c ****     uint8_t t_masked[SHAKE256_RATE*(MASKING_ORDER+1)];
 673:masked_fips202.c ****     keccak_state_masked state_masked;
 674:masked_fips202.c **** 
 675:masked_fips202.c ****     tmp_outlen = outlen;
 676:masked_fips202.c ****     shake256_absorb_masked(&state_masked, in_masked, inlen);
 4397              		.loc 1 676 5 view .LVU1367
 4398 0010 1A46     		mov	r2, r3
 4399              	.LVL171:
 4400              		.loc 1 676 5 view .LVU1368
 4401 0012 66A8     		add	r0, sp, #408
 4402              	.LVL172:
 4403              		.loc 1 676 5 view .LVU1369
 4404 0014 FFF7FEFF 		bl	shake256_absorb_masked
 4405              	.LVL173:
 671:masked_fips202.c ****     uint8_t t_masked[SHAKE256_RATE*(MASKING_ORDER+1)];
 4406              		.loc 1 671 12 view .LVU1370
 4407 0018 B5FBF7F6 		udiv	r6, r5, r7
 4408              	.LVL174:
 672:masked_fips202.c ****     uint8_t t_masked[SHAKE256_RATE*(MASKING_ORDER+1)];
 4409              		.loc 1 672 5 is_stmt 1 view .LVU1371
 673:masked_fips202.c **** 
 4410              		.loc 1 673 5 view .LVU1372
 675:masked_fips202.c ****     shake256_absorb_masked(&state_masked, in_masked, inlen);
 4411              		.loc 1 675 5 view .LVU1373
 4412              		.loc 1 676 5 view .LVU1374
 677:masked_fips202.c ****     shake256_squeezeblocks_masked(out_masked, nblocks, &state_masked, tmp_outlen);
 4413              		.loc 1 677 5 view .LVU1375
 4414 001c 2B46     		mov	r3, r5
 4415 001e 3146     		mov	r1, r6
 4416 0020 66AA     		add	r2, sp, #408
 4417 0022 2046     		mov	r0, r4
 4418 0024 7E43     		muls	r6, r7, r6
 4419              	.LVL175:
 4420              		.loc 1 677 5 is_stmt 0 view .LVU1376
 4421 0026 FFF7FEFF 		bl	shake256_squeezeblocks_masked
 4422              	.LVL176:
 678:masked_fips202.c **** 	
 679:masked_fips202.c ****     out_masked += nblocks * SHAKE256_RATE;
 4423              		.loc 1 679 5 is_stmt 1 view .LVU1377
 680:masked_fips202.c ****     outlen -= nblocks * SHAKE256_RATE;
 4424              		.loc 1 680 5 view .LVU1378
 681:masked_fips202.c **** 
 682:masked_fips202.c ****     if (outlen) {
 4425              		.loc 1 682 5 view .LVU1379
 4426              		.loc 1 682 8 is_stmt 0 view .LVU1380
 4427 002a B5EB0608 		subs	r8, r5, r6
 4428              	.LVL177:
 4429              		.loc 1 682 8 view .LVU1381
 4430 002e 12D0     		beq	.L81
 683:masked_fips202.c ****         shake256_squeezeblocks_masked(t_masked, 1, &state_masked, 0);
 4431              		.loc 1 683 9 is_stmt 1 view .LVU1382
 4432 0030 0023     		movs	r3, #0
 4433 0032 66AA     		add	r2, sp, #408
 4434 0034 0121     		movs	r1, #1
 4435 0036 6846     		mov	r0, sp
 4436 0038 FFF7FEFF 		bl	shake256_squeezeblocks_masked
 4437              	.LVL178:
 684:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4438              		.loc 1 684 9 view .LVU1383
 4439              		.loc 1 684 21 view .LVU1384
 4440 003c 3444     		add	r4, r4, r6
 4441              		.loc 1 684 16 is_stmt 0 view .LVU1385
 4442 003e 0026     		movs	r6, #0
 4443              	.LVL179:
 4444              	.L83:
 685:masked_fips202.c ****         {
 686:masked_fips202.c ****             for (i = 0; i < outlen; i++)
 4445              		.loc 1 686 25 is_stmt 1 view .LVU1386
 687:masked_fips202.c ****                 out_masked[i + (l * tmp_outlen)] = t_masked[i + (l * SHAKE256_RATE)];
 4446              		.loc 1 687 50 is_stmt 0 view .LVU1387
 4447 0040 6B46     		mov	r3, sp
 4448 0042 07FB0631 		mla	r1, r7, r6, r3
 4449 0046 2046     		mov	r0, r4
 4450 0048 4246     		mov	r2, r8
 684:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4451              		.loc 1 684 47 view .LVU1388
 4452 004a 0136     		adds	r6, r6, #1
 4453              	.LVL180:
 4454              		.loc 1 687 50 view .LVU1389
 4455 004c FFF7FEFF 		bl	memcpy
 4456              	.LVL181:
 684:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4457              		.loc 1 684 46 is_stmt 1 view .LVU1390
 684:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4458              		.loc 1 684 21 view .LVU1391
 684:masked_fips202.c ****         for (l = 0; l < (MASKING_ORDER + 1); l++)
 4459              		.loc 1 684 9 is_stmt 0 view .LVU1392
 4460 0050 032E     		cmp	r6, #3
 4461 0052 2C44     		add	r4, r4, r5
 4462 0054 F4D1     		bne	.L83
 4463              	.LVL182:
 4464              	.L81:
 688:masked_fips202.c ****         }
 689:masked_fips202.c ****     }
 690:masked_fips202.c **** }
 4465              		.loc 1 690 1 view .LVU1393
 4466 0056 0DF57C7D 		add	sp, sp, #1008
 4467              	.LCFI28:
 4468              		.cfi_def_cfa_offset 24
 4469              		@ sp needed
 4470 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4471              		.loc 1 690 1 view .LVU1394
 4472              		.cfi_endproc
 4473              	.LFE13:
 4475              		.section	.text.sha3_256_masked,"ax",%progbits
 4476              		.align	1
 4477              		.global	sha3_256_masked
 4478              		.syntax unified
 4479              		.thumb
 4480              		.thumb_func
 4481              		.fpu softvfp
 4483              	sha3_256_masked:
 4484              	.LVL183:
 4485              	.LFB14:
 691:masked_fips202.c **** 
 692:masked_fips202.c **** /*************************************************
 693:masked_fips202.c **** * Name:        sha3_256
 694:masked_fips202.c **** *
 695:masked_fips202.c **** * Description: SHA3-256 with non-incremental API
 696:masked_fips202.c **** *
 697:masked_fips202.c **** * Arguments:   - uint8_t *h:        pointer to output (32 bytes)
 698:masked_fips202.c **** *              - const uint8_t *in: pointer to input
 699:masked_fips202.c **** *              - size_t inlen:      length of input in bytes
 700:masked_fips202.c **** **************************************************/
 701:masked_fips202.c **** void sha3_256_masked(uint8_t h_masked[32*(MASKING_ORDER+1)], const uint8_t* in_masked, size_t inlen
 702:masked_fips202.c **** {
 4486              		.loc 1 702 1 is_stmt 1 view -0
 4487              		.cfi_startproc
 4488              		@ args = 0, pretend = 0, frame = 1008
 4489              		@ frame_needed = 0, uses_anonymous_args = 0
 703:masked_fips202.c ****     unsigned int i,l;
 4490              		.loc 1 703 5 view .LVU1396
 704:masked_fips202.c ****     uint64_t s_masked[25*(MASKING_ORDER+1)];
 4491              		.loc 1 704 5 view .LVU1397
 705:masked_fips202.c ****     uint8_t t_masked[SHA3_256_RATE*(MASKING_ORDER+1)];
 4492              		.loc 1 705 5 view .LVU1398
 706:masked_fips202.c **** 
 707:masked_fips202.c ****     keccak_absorb_masked(s_masked, SHA3_256_RATE, in_masked, inlen, 0x06);
 4493              		.loc 1 707 5 view .LVU1399
 702:masked_fips202.c ****     unsigned int i,l;
 4494              		.loc 1 702 1 is_stmt 0 view .LVU1400
 4495 0000 70B5     		push	{r4, r5, r6, lr}
 4496              	.LCFI29:
 4497              		.cfi_def_cfa_offset 16
 4498              		.cfi_offset 4, -16
 4499              		.cfi_offset 5, -12
 4500              		.cfi_offset 6, -8
 4501              		.cfi_offset 14, -4
 4502 0002 ADF57E7D 		sub	sp, sp, #1016
 4503              	.LCFI30:
 4504              		.cfi_def_cfa_offset 1032
 702:masked_fips202.c ****     unsigned int i,l;
 4505              		.loc 1 702 1 view .LVU1401
 4506 0006 1346     		mov	r3, r2
 4507              		.loc 1 707 5 view .LVU1402
 4508 0008 0622     		movs	r2, #6
 4509              	.LVL184:
 702:masked_fips202.c ****     unsigned int i,l;
 4510              		.loc 1 702 1 view .LVU1403
 4511 000a 0446     		mov	r4, r0
 4512              		.loc 1 707 5 view .LVU1404
 4513 000c 0092     		str	r2, [sp]
 4514 000e 68A8     		add	r0, sp, #416
 4515              	.LVL185:
 4516              		.loc 1 707 5 view .LVU1405
 4517 0010 0A46     		mov	r2, r1
 4518 0012 8821     		movs	r1, #136
 4519              	.LVL186:
 4520              		.loc 1 707 5 view .LVU1406
 4521 0014 FFF7FEFF 		bl	keccak_absorb_masked
 4522              	.LVL187:
 708:masked_fips202.c ****     keccak_squeezeblocks_masked(t_masked, 1, s_masked, SHA3_256_RATE, 0);
 4523              		.loc 1 708 5 is_stmt 1 view .LVU1407
 4524 0018 0023     		movs	r3, #0
 4525 001a 0093     		str	r3, [sp]
 4526 001c 68AA     		add	r2, sp, #416
 4527 001e 8823     		movs	r3, #136
 4528 0020 0121     		movs	r1, #1
 4529 0022 02A8     		add	r0, sp, #8
 4530 0024 FFF7FEFF 		bl	keccak_squeezeblocks_masked
 4531              	.LVL188:
 709:masked_fips202.c **** 
 710:masked_fips202.c ****     for (l = 0; l < (MASKING_ORDER+1); l++)
 4532              		.loc 1 710 5 view .LVU1408
 4533              		.loc 1 710 17 view .LVU1409
 711:masked_fips202.c ****     {
 712:masked_fips202.c ****         for (i = 0; i < 32; i++)
 4534              		.loc 1 712 21 view .LVU1410
 713:masked_fips202.c ****             h_masked[i+(l*32)] = t_masked[i+(l*SHA3_256_RATE)];
 4535              		.loc 1 713 32 is_stmt 0 view .LVU1411
 4536 0028 2546     		mov	r5, r4
 4537 002a 02AB     		add	r3, sp, #8
 4538 002c 0AAE     		add	r6, sp, #40
 4539              	.L89:
 4540              		.loc 1 713 32 view .LVU1412
 4541 002e 1A46     		mov	r2, r3
 4542 0030 03CA     		ldmia	r2!, {r0, r1}
 4543 0032 B242     		cmp	r2, r6
 4544 0034 2860     		str	r0, [r5]	@ unaligned
 4545 0036 6960     		str	r1, [r5, #4]	@ unaligned
 4546 0038 1346     		mov	r3, r2
 4547 003a 05F10805 		add	r5, r5, #8
 4548 003e F6D1     		bne	.L89
 4549              	.LVL189:
 710:masked_fips202.c ****     {
 4550              		.loc 1 710 40 is_stmt 1 view .LVU1413
 710:masked_fips202.c ****     {
 4551              		.loc 1 710 17 view .LVU1414
 712:masked_fips202.c ****             h_masked[i+(l*32)] = t_masked[i+(l*SHA3_256_RATE)];
 4552              		.loc 1 712 21 view .LVU1415
 4553              		.loc 1 713 32 is_stmt 0 view .LVU1416
 4554 0040 24AD     		add	r5, sp, #144
 4555 0042 04F12002 		add	r2, r4, #32
 4556 0046 2CAE     		add	r6, sp, #176
 4557              	.L90:
 4558 0048 2B46     		mov	r3, r5
 4559 004a 03CB     		ldmia	r3!, {r0, r1}
 4560 004c B342     		cmp	r3, r6
 4561 004e 1060     		str	r0, [r2]	@ unaligned
 4562 0050 5160     		str	r1, [r2, #4]	@ unaligned
 4563 0052 1D46     		mov	r5, r3
 4564 0054 02F10802 		add	r2, r2, #8
 4565 0058 F6D1     		bne	.L90
 4566              	.LVL190:
 710:masked_fips202.c ****     {
 4567              		.loc 1 710 40 is_stmt 1 view .LVU1417
 710:masked_fips202.c ****     {
 4568              		.loc 1 710 17 view .LVU1418
 712:masked_fips202.c ****             h_masked[i+(l*32)] = t_masked[i+(l*SHA3_256_RATE)];
 4569              		.loc 1 712 21 view .LVU1419
 4570              		.loc 1 713 32 is_stmt 0 view .LVU1420
 4571 005a 04F14003 		add	r3, r4, #64
 4572 005e 46AD     		add	r5, sp, #280
 4573 0060 4EAC     		add	r4, sp, #312
 4574              	.LVL191:
 4575              	.L91:
 4576              		.loc 1 713 32 view .LVU1421
 4577 0062 2A46     		mov	r2, r5
 4578 0064 03CA     		ldmia	r2!, {r0, r1}
 4579 0066 A242     		cmp	r2, r4
 4580 0068 1860     		str	r0, [r3]	@ unaligned
 4581 006a 5960     		str	r1, [r3, #4]	@ unaligned
 4582 006c 1546     		mov	r5, r2
 4583 006e 03F10803 		add	r3, r3, #8
 4584 0072 F6D1     		bne	.L91
 714:masked_fips202.c ****     }
 715:masked_fips202.c **** }
 4585              		.loc 1 715 1 view .LVU1422
 4586 0074 0DF57E7D 		add	sp, sp, #1016
 4587              	.LCFI31:
 4588              		.cfi_def_cfa_offset 16
 4589              		@ sp needed
 4590 0078 70BD     		pop	{r4, r5, r6, pc}
 4591              		.cfi_endproc
 4592              	.LFE14:
 4594              		.section	.text.sha3_512_masked,"ax",%progbits
 4595              		.align	1
 4596              		.global	sha3_512_masked
 4597              		.syntax unified
 4598              		.thumb
 4599              		.thumb_func
 4600              		.fpu softvfp
 4602              	sha3_512_masked:
 4603              	.LVL192:
 4604              	.LFB15:
 716:masked_fips202.c **** 
 717:masked_fips202.c **** /*************************************************
 718:masked_fips202.c **** * Name:        sha3_512
 719:masked_fips202.c **** *
 720:masked_fips202.c **** * Description: SHA3-512 with non-incremental API
 721:masked_fips202.c **** *
 722:masked_fips202.c **** * Arguments:   - uint8_t *h:        pointer to output (64 bytes)
 723:masked_fips202.c **** *              - const uint8_t *in: pointer to input
 724:masked_fips202.c **** *              - size_t inlen:      length of input in bytes
 725:masked_fips202.c **** **************************************************/
 726:masked_fips202.c **** void sha3_512_masked(uint8_t h_masked[64 * (MASKING_ORDER + 1)], const uint8_t* in_masked, size_t i
 727:masked_fips202.c **** {
 4605              		.loc 1 727 1 is_stmt 1 view -0
 4606              		.cfi_startproc
 4607              		@ args = 0, pretend = 0, frame = 816
 4608              		@ frame_needed = 0, uses_anonymous_args = 0
 728:masked_fips202.c ****     unsigned int i,l;
 4609              		.loc 1 728 5 view .LVU1424
 729:masked_fips202.c ****     uint64_t s_masked[25 * (MASKING_ORDER + 1)];
 4610              		.loc 1 729 5 view .LVU1425
 730:masked_fips202.c ****     uint8_t t_masked[SHA3_512_RATE*(MASKING_ORDER+1)];
 4611              		.loc 1 730 5 view .LVU1426
 731:masked_fips202.c **** 
 732:masked_fips202.c ****     keccak_absorb_masked(s_masked, SHA3_512_RATE, in_masked, inlen, 0x06);
 4612              		.loc 1 732 5 view .LVU1427
 727:masked_fips202.c ****     unsigned int i,l;
 4613              		.loc 1 727 1 is_stmt 0 view .LVU1428
 4614 0000 70B5     		push	{r4, r5, r6, lr}
 4615              	.LCFI32:
 4616              		.cfi_def_cfa_offset 16
 4617              		.cfi_offset 4, -16
 4618              		.cfi_offset 5, -12
 4619              		.cfi_offset 6, -8
 4620              		.cfi_offset 14, -4
 4621 0002 ADF54E7D 		sub	sp, sp, #824
 4622              	.LCFI33:
 4623              		.cfi_def_cfa_offset 840
 727:masked_fips202.c ****     unsigned int i,l;
 4624              		.loc 1 727 1 view .LVU1429
 4625 0006 1346     		mov	r3, r2
 4626              		.loc 1 732 5 view .LVU1430
 4627 0008 0622     		movs	r2, #6
 4628              	.LVL193:
 727:masked_fips202.c ****     unsigned int i,l;
 4629              		.loc 1 727 1 view .LVU1431
 4630 000a 0446     		mov	r4, r0
 4631              		.loc 1 732 5 view .LVU1432
 4632 000c 0092     		str	r2, [sp]
 4633 000e 38A8     		add	r0, sp, #224
 4634              	.LVL194:
 4635              		.loc 1 732 5 view .LVU1433
 4636 0010 0A46     		mov	r2, r1
 4637 0012 4821     		movs	r1, #72
 4638              	.LVL195:
 4639              		.loc 1 732 5 view .LVU1434
 4640 0014 FFF7FEFF 		bl	keccak_absorb_masked
 4641              	.LVL196:
 733:masked_fips202.c ****     keccak_squeezeblocks_masked(t_masked, 1, s_masked, SHA3_512_RATE, 0);
 4642              		.loc 1 733 5 is_stmt 1 view .LVU1435
 4643 0018 0023     		movs	r3, #0
 4644 001a 0093     		str	r3, [sp]
 4645 001c 38AA     		add	r2, sp, #224
 4646 001e 4823     		movs	r3, #72
 4647 0020 0121     		movs	r1, #1
 4648 0022 02A8     		add	r0, sp, #8
 4649 0024 FFF7FEFF 		bl	keccak_squeezeblocks_masked
 4650              	.LVL197:
 734:masked_fips202.c **** 
 735:masked_fips202.c ****     for (l = 0; l < (MASKING_ORDER+1); l++)
 4651              		.loc 1 735 5 view .LVU1436
 4652              		.loc 1 735 17 view .LVU1437
 736:masked_fips202.c ****     {
 737:masked_fips202.c ****         for (i = 0; i < 64; i++)
 4653              		.loc 1 737 21 view .LVU1438
 738:masked_fips202.c ****             h_masked[i+(l*64)] = t_masked[i+(l* SHA3_512_RATE)];
 4654              		.loc 1 738 32 is_stmt 0 view .LVU1439
 4655 0028 2546     		mov	r5, r4
 4656 002a 02AB     		add	r3, sp, #8
 4657 002c 12AE     		add	r6, sp, #72
 4658              	.L96:
 4659              		.loc 1 738 32 view .LVU1440
 4660 002e 1A46     		mov	r2, r3
 4661 0030 03CA     		ldmia	r2!, {r0, r1}
 4662 0032 B242     		cmp	r2, r6
 4663 0034 2860     		str	r0, [r5]	@ unaligned
 4664 0036 6960     		str	r1, [r5, #4]	@ unaligned
 4665 0038 1346     		mov	r3, r2
 4666 003a 05F10805 		add	r5, r5, #8
 4667 003e F6D1     		bne	.L96
 4668              	.LVL198:
 735:masked_fips202.c ****     {
 4669              		.loc 1 735 40 is_stmt 1 view .LVU1441
 735:masked_fips202.c ****     {
 4670              		.loc 1 735 17 view .LVU1442
 737:masked_fips202.c ****             h_masked[i+(l*64)] = t_masked[i+(l* SHA3_512_RATE)];
 4671              		.loc 1 737 21 view .LVU1443
 4672              		.loc 1 738 32 is_stmt 0 view .LVU1444
 4673 0040 14AD     		add	r5, sp, #80
 4674 0042 04F14002 		add	r2, r4, #64
 4675 0046 24AE     		add	r6, sp, #144
 4676              	.L97:
 4677 0048 2B46     		mov	r3, r5
 4678 004a 03CB     		ldmia	r3!, {r0, r1}
 4679 004c B342     		cmp	r3, r6
 4680 004e 1060     		str	r0, [r2]	@ unaligned
 4681 0050 5160     		str	r1, [r2, #4]	@ unaligned
 4682 0052 1D46     		mov	r5, r3
 4683 0054 02F10802 		add	r2, r2, #8
 4684 0058 F6D1     		bne	.L97
 4685              	.LVL199:
 735:masked_fips202.c ****     {
 4686              		.loc 1 735 40 is_stmt 1 view .LVU1445
 735:masked_fips202.c ****     {
 4687              		.loc 1 735 17 view .LVU1446
 737:masked_fips202.c ****             h_masked[i+(l*64)] = t_masked[i+(l* SHA3_512_RATE)];
 4688              		.loc 1 737 21 view .LVU1447
 4689              		.loc 1 738 32 is_stmt 0 view .LVU1448
 4690 005a 04F18003 		add	r3, r4, #128
 4691 005e 26AD     		add	r5, sp, #152
 4692 0060 36AC     		add	r4, sp, #216
 4693              	.LVL200:
 4694              	.L98:
 4695              		.loc 1 738 32 view .LVU1449
 4696 0062 2A46     		mov	r2, r5
 4697 0064 03CA     		ldmia	r2!, {r0, r1}
 4698 0066 A242     		cmp	r2, r4
 4699 0068 1860     		str	r0, [r3]	@ unaligned
 4700 006a 5960     		str	r1, [r3, #4]	@ unaligned
 4701 006c 1546     		mov	r5, r2
 4702 006e 03F10803 		add	r3, r3, #8
 4703 0072 F6D1     		bne	.L98
 739:masked_fips202.c ****     }
 740:masked_fips202.c **** }...
 4704              		.loc 1 740 1 view .LVU1450
 4705 0074 0DF54E7D 		add	sp, sp, #824
 4706              	.LCFI34:
 4707              		.cfi_def_cfa_offset 16
 4708              		@ sp needed
 4709 0078 70BD     		pop	{r4, r5, r6, pc}
 4710              		.cfi_endproc
 4711              	.LFE15:
 4713              		.section	.rodata
 4714              		.align	3
 4715              		.set	.LANCHOR0,. + 0
 4718              	KeccakF_RoundConstants:
 4719 0000 01000000 		.word	1
 4720 0004 00000000 		.word	0
 4721 0008 82800000 		.word	32898
 4722 000c 00000000 		.word	0
 4723 0010 8A800000 		.word	32906
 4724 0014 00000080 		.word	-2147483648
 4725 0018 00800080 		.word	-2147450880
 4726 001c 00000080 		.word	-2147483648
 4727 0020 8B800000 		.word	32907
 4728 0024 00000000 		.word	0
 4729 0028 01000080 		.word	-2147483647
 4730 002c 00000000 		.word	0
 4731 0030 81800080 		.word	-2147450751
 4732 0034 00000080 		.word	-2147483648
 4733 0038 09800000 		.word	32777
 4734 003c 00000080 		.word	-2147483648
 4735 0040 8A000000 		.word	138
 4736 0044 00000000 		.word	0
 4737 0048 88000000 		.word	136
 4738 004c 00000000 		.word	0
 4739 0050 09800080 		.word	-2147450871
 4740 0054 00000000 		.word	0
 4741 0058 0A000080 		.word	-2147483638
 4742 005c 00000000 		.word	0
 4743 0060 8B800080 		.word	-2147450741
 4744 0064 00000000 		.word	0
 4745 0068 8B000000 		.word	139
 4746 006c 00000080 		.word	-2147483648
 4747 0070 89800000 		.word	32905
 4748 0074 00000080 		.word	-2147483648
 4749 0078 03800000 		.word	32771
 4750 007c 00000080 		.word	-2147483648
 4751 0080 02800000 		.word	32770
 4752 0084 00000080 		.word	-2147483648
 4753 0088 80000000 		.word	128
 4754 008c 00000080 		.word	-2147483648
 4755 0090 0A800000 		.word	32778
 4756 0094 00000000 		.word	0
 4757 0098 0A000080 		.word	-2147483638
 4758 009c 00000080 		.word	-2147483648
 4759 00a0 81800080 		.word	-2147450751
 4760 00a4 00000080 		.word	-2147483648
 4761 00a8 80800000 		.word	32896
 4762 00ac 00000080 		.word	-2147483648
 4763 00b0 01000080 		.word	-2147483647
 4764 00b4 00000000 		.word	0
 4765 00b8 08800080 		.word	-2147450872
 4766 00bc 00000080 		.word	-2147483648
 4767              		.text
 4768              	.Letext0:
 4769              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\lib\\gcc\\arm-none-eabi\\
 4770              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 4771              		.file 4 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 4772              		.file 5 "fips202.h"
 4773              		.file 6 "<built-in>"
 4774              		.file 7 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
DEFINED SYMBOLS
                            *ABS*:00000000 masked_fips202.c
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:16     .text.rand32bits:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:24     .text.rand32bits:00000000 rand32bits
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:71     .text.secMult:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:78     .text.secMult:00000000 secMult
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:300    .text.not_mult_xor:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:307    .text.not_mult_xor:00000000 not_mult_xor
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:394    .text.KeccakF1600_StatePermute_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:401    .text.KeccakF1600_StatePermute_masked:00000000 KeccakF1600_StatePermute_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:649    .text.KeccakF1600_StatePermute_masked:000001a4 $d
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:655    .text.KeccakF1600_StatePermute_masked:000001a8 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:3605   .text.keccak_squeezeblocks_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:3611   .text.keccak_squeezeblocks_masked:00000000 keccak_squeezeblocks_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:3773   .text.keccak_absorb_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:3780   .text.keccak_absorb_masked:00000000 keccak_absorb_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4084   .text.shake128_absorb_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4091   .text.shake128_absorb_masked:00000000 shake128_absorb_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4127   .text.shake128_squeezeblocks_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4134   .text.shake128_squeezeblocks_masked:00000000 shake128_squeezeblocks_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4164   .text.shake256_absorb_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4171   .text.shake256_absorb_masked:00000000 shake256_absorb_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4207   .text.shake256_squeezeblocks_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4214   .text.shake256_squeezeblocks_masked:00000000 shake256_squeezeblocks_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4244   .text.shake128_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4251   .text.shake128_masked:00000000 shake128_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4360   .text.shake256_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4367   .text.shake256_masked:00000000 shake256_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4476   .text.sha3_256_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4483   .text.sha3_256_masked:00000000 sha3_256_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4595   .text.sha3_512_masked:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4602   .text.sha3_512_masked:00000000 sha3_512_masked
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4714   .rodata:00000000 $d
C:\Users\dudixiao\AppData\Local\Temp\ccaxglI8.s:4718   .rodata:00000000 KeccakF_RoundConstants

UNDEFINED SYMBOLS
rand
memset
memcpy
