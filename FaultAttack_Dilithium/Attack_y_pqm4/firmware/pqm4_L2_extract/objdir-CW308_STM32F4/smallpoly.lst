   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"smallpoly.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.poly_small_ntt_precomp,"ax",%progbits
  16              		.align	1
  17              		.global	poly_small_ntt_precomp
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	poly_small_ntt_precomp:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "smallpoly.c"
   1:smallpoly.c   **** #include "smallpoly.h"
   2:smallpoly.c   **** #include "smallntt.h"
   3:smallpoly.c   **** 
   4:smallpoly.c   **** void poly_small_ntt_precomp(smallpoly *out, smallhalfpoly *out2, poly *in) {
  28              		.loc 1 4 76 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
   5:smallpoly.c   ****   for (int i = 0; i < N; i++)
  32              		.loc 1 5 3 view .LVU1
  33              	.LBB2:
  34              		.loc 1 5 8 view .LVU2
  35              		.loc 1 5 19 view .LVU3
  36              	.LBE2:
   4:smallpoly.c   ****   for (int i = 0; i < N; i++)
  37              		.loc 1 4 76 is_stmt 0 view .LVU4
  38 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 24
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44              	.LBB3:
  45              		.loc 1 5 12 view .LVU5
  46 0002 0023     		movs	r3, #0
  47              	.LBE3:
   4:smallpoly.c   ****   for (int i = 0; i < N; i++)
  48              		.loc 1 4 76 view .LVU6
  49 0004 0446     		mov	r4, r0
  50 0006 0D46     		mov	r5, r1
  51              	.LVL1:
  52              	.L2:
  53              	.LBB4:
   6:smallpoly.c   ****   {
   7:smallpoly.c   ****     out->coeffs[i] = in->coeffs[i];
  54              		.loc 1 7 5 is_stmt 1 discriminator 3 view .LVU7
  55              		.loc 1 7 32 is_stmt 0 discriminator 3 view .LVU8
  56 0008 52F82310 		ldr	r1, [r2, r3, lsl #2]
  57              		.loc 1 7 20 discriminator 3 view .LVU9
  58 000c 44F82310 		str	r1, [r4, r3, lsl #2]
   5:smallpoly.c   ****   {
  59              		.loc 1 5 26 is_stmt 1 discriminator 3 view .LVU10
   5:smallpoly.c   ****   {
  60              		.loc 1 5 27 is_stmt 0 discriminator 3 view .LVU11
  61 0010 0133     		adds	r3, r3, #1
  62              	.LVL2:
   5:smallpoly.c   ****   {
  63              		.loc 1 5 19 is_stmt 1 discriminator 3 view .LVU12
   5:smallpoly.c   ****   {
  64              		.loc 1 5 3 is_stmt 0 discriminator 3 view .LVU13
  65 0012 B3F5807F 		cmp	r3, #256
  66 0016 F7D1     		bne	.L2
  67              	.LBE4:
   8:smallpoly.c   ****   }
   9:smallpoly.c   ****   small_ntt(out->coeffs);
  68              		.loc 1 9 3 is_stmt 1 view .LVU14
  69 0018 2046     		mov	r0, r4
  70              	.LVL3:
  71              		.loc 1 9 3 is_stmt 0 view .LVU15
  72 001a 0949     		ldr	r1, .L4
  73 001c 40F20113 		movw	r3, #257
  74              	.LVL4:
  75              		.loc 1 9 3 view .LVU16
  76 0020 4FF0FF12 		mov	r2, #16711935
  77              	.LVL5:
  78              		.loc 1 9 3 view .LVU17
  79 0024 FFF7FEFF 		bl	__asm_fnt_257
  80              	.LVL6:
  10:smallpoly.c   ****   small_point_mul(out2->coeffs, out->coeffs);
  81              		.loc 1 10 3 is_stmt 1 view .LVU18
  82 0028 064B     		ldr	r3, .L4+4
  83 002a 0093     		str	r3, [sp]
  84 002c 4FF0FF12 		mov	r2, #16711935
  85 0030 40F20113 		movw	r3, #257
  86 0034 2146     		mov	r1, r4
  87 0036 2846     		mov	r0, r5
  88 0038 FFF7FEFF 		bl	__asm_point_mul_257_16
  89              	.LVL7:
  90              		.loc 1 10 45 view .LVU19
  11:smallpoly.c   **** }
  91              		.loc 1 11 1 is_stmt 0 view .LVU20
  92 003c 03B0     		add	sp, sp, #12
  93              	.LCFI1:
  94              		.cfi_def_cfa_offset 12
  95              		@ sp needed
  96 003e 30BD     		pop	{r4, r5, pc}
  97              	.LVL8:
  98              	.L5:
  99              		.loc 1 11 1 view .LVU21
 100              		.align	2
 101              	.L4:
 102 0040 00000000 		.word	.LANCHOR0
 103 0044 E0010000 		.word	.LANCHOR0+480
 104              		.cfi_endproc
 105              	.LFE0:
 107              		.section	.text.polyvecl_small_ntt,"ax",%progbits
 108              		.align	1
 109              		.global	polyvecl_small_ntt
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu softvfp
 115              	polyvecl_small_ntt:
 116              	.LVL9:
 117              	.LFB1:
  12:smallpoly.c   **** 
  13:smallpoly.c   **** 
  14:smallpoly.c   **** void polyvecl_small_ntt(smallpoly v[L]) {
 118              		.loc 1 14 41 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
  15:smallpoly.c   ****   unsigned int i;
 122              		.loc 1 15 3 view .LVU23
  16:smallpoly.c   **** 
  17:smallpoly.c   ****   for(i = 0; i < L; ++i)
 123              		.loc 1 17 3 view .LVU24
 124              		.loc 1 17 14 view .LVU25
  14:smallpoly.c   ****   unsigned int i;
 125              		.loc 1 14 41 is_stmt 0 view .LVU26
 126 0000 70B5     		push	{r4, r5, r6, lr}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 16
 129              		.cfi_offset 4, -16
 130              		.cfi_offset 5, -12
 131              		.cfi_offset 6, -8
 132              		.cfi_offset 14, -4
  18:smallpoly.c   ****     small_ntt(v[i].coeffs);
 133              		.loc 1 18 5 view .LVU27
 134 0002 084E     		ldr	r6, .L9
  14:smallpoly.c   ****   unsigned int i;
 135              		.loc 1 14 41 view .LVU28
 136 0004 0446     		mov	r4, r0
 137 0006 00F58055 		add	r5, r0, #4096
 138              	.LVL10:
 139              	.L7:
 140              		.loc 1 18 5 is_stmt 1 discriminator 3 view .LVU29
 141 000a 2046     		mov	r0, r4
 142 000c 40F20113 		movw	r3, #257
 143 0010 4FF0FF12 		mov	r2, #16711935
 144 0014 3146     		mov	r1, r6
  17:smallpoly.c   ****     small_ntt(v[i].coeffs);
 145              		.loc 1 17 3 is_stmt 0 discriminator 3 view .LVU30
 146 0016 04F58064 		add	r4, r4, #1024
 147              		.loc 1 18 5 discriminator 3 view .LVU31
 148 001a FFF7FEFF 		bl	__asm_fnt_257
 149              	.LVL11:
  17:smallpoly.c   ****     small_ntt(v[i].coeffs);
 150              		.loc 1 17 21 is_stmt 1 discriminator 3 view .LVU32
  17:smallpoly.c   ****     small_ntt(v[i].coeffs);
 151              		.loc 1 17 14 discriminator 3 view .LVU33
  17:smallpoly.c   ****     small_ntt(v[i].coeffs);
 152              		.loc 1 17 3 is_stmt 0 discriminator 3 view .LVU34
 153 001e AC42     		cmp	r4, r5
 154 0020 F3D1     		bne	.L7
  19:smallpoly.c   **** }
 155              		.loc 1 19 1 view .LVU35
 156 0022 70BD     		pop	{r4, r5, r6, pc}
 157              	.LVL12:
 158              	.L10:
 159              		.loc 1 19 1 view .LVU36
 160              		.align	2
 161              	.L9:
 162 0024 00000000 		.word	.LANCHOR0
 163              		.cfi_endproc
 164              	.LFE1:
 166              		.section	.text.polyveck_small_ntt,"ax",%progbits
 167              		.align	1
 168              		.global	polyveck_small_ntt
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 172              		.fpu softvfp
 174              	polyveck_small_ntt:
 175              	.LFB7:
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 FFF7FEBF 		b	polyvecl_small_ntt
 181              		.cfi_endproc
 182              	.LFE7:
 184              		.section	.text.poly_small_basemul_invntt,"ax",%progbits
 185              		.align	1
 186              		.global	poly_small_basemul_invntt
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu softvfp
 192              	poly_small_basemul_invntt:
 193              	.LVL13:
 194              	.LFB3:
  20:smallpoly.c   **** 
  21:smallpoly.c   **** 
  22:smallpoly.c   **** void polyveck_small_ntt(smallpoly v[K]) {
  23:smallpoly.c   ****   unsigned int i;
  24:smallpoly.c   **** 
  25:smallpoly.c   ****   for(i = 0; i < K; ++i)
  26:smallpoly.c   ****     small_ntt(v[i].coeffs);
  27:smallpoly.c   **** }
  28:smallpoly.c   **** 
  29:smallpoly.c   **** 
  30:smallpoly.c   **** 
  31:smallpoly.c   **** void poly_small_basemul_invntt(poly *r, const smallpoly *a, const smallhalfpoly *aprime, const smal
 195              		.loc 1 31 109 is_stmt 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
  32:smallpoly.c   ****     // re-use the buffer
  33:smallpoly.c   ****     smallpoly *tmp = (smallpoly *)r;
 199              		.loc 1 33 5 view .LVU38
  31:smallpoly.c   ****     // re-use the buffer
 200              		.loc 1 31 109 is_stmt 0 view .LVU39
 201 0000 70B5     		push	{r4, r5, r6, lr}
 202              	.LCFI3:
 203              		.cfi_def_cfa_offset 16
 204              		.cfi_offset 4, -16
 205              		.cfi_offset 5, -12
 206              		.cfi_offset 6, -8
 207              		.cfi_offset 14, -4
  31:smallpoly.c   ****     // re-use the buffer
 208              		.loc 1 31 109 view .LVU40
 209 0002 0D46     		mov	r5, r1
 210 0004 0446     		mov	r4, r0
 211              	.LVL14:
  34:smallpoly.c   ****     small_asymmetric_mul(tmp->coeffs, b->coeffs, a->coeffs, aprime->coeffs);
 212              		.loc 1 34 5 is_stmt 1 view .LVU41
  31:smallpoly.c   ****     // re-use the buffer
 213              		.loc 1 31 109 is_stmt 0 view .LVU42
 214 0006 1946     		mov	r1, r3
 215              	.LVL15:
 216              		.loc 1 34 5 view .LVU43
 217 0008 1346     		mov	r3, r2
 218              	.LVL16:
 219              		.loc 1 34 5 view .LVU44
 220 000a 2A46     		mov	r2, r5
 221              	.LVL17:
 222              		.loc 1 34 5 view .LVU45
 223 000c FFF7FEFF 		bl	__asm_asymmetric_mul_257_16
 224              	.LVL18:
 225              		.loc 1 34 76 is_stmt 1 view .LVU46
  35:smallpoly.c   ****     small_invntt_tomont(tmp->coeffs);
 226              		.loc 1 35 5 view .LVU47
 227 0010 2046     		mov	r0, r4
 228 0012 0449     		ldr	r1, .L13
  36:smallpoly.c   **** 
  37:smallpoly.c   ****     #ifdef SMALL_POLY_16_BIT
  38:smallpoly.c   ****     int j;
  39:smallpoly.c   ****     // buffer is the same, so we neeed to be careful
  40:smallpoly.c   ****     for(j=N-1;j>=0;j--){
  41:smallpoly.c   ****         r->coeffs[j] = tmp->coeffs[j];
  42:smallpoly.c   ****     }
  43:smallpoly.c   ****     #endif
  44:smallpoly.c   **** }
 229              		.loc 1 44 1 is_stmt 0 view .LVU48
 230 0014 BDE87040 		pop	{r4, r5, r6, lr}
 231              	.LCFI4:
 232              		.cfi_restore 14
 233              		.cfi_restore 6
 234              		.cfi_restore 5
 235              		.cfi_restore 4
 236              		.cfi_def_cfa_offset 0
 237              	.LVL19:
  35:smallpoly.c   ****     small_invntt_tomont(tmp->coeffs);
 238              		.loc 1 35 5 view .LVU49
 239 0018 40F20113 		movw	r3, #257
 240 001c 4FF0FF12 		mov	r2, #16711935
 241 0020 FFF7FEBF 		b	__asm_ifnt_257
 242              	.LVL20:
 243              	.L14:
  35:smallpoly.c   ****     small_invntt_tomont(tmp->coeffs);
 244              		.loc 1 35 5 view .LVU50
 245              		.align	2
 246              	.L13:
 247 0024 E0020000 		.word	.LANCHOR0+736
 248              		.cfi_endproc
 249              	.LFE3:
 251              		.section	.text.polyvecl_small_basemul_invntt,"ax",%progbits
 252              		.align	1
 253              		.global	polyvecl_small_basemul_invntt
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu softvfp
 259              	polyvecl_small_basemul_invntt:
 260              	.LVL21:
 261              	.LFB4:
  45:smallpoly.c   **** 
  46:smallpoly.c   **** void polyvecl_small_basemul_invntt(polyvecl *r, const smallpoly *a, const smallhalfpoly *aprime, co
 262              		.loc 1 46 119 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
  47:smallpoly.c   ****     unsigned int i;
 266              		.loc 1 47 5 view .LVU52
  48:smallpoly.c   ****     for(i=0;i<L;i++){
 267              		.loc 1 48 5 view .LVU53
 268              		.loc 1 48 13 view .LVU54
  46:smallpoly.c   ****     unsigned int i;
 269              		.loc 1 46 119 is_stmt 0 view .LVU55
 270 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 271              	.LCFI5:
 272              		.cfi_def_cfa_offset 24
 273              		.cfi_offset 4, -24
 274              		.cfi_offset 5, -20
 275              		.cfi_offset 6, -16
 276              		.cfi_offset 7, -12
 277              		.cfi_offset 8, -8
 278              		.cfi_offset 14, -4
  46:smallpoly.c   ****     unsigned int i;
 279              		.loc 1 46 119 view .LVU56
 280 0004 0546     		mov	r5, r0
 281 0006 0E46     		mov	r6, r1
 282 0008 1746     		mov	r7, r2
 283 000a 9846     		mov	r8, r3
 284 000c 0024     		movs	r4, #0
 285              	.LVL22:
 286              	.L16:
  49:smallpoly.c   ****         poly_small_basemul_invntt(&r->vec[i], a, aprime, &b[i]);
 287              		.loc 1 49 9 is_stmt 1 discriminator 3 view .LVU57
 288 000e 08EB0403 		add	r3, r8, r4
 289 0012 2819     		adds	r0, r5, r4
 290 0014 3A46     		mov	r2, r7
 291 0016 3146     		mov	r1, r6
  48:smallpoly.c   ****     for(i=0;i<L;i++){
 292              		.loc 1 48 5 is_stmt 0 discriminator 3 view .LVU58
 293 0018 04F58064 		add	r4, r4, #1024
 294              		.loc 1 49 9 discriminator 3 view .LVU59
 295 001c FFF7FEFF 		bl	poly_small_basemul_invntt
 296              	.LVL23:
  48:smallpoly.c   ****     for(i=0;i<L;i++){
 297              		.loc 1 48 17 is_stmt 1 discriminator 3 view .LVU60
  48:smallpoly.c   ****     for(i=0;i<L;i++){
 298              		.loc 1 48 13 discriminator 3 view .LVU61
  48:smallpoly.c   ****     for(i=0;i<L;i++){
 299              		.loc 1 48 5 is_stmt 0 discriminator 3 view .LVU62
 300 0020 B4F5805F 		cmp	r4, #4096
 301 0024 F3D1     		bne	.L16
  50:smallpoly.c   ****     }
  51:smallpoly.c   **** }
 302              		.loc 1 51 1 view .LVU63
 303 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 304              		.loc 1 51 1 view .LVU64
 305              		.cfi_endproc
 306              	.LFE4:
 308              		.section	.text.small_polyeta_unpack,"ax",%progbits
 309              		.align	1
 310              		.global	small_polyeta_unpack
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu softvfp
 316              	small_polyeta_unpack:
 317              	.LVL24:
 318              	.LFB5:
  52:smallpoly.c   **** 
  53:smallpoly.c   **** void small_polyeta_unpack(smallpoly *r, const uint8_t *a) {
 319              		.loc 1 53 59 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
  54:smallpoly.c   ****   unsigned int i;
 323              		.loc 1 54 3 view .LVU66
  55:smallpoly.c   **** 
  56:smallpoly.c   **** #if ETA == 2
  57:smallpoly.c   ****   for(i = 0; i < N/8; ++i) {
 324              		.loc 1 57 3 view .LVU67
 325              		.loc 1 57 14 view .LVU68
  53:smallpoly.c   ****   unsigned int i;
 326              		.loc 1 53 59 is_stmt 0 view .LVU69
 327 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 328              	.LCFI6:
 329              		.cfi_def_cfa_offset 24
 330              		.cfi_offset 4, -24
 331              		.cfi_offset 5, -20
 332              		.cfi_offset 6, -16
 333              		.cfi_offset 7, -12
 334              		.cfi_offset 8, -8
 335              		.cfi_offset 14, -4
 336 0004 00F58065 		add	r5, r0, #1024
 337              	.LVL25:
 338              	.L19:
  58:smallpoly.c   ****     r->coeffs[8*i+0] =  (a[3*i+0] >> 0) & 7;
 339              		.loc 1 58 5 is_stmt 1 discriminator 3 view .LVU70
 340              		.loc 1 58 41 is_stmt 0 discriminator 3 view .LVU71
 341 0008 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 342 000a 07F00707 		and	r7, r7, #7
 343              		.loc 1 58 22 discriminator 3 view .LVU72
 344 000e 0760     		str	r7, [r0]
  59:smallpoly.c   ****     r->coeffs[8*i+1] =  (a[3*i+0] >> 3) & 7;
 345              		.loc 1 59 5 is_stmt 1 discriminator 3 view .LVU73
 346              		.loc 1 59 41 is_stmt 0 discriminator 3 view .LVU74
 347 0010 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 348 0012 C6F3C206 		ubfx	r6, r6, #3, #3
 349              		.loc 1 59 22 discriminator 3 view .LVU75
 350 0016 4660     		str	r6, [r0, #4]
  60:smallpoly.c   ****     r->coeffs[8*i+2] = ((a[3*i+0] >> 6) | (a[3*i+1] << 2)) & 7;
 351              		.loc 1 60 5 is_stmt 1 discriminator 3 view .LVU76
 352              		.loc 1 60 45 is_stmt 0 discriminator 3 view .LVU77
 353 0018 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 354              		.loc 1 60 35 discriminator 3 view .LVU78
 355 001a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 356              		.loc 1 60 53 discriminator 3 view .LVU79
 357 001c 9B00     		lsls	r3, r3, #2
 358              		.loc 1 60 41 discriminator 3 view .LVU80
 359 001e 43EA9213 		orr	r3, r3, r2, lsr #6
 360              		.loc 1 60 60 discriminator 3 view .LVU81
 361 0022 03F00702 		and	r2, r3, #7
 362              		.loc 1 60 22 discriminator 3 view .LVU82
 363 0026 8260     		str	r2, [r0, #8]
  61:smallpoly.c   ****     r->coeffs[8*i+3] =  (a[3*i+1] >> 1) & 7;
 364              		.loc 1 61 5 is_stmt 1 discriminator 3 view .LVU83
 365              		.loc 1 61 41 is_stmt 0 discriminator 3 view .LVU84
 366 0028 91F801E0 		ldrb	lr, [r1, #1]	@ zero_extendqisi2
 367 002c CEF3420E 		ubfx	lr, lr, #1, #3
 368              		.loc 1 61 22 discriminator 3 view .LVU85
 369 0030 C0F80CE0 		str	lr, [r0, #12]
  62:smallpoly.c   ****     r->coeffs[8*i+4] =  (a[3*i+1] >> 4) & 7;
 370              		.loc 1 62 5 is_stmt 1 discriminator 3 view .LVU86
 371              		.loc 1 62 41 is_stmt 0 discriminator 3 view .LVU87
 372 0034 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 373 0038 CCF3021C 		ubfx	ip, ip, #4, #3
 374              		.loc 1 62 22 discriminator 3 view .LVU88
 375 003c C0F810C0 		str	ip, [r0, #16]
  63:smallpoly.c   ****     r->coeffs[8*i+5] = ((a[3*i+1] >> 7) | (a[3*i+2] << 1)) & 7;
 376              		.loc 1 63 5 is_stmt 1 discriminator 3 view .LVU89
 377              		.loc 1 63 45 is_stmt 0 discriminator 3 view .LVU90
 378 0040 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 379              		.loc 1 63 35 discriminator 3 view .LVU91
 380 0042 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 381              		.loc 1 63 53 discriminator 3 view .LVU92
 382 0044 5B00     		lsls	r3, r3, #1
 383              		.loc 1 63 41 discriminator 3 view .LVU93
 384 0046 43EAD413 		orr	r3, r3, r4, lsr #7
 385              		.loc 1 63 60 discriminator 3 view .LVU94
 386 004a 03F00703 		and	r3, r3, #7
 387              		.loc 1 63 22 discriminator 3 view .LVU95
 388 004e 4361     		str	r3, [r0, #20]
  64:smallpoly.c   ****     r->coeffs[8*i+6] =  (a[3*i+2] >> 2) & 7;
 389              		.loc 1 64 5 is_stmt 1 discriminator 3 view .LVU96
 390              		.loc 1 64 41 is_stmt 0 discriminator 3 view .LVU97
 391 0050 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 392 0052 C4F38204 		ubfx	r4, r4, #2, #3
 393              		.loc 1 64 22 discriminator 3 view .LVU98
 394 0056 8461     		str	r4, [r0, #24]
  65:smallpoly.c   ****     r->coeffs[8*i+7] =  (a[3*i+2] >> 5) & 7;
 395              		.loc 1 65 5 is_stmt 1 discriminator 3 view .LVU99
 396              		.loc 1 65 41 is_stmt 0 discriminator 3 view .LVU100
 397 0058 91F80280 		ldrb	r8, [r1, #2]	@ zero_extendqisi2
  66:smallpoly.c   **** 
  67:smallpoly.c   ****     r->coeffs[8*i+0] = ETA - r->coeffs[8*i+0];
  68:smallpoly.c   ****     r->coeffs[8*i+1] = ETA - r->coeffs[8*i+1];
  69:smallpoly.c   ****     r->coeffs[8*i+2] = ETA - r->coeffs[8*i+2];
 398              		.loc 1 69 28 discriminator 3 view .LVU101
 399 005c C2F10202 		rsb	r2, r2, #2
 400              		.loc 1 69 22 discriminator 3 view .LVU102
 401 0060 8260     		str	r2, [r0, #8]
  70:smallpoly.c   ****     r->coeffs[8*i+3] = ETA - r->coeffs[8*i+3];
  71:smallpoly.c   ****     r->coeffs[8*i+4] = ETA - r->coeffs[8*i+4];
  72:smallpoly.c   ****     r->coeffs[8*i+5] = ETA - r->coeffs[8*i+5];
 402              		.loc 1 72 28 discriminator 3 view .LVU103
 403 0062 C3F10203 		rsb	r3, r3, #2
  70:smallpoly.c   ****     r->coeffs[8*i+3] = ETA - r->coeffs[8*i+3];
 404              		.loc 1 70 28 discriminator 3 view .LVU104
 405 0066 CEF10202 		rsb	r2, lr, #2
  65:smallpoly.c   **** 
 406              		.loc 1 65 41 discriminator 3 view .LVU105
 407 006a 4FEA5818 		lsr	r8, r8, #5
  67:smallpoly.c   ****     r->coeffs[8*i+1] = ETA - r->coeffs[8*i+1];
 408              		.loc 1 67 5 is_stmt 1 discriminator 3 view .LVU106
  70:smallpoly.c   ****     r->coeffs[8*i+3] = ETA - r->coeffs[8*i+3];
 409              		.loc 1 70 22 is_stmt 0 discriminator 3 view .LVU107
 410 006e C260     		str	r2, [r0, #12]
 411              		.loc 1 72 22 discriminator 3 view .LVU108
 412 0070 4361     		str	r3, [r0, #20]
  67:smallpoly.c   ****     r->coeffs[8*i+1] = ETA - r->coeffs[8*i+1];
 413              		.loc 1 67 28 discriminator 3 view .LVU109
 414 0072 C7F10207 		rsb	r7, r7, #2
  68:smallpoly.c   ****     r->coeffs[8*i+2] = ETA - r->coeffs[8*i+2];
 415              		.loc 1 68 28 discriminator 3 view .LVU110
 416 0076 C6F10206 		rsb	r6, r6, #2
  71:smallpoly.c   ****     r->coeffs[8*i+5] = ETA - r->coeffs[8*i+5];
 417              		.loc 1 71 28 discriminator 3 view .LVU111
 418 007a CCF10202 		rsb	r2, ip, #2
  73:smallpoly.c   ****     r->coeffs[8*i+6] = ETA - r->coeffs[8*i+6];
 419              		.loc 1 73 28 discriminator 3 view .LVU112
 420 007e C4F10204 		rsb	r4, r4, #2
  74:smallpoly.c   ****     r->coeffs[8*i+7] = ETA - r->coeffs[8*i+7];
 421              		.loc 1 74 28 discriminator 3 view .LVU113
 422 0082 C8F10203 		rsb	r3, r8, #2
  67:smallpoly.c   ****     r->coeffs[8*i+1] = ETA - r->coeffs[8*i+1];
 423              		.loc 1 67 22 discriminator 3 view .LVU114
 424 0086 0760     		str	r7, [r0]
  68:smallpoly.c   ****     r->coeffs[8*i+2] = ETA - r->coeffs[8*i+2];
 425              		.loc 1 68 5 is_stmt 1 discriminator 3 view .LVU115
  68:smallpoly.c   ****     r->coeffs[8*i+2] = ETA - r->coeffs[8*i+2];
 426              		.loc 1 68 22 is_stmt 0 discriminator 3 view .LVU116
 427 0088 4660     		str	r6, [r0, #4]
  69:smallpoly.c   ****     r->coeffs[8*i+3] = ETA - r->coeffs[8*i+3];
 428              		.loc 1 69 5 is_stmt 1 discriminator 3 view .LVU117
  70:smallpoly.c   ****     r->coeffs[8*i+4] = ETA - r->coeffs[8*i+4];
 429              		.loc 1 70 5 discriminator 3 view .LVU118
  71:smallpoly.c   ****     r->coeffs[8*i+5] = ETA - r->coeffs[8*i+5];
 430              		.loc 1 71 5 discriminator 3 view .LVU119
  71:smallpoly.c   ****     r->coeffs[8*i+5] = ETA - r->coeffs[8*i+5];
 431              		.loc 1 71 22 is_stmt 0 discriminator 3 view .LVU120
 432 008a 0261     		str	r2, [r0, #16]
  72:smallpoly.c   ****     r->coeffs[8*i+6] = ETA - r->coeffs[8*i+6];
 433              		.loc 1 72 5 is_stmt 1 discriminator 3 view .LVU121
  73:smallpoly.c   ****     r->coeffs[8*i+7] = ETA - r->coeffs[8*i+7];
 434              		.loc 1 73 5 discriminator 3 view .LVU122
  73:smallpoly.c   ****     r->coeffs[8*i+7] = ETA - r->coeffs[8*i+7];
 435              		.loc 1 73 22 is_stmt 0 discriminator 3 view .LVU123
 436 008c 8461     		str	r4, [r0, #24]
 437              		.loc 1 74 5 is_stmt 1 discriminator 3 view .LVU124
 438              		.loc 1 74 22 is_stmt 0 discriminator 3 view .LVU125
 439 008e C361     		str	r3, [r0, #28]
  57:smallpoly.c   ****     r->coeffs[8*i+0] =  (a[3*i+0] >> 0) & 7;
 440              		.loc 1 57 23 is_stmt 1 discriminator 3 view .LVU126
  57:smallpoly.c   ****     r->coeffs[8*i+0] =  (a[3*i+0] >> 0) & 7;
 441              		.loc 1 57 14 discriminator 3 view .LVU127
  57:smallpoly.c   ****     r->coeffs[8*i+0] =  (a[3*i+0] >> 0) & 7;
 442              		.loc 1 57 3 is_stmt 0 discriminator 3 view .LVU128
 443 0090 2030     		adds	r0, r0, #32
 444 0092 A842     		cmp	r0, r5
 445 0094 01F10301 		add	r1, r1, #3
 446 0098 B6D1     		bne	.L19
  75:smallpoly.c   ****   }
  76:smallpoly.c   **** #elif ETA == 4
  77:smallpoly.c   ****   for(i = 0; i < N/2; ++i) {
  78:smallpoly.c   ****     r->coeffs[2*i+0] = a[i] & 0x0F;
  79:smallpoly.c   ****     r->coeffs[2*i+1] = a[i] >> 4;
  80:smallpoly.c   ****     r->coeffs[2*i+0] = ETA - r->coeffs[2*i+0];
  81:smallpoly.c   ****     r->coeffs[2*i+1] = ETA - r->coeffs[2*i+1];
  82:smallpoly.c   ****   }
  83:smallpoly.c   **** #endif
  84:smallpoly.c   **** }
 447              		.loc 1 84 1 view .LVU129
 448 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 449              		.loc 1 84 1 view .LVU130
 450              		.cfi_endproc
 451              	.LFE5:
 453              		.section	.rodata
 454              		.align	2
 455              		.set	.LANCHOR0,. + 0
 458              	twiddles_ntt_257_streamlined:
 459 0000 C4FFFFFF 		.word	-60
 460 0004 DDFFFFFF 		.word	-35
 461 0008 D2FFFFFF 		.word	-46
 462 000c D6FFFFFF 		.word	-42
 463 0010 63000000 		.word	99
 464 0014 59000000 		.word	89
 465 0018 8AFFFFFF 		.word	-118
 466 001c 1B000000 		.word	27
 467 0020 AEFFFFFF 		.word	-82
 468 0024 6C000000 		.word	108
 469 0028 B9FFFFFF 		.word	-71
 470 002c 36000000 		.word	54
 471 0030 5D000000 		.word	93
 472 0034 D7FFFFFF 		.word	-41
 473 0038 73000000 		.word	115
 474 003c 44000000 		.word	68
 475 0040 75000000 		.word	117
 476 0044 49000000 		.word	73
 477 0048 ACFFFFFF 		.word	-84
 478 004c C5FFFFFF 		.word	-59
 479 0050 B1FFFFFF 		.word	-79
 480 0054 15000000 		.word	21
 481 0058 B2FFFFFF 		.word	-78
 482 005c 25000000 		.word	37
 483 0060 C9FFFFFF 		.word	-55
 484 0064 93FFFFFF 		.word	-109
 485 0068 65000000 		.word	101
 486 006c 4A000000 		.word	74
 487 0070 92FFFFFF 		.word	-110
 488 0074 27000000 		.word	39
 489 0078 11000000 		.word	17
 490 007c BAFFFFFF 		.word	-70
 491 0080 A4FFFFFF 		.word	-92
 492 0084 CEFFFFFF 		.word	-50
 493 0088 E3FFFFFF 		.word	-29
 494 008c 39000000 		.word	57
 495 0090 8CFFFFFF 		.word	-116
 496 0094 53000000 		.word	83
 497 0098 2B000000 		.word	43
 498 009c 4B000000 		.word	75
 499 00a0 ABFFFFFF 		.word	-85
 500 00a4 A5FFFFFF 		.word	-91
 501 00a8 56000000 		.word	86
 502 00ac 95FFFFFF 		.word	-107
 503 00b0 57000000 		.word	87
 504 00b4 0F000000 		.word	15
 505 00b8 E9FFFFFF 		.word	-23
 506 00bc 91FFFFFF 		.word	-111
 507 00c0 9CFFFFFF 		.word	-100
 508 00c4 C6FFFFFF 		.word	-58
 509 00c8 72000000 		.word	114
 510 00cc 19000000 		.word	25
 511 00d0 9FFFFFFF 		.word	-97
 512 00d4 F6FFFFFF 		.word	-10
 513 00d8 7E000000 		.word	126
 514 00dc D8FFFFFF 		.word	-40
 515 00e0 3F000000 		.word	63
 516 00e4 ECFFFFFF 		.word	-20
 517 00e8 FBFFFFFF 		.word	-5
 518 00ec B0FFFFFF 		.word	-80
 519 00f0 88FFFFFF 		.word	-120
 520 00f4 2C000000 		.word	44
 521 00f8 BDFFFFFF 		.word	-67
 522 00fc B8FFFFFF 		.word	-72
 523 0100 84FFFFFF 		.word	-124
 524 0104 E1FFFFFF 		.word	-31
 525 0108 12000000 		.word	18
 526 010c 96FFFFFF 		.word	-106
 527 0110 67000000 		.word	103
 528 0114 5A000000 		.word	90
 529 0118 9AFFFFFF 		.word	-102
 530 011c 2D000000 		.word	45
 531 0120 CDFFFFFF 		.word	-51
 532 0124 B3FFFFFF 		.word	-77
 533 0128 35000000 		.word	53
 534 012c 87FFFFFF 		.word	-121
 535 0130 AFFFFFFF 		.word	-81
 536 0134 F5FFFFFF 		.word	-11
 537 0138 71000000 		.word	113
 538 013c 09000000 		.word	9
 539 0140 C2FFFFFF 		.word	-62
 540 0144 24000000 		.word	36
 541 0148 BFFFFFFF 		.word	-65
 542 014c F4FFFFFF 		.word	-12
 543 0150 FDFFFFFF 		.word	-3
 544 0154 D0FFFFFF 		.word	-48
 545 0158 7F000000 		.word	127
 546 015c E8FFFFFF 		.word	-24
 547 0160 FAFFFFFF 		.word	-6
 548 0164 A0FFFFFF 		.word	-96
 549 0168 22000000 		.word	34
 550 016c 58000000 		.word	88
 551 0170 7B000000 		.word	123
 552 0174 CFFFFFFF 		.word	-49
 553 0178 F3FFFFFF 		.word	-13
 554 017c 3D000000 		.word	61
 555 0180 CCFFFFFF 		.word	-52
 556 0184 70000000 		.word	112
 557 0188 F9FFFFFF 		.word	-7
 558 018c BEFFFFFF 		.word	-66
 559 0190 E4FFFFFF 		.word	-28
 560 0194 DFFFFFFF 		.word	-33
 561 0198 F2FFFFFF 		.word	-14
 562 019c 7D000000 		.word	125
 563 01a0 C8FFFFFF 		.word	-56
 564 01a4 1E000000 		.word	30
 565 01a8 5F000000 		.word	95
 566 01ac EAFFFFFF 		.word	-22
 567 01b0 9EFFFFFF 		.word	-98
 568 01b4 E6FFFFFF 		.word	-26
 569 01b8 7A000000 		.word	122
 570 01bc 98FFFFFF 		.word	-104
 571 01c0 DAFFFFFF 		.word	-38
 572 01c4 A2FFFFFF 		.word	-94
 573 01c8 69000000 		.word	105
 574 01cc 89FFFFFF 		.word	-119
 575 01d0 B4FFFFFF 		.word	-76
 576 01d4 45000000 		.word	69
 577 01d8 D1FFFFFF 		.word	-47
 578 01dc 13000000 		.word	19
 581              	twiddles_basemul_257:
 582 01e0 1B000000 		.word	27
 583 01e4 AEFFFFFF 		.word	-82
 584 01e8 6C000000 		.word	108
 585 01ec B9FFFFFF 		.word	-71
 586 01f0 36000000 		.word	54
 587 01f4 5D000000 		.word	93
 588 01f8 D7FFFFFF 		.word	-41
 589 01fc 73000000 		.word	115
 590 0200 B2FFFFFF 		.word	-78
 591 0204 25000000 		.word	37
 592 0208 C9FFFFFF 		.word	-55
 593 020c 93FFFFFF 		.word	-109
 594 0210 65000000 		.word	101
 595 0214 4A000000 		.word	74
 596 0218 92FFFFFF 		.word	-110
 597 021c 27000000 		.word	39
 598 0220 53000000 		.word	83
 599 0224 2B000000 		.word	43
 600 0228 4B000000 		.word	75
 601 022c ABFFFFFF 		.word	-85
 602 0230 A5FFFFFF 		.word	-91
 603 0234 56000000 		.word	86
 604 0238 95FFFFFF 		.word	-107
 605 023c 57000000 		.word	87
 606 0240 9FFFFFFF 		.word	-97
 607 0244 F6FFFFFF 		.word	-10
 608 0248 7E000000 		.word	126
 609 024c D8FFFFFF 		.word	-40
 610 0250 3F000000 		.word	63
 611 0254 ECFFFFFF 		.word	-20
 612 0258 FBFFFFFF 		.word	-5
 613 025c B0FFFFFF 		.word	-80
 614 0260 96FFFFFF 		.word	-106
 615 0264 67000000 		.word	103
 616 0268 5A000000 		.word	90
 617 026c 9AFFFFFF 		.word	-102
 618 0270 2D000000 		.word	45
 619 0274 CDFFFFFF 		.word	-51
 620 0278 B3FFFFFF 		.word	-77
 621 027c 35000000 		.word	53
 622 0280 BFFFFFFF 		.word	-65
 623 0284 F4FFFFFF 		.word	-12
 624 0288 FDFFFFFF 		.word	-3
 625 028c D0FFFFFF 		.word	-48
 626 0290 7F000000 		.word	127
 627 0294 E8FFFFFF 		.word	-24
 628 0298 FAFFFFFF 		.word	-6
 629 029c A0FFFFFF 		.word	-96
 630 02a0 70000000 		.word	112
 631 02a4 F9FFFFFF 		.word	-7
 632 02a8 BEFFFFFF 		.word	-66
 633 02ac E4FFFFFF 		.word	-28
 634 02b0 DFFFFFFF 		.word	-33
 635 02b4 F2FFFFFF 		.word	-14
 636 02b8 7D000000 		.word	125
 637 02bc C8FFFFFF 		.word	-56
 638 02c0 DAFFFFFF 		.word	-38
 639 02c4 A2FFFFFF 		.word	-94
 640 02c8 69000000 		.word	105
 641 02cc 89FFFFFF 		.word	-119
 642 02d0 B4FFFFFF 		.word	-76
 643 02d4 45000000 		.word	69
 644 02d8 D1FFFFFF 		.word	-47
 645 02dc 13000000 		.word	19
 648              	twiddles_intt_257_streamlined:
 649 02e0 EDFFFFFF 		.word	-19
 650 02e4 2F000000 		.word	47
 651 02e8 BBFFFFFF 		.word	-69
 652 02ec 4C000000 		.word	76
 653 02f0 77000000 		.word	119
 654 02f4 97FFFFFF 		.word	-105
 655 02f8 5E000000 		.word	94
 656 02fc 26000000 		.word	38
 657 0300 68000000 		.word	104
 658 0304 86FFFFFF 		.word	-122
 659 0308 1A000000 		.word	26
 660 030c 62000000 		.word	98
 661 0310 16000000 		.word	22
 662 0314 A1FFFFFF 		.word	-95
 663 0318 E2FFFFFF 		.word	-30
 664 031c 38000000 		.word	56
 665 0320 83FFFFFF 		.word	-125
 666 0324 0E000000 		.word	14
 667 0328 21000000 		.word	33
 668 032c 1C000000 		.word	28
 669 0330 42000000 		.word	66
 670 0334 07000000 		.word	7
 671 0338 90FFFFFF 		.word	-112
 672 033c 34000000 		.word	52
 673 0340 C3FFFFFF 		.word	-61
 674 0344 0D000000 		.word	13
 675 0348 31000000 		.word	49
 676 034c 85FFFFFF 		.word	-123
 677 0350 A8FFFFFF 		.word	-88
 678 0354 DEFFFFFF 		.word	-34
 679 0358 60000000 		.word	96
 680 035c 06000000 		.word	6
 681 0360 18000000 		.word	24
 682 0364 81FFFFFF 		.word	-127
 683 0368 30000000 		.word	48
 684 036c 03000000 		.word	3
 685 0370 0C000000 		.word	12
 686 0374 41000000 		.word	65
 687 0378 DCFFFFFF 		.word	-36
 688 037c 3E000000 		.word	62
 689 0380 F7FFFFFF 		.word	-9
 690 0384 8FFFFFFF 		.word	-113
 691 0388 0B000000 		.word	11
 692 038c 51000000 		.word	81
 693 0390 79000000 		.word	121
 694 0394 CBFFFFFF 		.word	-53
 695 0398 4D000000 		.word	77
 696 039c 33000000 		.word	51
 697 03a0 D3FFFFFF 		.word	-45
 698 03a4 66000000 		.word	102
 699 03a8 A6FFFFFF 		.word	-90
 700 03ac 99FFFFFF 		.word	-103
 701 03b0 6A000000 		.word	106
 702 03b4 EEFFFFFF 		.word	-18
 703 03b8 1F000000 		.word	31
 704 03bc 7C000000 		.word	124
 705 03c0 48000000 		.word	72
 706 03c4 43000000 		.word	67
 707 03c8 D4FFFFFF 		.word	-44
 708 03cc 78000000 		.word	120
 709 03d0 50000000 		.word	80
 710 03d4 05000000 		.word	5
 711 03d8 14000000 		.word	20
 712 03dc C1FFFFFF 		.word	-63
 713 03e0 28000000 		.word	40
 714 03e4 82FFFFFF 		.word	-126
 715 03e8 0A000000 		.word	10
 716 03ec 61000000 		.word	97
 717 03f0 E7FFFFFF 		.word	-25
 718 03f4 8EFFFFFF 		.word	-114
 719 03f8 3A000000 		.word	58
 720 03fc 64000000 		.word	100
 721 0400 6F000000 		.word	111
 722 0404 17000000 		.word	23
 723 0408 F1FFFFFF 		.word	-15
 724 040c A9FFFFFF 		.word	-87
 725 0410 6B000000 		.word	107
 726 0414 AAFFFFFF 		.word	-86
 727 0418 5B000000 		.word	91
 728 041c 55000000 		.word	85
 729 0420 B5FFFFFF 		.word	-75
 730 0424 D5FFFFFF 		.word	-43
 731 0428 ADFFFFFF 		.word	-83
 732 042c 74000000 		.word	116
 733 0430 C7FFFFFF 		.word	-57
 734 0434 1D000000 		.word	29
 735 0438 32000000 		.word	50
 736 043c 5C000000 		.word	92
 737 0440 46000000 		.word	70
 738 0444 EFFFFFFF 		.word	-17
 739 0448 D9FFFFFF 		.word	-39
 740 044c 6E000000 		.word	110
 741 0450 B6FFFFFF 		.word	-74
 742 0454 9BFFFFFF 		.word	-101
 743 0458 6D000000 		.word	109
 744 045c 37000000 		.word	55
 745 0460 DBFFFFFF 		.word	-37
 746 0464 4E000000 		.word	78
 747 0468 EBFFFFFF 		.word	-21
 748 046c 4F000000 		.word	79
 749 0470 3B000000 		.word	59
 750 0474 54000000 		.word	84
 751 0478 B7FFFFFF 		.word	-73
 752 047c 8BFFFFFF 		.word	-117
 753 0480 BCFFFFFF 		.word	-68
 754 0484 8DFFFFFF 		.word	-115
 755 0488 29000000 		.word	41
 756 048c A3FFFFFF 		.word	-93
 757 0490 CAFFFFFF 		.word	-54
 758 0494 47000000 		.word	71
 759 0498 94FFFFFF 		.word	-108
 760 049c 52000000 		.word	82
 761 04a0 E5FFFFFF 		.word	-27
 762 04a4 76000000 		.word	118
 763 04a8 A7FFFFFF 		.word	-89
 764 04ac 9DFFFFFF 		.word	-99
 765 04b0 2A000000 		.word	42
 766 04b4 2E000000 		.word	46
 767 04b8 23000000 		.word	35
 768 04bc 3C000000 		.word	60
 769              		.text
 770              	.Letext0:
 771              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 772              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 773              		.file 4 "poly.h"
 774              		.file 5 "polyvec.h"
 775              		.file 6 "smallpoly.h"
 776              		.file 7 "smallntt.h"
DEFINED SYMBOLS
                            *ABS*:00000000 smallpoly.c
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:16     .text.poly_small_ntt_precomp:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:24     .text.poly_small_ntt_precomp:00000000 poly_small_ntt_precomp
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:102    .text.poly_small_ntt_precomp:00000040 $d
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:108    .text.polyvecl_small_ntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:115    .text.polyvecl_small_ntt:00000000 polyvecl_small_ntt
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:162    .text.polyvecl_small_ntt:00000024 $d
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:167    .text.polyveck_small_ntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:174    .text.polyveck_small_ntt:00000000 polyveck_small_ntt
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:185    .text.poly_small_basemul_invntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:192    .text.poly_small_basemul_invntt:00000000 poly_small_basemul_invntt
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:247    .text.poly_small_basemul_invntt:00000024 $d
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:252    .text.polyvecl_small_basemul_invntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:259    .text.polyvecl_small_basemul_invntt:00000000 polyvecl_small_basemul_invntt
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:309    .text.small_polyeta_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:316    .text.small_polyeta_unpack:00000000 small_polyeta_unpack
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:454    .rodata:00000000 $d
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:458    .rodata:00000000 twiddles_ntt_257_streamlined
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:581    .rodata:000001e0 twiddles_basemul_257
C:\Users\dudixiao\AppData\Local\Temp\ccfgOZmw.s:648    .rodata:000002e0 twiddles_intt_257_streamlined

UNDEFINED SYMBOLS
__asm_fnt_257
__asm_point_mul_257_16
__asm_asymmetric_mul_257_16
__asm_ifnt_257
