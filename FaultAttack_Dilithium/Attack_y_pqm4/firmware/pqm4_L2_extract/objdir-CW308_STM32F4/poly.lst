   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"poly.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rej_eta.constprop.0,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	rej_eta.constprop.0:
  24              	.LVL0:
  25              	.LFB31:
  26              		.file 1 "poly.c"
   1:poly.c        **** #include <stdint.h>
   2:poly.c        **** #include "params.h"
   3:poly.c        **** #include "poly.h"
   4:poly.c        **** #include "vector1.h"
   5:poly.c        **** #include "ntt1.h"
   6:poly.c        **** #include "pointwise_mont1.h"
   7:poly.c        **** #include "rounding.h"
   8:poly.c        **** #include "symmetric.h"
   9:poly.c        **** 
  10:poly.c        **** #include <stdio.h>
  11:poly.c        **** #include "hal.h"
  12:poly.c        **** 
  13:poly.c        **** #ifdef DBENCH
  14:poly.c        **** #include "test/cpucycles.h"
  15:poly.c        **** extern const uint64_t timing_overhead;
  16:poly.c        **** extern uint64_t *tred, *tadd, *tmul, *tround, *tsample, *tpack;
  17:poly.c        **** #define DBENCH_START() uint64_t time = cpucycles()
  18:poly.c        **** #define DBENCH_STOP(t) t += cpucycles() - time - timing_overhead
  19:poly.c        **** #else
  20:poly.c        **** #define DBENCH_START()
  21:poly.c        **** #define DBENCH_STOP(t)
  22:poly.c        **** #endif
  23:poly.c        **** 
  24:poly.c        **** /*************************************************
  25:poly.c        **** * Name:        poly_reduce
  26:poly.c        **** *
  27:poly.c        **** * Description: Inplace reduction of all coefficients of polynomial to
  28:poly.c        **** *              representative in [-6283009,6283007].
  29:poly.c        **** *
  30:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  31:poly.c        **** **************************************************/
  32:poly.c        **** void poly_reduce(poly *a) {
  33:poly.c        ****   asm_reduce32(a->coeffs);
  34:poly.c        **** }
  35:poly.c        **** 
  36:poly.c        **** /*************************************************
  37:poly.c        **** * Name:        poly_caddq
  38:poly.c        **** *
  39:poly.c        **** * Description: For all coefficients of in/out polynomial add Q if
  40:poly.c        **** *              coefficient is negative.
  41:poly.c        **** *
  42:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  43:poly.c        **** **************************************************/
  44:poly.c        **** void poly_caddq(poly *a) {
  45:poly.c        ****   asm_caddq(a->coeffs);
  46:poly.c        **** }
  47:poly.c        **** 
  48:poly.c        **** #if 0
  49:poly.c        **** /*************************************************
  50:poly.c        **** * Name:        poly_freeze
  51:poly.c        **** *
  52:poly.c        **** * Description: Inplace reduction of all coefficients of polynomial to
  53:poly.c        **** *              standard representatives.
  54:poly.c        **** *
  55:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  56:poly.c        **** **************************************************/
  57:poly.c        **** void poly_freeze(poly *a) {
  58:poly.c        ****     asm_freeze(a->coeffs);
  59:poly.c        **** }
  60:poly.c        **** #endif
  61:poly.c        **** 
  62:poly.c        **** /*************************************************
  63:poly.c        **** * Name:        poly_add
  64:poly.c        **** *
  65:poly.c        **** * Description: Add polynomials. No modular reduction is performed.
  66:poly.c        **** *
  67:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
  68:poly.c        **** *              - const poly *a: pointer to first summand
  69:poly.c        **** *              - const poly *b: pointer to second summand
  70:poly.c        **** **************************************************/
  71:poly.c        **** void poly_add(poly *c, const poly *a, const poly *b)  {
  72:poly.c        ****   unsigned int i;
  73:poly.c        ****   DBENCH_START();
  74:poly.c        **** 
  75:poly.c        ****   for(i = 0; i < N; ++i)
  76:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
  77:poly.c        **** 
  78:poly.c        ****   DBENCH_STOP(*tadd);
  79:poly.c        **** }
  80:poly.c        **** 
  81:poly.c        **** /*************************************************
  82:poly.c        **** * Name:        poly_sub
  83:poly.c        **** *
  84:poly.c        **** * Description: Subtract polynomials. No modular reduction is
  85:poly.c        **** *              performed.
  86:poly.c        **** *
  87:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
  88:poly.c        **** *              - const poly *a: pointer to first input polynomial
  89:poly.c        **** *              - const poly *b: pointer to second input polynomial to be
  90:poly.c        **** *                               subtraced from first input polynomial
  91:poly.c        **** **************************************************/
  92:poly.c        **** void poly_sub(poly *c, const poly *a, const poly *b) {
  93:poly.c        ****   unsigned int i;
  94:poly.c        ****   DBENCH_START();
  95:poly.c        **** 
  96:poly.c        ****   for(i = 0; i < N; ++i)
  97:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
  98:poly.c        **** 
  99:poly.c        ****   DBENCH_STOP(*tadd);
 100:poly.c        **** }
 101:poly.c        **** 
 102:poly.c        **** /*************************************************
 103:poly.c        **** * Name:        poly_shiftl
 104:poly.c        **** *
 105:poly.c        **** * Description: Multiply polynomial by 2^D without modular reduction. Assumes
 106:poly.c        **** *              input coefficients to be less than 2^{31-D} in absolute value.
 107:poly.c        **** *
 108:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
 109:poly.c        **** **************************************************/
 110:poly.c        **** void poly_shiftl(poly *a) {
 111:poly.c        ****   unsigned int i;
 112:poly.c        ****   DBENCH_START();
 113:poly.c        **** 
 114:poly.c        ****   for(i = 0; i < N; ++i)
 115:poly.c        ****     a->coeffs[i] <<= D;
 116:poly.c        **** 
 117:poly.c        ****   DBENCH_STOP(*tmul);
 118:poly.c        **** }
 119:poly.c        **** 
 120:poly.c        **** /*************************************************
 121:poly.c        **** * Name:        poly_ntt
 122:poly.c        **** *
 123:poly.c        **** * Description: Inplace forward NTT. Coefficients can grow by
 124:poly.c        **** *              8*Q in absolute value.
 125:poly.c        **** *
 126:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
 127:poly.c        **** **************************************************/
 128:poly.c        **** void poly_ntt(poly *a) {
 129:poly.c        ****   DBENCH_START();
 130:poly.c        **** 
 131:poly.c        ****   ntt(a->coeffs);
 132:poly.c        **** 
 133:poly.c        ****   DBENCH_STOP(*tmul);
 134:poly.c        **** }
 135:poly.c        **** 
 136:poly.c        **** 
 137:poly.c        **** /*************************************************
 138:poly.c        **** * Name:        poly_invntt_tomont
 139:poly.c        **** *
 140:poly.c        **** * Description: Inplace inverse NTT and multiplication by 2^{32}.
 141:poly.c        **** *              Input coefficients need to be less than Q in absolute
 142:poly.c        **** *              value and output coefficients are again bounded by Q.
 143:poly.c        **** *
 144:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
 145:poly.c        **** **************************************************/
 146:poly.c        **** void poly_invntt_tomont(poly *a) {
 147:poly.c        ****   DBENCH_START();
 148:poly.c        **** 
 149:poly.c        ****   invntt_tomont(a->coeffs);
 150:poly.c        **** 
 151:poly.c        ****   DBENCH_STOP(*tmul);
 152:poly.c        **** }
 153:poly.c        **** 
 154:poly.c        **** 
 155:poly.c        **** /*************************************************
 156:poly.c        **** * Name:        poly_pointwise_montgomery
 157:poly.c        **** *
 158:poly.c        **** * Description: Pointwise multiplication of polynomials in NTT domain
 159:poly.c        **** *              representation and multiplication of resulting polynomial
 160:poly.c        **** *              by 2^{-32}.
 161:poly.c        **** *
 162:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
 163:poly.c        **** *              - const poly *a: pointer to first input polynomial
 164:poly.c        **** *              - const poly *b: pointer to second input polynomial
 165:poly.c        **** **************************************************/
 166:poly.c        **** void poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
 167:poly.c        ****   DBENCH_START();
 168:poly.c        **** 
 169:poly.c        ****   asm_pointwise_montgomery(c->coeffs, a->coeffs, b->coeffs);
 170:poly.c        **** 
 171:poly.c        ****   DBENCH_STOP(*tmul);
 172:poly.c        **** }
 173:poly.c        **** 
 174:poly.c        **** /*************************************************
 175:poly.c        **** * Name:        poly_pointwise_acc_montgomery
 176:poly.c        **** *
 177:poly.c        **** * Description: Pointwise multiplication of polynomials in NTT domain
 178:poly.c        **** *              representation, multiplication of resulting polynomial
 179:poly.c        **** *              by 2^{-32} and accumulate.
 180:poly.c        **** *
 181:poly.c        **** * Arguments:   - poly *c: pointer to output (accumulating) polynomial
 182:poly.c        **** *              - const poly *a: pointer to first input polynomial
 183:poly.c        **** *              - const poly *b: pointer to second input polynomial
 184:poly.c        **** **************************************************/
 185:poly.c        **** void poly_pointwise_acc_montgomery(poly *c, const poly *a, const poly *b) {
 186:poly.c        ****   DBENCH_START();
 187:poly.c        **** 
 188:poly.c        ****   asm_pointwise_acc_montgomery(c->coeffs, a->coeffs, b->coeffs);
 189:poly.c        **** 
 190:poly.c        ****   DBENCH_STOP(*tmul);
 191:poly.c        **** }
 192:poly.c        **** 
 193:poly.c        **** 
 194:poly.c        **** /*************************************************
 195:poly.c        **** * Name:        poly_power2round
 196:poly.c        **** *
 197:poly.c        **** * Description: For all coefficients c of the input polynomial,
 198:poly.c        **** *              compute c0, c1 such that c mod Q = c1*2^D + c0
 199:poly.c        **** *              with -2^{D-1} < c0 <= 2^{D-1}. Assumes coefficients to be
 200:poly.c        **** *              standard representatives.
 201:poly.c        **** *
 202:poly.c        **** * Arguments:   - poly *a1: pointer to output polynomial with coefficients c1
 203:poly.c        **** *              - poly *a0: pointer to output polynomial with coefficients c0
 204:poly.c        **** *              - const poly *a: pointer to input polynomial
 205:poly.c        **** **************************************************/
 206:poly.c        **** void poly_power2round(poly *a1, poly *a0, const poly *a) {
 207:poly.c        ****   unsigned int i;
 208:poly.c        ****   DBENCH_START();
 209:poly.c        **** 
 210:poly.c        ****   for(i = 0; i < N; ++i)
 211:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 212:poly.c        **** 
 213:poly.c        ****   DBENCH_STOP(*tround);
 214:poly.c        **** }
 215:poly.c        **** 
 216:poly.c        **** /*************************************************
 217:poly.c        **** * Name:        poly_decompose
 218:poly.c        **** *
 219:poly.c        **** * Description: For all coefficients c of the input polynomial,
 220:poly.c        **** *              compute high and low bits c0, c1 such c mod Q = c1*ALPHA + c0
 221:poly.c        **** *              with -ALPHA/2 < c0 <= ALPHA/2 except c1 = (Q-1)/ALPHA where we
 222:poly.c        **** *              set c1 = 0 and -ALPHA/2 <= c0 = c mod Q - Q < 0.
 223:poly.c        **** *              Assumes coefficients to be standard representatives.
 224:poly.c        **** *
 225:poly.c        **** * Arguments:   - poly *a1: pointer to output polynomial with coefficients c1
 226:poly.c        **** *              - poly *a0: pointer to output polynomial with coefficients c0
 227:poly.c        **** *              - const poly *a: pointer to input polynomial
 228:poly.c        **** **************************************************/
 229:poly.c        **** void poly_decompose(poly *a1, poly *a0, const poly *a) {
 230:poly.c        ****   unsigned int i;
 231:poly.c        ****   DBENCH_START();
 232:poly.c        **** 
 233:poly.c        ****   for(i = 0; i < N; ++i)
 234:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 235:poly.c        **** 
 236:poly.c        ****   DBENCH_STOP(*tround);
 237:poly.c        **** }
 238:poly.c        **** 
 239:poly.c        **** /*************************************************
 240:poly.c        **** * Name:        poly_make_hint
 241:poly.c        **** *
 242:poly.c        **** * Description: Compute hint polynomial. The coefficients of which indicate
 243:poly.c        **** *              whether the low bits of the corresponding coefficient of
 244:poly.c        **** *              the input polynomial overflow into the high bits.
 245:poly.c        **** *
 246:poly.c        **** * Arguments:   - poly *h: pointer to output hint polynomial
 247:poly.c        **** *              - const poly *a0: pointer to low part of input polynomial
 248:poly.c        **** *              - const poly *a1: pointer to high part of input polynomial
 249:poly.c        **** *
 250:poly.c        **** * Returns number of 1 bits.
 251:poly.c        **** **************************************************/
 252:poly.c        **** unsigned int poly_make_hint(poly *h, const poly *a0, const poly *a1) {
 253:poly.c        ****   unsigned int i, s = 0;
 254:poly.c        ****   DBENCH_START();
 255:poly.c        **** 
 256:poly.c        ****   for(i = 0; i < N; ++i) {
 257:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 258:poly.c        ****     s += h->coeffs[i];
 259:poly.c        ****   }
 260:poly.c        **** 
 261:poly.c        ****   DBENCH_STOP(*tround);
 262:poly.c        ****   return s;
 263:poly.c        **** }
 264:poly.c        **** 
 265:poly.c        **** /*************************************************
 266:poly.c        **** * Name:        poly_use_hint
 267:poly.c        **** *
 268:poly.c        **** * Description: Use hint polynomial to correct the high bits of a polynomial.
 269:poly.c        **** *
 270:poly.c        **** * Arguments:   - poly *b: pointer to output polynomial with corrected high bits
 271:poly.c        **** *              - const poly *a: pointer to input polynomial
 272:poly.c        **** *              - const poly *h: pointer to input hint polynomial
 273:poly.c        **** **************************************************/
 274:poly.c        **** void poly_use_hint(poly *b, const poly *a, const poly *h) {
 275:poly.c        ****   unsigned int i;
 276:poly.c        ****   DBENCH_START();
 277:poly.c        **** 
 278:poly.c        ****   for(i = 0; i < N; ++i)
 279:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 280:poly.c        **** 
 281:poly.c        ****   DBENCH_STOP(*tround);
 282:poly.c        **** }
 283:poly.c        **** 
 284:poly.c        **** /*************************************************
 285:poly.c        **** * Name:        poly_chknorm
 286:poly.c        **** *
 287:poly.c        **** * Description: Check infinity norm of polynomial against given bound.
 288:poly.c        **** *              Assumes input coefficients were reduced by reduce32().
 289:poly.c        **** *
 290:poly.c        **** * Arguments:   - const poly *a: pointer to polynomial
 291:poly.c        **** *              - int32_t B: norm bound
 292:poly.c        **** *
 293:poly.c        **** * Returns 0 if norm is strictly smaller than B <= (Q-1)/8 and 1 otherwise.
 294:poly.c        **** **************************************************/
 295:poly.c        **** int poly_chknorm(const poly *a, int32_t B) {
 296:poly.c        ****   unsigned int i;
 297:poly.c        ****   int32_t t;
 298:poly.c        ****   DBENCH_START();
 299:poly.c        **** 
 300:poly.c        ****   if(B > (Q-1)/8)
 301:poly.c        ****     return 1;
 302:poly.c        **** 
 303:poly.c        ****   /* It is ok to leak which coefficient violates the bound since
 304:poly.c        ****      the probability for each coefficient is independent of secret
 305:poly.c        ****      data but we must not leak the sign of the centralized representative. */
 306:poly.c        ****   for(i = 0; i < N; ++i) {
 307:poly.c        ****     /* Absolute value */
 308:poly.c        ****     t = a->coeffs[i] >> 31;
 309:poly.c        ****     t = a->coeffs[i] - (t & 2*a->coeffs[i]);
 310:poly.c        **** 
 311:poly.c        ****     if(t >= B) {
 312:poly.c        ****       DBENCH_STOP(*tsample);
 313:poly.c        ****       return 1;
 314:poly.c        ****     }
 315:poly.c        ****   }
 316:poly.c        **** 
 317:poly.c        ****   DBENCH_STOP(*tsample);
 318:poly.c        ****   return 0;
 319:poly.c        **** }
 320:poly.c        **** 
 321:poly.c        **** /*************************************************
 322:poly.c        **** * Name:        poly_uniform
 323:poly.c        **** *
 324:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 325:poly.c        **** *              in [0,Q-1] by performing rejection sampling on the
 326:poly.c        **** *              output stream of SHAKE256(seed|nonce).
 327:poly.c        **** *
 328:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 329:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length SEEDBYTES
 330:poly.c        **** *              - uint16_t nonce: 2-byte nonce
 331:poly.c        **** **************************************************/
 332:poly.c        **** #define POLY_UNIFORM_NBLOCKS ((768 + STREAM128_BLOCKBYTES - 1)/STREAM128_BLOCKBYTES)
 333:poly.c        **** void poly_uniform(poly *a,
 334:poly.c        ****                   const uint8_t seed[SEEDBYTES],
 335:poly.c        ****                   uint16_t nonce)
 336:poly.c        **** {
 337:poly.c        ****   unsigned int i, ctr, off;
 338:poly.c        ****   unsigned int buflen = POLY_UNIFORM_NBLOCKS*STREAM128_BLOCKBYTES;
 339:poly.c        ****   uint8_t buf[POLY_UNIFORM_NBLOCKS*STREAM128_BLOCKBYTES + 2];
 340:poly.c        ****   stream128_state state;
 341:poly.c        **** 
 342:poly.c        ****   stream128_init(&state, seed, nonce);
 343:poly.c        ****   stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 344:poly.c        **** 
 345:poly.c        ****   ctr = asm_rej_uniform(a->coeffs, N, buf, buflen);
 346:poly.c        **** 
 347:poly.c        ****   while(ctr < N) {
 348:poly.c        ****     off = buflen % 3;
 349:poly.c        ****     for(i = 0; i < off; ++i)
 350:poly.c        ****       buf[i] = buf[buflen - off + i];
 351:poly.c        **** 
 352:poly.c        ****     stream128_squeezeblocks(buf + off, 1, &state);
 353:poly.c        ****     buflen = STREAM128_BLOCKBYTES + off;
 354:poly.c        ****     ctr += asm_rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 355:poly.c        ****   }
 356:poly.c        **** }
 357:poly.c        **** 
 358:poly.c        **** /*************************************************
 359:poly.c        **** * Name:        rej_eta
 360:poly.c        **** *
 361:poly.c        **** * Description: Sample uniformly random coefficients in [-ETA, ETA] by
 362:poly.c        **** *              performing rejection sampling on array of random bytes.
 363:poly.c        **** *
 364:poly.c        **** * Arguments:   - int32_t *a: pointer to output array (allocated)
 365:poly.c        **** *              - unsigned int len: number of coefficients to be sampled
 366:poly.c        **** *              - const uint8_t *buf: array of random bytes
 367:poly.c        **** *              - unsigned int buflen: length of array of random bytes
 368:poly.c        **** *
 369:poly.c        **** * Returns number of sampled coefficients. Can be smaller than len if not enough
 370:poly.c        **** * random bytes were given.
 371:poly.c        **** **************************************************/
 372:poly.c        **** static unsigned int rej_eta(int32_t *a,
  27              		.loc 1 372 21 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 372 21 is_stmt 0 view .LVU1
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 373:poly.c        ****                             unsigned int len,
 374:poly.c        ****                             const uint8_t *buf,
 375:poly.c        ****                             unsigned int buflen)
 376:poly.c        **** {
 377:poly.c        ****   unsigned int ctr, pos;
 378:poly.c        ****   uint32_t t0, t1;
 379:poly.c        ****   DBENCH_START();
 380:poly.c        **** 
 381:poly.c        ****   ctr = pos = 0;
 382:poly.c        ****   while(ctr < len && pos < buflen) {
 383:poly.c        ****     t0 = buf[pos] & 0x0F;
 384:poly.c        ****     t1 = buf[pos++] >> 4;
 385:poly.c        **** 
 386:poly.c        **** #if ETA == 2
 387:poly.c        ****     if(t0 < 15) {
 388:poly.c        ****       t0 = t0 - (205*t0 >> 10)*5;
 389:poly.c        ****       a[ctr++] = 2 - t0;
 390:poly.c        ****     }
 391:poly.c        ****     if(t1 < 15 && ctr < len) {
 392:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
  40              		.loc 1 392 21 view .LVU2
  41 0002 4FF0CD0C 		mov	ip, #205
 372:poly.c        ****                             unsigned int len,
  42              		.loc 1 372 21 view .LVU3
  43 0006 0646     		mov	r6, r0
  44              	.LVL1:
 382:poly.c        ****     t0 = buf[pos] & 0x0F;
  45              		.loc 1 382 8 is_stmt 1 view .LVU4
 382:poly.c        ****     t0 = buf[pos] & 0x0F;
  46              		.loc 1 382 8 is_stmt 0 view .LVU5
  47 0008 571E     		subs	r7, r2, #1
  48 000a 02F18704 		add	r4, r2, #135
 381:poly.c        ****   while(ctr < len && pos < buflen) {
  49              		.loc 1 381 7 view .LVU6
  50 000e 0020     		movs	r0, #0
  51              	.LVL2:
  52              	.L5:
 383:poly.c        ****     t1 = buf[pos++] >> 4;
  53              		.loc 1 383 5 is_stmt 1 view .LVU7
 383:poly.c        ****     t1 = buf[pos++] >> 4;
  54              		.loc 1 383 13 is_stmt 0 view .LVU8
  55 0010 17F8013F 		ldrb	r3, [r7, #1]!	@ zero_extendqisi2
  56              	.LVL3:
 383:poly.c        ****     t1 = buf[pos++] >> 4;
  57              		.loc 1 383 13 view .LVU9
  58 0014 03F00F0E 		and	lr, r3, #15
  59              	.LVL4:
 384:poly.c        **** 
  60              		.loc 1 384 5 is_stmt 1 view .LVU10
 387:poly.c        ****       t0 = t0 - (205*t0 >> 10)*5;
  61              		.loc 1 387 7 is_stmt 0 view .LVU11
  62 0018 BEF10F0F 		cmp	lr, #15
 384:poly.c        **** 
  63              		.loc 1 384 21 view .LVU12
  64 001c 4FEA1313 		lsr	r3, r3, #4
  65              	.LVL5:
 387:poly.c        ****       t0 = t0 - (205*t0 >> 10)*5;
  66              		.loc 1 387 5 is_stmt 1 view .LVU13
 387:poly.c        ****       t0 = t0 - (205*t0 >> 10)*5;
  67              		.loc 1 387 7 is_stmt 0 view .LVU14
  68 0020 23D0     		beq	.L2
 388:poly.c        ****       a[ctr++] = 2 - t0;
  69              		.loc 1 388 7 is_stmt 1 view .LVU15
  70              	.LVL6:
 389:poly.c        ****     }
  71              		.loc 1 389 7 view .LVU16
 388:poly.c        ****       a[ctr++] = 2 - t0;
  72              		.loc 1 388 21 is_stmt 0 view .LVU17
  73 0022 1EFB0CF2 		smulbb	r2, lr, ip
 388:poly.c        ****       a[ctr++] = 2 - t0;
  74              		.loc 1 388 25 view .LVU18
  75 0026 920A     		lsrs	r2, r2, #10
 388:poly.c        ****       a[ctr++] = 2 - t0;
  76              		.loc 1 388 31 view .LVU19
  77 0028 02EB8202 		add	r2, r2, r2, lsl #2
 389:poly.c        ****     }
  78              		.loc 1 389 20 view .LVU20
  79 002c CEF1020E 		rsb	lr, lr, #2
  80              	.LVL7:
 389:poly.c        ****     }
  81              		.loc 1 389 20 view .LVU21
  82 0030 7244     		add	r2, r2, lr
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
  83              		.loc 1 391 7 view .LVU22
  84 0032 0F2B     		cmp	r3, #15
 389:poly.c        ****     }
  85              		.loc 1 389 16 view .LVU23
  86 0034 46F82020 		str	r2, [r6, r0, lsl #2]
  87              	.LVL8:
 389:poly.c        ****     }
  88              		.loc 1 389 12 view .LVU24
  89 0038 00F10105 		add	r5, r0, #1
  90              	.LVL9:
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
  91              		.loc 1 391 5 is_stmt 1 view .LVU25
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
  92              		.loc 1 391 7 is_stmt 0 view .LVU26
  93 003c 11D0     		beq	.L7
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
  94              		.loc 1 391 16 view .LVU27
  95 003e 8D42     		cmp	r5, r1
  96 0040 11D2     		bcs	.L8
  97              	.L6:
  98              		.loc 1 392 7 is_stmt 1 view .LVU28
  99              	.LVL10:
 393:poly.c        ****       a[ctr++] = 2 - t1;
 100              		.loc 1 393 7 view .LVU29
 392:poly.c        ****       a[ctr++] = 2 - t1;
 101              		.loc 1 392 21 is_stmt 0 view .LVU30
 102 0042 13FB0CF2 		smulbb	r2, r3, ip
 392:poly.c        ****       a[ctr++] = 2 - t1;
 103              		.loc 1 392 25 view .LVU31
 104 0046 920A     		lsrs	r2, r2, #10
 392:poly.c        ****       a[ctr++] = 2 - t1;
 105              		.loc 1 392 31 view .LVU32
 106 0048 02EB8202 		add	r2, r2, r2, lsl #2
 107              		.loc 1 393 20 view .LVU33
 108 004c C3F10203 		rsb	r3, r3, #2
 109              	.LVL11:
 110              		.loc 1 393 20 view .LVU34
 111 0050 1A44     		add	r2, r2, r3
 112              		.loc 1 393 16 view .LVU35
 113 0052 46F82520 		str	r2, [r6, r5, lsl #2]
 114              		.loc 1 393 12 view .LVU36
 115 0056 681C     		adds	r0, r5, #1
 116              	.LVL12:
 117              	.L3:
 382:poly.c        ****     t0 = buf[pos] & 0x0F;
 118              		.loc 1 382 8 is_stmt 1 view .LVU37
 119 0058 8142     		cmp	r1, r0
 120 005a 01D9     		bls	.L1
 382:poly.c        ****     t0 = buf[pos] & 0x0F;
 121              		.loc 1 382 19 is_stmt 0 view .LVU38
 122 005c A742     		cmp	r7, r4
 123 005e D7D1     		bne	.L5
 124              	.LVL13:
 125              	.L1:
 394:poly.c        ****     }
 395:poly.c        **** #elif ETA == 4
 396:poly.c        ****     if(t0 < 9)
 397:poly.c        ****       a[ctr++] = 4 - t0;
 398:poly.c        ****     if(t1 < 9 && ctr < len)
 399:poly.c        ****       a[ctr++] = 4 - t1;
 400:poly.c        **** #endif
 401:poly.c        ****   }
 402:poly.c        **** 
 403:poly.c        ****   DBENCH_STOP(*tsample);
 404:poly.c        ****   return ctr;
 405:poly.c        **** }
 126              		.loc 1 405 1 view .LVU39
 127 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 128              	.LVL14:
 129              	.L7:
 389:poly.c        ****     }
 130              		.loc 1 389 12 view .LVU40
 131 0062 2846     		mov	r0, r5
 132 0064 F8E7     		b	.L3
 133              	.L8:
 389:poly.c        ****     }
 134              		.loc 1 389 12 view .LVU41
 135 0066 2846     		mov	r0, r5
 136              	.LVL15:
 403:poly.c        ****   return ctr;
 137              		.loc 1 403 24 is_stmt 1 view .LVU42
 404:poly.c        **** }
 138              		.loc 1 404 3 view .LVU43
 404:poly.c        **** }
 139              		.loc 1 404 10 is_stmt 0 view .LVU44
 140 0068 FAE7     		b	.L1
 141              	.LVL16:
 142              	.L2:
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
 143              		.loc 1 391 5 is_stmt 1 view .LVU45
 391:poly.c        ****       t1 = t1 - (205*t1 >> 10)*5;
 144              		.loc 1 391 7 is_stmt 0 view .LVU46
 145 006a 0F2B     		cmp	r3, #15
 146 006c F4D0     		beq	.L3
 147 006e 0546     		mov	r5, r0
 148 0070 E7E7     		b	.L6
 149              		.cfi_endproc
 150              	.LFE31:
 152              		.section	.text.pqcrystals_dilithium_poly_reduce,"ax",%progbits
 153              		.align	1
 154              		.global	pqcrystals_dilithium_poly_reduce
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	pqcrystals_dilithium_poly_reduce:
 161              	.LVL17:
 162              	.LFB3:
  32:poly.c        ****   asm_reduce32(a->coeffs);
 163              		.loc 1 32 27 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
  33:poly.c        **** }
 168              		.loc 1 33 3 view .LVU48
 169 0000 FFF7FEBF 		b	pqcrystals_dilithium_asm_reduce32
 170              	.LVL18:
  33:poly.c        **** }
 171              		.loc 1 33 3 is_stmt 0 view .LVU49
 172              		.cfi_endproc
 173              	.LFE3:
 175              		.section	.text.pqcrystals_dilithium_poly_caddq,"ax",%progbits
 176              		.align	1
 177              		.global	pqcrystals_dilithium_poly_caddq
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu softvfp
 183              	pqcrystals_dilithium_poly_caddq:
 184              	.LVL19:
 185              	.LFB4:
  44:poly.c        ****   asm_caddq(a->coeffs);
 186              		.loc 1 44 26 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  45:poly.c        **** }
 191              		.loc 1 45 3 view .LVU51
 192 0000 FFF7FEBF 		b	pqcrystals_dilithium_asm_caddq
 193              	.LVL20:
  45:poly.c        **** }
 194              		.loc 1 45 3 is_stmt 0 view .LVU52
 195              		.cfi_endproc
 196              	.LFE4:
 198              		.section	.text.pqcrystals_dilithium_poly_add,"ax",%progbits
 199              		.align	1
 200              		.global	pqcrystals_dilithium_poly_add
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu softvfp
 206              	pqcrystals_dilithium_poly_add:
 207              	.LVL21:
 208              	.LFB5:
  71:poly.c        ****   unsigned int i;
 209              		.loc 1 71 55 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
  72:poly.c        ****   DBENCH_START();
 213              		.loc 1 72 3 view .LVU54
  73:poly.c        **** 
 214              		.loc 1 73 17 view .LVU55
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 215              		.loc 1 75 3 view .LVU56
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 216              		.loc 1 75 14 view .LVU57
  71:poly.c        ****   unsigned int i;
 217              		.loc 1 71 55 is_stmt 0 view .LVU58
 218 0000 30B5     		push	{r4, r5, lr}
 219              	.LCFI1:
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 5, -8
 223              		.cfi_offset 14, -4
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 224              		.loc 1 75 9 view .LVU59
 225 0002 0023     		movs	r3, #0
 226              	.LVL22:
 227              	.L14:
  76:poly.c        **** 
 228              		.loc 1 76 5 is_stmt 1 discriminator 3 view .LVU60
  76:poly.c        **** 
 229              		.loc 1 76 33 is_stmt 0 discriminator 3 view .LVU61
 230 0004 51F82340 		ldr	r4, [r1, r3, lsl #2]
 231 0008 52F82350 		ldr	r5, [r2, r3, lsl #2]
 232 000c 2C44     		add	r4, r4, r5
  76:poly.c        **** 
 233              		.loc 1 76 18 discriminator 3 view .LVU62
 234 000e 40F82340 		str	r4, [r0, r3, lsl #2]
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 235              		.loc 1 75 21 is_stmt 1 discriminator 3 view .LVU63
 236 0012 0133     		adds	r3, r3, #1
 237              	.LVL23:
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 238              		.loc 1 75 14 discriminator 3 view .LVU64
  75:poly.c        ****     c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 239              		.loc 1 75 3 is_stmt 0 discriminator 3 view .LVU65
 240 0014 B3F5807F 		cmp	r3, #256
 241 0018 F4D1     		bne	.L14
  79:poly.c        **** 
 242              		.loc 1 79 1 view .LVU66
 243 001a 30BD     		pop	{r4, r5, pc}
 244              		.cfi_endproc
 245              	.LFE5:
 247              		.section	.text.pqcrystals_dilithium_poly_sub,"ax",%progbits
 248              		.align	1
 249              		.global	pqcrystals_dilithium_poly_sub
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	pqcrystals_dilithium_poly_sub:
 256              	.LVL24:
 257              	.LFB6:
  92:poly.c        ****   unsigned int i;
 258              		.loc 1 92 54 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
  93:poly.c        ****   DBENCH_START();
 262              		.loc 1 93 3 view .LVU68
  94:poly.c        **** 
 263              		.loc 1 94 17 view .LVU69
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 264              		.loc 1 96 3 view .LVU70
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 265              		.loc 1 96 14 view .LVU71
  92:poly.c        ****   unsigned int i;
 266              		.loc 1 92 54 is_stmt 0 view .LVU72
 267 0000 30B5     		push	{r4, r5, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 12
 270              		.cfi_offset 4, -12
 271              		.cfi_offset 5, -8
 272              		.cfi_offset 14, -4
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 273              		.loc 1 96 9 view .LVU73
 274 0002 0023     		movs	r3, #0
 275              	.LVL25:
 276              	.L17:
  97:poly.c        **** 
 277              		.loc 1 97 5 is_stmt 1 discriminator 3 view .LVU74
  97:poly.c        **** 
 278              		.loc 1 97 33 is_stmt 0 discriminator 3 view .LVU75
 279 0004 51F82340 		ldr	r4, [r1, r3, lsl #2]
 280 0008 52F82350 		ldr	r5, [r2, r3, lsl #2]
 281 000c 641B     		subs	r4, r4, r5
  97:poly.c        **** 
 282              		.loc 1 97 18 discriminator 3 view .LVU76
 283 000e 40F82340 		str	r4, [r0, r3, lsl #2]
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 284              		.loc 1 96 21 is_stmt 1 discriminator 3 view .LVU77
 285 0012 0133     		adds	r3, r3, #1
 286              	.LVL26:
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 287              		.loc 1 96 14 discriminator 3 view .LVU78
  96:poly.c        ****     c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 288              		.loc 1 96 3 is_stmt 0 discriminator 3 view .LVU79
 289 0014 B3F5807F 		cmp	r3, #256
 290 0018 F4D1     		bne	.L17
 100:poly.c        **** 
 291              		.loc 1 100 1 view .LVU80
 292 001a 30BD     		pop	{r4, r5, pc}
 293              		.cfi_endproc
 294              	.LFE6:
 296              		.section	.text.pqcrystals_dilithium_poly_shiftl,"ax",%progbits
 297              		.align	1
 298              		.global	pqcrystals_dilithium_poly_shiftl
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 302              		.fpu softvfp
 304              	pqcrystals_dilithium_poly_shiftl:
 305              	.LVL27:
 306              	.LFB7:
 110:poly.c        ****   unsigned int i;
 307              		.loc 1 110 27 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 111:poly.c        ****   DBENCH_START();
 312              		.loc 1 111 3 view .LVU82
 112:poly.c        **** 
 313              		.loc 1 112 17 view .LVU83
 114:poly.c        ****     a->coeffs[i] <<= D;
 314              		.loc 1 114 3 view .LVU84
 114:poly.c        ****     a->coeffs[i] <<= D;
 315              		.loc 1 114 14 view .LVU85
 316 0000 031F     		subs	r3, r0, #4
 317 0002 00F57F70 		add	r0, r0, #1020
 318              	.LVL28:
 319              	.L20:
 115:poly.c        **** 
 320              		.loc 1 115 5 discriminator 3 view .LVU86
 115:poly.c        **** 
 321              		.loc 1 115 18 is_stmt 0 discriminator 3 view .LVU87
 322 0006 53F8042F 		ldr	r2, [r3, #4]!
 323 000a 5203     		lsls	r2, r2, #13
 114:poly.c        ****     a->coeffs[i] <<= D;
 324              		.loc 1 114 3 discriminator 3 view .LVU88
 325 000c 8342     		cmp	r3, r0
 115:poly.c        **** 
 326              		.loc 1 115 18 discriminator 3 view .LVU89
 327 000e 1A60     		str	r2, [r3]
 114:poly.c        ****     a->coeffs[i] <<= D;
 328              		.loc 1 114 21 is_stmt 1 discriminator 3 view .LVU90
 114:poly.c        ****     a->coeffs[i] <<= D;
 329              		.loc 1 114 14 discriminator 3 view .LVU91
 114:poly.c        ****     a->coeffs[i] <<= D;
 330              		.loc 1 114 3 is_stmt 0 discriminator 3 view .LVU92
 331 0010 F9D1     		bne	.L20
 118:poly.c        **** 
 332              		.loc 1 118 1 view .LVU93
 333 0012 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE7:
 337              		.section	.text.pqcrystals_dilithium_poly_ntt,"ax",%progbits
 338              		.align	1
 339              		.global	pqcrystals_dilithium_poly_ntt
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 345              	pqcrystals_dilithium_poly_ntt:
 346              	.LVL29:
 347              	.LFB8:
 128:poly.c        ****   DBENCH_START();
 348              		.loc 1 128 24 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 129:poly.c        **** 
 353              		.loc 1 129 17 view .LVU95
 131:poly.c        **** 
 354              		.loc 1 131 3 view .LVU96
 355 0000 FFF7FEBF 		b	pqcrystals_dilithium_ntt
 356              	.LVL30:
 131:poly.c        **** 
 357              		.loc 1 131 3 is_stmt 0 view .LVU97
 358              		.cfi_endproc
 359              	.LFE8:
 361              		.section	.text.pqcrystals_dilithium_poly_invntt_tomont,"ax",%progbits
 362              		.align	1
 363              		.global	pqcrystals_dilithium_poly_invntt_tomont
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu softvfp
 369              	pqcrystals_dilithium_poly_invntt_tomont:
 370              	.LVL31:
 371              	.LFB9:
 146:poly.c        ****   DBENCH_START();
 372              		.loc 1 146 34 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 147:poly.c        **** 
 377              		.loc 1 147 17 view .LVU99
 149:poly.c        **** 
 378              		.loc 1 149 3 view .LVU100
 379 0000 FFF7FEBF 		b	pqcrystals_dilithium_invntt_tomont
 380              	.LVL32:
 149:poly.c        **** 
 381              		.loc 1 149 3 is_stmt 0 view .LVU101
 382              		.cfi_endproc
 383              	.LFE9:
 385              		.section	.text.pqcrystals_dilithium_poly_pointwise_montgomery,"ax",%progbits
 386              		.align	1
 387              		.global	pqcrystals_dilithium_poly_pointwise_montgomery
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu softvfp
 393              	pqcrystals_dilithium_poly_pointwise_montgomery:
 394              	.LVL33:
 395              	.LFB10:
 166:poly.c        ****   DBENCH_START();
 396              		.loc 1 166 71 is_stmt 1 view -0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 167:poly.c        **** 
 401              		.loc 1 167 17 view .LVU103
 169:poly.c        **** 
 402              		.loc 1 169 3 view .LVU104
 403 0000 FFF7FEBF 		b	pqcrystals_dilithium_asm_pointwise_montgomery
 404              	.LVL34:
 169:poly.c        **** 
 405              		.loc 1 169 3 is_stmt 0 view .LVU105
 406              		.cfi_endproc
 407              	.LFE10:
 409              		.section	.text.pqcrystals_dilithium_poly_pointwise_acc_montgomery,"ax",%progbits
 410              		.align	1
 411              		.global	pqcrystals_dilithium_poly_pointwise_acc_montgomery
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	pqcrystals_dilithium_poly_pointwise_acc_montgomery:
 418              	.LVL35:
 419              	.LFB11:
 185:poly.c        ****   DBENCH_START();
 420              		.loc 1 185 75 is_stmt 1 view -0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 186:poly.c        **** 
 425              		.loc 1 186 17 view .LVU107
 188:poly.c        **** 
 426              		.loc 1 188 3 view .LVU108
 427 0000 FFF7FEBF 		b	pqcrystals_dilithium_asm_pointwise_acc_montgomery
 428              	.LVL36:
 188:poly.c        **** 
 429              		.loc 1 188 3 is_stmt 0 view .LVU109
 430              		.cfi_endproc
 431              	.LFE11:
 433              		.section	.text.pqcrystals_dilithium_poly_power2round,"ax",%progbits
 434              		.align	1
 435              		.global	pqcrystals_dilithium_poly_power2round
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu softvfp
 441              	pqcrystals_dilithium_poly_power2round:
 442              	.LVL37:
 443              	.LFB12:
 206:poly.c        ****   unsigned int i;
 444              		.loc 1 206 58 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 207:poly.c        ****   DBENCH_START();
 448              		.loc 1 207 3 view .LVU111
 208:poly.c        **** 
 449              		.loc 1 208 17 view .LVU112
 210:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 450              		.loc 1 210 3 view .LVU113
 210:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 451              		.loc 1 210 14 view .LVU114
 206:poly.c        ****   unsigned int i;
 452              		.loc 1 206 58 is_stmt 0 view .LVU115
 453 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 454              	.LCFI3:
 455              		.cfi_def_cfa_offset 24
 456              		.cfi_offset 3, -24
 457              		.cfi_offset 4, -20
 458              		.cfi_offset 5, -16
 459              		.cfi_offset 6, -12
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 206:poly.c        ****   unsigned int i;
 462              		.loc 1 206 58 view .LVU116
 463 0002 0546     		mov	r5, r0
 464 0004 0E46     		mov	r6, r1
 465 0006 1746     		mov	r7, r2
 466 0008 0024     		movs	r4, #0
 467              	.LVL38:
 468              	.L27:
 211:poly.c        **** 
 469              		.loc 1 211 5 is_stmt 1 discriminator 3 view .LVU117
 211:poly.c        **** 
 470              		.loc 1 211 21 is_stmt 0 discriminator 3 view .LVU118
 471 000a 3959     		ldr	r1, [r7, r4]
 472 000c 3019     		adds	r0, r6, r4
 473 000e FFF7FEFF 		bl	pqcrystals_dilithium_power2round
 474              	.LVL39:
 211:poly.c        **** 
 475              		.loc 1 211 19 discriminator 3 view .LVU119
 476 0012 2851     		str	r0, [r5, r4]
 210:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 477              		.loc 1 210 21 is_stmt 1 discriminator 3 view .LVU120
 210:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 478              		.loc 1 210 14 discriminator 3 view .LVU121
 210:poly.c        ****     a1->coeffs[i] = power2round(&a0->coeffs[i], a->coeffs[i]);
 479              		.loc 1 210 3 is_stmt 0 discriminator 3 view .LVU122
 480 0014 0434     		adds	r4, r4, #4
 481 0016 B4F5806F 		cmp	r4, #1024
 482 001a F6D1     		bne	.L27
 214:poly.c        **** 
 483              		.loc 1 214 1 view .LVU123
 484 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 214:poly.c        **** 
 485              		.loc 1 214 1 view .LVU124
 486              		.cfi_endproc
 487              	.LFE12:
 489              		.section	.text.pqcrystals_dilithium_poly_decompose,"ax",%progbits
 490              		.align	1
 491              		.global	pqcrystals_dilithium_poly_decompose
 492              		.syntax unified
 493              		.thumb
 494              		.thumb_func
 495              		.fpu softvfp
 497              	pqcrystals_dilithium_poly_decompose:
 498              	.LVL40:
 499              	.LFB13:
 229:poly.c        ****   unsigned int i;
 500              		.loc 1 229 56 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 230:poly.c        ****   DBENCH_START();
 504              		.loc 1 230 3 view .LVU126
 231:poly.c        **** 
 505              		.loc 1 231 17 view .LVU127
 233:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 506              		.loc 1 233 3 view .LVU128
 233:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 507              		.loc 1 233 14 view .LVU129
 229:poly.c        ****   unsigned int i;
 508              		.loc 1 229 56 is_stmt 0 view .LVU130
 509 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 510              	.LCFI4:
 511              		.cfi_def_cfa_offset 24
 512              		.cfi_offset 3, -24
 513              		.cfi_offset 4, -20
 514              		.cfi_offset 5, -16
 515              		.cfi_offset 6, -12
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 229:poly.c        ****   unsigned int i;
 518              		.loc 1 229 56 view .LVU131
 519 0002 0546     		mov	r5, r0
 520 0004 0E46     		mov	r6, r1
 521 0006 1746     		mov	r7, r2
 522 0008 0024     		movs	r4, #0
 523              	.LVL41:
 524              	.L30:
 234:poly.c        **** 
 525              		.loc 1 234 5 is_stmt 1 discriminator 3 view .LVU132
 234:poly.c        **** 
 526              		.loc 1 234 21 is_stmt 0 discriminator 3 view .LVU133
 527 000a 3959     		ldr	r1, [r7, r4]
 528 000c 3019     		adds	r0, r6, r4
 529 000e FFF7FEFF 		bl	pqcrystals_dilithium_decompose
 530              	.LVL42:
 234:poly.c        **** 
 531              		.loc 1 234 19 discriminator 3 view .LVU134
 532 0012 2851     		str	r0, [r5, r4]
 233:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 533              		.loc 1 233 21 is_stmt 1 discriminator 3 view .LVU135
 233:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 534              		.loc 1 233 14 discriminator 3 view .LVU136
 233:poly.c        ****     a1->coeffs[i] = decompose(&a0->coeffs[i], a->coeffs[i]);
 535              		.loc 1 233 3 is_stmt 0 discriminator 3 view .LVU137
 536 0014 0434     		adds	r4, r4, #4
 537 0016 B4F5806F 		cmp	r4, #1024
 538 001a F6D1     		bne	.L30
 237:poly.c        **** 
 539              		.loc 1 237 1 view .LVU138
 540 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 237:poly.c        **** 
 541              		.loc 1 237 1 view .LVU139
 542              		.cfi_endproc
 543              	.LFE13:
 545              		.section	.text.pqcrystals_dilithium_poly_make_hint,"ax",%progbits
 546              		.align	1
 547              		.global	pqcrystals_dilithium_poly_make_hint
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 551              		.fpu softvfp
 553              	pqcrystals_dilithium_poly_make_hint:
 554              	.LVL43:
 555              	.LFB14:
 252:poly.c        ****   unsigned int i, s = 0;
 556              		.loc 1 252 70 is_stmt 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 253:poly.c        ****   DBENCH_START();
 560              		.loc 1 253 3 view .LVU141
 254:poly.c        **** 
 561              		.loc 1 254 17 view .LVU142
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 562              		.loc 1 256 3 view .LVU143
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 563              		.loc 1 256 14 view .LVU144
 252:poly.c        ****   unsigned int i, s = 0;
 564              		.loc 1 252 70 is_stmt 0 view .LVU145
 565 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 566              	.LCFI5:
 567              		.cfi_def_cfa_offset 24
 568              		.cfi_offset 4, -24
 569              		.cfi_offset 5, -20
 570              		.cfi_offset 6, -16
 571              		.cfi_offset 7, -12
 572              		.cfi_offset 8, -8
 573              		.cfi_offset 14, -4
 253:poly.c        ****   DBENCH_START();
 574              		.loc 1 253 19 view .LVU146
 575 0004 0025     		movs	r5, #0
 252:poly.c        ****   unsigned int i, s = 0;
 576              		.loc 1 252 70 view .LVU147
 577 0006 0646     		mov	r6, r0
 578 0008 0F46     		mov	r7, r1
 579 000a 9046     		mov	r8, r2
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 580              		.loc 1 256 9 view .LVU148
 581 000c 2C46     		mov	r4, r5
 582              	.LVL44:
 583              	.L33:
 257:poly.c        ****     s += h->coeffs[i];
 584              		.loc 1 257 5 is_stmt 1 discriminator 3 view .LVU149
 257:poly.c        ****     s += h->coeffs[i];
 585              		.loc 1 257 20 is_stmt 0 discriminator 3 view .LVU150
 586 000e 58F82410 		ldr	r1, [r8, r4, lsl #2]
 587 0012 57F82400 		ldr	r0, [r7, r4, lsl #2]
 588 0016 FFF7FEFF 		bl	pqcrystals_dilithium_make_hint
 589              	.LVL45:
 257:poly.c        ****     s += h->coeffs[i];
 590              		.loc 1 257 18 discriminator 3 view .LVU151
 591 001a 46F82400 		str	r0, [r6, r4, lsl #2]
 258:poly.c        ****   }
 592              		.loc 1 258 5 is_stmt 1 discriminator 3 view .LVU152
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 593              		.loc 1 256 21 is_stmt 0 discriminator 3 view .LVU153
 594 001e 0134     		adds	r4, r4, #1
 595              	.LVL46:
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 596              		.loc 1 256 3 discriminator 3 view .LVU154
 597 0020 B4F5807F 		cmp	r4, #256
 258:poly.c        ****   }
 598              		.loc 1 258 7 discriminator 3 view .LVU155
 599 0024 0544     		add	r5, r5, r0
 600              	.LVL47:
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 601              		.loc 1 256 21 is_stmt 1 discriminator 3 view .LVU156
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 602              		.loc 1 256 14 discriminator 3 view .LVU157
 256:poly.c        ****     h->coeffs[i] = make_hint(a0->coeffs[i], a1->coeffs[i]);
 603              		.loc 1 256 3 is_stmt 0 discriminator 3 view .LVU158
 604 0026 F2D1     		bne	.L33
 261:poly.c        ****   return s;
 605              		.loc 1 261 23 is_stmt 1 view .LVU159
 262:poly.c        **** }
 606              		.loc 1 262 3 view .LVU160
 263:poly.c        **** 
 607              		.loc 1 263 1 is_stmt 0 view .LVU161
 608 0028 2846     		mov	r0, r5
 609 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 263:poly.c        **** 
 610              		.loc 1 263 1 view .LVU162
 611              		.cfi_endproc
 612              	.LFE14:
 614              		.section	.text.pqcrystals_dilithium_poly_use_hint,"ax",%progbits
 615              		.align	1
 616              		.global	pqcrystals_dilithium_poly_use_hint
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 620              		.fpu softvfp
 622              	pqcrystals_dilithium_poly_use_hint:
 623              	.LVL48:
 624              	.LFB15:
 274:poly.c        ****   unsigned int i;
 625              		.loc 1 274 59 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 275:poly.c        ****   DBENCH_START();
 629              		.loc 1 275 3 view .LVU164
 276:poly.c        **** 
 630              		.loc 1 276 17 view .LVU165
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 631              		.loc 1 278 3 view .LVU166
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 632              		.loc 1 278 14 view .LVU167
 274:poly.c        ****   unsigned int i;
 633              		.loc 1 274 59 is_stmt 0 view .LVU168
 634 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 635              	.LCFI6:
 636              		.cfi_def_cfa_offset 24
 637              		.cfi_offset 3, -24
 638              		.cfi_offset 4, -20
 639              		.cfi_offset 5, -16
 640              		.cfi_offset 6, -12
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 274:poly.c        ****   unsigned int i;
 643              		.loc 1 274 59 view .LVU169
 644 0002 0546     		mov	r5, r0
 645 0004 0E46     		mov	r6, r1
 646 0006 1746     		mov	r7, r2
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 647              		.loc 1 278 9 view .LVU170
 648 0008 0024     		movs	r4, #0
 649              	.LVL49:
 650              	.L36:
 279:poly.c        **** 
 651              		.loc 1 279 5 is_stmt 1 discriminator 3 view .LVU171
 279:poly.c        **** 
 652              		.loc 1 279 20 is_stmt 0 discriminator 3 view .LVU172
 653 000a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 654 000e 56F82400 		ldr	r0, [r6, r4, lsl #2]
 655 0012 FFF7FEFF 		bl	pqcrystals_dilithium_use_hint
 656              	.LVL50:
 279:poly.c        **** 
 657              		.loc 1 279 18 discriminator 3 view .LVU173
 658 0016 45F82400 		str	r0, [r5, r4, lsl #2]
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 659              		.loc 1 278 21 is_stmt 1 discriminator 3 view .LVU174
 660 001a 0134     		adds	r4, r4, #1
 661              	.LVL51:
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 662              		.loc 1 278 14 discriminator 3 view .LVU175
 278:poly.c        ****     b->coeffs[i] = use_hint(a->coeffs[i], h->coeffs[i]);
 663              		.loc 1 278 3 is_stmt 0 discriminator 3 view .LVU176
 664 001c B4F5807F 		cmp	r4, #256
 665 0020 F3D1     		bne	.L36
 282:poly.c        **** 
 666              		.loc 1 282 1 view .LVU177
 667 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 282:poly.c        **** 
 668              		.loc 1 282 1 view .LVU178
 669              		.cfi_endproc
 670              	.LFE15:
 672              		.section	.text.pqcrystals_dilithium_poly_chknorm,"ax",%progbits
 673              		.align	1
 674              		.global	pqcrystals_dilithium_poly_chknorm
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu softvfp
 680              	pqcrystals_dilithium_poly_chknorm:
 681              	.LVL52:
 682              	.LFB16:
 295:poly.c        ****   unsigned int i;
 683              		.loc 1 295 44 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 296:poly.c        ****   int32_t t;
 687              		.loc 1 296 3 view .LVU180
 297:poly.c        ****   DBENCH_START();
 688              		.loc 1 297 3 view .LVU181
 298:poly.c        **** 
 689              		.loc 1 298 17 view .LVU182
 300:poly.c        ****     return 1;
 690              		.loc 1 300 3 view .LVU183
 300:poly.c        ****     return 1;
 691              		.loc 1 300 5 is_stmt 0 view .LVU184
 692 0000 0A4B     		ldr	r3, .L44
 693 0002 9942     		cmp	r1, r3
 295:poly.c        ****   unsigned int i;
 694              		.loc 1 295 44 view .LVU185
 695 0004 10B5     		push	{r4, lr}
 696              	.LCFI7:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 4, -8
 699              		.cfi_offset 14, -4
 300:poly.c        ****     return 1;
 700              		.loc 1 300 5 view .LVU186
 701 0006 0EDC     		bgt	.L42
 702 0008 021F     		subs	r2, r0, #4
 703 000a 00F57F70 		add	r0, r0, #1020
 704              	.LVL53:
 705              	.L40:
 308:poly.c        ****     t = a->coeffs[i] - (t & 2*a->coeffs[i]);
 706              		.loc 1 308 5 is_stmt 1 view .LVU187
 308:poly.c        ****     t = a->coeffs[i] - (t & 2*a->coeffs[i]);
 707              		.loc 1 308 18 is_stmt 0 view .LVU188
 708 000e 52F8043F 		ldr	r3, [r2, #4]!
 709              	.LVL54:
 309:poly.c        **** 
 710              		.loc 1 309 5 is_stmt 1 view .LVU189
 308:poly.c        ****     t = a->coeffs[i] - (t & 2*a->coeffs[i]);
 711              		.loc 1 308 7 is_stmt 0 view .LVU190
 712 0012 DC17     		asrs	r4, r3, #31
 713              	.LVL55:
 309:poly.c        **** 
 714              		.loc 1 309 27 view .LVU191
 715 0014 04EA4304 		and	r4, r4, r3, lsl #1
 716              	.LVL56:
 311:poly.c        ****       DBENCH_STOP(*tsample);
 717              		.loc 1 311 5 is_stmt 1 view .LVU192
 309:poly.c        **** 
 718              		.loc 1 309 7 is_stmt 0 view .LVU193
 719 0018 1B1B     		subs	r3, r3, r4
 720              	.LVL57:
 311:poly.c        ****       DBENCH_STOP(*tsample);
 721              		.loc 1 311 7 view .LVU194
 722 001a 9942     		cmp	r1, r3
 723 001c 03DD     		ble	.L42
 306:poly.c        ****     /* Absolute value */
 724              		.loc 1 306 21 is_stmt 1 discriminator 2 view .LVU195
 306:poly.c        ****     /* Absolute value */
 725              		.loc 1 306 14 discriminator 2 view .LVU196
 306:poly.c        ****     /* Absolute value */
 726              		.loc 1 306 3 is_stmt 0 discriminator 2 view .LVU197
 727 001e 8242     		cmp	r2, r0
 728 0020 F5D1     		bne	.L40
 318:poly.c        **** }
 729              		.loc 1 318 10 view .LVU198
 730 0022 0020     		movs	r0, #0
 731              	.LVL58:
 732              	.L38:
 319:poly.c        **** 
 733              		.loc 1 319 1 view .LVU199
 734 0024 10BD     		pop	{r4, pc}
 735              	.L42:
 301:poly.c        **** 
 736              		.loc 1 301 12 view .LVU200
 737 0026 0120     		movs	r0, #1
 738 0028 FCE7     		b	.L38
 739              	.L45:
 740 002a 00BF     		.align	2
 741              	.L44:
 742 002c 00FC0F00 		.word	1047552
 743              		.cfi_endproc
 744              	.LFE16:
 746              		.section	.text.pqcrystals_dilithium_poly_uniform,"ax",%progbits
 747              		.align	1
 748              		.global	pqcrystals_dilithium_poly_uniform
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu softvfp
 754              	pqcrystals_dilithium_poly_uniform:
 755              	.LVL59:
 756              	.LFB17:
 336:poly.c        ****   unsigned int i, ctr, off;
 757              		.loc 1 336 1 is_stmt 1 view -0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 1056
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 337:poly.c        ****   unsigned int buflen = POLY_UNIFORM_NBLOCKS*STREAM128_BLOCKBYTES;
 761              		.loc 1 337 3 view .LVU202
 338:poly.c        ****   uint8_t buf[POLY_UNIFORM_NBLOCKS*STREAM128_BLOCKBYTES + 2];
 762              		.loc 1 338 3 view .LVU203
 339:poly.c        ****   stream128_state state;
 763              		.loc 1 339 3 view .LVU204
 340:poly.c        **** 
 764              		.loc 1 340 3 view .LVU205
 342:poly.c        ****   stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 765              		.loc 1 342 3 view .LVU206
 336:poly.c        ****   unsigned int i, ctr, off;
 766              		.loc 1 336 1 is_stmt 0 view .LVU207
 767 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 768              	.LCFI8:
 769              		.cfi_def_cfa_offset 24
 770              		.cfi_offset 4, -24
 771              		.cfi_offset 5, -20
 772              		.cfi_offset 6, -16
 773              		.cfi_offset 7, -12
 774              		.cfi_offset 8, -8
 775              		.cfi_offset 14, -4
 776 0004 ADF5846D 		sub	sp, sp, #1056
 777              	.LCFI9:
 778              		.cfi_def_cfa_offset 1080
 336:poly.c        ****   unsigned int i, ctr, off;
 779              		.loc 1 336 1 view .LVU208
 780 0008 0746     		mov	r7, r0
 342:poly.c        ****   stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 781              		.loc 1 342 3 view .LVU209
 782 000a 6846     		mov	r0, sp
 783              	.LVL60:
 342:poly.c        ****   stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 784              		.loc 1 342 3 view .LVU210
 785 000c FFF7FEFF 		bl	pqcrystals_dilithium_dilithium_shake128_stream_init
 786              	.LVL61:
 343:poly.c        **** 
 787              		.loc 1 343 3 is_stmt 1 view .LVU211
 788 0010 6A46     		mov	r2, sp
 789 0012 4FF45271 		mov	r1, #840
 790 0016 35A8     		add	r0, sp, #212
 791 0018 FFF7FEFF 		bl	shake128_inc_squeeze
 792              	.LVL62:
 345:poly.c        **** 
 793              		.loc 1 345 3 view .LVU212
 345:poly.c        **** 
 794              		.loc 1 345 9 is_stmt 0 view .LVU213
 795 001c 4FF45273 		mov	r3, #840
 796 0020 35AA     		add	r2, sp, #212
 797 0022 4FF48071 		mov	r1, #256
 798 0026 3846     		mov	r0, r7
 799 0028 FFF7FEFF 		bl	pqcrystals_dilithium_asm_rej_uniform
 800              	.LVL63:
 338:poly.c        ****   uint8_t buf[POLY_UNIFORM_NBLOCKS*STREAM128_BLOCKBYTES + 2];
 801              		.loc 1 338 16 view .LVU214
 802 002c 4FF45275 		mov	r5, #840
 345:poly.c        **** 
 803              		.loc 1 345 9 view .LVU215
 804 0030 0446     		mov	r4, r0
 805              	.LVL64:
 347:poly.c        ****     off = buflen % 3;
 806              		.loc 1 347 3 is_stmt 1 view .LVU216
 348:poly.c        ****     for(i = 0; i < off; ++i)
 807              		.loc 1 348 9 is_stmt 0 view .LVU217
 808 0032 4FF00308 		mov	r8, #3
 809              	.LVL65:
 810              	.L47:
 347:poly.c        ****     off = buflen % 3;
 811              		.loc 1 347 8 is_stmt 1 view .LVU218
 812 0036 FF2C     		cmp	r4, #255
 813 0038 03D9     		bls	.L50
 356:poly.c        **** 
 814              		.loc 1 356 1 is_stmt 0 view .LVU219
 815 003a 0DF5846D 		add	sp, sp, #1056
 816              	.LCFI10:
 817              		.cfi_remember_state
 818              		.cfi_def_cfa_offset 24
 819              		@ sp needed
 820 003e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 821              	.LVL66:
 822              	.L50:
 823              	.LCFI11:
 824              		.cfi_restore_state
 348:poly.c        ****     for(i = 0; i < off; ++i)
 825              		.loc 1 348 5 is_stmt 1 view .LVU220
 348:poly.c        ****     for(i = 0; i < off; ++i)
 826              		.loc 1 348 9 is_stmt 0 view .LVU221
 827 0042 B5FBF8F2 		udiv	r2, r5, r8
 828 0046 02EB4202 		add	r2, r2, r2, lsl #1
 829 004a A91A     		subs	r1, r5, r2
 830              	.LVL67:
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 831              		.loc 1 349 5 is_stmt 1 view .LVU222
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 832              		.loc 1 349 5 is_stmt 0 view .LVU223
 833 004c 35AB     		add	r3, sp, #212
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 834              		.loc 1 349 11 view .LVU224
 835 004e 0026     		movs	r6, #0
 350:poly.c        **** 
 836              		.loc 1 350 19 view .LVU225
 837 0050 521B     		subs	r2, r2, r5
 838              	.LVL68:
 839              	.L48:
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 840              		.loc 1 349 16 is_stmt 1 discriminator 1 view .LVU226
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 841              		.loc 1 349 5 is_stmt 0 discriminator 1 view .LVU227
 842 0052 8E42     		cmp	r6, r1
 843 0054 11D1     		bne	.L49
 352:poly.c        ****     buflen = STREAM128_BLOCKBYTES + off;
 844              		.loc 1 352 5 is_stmt 1 view .LVU228
 845 0056 35AB     		add	r3, sp, #212
 846 0058 9819     		adds	r0, r3, r6
 847 005a 6A46     		mov	r2, sp
 848 005c A821     		movs	r1, #168
 849              	.LVL69:
 353:poly.c        ****     ctr += asm_rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 850              		.loc 1 353 12 is_stmt 0 view .LVU229
 851 005e 06F1A805 		add	r5, r6, #168
 852              	.LVL70:
 352:poly.c        ****     buflen = STREAM128_BLOCKBYTES + off;
 853              		.loc 1 352 5 view .LVU230
 854 0062 FFF7FEFF 		bl	shake128_inc_squeeze
 855              	.LVL71:
 353:poly.c        ****     ctr += asm_rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 856              		.loc 1 353 5 is_stmt 1 view .LVU231
 354:poly.c        ****   }
 857              		.loc 1 354 5 view .LVU232
 354:poly.c        ****   }
 858              		.loc 1 354 12 is_stmt 0 view .LVU233
 859 0066 C4F58071 		rsb	r1, r4, #256
 860 006a 07EB8400 		add	r0, r7, r4, lsl #2
 861 006e 2B46     		mov	r3, r5
 862 0070 35AA     		add	r2, sp, #212
 863 0072 FFF7FEFF 		bl	pqcrystals_dilithium_asm_rej_uniform
 864              	.LVL72:
 354:poly.c        ****   }
 865              		.loc 1 354 9 view .LVU234
 866 0076 0444     		add	r4, r4, r0
 867              	.LVL73:
 354:poly.c        ****   }
 868              		.loc 1 354 9 view .LVU235
 869 0078 DDE7     		b	.L47
 870              	.LVL74:
 871              	.L49:
 350:poly.c        **** 
 872              		.loc 1 350 7 is_stmt 1 discriminator 3 view .LVU236
 350:poly.c        **** 
 873              		.loc 1 350 19 is_stmt 0 discriminator 3 view .LVU237
 874 007a E818     		adds	r0, r5, r3
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 875              		.loc 1 349 25 discriminator 3 view .LVU238
 876 007c 0136     		adds	r6, r6, #1
 877              	.LVL75:
 350:poly.c        **** 
 878              		.loc 1 350 19 discriminator 3 view .LVU239
 879 007e 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 350:poly.c        **** 
 880              		.loc 1 350 14 discriminator 3 view .LVU240
 881 0080 03F8010B 		strb	r0, [r3], #1
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 882              		.loc 1 349 25 is_stmt 1 discriminator 3 view .LVU241
 883              	.LVL76:
 349:poly.c        ****       buf[i] = buf[buflen - off + i];
 884              		.loc 1 349 25 is_stmt 0 discriminator 3 view .LVU242
 885 0084 E5E7     		b	.L48
 886              		.cfi_endproc
 887              	.LFE17:
 889              		.section	.text.pqcrystals_dilithium_poly_uniform_eta,"ax",%progbits
 890              		.align	1
 891              		.global	pqcrystals_dilithium_poly_uniform_eta
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
 895              		.fpu softvfp
 897              	pqcrystals_dilithium_poly_uniform_eta:
 898              	.LVL77:
 899              	.LFB19:
 406:poly.c        **** 
 407:poly.c        **** /*************************************************
 408:poly.c        **** * Name:        poly_uniform_eta
 409:poly.c        **** *
 410:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 411:poly.c        **** *              in [-ETA,ETA] by performing rejection sampling on the
 412:poly.c        **** *              output stream from SHAKE256(seed|nonce).
 413:poly.c        **** *
 414:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 415:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length SEEDBYTES
 416:poly.c        **** *              - uint16_t nonce: 2-byte nonce
 417:poly.c        **** **************************************************/
 418:poly.c        **** #if ETA == 2
 419:poly.c        **** #define POLY_UNIFORM_ETA_NBLOCKS ((136 + STREAM256_BLOCKBYTES - 1)/STREAM256_BLOCKBYTES)
 420:poly.c        **** #elif ETA == 4
 421:poly.c        **** #define POLY_UNIFORM_ETA_NBLOCKS ((227 + STREAM256_BLOCKBYTES - 1)/STREAM256_BLOCKBYTES)
 422:poly.c        **** #endif
 423:poly.c        **** void poly_uniform_eta(poly *a,
 424:poly.c        ****         const uint8_t seed[CRHBYTES],
 425:poly.c        ****         uint16_t nonce) {
 900              		.loc 1 425 25 is_stmt 1 view -0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 344
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 426:poly.c        ****   unsigned int ctr;
 904              		.loc 1 426 3 view .LVU244
 427:poly.c        ****   unsigned int buflen = POLY_UNIFORM_ETA_NBLOCKS * STREAM256_BLOCKBYTES;
 905              		.loc 1 427 3 view .LVU245
 428:poly.c        ****   uint8_t buf[POLY_UNIFORM_ETA_NBLOCKS * STREAM256_BLOCKBYTES];
 906              		.loc 1 428 3 view .LVU246
 429:poly.c        ****   stream256_state state;
 907              		.loc 1 429 3 view .LVU247
 430:poly.c        **** 
 431:poly.c        ****   stream256_init(&state, seed, nonce);
 908              		.loc 1 431 3 view .LVU248
 425:poly.c        ****   unsigned int ctr;
 909              		.loc 1 425 25 is_stmt 0 view .LVU249
 910 0000 30B5     		push	{r4, r5, lr}
 911              	.LCFI12:
 912              		.cfi_def_cfa_offset 12
 913              		.cfi_offset 4, -12
 914              		.cfi_offset 5, -8
 915              		.cfi_offset 14, -4
 916 0002 D7B0     		sub	sp, sp, #348
 917              	.LCFI13:
 918              		.cfi_def_cfa_offset 360
 425:poly.c        ****   unsigned int ctr;
 919              		.loc 1 425 25 view .LVU250
 920 0004 0546     		mov	r5, r0
 921              		.loc 1 431 3 view .LVU251
 922 0006 22A8     		add	r0, sp, #136
 923              	.LVL78:
 924              		.loc 1 431 3 view .LVU252
 925 0008 FFF7FEFF 		bl	pqcrystals_dilithium_dilithium_shake256_stream_init
 926              	.LVL79:
 432:poly.c        ****   stream256_squeezeblocks(buf, POLY_UNIFORM_ETA_NBLOCKS, &state);
 927              		.loc 1 432 3 is_stmt 1 view .LVU253
 928 000c 22AA     		add	r2, sp, #136
 929 000e 8821     		movs	r1, #136
 930 0010 6846     		mov	r0, sp
 931 0012 FFF7FEFF 		bl	shake256_inc_squeeze
 932              	.LVL80:
 433:poly.c        **** 
 434:poly.c        ****   ctr = rej_eta(a->coeffs, N, buf, buflen);
 933              		.loc 1 434 3 view .LVU254
 934              		.loc 1 434 9 is_stmt 0 view .LVU255
 935 0016 6A46     		mov	r2, sp
 936 0018 4FF48071 		mov	r1, #256
 937 001c 2846     		mov	r0, r5
 938 001e FFF7FEFF 		bl	rej_eta.constprop.0
 939              	.LVL81:
 940 0022 0446     		mov	r4, r0
 941              	.LVL82:
 435:poly.c        **** 
 436:poly.c        ****   while(ctr < N) {
 942              		.loc 1 436 3 is_stmt 1 view .LVU256
 943              	.L52:
 944              		.loc 1 436 8 view .LVU257
 945 0024 FF2C     		cmp	r4, #255
 946 0026 01D9     		bls	.L53
 437:poly.c        ****     stream256_squeezeblocks(buf, 1, &state);
 438:poly.c        ****     ctr += rej_eta(a->coeffs + ctr, N - ctr, buf, STREAM256_BLOCKBYTES);
 439:poly.c        ****   }
 440:poly.c        **** }
 947              		.loc 1 440 1 is_stmt 0 view .LVU258
 948 0028 57B0     		add	sp, sp, #348
 949              	.LCFI14:
 950              		.cfi_remember_state
 951              		.cfi_def_cfa_offset 12
 952              		@ sp needed
 953 002a 30BD     		pop	{r4, r5, pc}
 954              	.LVL83:
 955              	.L53:
 956              	.LCFI15:
 957              		.cfi_restore_state
 437:poly.c        ****     stream256_squeezeblocks(buf, 1, &state);
 958              		.loc 1 437 5 is_stmt 1 view .LVU259
 959 002c 22AA     		add	r2, sp, #136
 960 002e 8821     		movs	r1, #136
 961 0030 6846     		mov	r0, sp
 962 0032 FFF7FEFF 		bl	shake256_inc_squeeze
 963              	.LVL84:
 438:poly.c        ****   }
 964              		.loc 1 438 5 view .LVU260
 438:poly.c        ****   }
 965              		.loc 1 438 12 is_stmt 0 view .LVU261
 966 0036 C4F58071 		rsb	r1, r4, #256
 967 003a 05EB8400 		add	r0, r5, r4, lsl #2
 968 003e 6A46     		mov	r2, sp
 969 0040 FFF7FEFF 		bl	rej_eta.constprop.0
 970              	.LVL85:
 438:poly.c        ****   }
 971              		.loc 1 438 9 view .LVU262
 972 0044 0444     		add	r4, r4, r0
 973              	.LVL86:
 438:poly.c        ****   }
 974              		.loc 1 438 9 view .LVU263
 975 0046 EDE7     		b	.L52
 976              		.cfi_endproc
 977              	.LFE19:
 979              		.section	.text.pqcrystals_dilithium_poly_challenge,"ax",%progbits
 980              		.align	1
 981              		.global	pqcrystals_dilithium_poly_challenge
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 985              		.fpu softvfp
 987              	pqcrystals_dilithium_poly_challenge:
 988              	.LVL87:
 989              	.LFB22:
 441:poly.c        **** 
 442:poly.c        **** /*************************************************
 443:poly.c        **** * Name:        poly_uniform_gamma1m1
 444:poly.c        **** *
 445:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 446:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1] by unpacking output stream
 447:poly.c        **** *              of SHAKE256(seed|nonce).
 448:poly.c        **** *
 449:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 450:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length CRHBYTES
 451:poly.c        **** *              - uint16_t nonce: 16-bit nonce
 452:poly.c        **** **************************************************/
 453:poly.c        **** #define POLY_UNIFORM_GAMMA1_NBLOCKS ((POLYZ_PACKEDBYTES + STREAM256_BLOCKBYTES - 1)/STREAM256_BLOCK
 454:poly.c        **** void poly_uniform_gamma1(poly *a,
 455:poly.c        ****                          const uint8_t seed[CRHBYTES],
 456:poly.c        ****                          uint16_t nonce)
 457:poly.c        **** {
 458:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 459:poly.c        ****   stream256_state state;
 460:poly.c        **** 
 461:poly.c        ****   stream256_init(&state, seed, nonce);
 462:poly.c        ****   stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 463:poly.c        ****   polyz_unpack(a, buf);
 464:poly.c        **** }
 465:poly.c        **** 
 466:poly.c        **** 
 467:poly.c        **** void poly_uniform_gamma11(poly *a,
 468:poly.c        ****                          const uint8_t seed[CRHBYTES],
 469:poly.c        ****                          uint16_t nonce)
 470:poly.c        **** {
 471:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 472:poly.c        ****   stream256_state state;
 473:poly.c        **** 
 474:poly.c        ****   stream256_init(&state, seed, nonce);
 475:poly.c        ****   stream256_squeezeblocks1(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 476:poly.c        ****   polyz_unpack(a, buf);
 477:poly.c        **** }
 478:poly.c        **** 
 479:poly.c        **** /*************************************************
 480:poly.c        **** * Name:        challenge
 481:poly.c        **** *
 482:poly.c        **** * Description: Implementation of H. Samples polynomial with TAU nonzero
 483:poly.c        **** *              coefficients in {-1,1} using the output stream of
 484:poly.c        **** *              SHAKE256(seed).
 485:poly.c        **** *
 486:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
 487:poly.c        **** *              - const uint8_t mu[]: byte array containing seed of length SEEDBYTES
 488:poly.c        **** **************************************************/
 489:poly.c        **** void poly_challenge(poly *c, const uint8_t seed[SEEDBYTES]) {
 990              		.loc 1 489 61 is_stmt 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 344
 993              		@ frame_needed = 0, uses_anonymous_args = 0
 490:poly.c        ****   unsigned int i, b, pos;
 994              		.loc 1 490 3 view .LVU265
 491:poly.c        ****   uint64_t signs;
 995              		.loc 1 491 3 view .LVU266
 492:poly.c        ****   uint8_t buf[SHAKE256_RATE];
 996              		.loc 1 492 3 view .LVU267
 493:poly.c        ****   shake256incctx state;
 997              		.loc 1 493 3 view .LVU268
 494:poly.c        **** 
 495:poly.c        ****   shake256_inc_init(&state);
 998              		.loc 1 495 3 view .LVU269
 489:poly.c        ****   unsigned int i, b, pos;
 999              		.loc 1 489 61 is_stmt 0 view .LVU270
 1000 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1001              	.LCFI16:
 1002              		.cfi_def_cfa_offset 20
 1003              		.cfi_offset 4, -20
 1004              		.cfi_offset 5, -16
 1005              		.cfi_offset 6, -12
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 D7B0     		sub	sp, sp, #348
 1009              	.LCFI17:
 1010              		.cfi_def_cfa_offset 368
 489:poly.c        ****   unsigned int i, b, pos;
 1011              		.loc 1 489 61 view .LVU271
 1012 0004 0C46     		mov	r4, r1
 1013 0006 0546     		mov	r5, r0
 1014              		.loc 1 495 3 view .LVU272
 1015 0008 22A8     		add	r0, sp, #136
 1016              	.LVL88:
 1017              		.loc 1 495 3 view .LVU273
 1018 000a FFF7FEFF 		bl	shake256_inc_init
 1019              	.LVL89:
 496:poly.c        ****   shake256_inc_absorb(&state, seed, SEEDBYTES);
 1020              		.loc 1 496 3 is_stmt 1 view .LVU274
 1021 000e 2146     		mov	r1, r4
 1022 0010 2022     		movs	r2, #32
 1023 0012 22A8     		add	r0, sp, #136
 1024 0014 FFF7FEFF 		bl	shake256_inc_absorb
 1025              	.LVL90:
 497:poly.c        ****   shake256_inc_finalize(&state);
 1026              		.loc 1 497 3 view .LVU275
 1027 0018 22A8     		add	r0, sp, #136
 1028 001a FFF7FEFF 		bl	shake256_inc_finalize
 1029              	.LVL91:
 498:poly.c        ****   shake256_inc_squeezeblocks(buf, 1, &state);
 1030              		.loc 1 498 3 view .LVU276
 1031 001e 22AA     		add	r2, sp, #136
 1032 0020 8821     		movs	r1, #136
 1033 0022 6846     		mov	r0, sp
 1034 0024 FFF7FEFF 		bl	shake256_inc_squeeze
 1035              	.LVL92:
 499:poly.c        **** 
 500:poly.c        ****   signs = 0;
 1036              		.loc 1 500 3 view .LVU277
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1037              		.loc 1 501 3 view .LVU278
 1038              		.loc 1 501 14 view .LVU279
 498:poly.c        ****   shake256_inc_squeezeblocks(buf, 1, &state);
 1039              		.loc 1 498 3 is_stmt 0 view .LVU280
 1040 0028 0023     		movs	r3, #0
 1041 002a 6E46     		mov	r6, sp
 500:poly.c        ****   for(i = 0; i < 8; ++i)
 1042              		.loc 1 500 9 view .LVU281
 1043 002c 1C46     		mov	r4, r3
 1044              	.LVL93:
 500:poly.c        ****   for(i = 0; i < 8; ++i)
 1045              		.loc 1 500 9 view .LVU282
 1046 002e 1F46     		mov	r7, r3
 1047              	.LVL94:
 1048              	.L55:
 502:poly.c        ****     signs |= (uint64_t)buf[i] << 8*i;
 1049              		.loc 1 502 5 is_stmt 1 discriminator 3 view .LVU283
 1050              		.loc 1 502 27 is_stmt 0 discriminator 3 view .LVU284
 1051 0030 16F8011B 		ldrb	r1, [r6], #1	@ zero_extendqisi2
 1052              	.LVL95:
 1053              		.loc 1 502 31 discriminator 3 view .LVU285
 1054 0034 A3F12002 		sub	r2, r3, #32
 1055 0038 C3F12000 		rsb	r0, r3, #32
 1056 003c 01FA02F2 		lsl	r2, r1, r2
 1057 0040 21FA00F0 		lsr	r0, r1, r0
 1058 0044 9940     		lsls	r1, r1, r3
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1059              		.loc 1 501 3 discriminator 3 view .LVU286
 1060 0046 0833     		adds	r3, r3, #8
 1061              		.loc 1 502 31 discriminator 3 view .LVU287
 1062 0048 0243     		orrs	r2, r2, r0
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1063              		.loc 1 501 3 discriminator 3 view .LVU288
 1064 004a 402B     		cmp	r3, #64
 1065              		.loc 1 502 11 discriminator 3 view .LVU289
 1066 004c 44EA0104 		orr	r4, r4, r1
 1067              	.LVL96:
 1068              		.loc 1 502 11 discriminator 3 view .LVU290
 1069 0050 47EA0207 		orr	r7, r7, r2
 1070              	.LVL97:
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1071              		.loc 1 501 21 is_stmt 1 discriminator 3 view .LVU291
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1072              		.loc 1 501 14 discriminator 3 view .LVU292
 501:poly.c        ****   for(i = 0; i < 8; ++i)
 1073              		.loc 1 501 3 is_stmt 0 discriminator 3 view .LVU293
 1074 0054 ECD1     		bne	.L55
 503:poly.c        ****   pos = 8;
 504:poly.c        **** 
 505:poly.c        ****   for(i = 0; i < N; ++i)
 506:poly.c        ****     c->coeffs[i] = 0;
 1075              		.loc 1 506 18 view .LVU294
 1076 0056 0021     		movs	r1, #0
 1077 0058 4FF48062 		mov	r2, #1024
 1078 005c 2846     		mov	r0, r5
 1079 005e FFF7FEFF 		bl	memset
 1080              	.LVL98:
 507:poly.c        ****   for(i = N-TAU; i < N; ++i) {
 1081              		.loc 1 507 9 view .LVU295
 1082 0062 D926     		movs	r6, #217
 503:poly.c        ****   pos = 8;
 1083              		.loc 1 503 7 view .LVU296
 1084 0064 0821     		movs	r1, #8
 1085              	.LVL99:
 1086              	.L57:
 508:poly.c        ****     do {
 1087              		.loc 1 508 5 is_stmt 1 view .LVU297
 509:poly.c        ****       if(pos >= SHAKE256_RATE) {
 1088              		.loc 1 509 7 view .LVU298
 1089              		.loc 1 509 9 is_stmt 0 view .LVU299
 1090 0066 8729     		cmp	r1, #135
 1091 0068 21D9     		bls	.L59
 510:poly.c        ****         shake256_inc_squeezeblocks(buf, 1, &state);
 1092              		.loc 1 510 9 is_stmt 1 view .LVU300
 1093 006a 22AA     		add	r2, sp, #136
 1094 006c 8821     		movs	r1, #136
 1095              	.LVL100:
 1096              		.loc 1 510 9 is_stmt 0 view .LVU301
 1097 006e 6846     		mov	r0, sp
 1098 0070 FFF7FEFF 		bl	shake256_inc_squeeze
 1099              	.LVL101:
 511:poly.c        ****         pos = 0;
 1100              		.loc 1 511 9 is_stmt 1 view .LVU302
 1101              		.loc 1 511 13 is_stmt 0 view .LVU303
 1102 0074 0023     		movs	r3, #0
 1103              	.LVL102:
 1104              	.L56:
 512:poly.c        ****       }
 513:poly.c        **** 
 514:poly.c        ****       b = buf[pos++];
 1105              		.loc 1 514 7 is_stmt 1 view .LVU304
 1106              		.loc 1 514 9 is_stmt 0 view .LVU305
 1107 0076 1DF80320 		ldrb	r2, [sp, r3]	@ zero_extendqisi2
 515:poly.c        ****     } while(b > i);
 1108              		.loc 1 515 5 view .LVU306
 1109 007a B242     		cmp	r2, r6
 514:poly.c        ****     } while(b > i);
 1110              		.loc 1 514 18 view .LVU307
 1111 007c 03F10101 		add	r1, r3, #1
 1112              	.LVL103:
 1113              		.loc 1 515 12 is_stmt 1 view .LVU308
 1114              		.loc 1 515 5 is_stmt 0 view .LVU309
 1115 0080 F1D8     		bhi	.L57
 516:poly.c        **** 
 517:poly.c        ****     c->coeffs[i] = c->coeffs[b];
 1116              		.loc 1 517 5 is_stmt 1 discriminator 2 view .LVU310
 1117              		.loc 1 517 29 is_stmt 0 discriminator 2 view .LVU311
 1118 0082 55F82230 		ldr	r3, [r5, r2, lsl #2]
 1119              		.loc 1 517 18 discriminator 2 view .LVU312
 1120 0086 45F82630 		str	r3, [r5, r6, lsl #2]
 518:poly.c        ****     c->coeffs[b] = 1 - 2*(signs & 1);
 1121              		.loc 1 518 5 is_stmt 1 discriminator 2 view .LVU313
 1122              		.loc 1 518 22 is_stmt 0 discriminator 2 view .LVU314
 1123 008a 04F00103 		and	r3, r4, #1
 1124 008e 5B00     		lsls	r3, r3, #1
 507:poly.c        ****     do {
 1125              		.loc 1 507 25 discriminator 2 view .LVU315
 1126 0090 0136     		adds	r6, r6, #1
 1127              		.loc 1 518 22 discriminator 2 view .LVU316
 1128 0092 C3F10103 		rsb	r3, r3, #1
 519:poly.c        ****     signs >>= 1;
 1129              		.loc 1 519 11 discriminator 2 view .LVU317
 1130 0096 6408     		lsrs	r4, r4, #1
 507:poly.c        ****     do {
 1131              		.loc 1 507 3 discriminator 2 view .LVU318
 1132 0098 B6F5807F 		cmp	r6, #256
 1133              		.loc 1 519 11 discriminator 2 view .LVU319
 1134 009c 44EAC774 		orr	r4, r4, r7, lsl #31
 518:poly.c        ****     c->coeffs[b] = 1 - 2*(signs & 1);
 1135              		.loc 1 518 18 discriminator 2 view .LVU320
 1136 00a0 45F82230 		str	r3, [r5, r2, lsl #2]
 1137              		.loc 1 519 5 is_stmt 1 discriminator 2 view .LVU321
 1138              		.loc 1 519 11 is_stmt 0 discriminator 2 view .LVU322
 1139 00a4 4FEA5707 		lsr	r7, r7, #1
 507:poly.c        ****     do {
 1140              		.loc 1 507 25 is_stmt 1 discriminator 2 view .LVU323
 1141              	.LVL104:
 507:poly.c        ****     do {
 1142              		.loc 1 507 18 discriminator 2 view .LVU324
 507:poly.c        ****     do {
 1143              		.loc 1 507 3 is_stmt 0 discriminator 2 view .LVU325
 1144 00a8 DDD1     		bne	.L57
 520:poly.c        ****   }
 521:poly.c        **** }
 1145              		.loc 1 521 1 view .LVU326
 1146 00aa 57B0     		add	sp, sp, #348
 1147              	.LCFI18:
 1148              		.cfi_remember_state
 1149              		.cfi_def_cfa_offset 20
 1150              		@ sp needed
 1151 00ac F0BD     		pop	{r4, r5, r6, r7, pc}
 1152              	.LVL105:
 1153              	.L59:
 1154              	.LCFI19:
 1155              		.cfi_restore_state
 1156              		.loc 1 521 1 view .LVU327
 1157 00ae 0B46     		mov	r3, r1
 1158 00b0 E1E7     		b	.L56
 1159              		.cfi_endproc
 1160              	.LFE22:
 1162              		.section	.text.pqcrystals_dilithium_polyeta_pack,"ax",%progbits
 1163              		.align	1
 1164              		.global	pqcrystals_dilithium_polyeta_pack
 1165              		.syntax unified
 1166              		.thumb
 1167              		.thumb_func
 1168              		.fpu softvfp
 1170              	pqcrystals_dilithium_polyeta_pack:
 1171              	.LVL106:
 1172              	.LFB23:
 522:poly.c        **** 
 523:poly.c        **** /*************************************************
 524:poly.c        **** * Name:        polyeta_pack
 525:poly.c        **** *
 526:poly.c        **** * Description: Bit-pack polynomial with coefficients in [-ETA,ETA].
 527:poly.c        **** *
 528:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 529:poly.c        **** *                            POLYETA_PACKEDBYTES bytes
 530:poly.c        **** *              - const poly *a: pointer to input polynomial
 531:poly.c        **** **************************************************/
 532:poly.c        **** void polyeta_pack(uint8_t *r, const poly *a) {
 1173              		.loc 1 532 46 is_stmt 1 view -0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 533:poly.c        ****   unsigned int i;
 1177              		.loc 1 533 3 view .LVU329
 534:poly.c        ****   uint8_t t[8];
 1178              		.loc 1 534 3 view .LVU330
 535:poly.c        ****   DBENCH_START();
 1179              		.loc 1 535 17 view .LVU331
 536:poly.c        **** 
 537:poly.c        **** #if ETA == 2
 538:poly.c        ****   for(i = 0; i < N/8; ++i) {
 1180              		.loc 1 538 3 view .LVU332
 1181              		.loc 1 538 14 view .LVU333
 532:poly.c        ****   unsigned int i;
 1182              		.loc 1 532 46 is_stmt 0 view .LVU334
 1183 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1184              	.LCFI20:
 1185              		.cfi_def_cfa_offset 24
 1186              		.cfi_offset 4, -24
 1187              		.cfi_offset 5, -20
 1188              		.cfi_offset 6, -16
 1189              		.cfi_offset 7, -12
 1190              		.cfi_offset 8, -8
 1191              		.cfi_offset 14, -4
 1192 0004 01F58065 		add	r5, r1, #1024
 1193              	.LVL107:
 1194              	.L64:
 539:poly.c        ****     t[0] = ETA - a->coeffs[8*i+0];
 1195              		.loc 1 539 5 is_stmt 1 discriminator 3 view .LVU335
 540:poly.c        ****     t[1] = ETA - a->coeffs[8*i+1];
 1196              		.loc 1 540 5 discriminator 3 view .LVU336
 541:poly.c        ****     t[2] = ETA - a->coeffs[8*i+2];
 1197              		.loc 1 541 5 discriminator 3 view .LVU337
 1198              		.loc 1 541 16 is_stmt 0 discriminator 3 view .LVU338
 1199 0008 8B68     		ldr	r3, [r1, #8]
 542:poly.c        ****     t[3] = ETA - a->coeffs[8*i+3];
 543:poly.c        ****     t[4] = ETA - a->coeffs[8*i+4];
 544:poly.c        ****     t[5] = ETA - a->coeffs[8*i+5];
 1200              		.loc 1 544 16 discriminator 3 view .LVU339
 1201 000a 4C69     		ldr	r4, [r1, #20]
 540:poly.c        ****     t[2] = ETA - a->coeffs[8*i+2];
 1202              		.loc 1 540 16 discriminator 3 view .LVU340
 1203 000c 4F68     		ldr	r7, [r1, #4]
 545:poly.c        ****     t[6] = ETA - a->coeffs[8*i+6];
 546:poly.c        ****     t[7] = ETA - a->coeffs[8*i+7];
 1204              		.loc 1 546 16 discriminator 3 view .LVU341
 1205 000e CA69     		ldr	r2, [r1, #28]
 545:poly.c        ****     t[6] = ETA - a->coeffs[8*i+6];
 1206              		.loc 1 545 16 discriminator 3 view .LVU342
 1207 0010 8E69     		ldr	r6, [r1, #24]
 541:poly.c        ****     t[3] = ETA - a->coeffs[8*i+3];
 1208              		.loc 1 541 16 discriminator 3 view .LVU343
 1209 0012 C3F10203 		rsb	r3, r3, #2
 1210 0016 5FFA83FC 		uxtb	ip, r3
 1211              	.LVL108:
 542:poly.c        ****     t[4] = ETA - a->coeffs[8*i+4];
 1212              		.loc 1 542 5 is_stmt 1 discriminator 3 view .LVU344
 542:poly.c        ****     t[4] = ETA - a->coeffs[8*i+4];
 1213              		.loc 1 542 16 is_stmt 0 discriminator 3 view .LVU345
 1214 001a CB68     		ldr	r3, [r1, #12]
 1215 001c C3F10203 		rsb	r3, r3, #2
 1216 0020 5FFA83FE 		uxtb	lr, r3
 1217              	.LVL109:
 543:poly.c        ****     t[5] = ETA - a->coeffs[8*i+5];
 1218              		.loc 1 543 5 is_stmt 1 discriminator 3 view .LVU346
 543:poly.c        ****     t[5] = ETA - a->coeffs[8*i+5];
 1219              		.loc 1 543 16 is_stmt 0 discriminator 3 view .LVU347
 1220 0024 0B69     		ldr	r3, [r1, #16]
 1221 0026 C3F10203 		rsb	r3, r3, #2
 1222 002a DBB2     		uxtb	r3, r3
 1223              	.LVL110:
 544:poly.c        ****     t[6] = ETA - a->coeffs[8*i+6];
 1224              		.loc 1 544 5 is_stmt 1 discriminator 3 view .LVU348
 547:poly.c        **** 
 548:poly.c        ****     r[3*i+0]  = (t[0] >> 0) | (t[1] << 3) | (t[2] << 6);
 549:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1225              		.loc 1 549 51 is_stmt 0 discriminator 3 view .LVU349
 1226 002c 1B01     		lsls	r3, r3, #4
 1227              	.LVL111:
 540:poly.c        ****     t[2] = ETA - a->coeffs[8*i+2];
 1228              		.loc 1 540 16 discriminator 3 view .LVU350
 1229 002e C7F10207 		rsb	r7, r7, #2
 544:poly.c        ****     t[6] = ETA - a->coeffs[8*i+6];
 1230              		.loc 1 544 16 discriminator 3 view .LVU351
 1231 0032 C4F10204 		rsb	r4, r4, #2
 1232              		.loc 1 549 43 discriminator 3 view .LVU352
 1233 0036 43EA4E03 		orr	r3, r3, lr, lsl #1
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1234              		.loc 1 548 33 discriminator 3 view .LVU353
 1235 003a 5FFA87F8 		uxtb	r8, r7
 544:poly.c        ****     t[6] = ETA - a->coeffs[8*i+6];
 1236              		.loc 1 544 16 discriminator 3 view .LVU354
 1237 003e E4B2     		uxtb	r4, r4
 1238              	.LVL112:
 545:poly.c        ****     t[7] = ETA - a->coeffs[8*i+7];
 1239              		.loc 1 545 5 is_stmt 1 discriminator 3 view .LVU355
 546:poly.c        **** 
 1240              		.loc 1 546 16 is_stmt 0 discriminator 3 view .LVU356
 1241 0040 C2F10202 		rsb	r2, r2, #2
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1242              		.loc 1 548 51 discriminator 3 view .LVU357
 1243 0044 4FEA8C17 		lsl	r7, ip, #6
 1244              		.loc 1 549 43 discriminator 3 view .LVU358
 1245 0048 43EA9C03 		orr	r3, r3, ip, lsr #2
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1246              		.loc 1 548 43 discriminator 3 view .LVU359
 1247 004c 47EAC807 		orr	r7, r7, r8, lsl #3
 1248              		.loc 1 549 57 discriminator 3 view .LVU360
 1249 0050 43EAC413 		orr	r3, r3, r4, lsl #7
 539:poly.c        ****     t[1] = ETA - a->coeffs[8*i+1];
 1250              		.loc 1 539 16 discriminator 3 view .LVU361
 1251 0054 51F8208B 		ldr	r8, [r1], #32
 1252              	.LVL113:
 1253              		.loc 1 549 15 discriminator 3 view .LVU362
 1254 0058 4370     		strb	r3, [r0, #1]
 1255              	.LVL114:
 545:poly.c        ****     t[7] = ETA - a->coeffs[8*i+7];
 1256              		.loc 1 545 16 discriminator 3 view .LVU363
 1257 005a C6F10206 		rsb	r6, r6, #2
 546:poly.c        **** 
 1258              		.loc 1 546 16 discriminator 3 view .LVU364
 1259 005e D2B2     		uxtb	r2, r2
 545:poly.c        ****     t[7] = ETA - a->coeffs[8*i+7];
 1260              		.loc 1 545 16 discriminator 3 view .LVU365
 1261 0060 F6B2     		uxtb	r6, r6
 1262              	.LVL115:
 546:poly.c        **** 
 1263              		.loc 1 546 5 is_stmt 1 discriminator 3 view .LVU366
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1264              		.loc 1 548 5 discriminator 3 view .LVU367
 550:poly.c        ****     r[3*i+2]  = (t[5] >> 1) | (t[6] << 2) | (t[7] << 5);
 1265              		.loc 1 550 51 is_stmt 0 discriminator 3 view .LVU368
 1266 0062 5301     		lsls	r3, r2, #5
 539:poly.c        ****     t[1] = ETA - a->coeffs[8*i+1];
 1267              		.loc 1 539 16 discriminator 3 view .LVU369
 1268 0064 C8F10208 		rsb	r8, r8, #2
 1269              		.loc 1 550 43 discriminator 3 view .LVU370
 1270 0068 43EA8603 		orr	r3, r3, r6, lsl #2
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1271              		.loc 1 548 43 discriminator 3 view .LVU371
 1272 006c 47EA0807 		orr	r7, r7, r8
 1273              		.loc 1 550 43 discriminator 3 view .LVU372
 1274 0070 43EA5403 		orr	r3, r3, r4, lsr #1
 538:poly.c        ****     t[0] = ETA - a->coeffs[8*i+0];
 1275              		.loc 1 538 3 discriminator 3 view .LVU373
 1276 0074 8D42     		cmp	r5, r1
 548:poly.c        ****     r[3*i+1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1277              		.loc 1 548 15 discriminator 3 view .LVU374
 1278 0076 0770     		strb	r7, [r0]
 549:poly.c        ****     r[3*i+2]  = (t[5] >> 1) | (t[6] << 2) | (t[7] << 5);
 1279              		.loc 1 549 5 is_stmt 1 discriminator 3 view .LVU375
 1280              		.loc 1 550 5 discriminator 3 view .LVU376
 1281              		.loc 1 550 15 is_stmt 0 discriminator 3 view .LVU377
 1282 0078 8370     		strb	r3, [r0, #2]
 538:poly.c        ****     t[0] = ETA - a->coeffs[8*i+0];
 1283              		.loc 1 538 23 is_stmt 1 discriminator 3 view .LVU378
 538:poly.c        ****     t[0] = ETA - a->coeffs[8*i+0];
 1284              		.loc 1 538 14 discriminator 3 view .LVU379
 538:poly.c        ****     t[0] = ETA - a->coeffs[8*i+0];
 1285              		.loc 1 538 3 is_stmt 0 discriminator 3 view .LVU380
 1286 007a 00F10300 		add	r0, r0, #3
 1287 007e C3D1     		bne	.L64
 551:poly.c        ****   }
 552:poly.c        **** #elif ETA == 4
 553:poly.c        ****   for(i = 0; i < N/2; ++i) {
 554:poly.c        ****     t[0] = ETA - a->coeffs[2*i+0];
 555:poly.c        ****     t[1] = ETA - a->coeffs[2*i+1];
 556:poly.c        ****     r[i] = t[0] | (t[1] << 4);
 557:poly.c        ****   }
 558:poly.c        **** #endif
 559:poly.c        **** 
 560:poly.c        ****   DBENCH_STOP(*tpack);
 561:poly.c        **** }
 1288              		.loc 1 561 1 view .LVU381
 1289 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1290              		.loc 1 561 1 view .LVU382
 1291              		.cfi_endproc
 1292              	.LFE23:
 1294              		.section	.text.pqcrystals_dilithium_polyt1_pack,"ax",%progbits
 1295              		.align	1
 1296              		.global	pqcrystals_dilithium_polyt1_pack
 1297              		.syntax unified
 1298              		.thumb
 1299              		.thumb_func
 1300              		.fpu softvfp
 1302              	pqcrystals_dilithium_polyt1_pack:
 1303              	.LVL116:
 1304              	.LFB24:
 562:poly.c        **** 
 563:poly.c        **** 
 564:poly.c        **** /*************************************************
 565:poly.c        **** * Name:        polyt1_pack
 566:poly.c        **** *
 567:poly.c        **** * Description: Bit-pack polynomial t1 with coefficients fitting in 10 bits.
 568:poly.c        **** *              Input coefficients are assumed to be standard representatives.
 569:poly.c        **** *
 570:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 571:poly.c        **** *                            POLYT1_PACKEDBYTES bytes
 572:poly.c        **** *              - const poly *a: pointer to input polynomial
 573:poly.c        **** **************************************************/
 574:poly.c        **** void polyt1_pack(uint8_t *r, const poly *a) {
 1305              		.loc 1 574 45 is_stmt 1 view -0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 575:poly.c        ****   unsigned int i;
 1309              		.loc 1 575 3 view .LVU384
 576:poly.c        ****   DBENCH_START();
 1310              		.loc 1 576 17 view .LVU385
 577:poly.c        **** 
 578:poly.c        ****   for(i = 0; i < N/4; ++i) {
 1311              		.loc 1 578 3 view .LVU386
 1312              		.loc 1 578 14 view .LVU387
 574:poly.c        ****   unsigned int i;
 1313              		.loc 1 574 45 is_stmt 0 view .LVU388
 1314 0000 10B5     		push	{r4, lr}
 1315              	.LCFI21:
 1316              		.cfi_def_cfa_offset 8
 1317              		.cfi_offset 4, -8
 1318              		.cfi_offset 14, -4
 1319 0002 01F58062 		add	r2, r1, #1024
 1320              	.LVL117:
 1321              	.L67:
 579:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1322              		.loc 1 579 5 is_stmt 1 discriminator 3 view .LVU389
 1323              		.loc 1 579 14 is_stmt 0 discriminator 3 view .LVU390
 1324 0006 0B68     		ldr	r3, [r1]
 1325 0008 0370     		strb	r3, [r0]
 580:poly.c        ****     r[5*i+1] = (a->coeffs[4*i+0] >> 8) | (a->coeffs[4*i+1] << 2);
 1326              		.loc 1 580 5 is_stmt 1 discriminator 3 view .LVU391
 1327              		.loc 1 580 60 is_stmt 0 discriminator 3 view .LVU392
 1328 000a D1E90043 		ldrd	r4, r3, [r1]
 1329 000e 9B00     		lsls	r3, r3, #2
 1330              		.loc 1 580 40 discriminator 3 view .LVU393
 1331 0010 43EA2423 		orr	r3, r3, r4, asr #8
 1332              		.loc 1 580 14 discriminator 3 view .LVU394
 1333 0014 4370     		strb	r3, [r0, #1]
 581:poly.c        ****     r[5*i+2] = (a->coeffs[4*i+1] >> 6) | (a->coeffs[4*i+2] << 4);
 1334              		.loc 1 581 5 is_stmt 1 discriminator 3 view .LVU395
 1335              		.loc 1 581 60 is_stmt 0 discriminator 3 view .LVU396
 1336 0016 D1E90143 		ldrd	r4, r3, [r1, #4]
 1337 001a 1B01     		lsls	r3, r3, #4
 1338              		.loc 1 581 40 discriminator 3 view .LVU397
 1339 001c 43EAA413 		orr	r3, r3, r4, asr #6
 1340              		.loc 1 581 14 discriminator 3 view .LVU398
 1341 0020 8370     		strb	r3, [r0, #2]
 582:poly.c        ****     r[5*i+3] = (a->coeffs[4*i+2] >> 4) | (a->coeffs[4*i+3] << 6);
 1342              		.loc 1 582 5 is_stmt 1 discriminator 3 view .LVU399
 1343              		.loc 1 582 60 is_stmt 0 discriminator 3 view .LVU400
 1344 0022 D1E90243 		ldrd	r4, r3, [r1, #8]
 1345 0026 9B01     		lsls	r3, r3, #6
 1346              		.loc 1 582 40 discriminator 3 view .LVU401
 1347 0028 43EA2413 		orr	r3, r3, r4, asr #4
 1348              		.loc 1 582 14 discriminator 3 view .LVU402
 1349 002c C370     		strb	r3, [r0, #3]
 583:poly.c        ****     r[5*i+4] = (a->coeffs[4*i+3] >> 2);
 1350              		.loc 1 583 5 is_stmt 1 discriminator 3 view .LVU403
 1351              		.loc 1 583 34 is_stmt 0 discriminator 3 view .LVU404
 1352 002e CB68     		ldr	r3, [r1, #12]
 578:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1353              		.loc 1 578 3 discriminator 3 view .LVU405
 1354 0030 1031     		adds	r1, r1, #16
 1355              		.loc 1 583 34 discriminator 3 view .LVU406
 1356 0032 9B10     		asrs	r3, r3, #2
 578:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1357              		.loc 1 578 3 discriminator 3 view .LVU407
 1358 0034 9142     		cmp	r1, r2
 1359              		.loc 1 583 14 discriminator 3 view .LVU408
 1360 0036 0371     		strb	r3, [r0, #4]
 578:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1361              		.loc 1 578 23 is_stmt 1 discriminator 3 view .LVU409
 578:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1362              		.loc 1 578 14 discriminator 3 view .LVU410
 578:poly.c        ****     r[5*i+0] = (a->coeffs[4*i+0] >> 0);
 1363              		.loc 1 578 3 is_stmt 0 discriminator 3 view .LVU411
 1364 0038 00F10500 		add	r0, r0, #5
 1365 003c E3D1     		bne	.L67
 584:poly.c        ****   }
 585:poly.c        **** 
 586:poly.c        ****   DBENCH_STOP(*tpack);
 587:poly.c        **** }
 1366              		.loc 1 587 1 view .LVU412
 1367 003e 10BD     		pop	{r4, pc}
 1368              		.cfi_endproc
 1369              	.LFE24:
 1371              		.section	.text.pqcrystals_dilithium_polyt1_unpack,"ax",%progbits
 1372              		.align	1
 1373              		.global	pqcrystals_dilithium_polyt1_unpack
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1377              		.fpu softvfp
 1379              	pqcrystals_dilithium_polyt1_unpack:
 1380              	.LVL118:
 1381              	.LFB25:
 588:poly.c        **** 
 589:poly.c        **** /*************************************************
 590:poly.c        **** * Name:        polyt1_unpack
 591:poly.c        **** *
 592:poly.c        **** * Description: Unpack polynomial t1 with 10-bit coefficients.
 593:poly.c        **** *              Output coefficients are standard representatives.
 594:poly.c        **** *
 595:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 596:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 597:poly.c        **** **************************************************/
 598:poly.c        **** void polyt1_unpack(poly *r, const uint8_t *a) {
 1382              		.loc 1 598 47 is_stmt 1 view -0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
 1385              		@ frame_needed = 0, uses_anonymous_args = 0
 599:poly.c        ****   unsigned int i;
 1386              		.loc 1 599 3 view .LVU414
 600:poly.c        ****   DBENCH_START();
 1387              		.loc 1 600 17 view .LVU415
 601:poly.c        **** 
 602:poly.c        ****   for(i = 0; i < N/4; ++i) {
 1388              		.loc 1 602 3 view .LVU416
 1389              		.loc 1 602 14 view .LVU417
 598:poly.c        ****   unsigned int i;
 1390              		.loc 1 598 47 is_stmt 0 view .LVU418
 1391 0000 10B5     		push	{r4, lr}
 1392              	.LCFI22:
 1393              		.cfi_def_cfa_offset 8
 1394              		.cfi_offset 4, -8
 1395              		.cfi_offset 14, -4
 1396 0002 01F5A072 		add	r2, r1, #320
 1397              	.LVL119:
 1398              	.L70:
 603:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1399              		.loc 1 603 5 is_stmt 1 discriminator 3 view .LVU419
 1400              		.loc 1 603 44 is_stmt 0 discriminator 3 view .LVU420
 1401 0006 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1402              		.loc 1 603 35 discriminator 3 view .LVU421
 1403 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1404              		.loc 1 603 41 discriminator 3 view .LVU422
 1405 000a 43EA0423 		orr	r3, r3, r4, lsl #8
 1406              		.loc 1 603 70 discriminator 3 view .LVU423
 1407 000e C3F30903 		ubfx	r3, r3, #0, #10
 1408              		.loc 1 603 22 discriminator 3 view .LVU424
 1409 0012 0360     		str	r3, [r0]
 604:poly.c        ****     r->coeffs[4*i+1] = ((a[5*i+1] >> 2) | ((uint32_t)a[5*i+2] << 6)) & 0x3FF;
 1410              		.loc 1 604 5 is_stmt 1 discriminator 3 view .LVU425
 1411              		.loc 1 604 44 is_stmt 0 discriminator 3 view .LVU426
 1412 0014 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1413              		.loc 1 604 35 discriminator 3 view .LVU427
 1414 0016 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1415              		.loc 1 604 63 discriminator 3 view .LVU428
 1416 0018 9B01     		lsls	r3, r3, #6
 1417              		.loc 1 604 41 discriminator 3 view .LVU429
 1418 001a 43EA9403 		orr	r3, r3, r4, lsr #2
 1419              		.loc 1 604 70 discriminator 3 view .LVU430
 1420 001e C3F30903 		ubfx	r3, r3, #0, #10
 1421              		.loc 1 604 22 discriminator 3 view .LVU431
 1422 0022 4360     		str	r3, [r0, #4]
 605:poly.c        ****     r->coeffs[4*i+2] = ((a[5*i+2] >> 4) | ((uint32_t)a[5*i+3] << 4)) & 0x3FF;
 1423              		.loc 1 605 5 is_stmt 1 discriminator 3 view .LVU432
 1424              		.loc 1 605 44 is_stmt 0 discriminator 3 view .LVU433
 1425 0024 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1426              		.loc 1 605 35 discriminator 3 view .LVU434
 1427 0026 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 1428              		.loc 1 605 63 discriminator 3 view .LVU435
 1429 0028 1B01     		lsls	r3, r3, #4
 1430              		.loc 1 605 41 discriminator 3 view .LVU436
 1431 002a 43EA1413 		orr	r3, r3, r4, lsr #4
 1432              		.loc 1 605 70 discriminator 3 view .LVU437
 1433 002e C3F30903 		ubfx	r3, r3, #0, #10
 1434              		.loc 1 605 22 discriminator 3 view .LVU438
 1435 0032 8360     		str	r3, [r0, #8]
 606:poly.c        ****     r->coeffs[4*i+3] = ((a[5*i+3] >> 6) | ((uint32_t)a[5*i+4] << 2)) & 0x3FF;
 1436              		.loc 1 606 5 is_stmt 1 discriminator 3 view .LVU439
 1437              		.loc 1 606 44 is_stmt 0 discriminator 3 view .LVU440
 1438 0034 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 1439              		.loc 1 606 35 discriminator 3 view .LVU441
 1440 0036 CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 1441              		.loc 1 606 63 discriminator 3 view .LVU442
 1442 0038 9B00     		lsls	r3, r3, #2
 602:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1443              		.loc 1 602 3 discriminator 3 view .LVU443
 1444 003a 0531     		adds	r1, r1, #5
 1445              		.loc 1 606 41 discriminator 3 view .LVU444
 1446 003c 43EA9413 		orr	r3, r3, r4, lsr #6
 602:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1447              		.loc 1 602 3 discriminator 3 view .LVU445
 1448 0040 8A42     		cmp	r2, r1
 1449              		.loc 1 606 22 discriminator 3 view .LVU446
 1450 0042 C360     		str	r3, [r0, #12]
 602:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1451              		.loc 1 602 23 is_stmt 1 discriminator 3 view .LVU447
 602:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1452              		.loc 1 602 14 discriminator 3 view .LVU448
 602:poly.c        ****     r->coeffs[4*i+0] = ((a[5*i+0] >> 0) | ((uint32_t)a[5*i+1] << 8)) & 0x3FF;
 1453              		.loc 1 602 3 is_stmt 0 discriminator 3 view .LVU449
 1454 0044 00F11000 		add	r0, r0, #16
 1455 0048 DDD1     		bne	.L70
 607:poly.c        ****   }
 608:poly.c        **** 
 609:poly.c        ****   DBENCH_STOP(*tpack);
 610:poly.c        **** }
 1456              		.loc 1 610 1 view .LVU450
 1457 004a 10BD     		pop	{r4, pc}
 1458              		.cfi_endproc
 1459              	.LFE25:
 1461              		.section	.text.pqcrystals_dilithium_polyt0_pack,"ax",%progbits
 1462              		.align	1
 1463              		.global	pqcrystals_dilithium_polyt0_pack
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu softvfp
 1469              	pqcrystals_dilithium_polyt0_pack:
 1470              	.LVL120:
 1471              	.LFB26:
 611:poly.c        **** 
 612:poly.c        **** /*************************************************
 613:poly.c        **** * Name:        polyt0_pack
 614:poly.c        **** *
 615:poly.c        **** * Description: Bit-pack polynomial t0 with coefficients in ]-2^{D-1}, 2^{D-1}].
 616:poly.c        **** *
 617:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 618:poly.c        **** *                            POLYT0_PACKEDBYTES bytes
 619:poly.c        **** *              - const poly *a: pointer to input polynomial
 620:poly.c        **** **************************************************/
 621:poly.c        **** void polyt0_pack(uint8_t *r, const poly *a) {
 1472              		.loc 1 621 45 is_stmt 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 622:poly.c        ****   unsigned int i;
 1476              		.loc 1 622 3 view .LVU452
 623:poly.c        ****   uint32_t t[8];
 1477              		.loc 1 623 3 view .LVU453
 624:poly.c        ****   DBENCH_START();
 1478              		.loc 1 624 17 view .LVU454
 625:poly.c        **** 
 626:poly.c        ****   for(i = 0; i < N/8; ++i) {
 1479              		.loc 1 626 3 view .LVU455
 1480              		.loc 1 626 14 view .LVU456
 621:poly.c        ****   unsigned int i;
 1481              		.loc 1 621 45 is_stmt 0 view .LVU457
 1482 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1483              	.LCFI23:
 1484              		.cfi_def_cfa_offset 28
 1485              		.cfi_offset 4, -28
 1486              		.cfi_offset 5, -24
 1487              		.cfi_offset 6, -20
 1488              		.cfi_offset 7, -16
 1489              		.cfi_offset 8, -12
 1490              		.cfi_offset 9, -8
 1491              		.cfi_offset 14, -4
 1492 0004 00F5D07C 		add	ip, r0, #416
 1493              	.LVL121:
 1494              	.L73:
 627:poly.c        ****     t[0] = (1 << (D-1)) - a->coeffs[8*i+0];
 1495              		.loc 1 627 5 is_stmt 1 discriminator 3 view .LVU458
 628:poly.c        ****     t[1] = (1 << (D-1)) - a->coeffs[8*i+1];
 629:poly.c        ****     t[2] = (1 << (D-1)) - a->coeffs[8*i+2];
 630:poly.c        ****     t[3] = (1 << (D-1)) - a->coeffs[8*i+3];
 631:poly.c        ****     t[4] = (1 << (D-1)) - a->coeffs[8*i+4];
 632:poly.c        ****     t[5] = (1 << (D-1)) - a->coeffs[8*i+5];
 1496              		.loc 1 632 25 is_stmt 0 discriminator 3 view .LVU459
 1497 0008 4D69     		ldr	r5, [r1, #20]
 628:poly.c        ****     t[1] = (1 << (D-1)) - a->coeffs[8*i+1];
 1498              		.loc 1 628 25 discriminator 3 view .LVU460
 1499 000a 4C68     		ldr	r4, [r1, #4]
 627:poly.c        ****     t[0] = (1 << (D-1)) - a->coeffs[8*i+0];
 1500              		.loc 1 627 25 discriminator 3 view .LVU461
 1501 000c 0F68     		ldr	r7, [r1]
 629:poly.c        ****     t[3] = (1 << (D-1)) - a->coeffs[8*i+3];
 1502              		.loc 1 629 25 discriminator 3 view .LVU462
 1503 000e 8E68     		ldr	r6, [r1, #8]
 630:poly.c        ****     t[4] = (1 << (D-1)) - a->coeffs[8*i+4];
 1504              		.loc 1 630 25 discriminator 3 view .LVU463
 1505 0010 CA68     		ldr	r2, [r1, #12]
 631:poly.c        ****     t[5] = (1 << (D-1)) - a->coeffs[8*i+5];
 1506              		.loc 1 631 25 discriminator 3 view .LVU464
 1507 0012 0B69     		ldr	r3, [r1, #16]
 628:poly.c        ****     t[2] = (1 << (D-1)) - a->coeffs[8*i+2];
 1508              		.loc 1 628 25 discriminator 3 view .LVU465
 1509 0014 C4F58054 		rsb	r4, r4, #4096
 1510              		.loc 1 632 25 discriminator 3 view .LVU466
 1511 0018 C5F58058 		rsb	r8, r5, #4096
 633:poly.c        ****     t[6] = (1 << (D-1)) - a->coeffs[8*i+6];
 1512              		.loc 1 633 25 discriminator 3 view .LVU467
 1513 001c 8D69     		ldr	r5, [r1, #24]
 627:poly.c        ****     t[1] = (1 << (D-1)) - a->coeffs[8*i+1];
 1514              		.loc 1 627 25 discriminator 3 view .LVU468
 1515 001e C7F58057 		rsb	r7, r7, #4096
 1516              	.LVL122:
 628:poly.c        ****     t[2] = (1 << (D-1)) - a->coeffs[8*i+2];
 1517              		.loc 1 628 5 is_stmt 1 discriminator 3 view .LVU469
 629:poly.c        ****     t[3] = (1 << (D-1)) - a->coeffs[8*i+3];
 1518              		.loc 1 629 5 discriminator 3 view .LVU470
 634:poly.c        ****     t[7] = (1 << (D-1)) - a->coeffs[8*i+7];
 635:poly.c        **** 
 636:poly.c        ****     r[13*i+ 0]  =  t[0];
 637:poly.c        ****     r[13*i+ 1]  =  t[0] >>  8;
 638:poly.c        ****     r[13*i+ 1] |=  t[1] <<  5;
 1519              		.loc 1 638 25 is_stmt 0 discriminator 3 view .LVU471
 1520 0022 4FEA4419 		lsl	r9, r4, #5
 633:poly.c        ****     t[7] = (1 << (D-1)) - a->coeffs[8*i+7];
 1521              		.loc 1 633 25 discriminator 3 view .LVU472
 1522 0026 C5F5805E 		rsb	lr, r5, #4096
 634:poly.c        ****     t[7] = (1 << (D-1)) - a->coeffs[8*i+7];
 1523              		.loc 1 634 25 discriminator 3 view .LVU473
 1524 002a CD69     		ldr	r5, [r1, #28]
 636:poly.c        ****     r[13*i+ 1]  =  t[0] >>  8;
 1525              		.loc 1 636 17 discriminator 3 view .LVU474
 1526 002c 0770     		strb	r7, [r0]
 1527              		.loc 1 638 16 discriminator 3 view .LVU475
 1528 002e 49EA1727 		orr	r7, r9, r7, lsr #8
 1529              	.LVL123:
 1530              		.loc 1 638 16 discriminator 3 view .LVU476
 1531 0032 4770     		strb	r7, [r0, #1]
 629:poly.c        ****     t[3] = (1 << (D-1)) - a->coeffs[8*i+3];
 1532              		.loc 1 629 25 discriminator 3 view .LVU477
 1533 0034 C6F58056 		rsb	r6, r6, #4096
 1534              	.LVL124:
 630:poly.c        ****     t[4] = (1 << (D-1)) - a->coeffs[8*i+4];
 1535              		.loc 1 630 5 is_stmt 1 discriminator 3 view .LVU478
 639:poly.c        ****     r[13*i+ 2]  =  t[1] >>  3;
 1536              		.loc 1 639 25 is_stmt 0 discriminator 3 view .LVU479
 1537 0038 E708     		lsrs	r7, r4, #3
 1538              		.loc 1 639 17 discriminator 3 view .LVU480
 1539 003a 8770     		strb	r7, [r0, #2]
 640:poly.c        ****     r[13*i+ 3]  =  t[1] >> 11;
 641:poly.c        ****     r[13*i+ 3] |=  t[2] <<  2;
 1540              		.loc 1 641 25 discriminator 3 view .LVU481
 1541 003c B700     		lsls	r7, r6, #2
 630:poly.c        ****     t[4] = (1 << (D-1)) - a->coeffs[8*i+4];
 1542              		.loc 1 630 25 discriminator 3 view .LVU482
 1543 003e C2F58052 		rsb	r2, r2, #4096
 1544              	.LVL125:
 631:poly.c        ****     t[5] = (1 << (D-1)) - a->coeffs[8*i+5];
 1545              		.loc 1 631 5 is_stmt 1 discriminator 3 view .LVU483
 1546              		.loc 1 641 16 is_stmt 0 discriminator 3 view .LVU484
 1547 0042 47EAD424 		orr	r4, r7, r4, lsr #11
 1548              	.LVL126:
 1549              		.loc 1 641 16 discriminator 3 view .LVU485
 1550 0046 C470     		strb	r4, [r0, #3]
 642:poly.c        ****     r[13*i+ 4]  =  t[2] >>  6;
 643:poly.c        ****     r[13*i+ 4] |=  t[3] <<  7;
 1551              		.loc 1 643 25 discriminator 3 view .LVU486
 1552 0048 D401     		lsls	r4, r2, #7
 631:poly.c        ****     t[5] = (1 << (D-1)) - a->coeffs[8*i+5];
 1553              		.loc 1 631 25 discriminator 3 view .LVU487
 1554 004a C3F58053 		rsb	r3, r3, #4096
 1555              	.LVL127:
 632:poly.c        ****     t[6] = (1 << (D-1)) - a->coeffs[8*i+6];
 1556              		.loc 1 632 5 is_stmt 1 discriminator 3 view .LVU488
 633:poly.c        ****     t[7] = (1 << (D-1)) - a->coeffs[8*i+7];
 1557              		.loc 1 633 5 discriminator 3 view .LVU489
 634:poly.c        **** 
 1558              		.loc 1 634 5 discriminator 3 view .LVU490
 1559              		.loc 1 643 16 is_stmt 0 discriminator 3 view .LVU491
 1560 004e 44EA9616 		orr	r6, r4, r6, lsr #6
 1561              	.LVL128:
 644:poly.c        ****     r[13*i+ 5]  =  t[3] >>  1;
 1562              		.loc 1 644 25 discriminator 3 view .LVU492
 1563 0052 5408     		lsrs	r4, r2, #1
 1564              		.loc 1 644 17 discriminator 3 view .LVU493
 1565 0054 4471     		strb	r4, [r0, #5]
 645:poly.c        ****     r[13*i+ 6]  =  t[3] >>  9;
 646:poly.c        ****     r[13*i+ 6] |=  t[4] <<  4;
 1566              		.loc 1 646 25 discriminator 3 view .LVU494
 1567 0056 1C01     		lsls	r4, r3, #4
 1568              		.loc 1 646 16 discriminator 3 view .LVU495
 1569 0058 44EA5222 		orr	r2, r4, r2, lsr #9
 1570              	.LVL129:
 1571              		.loc 1 646 16 discriminator 3 view .LVU496
 1572 005c 8271     		strb	r2, [r0, #6]
 647:poly.c        ****     r[13*i+ 7]  =  t[4] >>  4;
 1573              		.loc 1 647 25 discriminator 3 view .LVU497
 1574 005e 1A09     		lsrs	r2, r3, #4
 1575              		.loc 1 647 17 discriminator 3 view .LVU498
 1576 0060 C271     		strb	r2, [r0, #7]
 648:poly.c        ****     r[13*i+ 8]  =  t[4] >> 12;
 649:poly.c        ****     r[13*i+ 8] |=  t[5] <<  1;
 1577              		.loc 1 649 25 discriminator 3 view .LVU499
 1578 0062 4FEA4802 		lsl	r2, r8, #1
 1579              		.loc 1 649 16 discriminator 3 view .LVU500
 1580 0066 42EA1333 		orr	r3, r2, r3, lsr #12
 1581              	.LVL130:
 1582              		.loc 1 649 16 discriminator 3 view .LVU501
 1583 006a 0372     		strb	r3, [r0, #8]
 650:poly.c        ****     r[13*i+ 9]  =  t[5] >>  7;
 651:poly.c        ****     r[13*i+ 9] |=  t[6] <<  6;
 1584              		.loc 1 651 25 discriminator 3 view .LVU502
 1585 006c 4FEA8E13 		lsl	r3, lr, #6
 1586              		.loc 1 651 16 discriminator 3 view .LVU503
 1587 0070 43EAD813 		orr	r3, r3, r8, lsr #7
 1588 0074 4372     		strb	r3, [r0, #9]
 634:poly.c        **** 
 1589              		.loc 1 634 25 discriminator 3 view .LVU504
 1590 0076 C5F58055 		rsb	r5, r5, #4096
 1591              	.LVL131:
 636:poly.c        ****     r[13*i+ 1]  =  t[0] >>  8;
 1592              		.loc 1 636 5 is_stmt 1 discriminator 3 view .LVU505
 637:poly.c        ****     r[13*i+ 1] |=  t[1] <<  5;
 1593              		.loc 1 637 5 discriminator 3 view .LVU506
 638:poly.c        ****     r[13*i+ 2]  =  t[1] >>  3;
 1594              		.loc 1 638 5 discriminator 3 view .LVU507
 639:poly.c        ****     r[13*i+ 3]  =  t[1] >> 11;
 1595              		.loc 1 639 5 discriminator 3 view .LVU508
 640:poly.c        ****     r[13*i+ 3] |=  t[2] <<  2;
 1596              		.loc 1 640 5 discriminator 3 view .LVU509
 641:poly.c        ****     r[13*i+ 4]  =  t[2] >>  6;
 1597              		.loc 1 641 5 discriminator 3 view .LVU510
 642:poly.c        ****     r[13*i+ 4] |=  t[3] <<  7;
 1598              		.loc 1 642 5 discriminator 3 view .LVU511
 643:poly.c        ****     r[13*i+ 5]  =  t[3] >>  1;
 1599              		.loc 1 643 5 discriminator 3 view .LVU512
 652:poly.c        ****     r[13*i+10]  =  t[6] >>  2;
 1600              		.loc 1 652 25 is_stmt 0 discriminator 3 view .LVU513
 1601 007a 4FEA9E03 		lsr	r3, lr, #2
 1602              		.loc 1 652 17 discriminator 3 view .LVU514
 1603 007e 8372     		strb	r3, [r0, #10]
 653:poly.c        ****     r[13*i+11]  =  t[6] >> 10;
 654:poly.c        ****     r[13*i+11] |=  t[7] <<  3;
 1604              		.loc 1 654 25 discriminator 3 view .LVU515
 1605 0080 EB00     		lsls	r3, r5, #3
 1606              		.loc 1 654 16 discriminator 3 view .LVU516
 1607 0082 43EA9E23 		orr	r3, r3, lr, lsr #10
 655:poly.c        ****     r[13*i+12]  =  t[7] >>  5;
 1608              		.loc 1 655 25 discriminator 3 view .LVU517
 1609 0086 6D09     		lsrs	r5, r5, #5
 1610              	.LVL132:
 643:poly.c        ****     r[13*i+ 5]  =  t[3] >>  1;
 1611              		.loc 1 643 16 discriminator 3 view .LVU518
 1612 0088 0671     		strb	r6, [r0, #4]
 644:poly.c        ****     r[13*i+ 6]  =  t[3] >>  9;
 1613              		.loc 1 644 5 is_stmt 1 discriminator 3 view .LVU519
 645:poly.c        ****     r[13*i+ 6] |=  t[4] <<  4;
 1614              		.loc 1 645 5 discriminator 3 view .LVU520
 646:poly.c        ****     r[13*i+ 7]  =  t[4] >>  4;
 1615              		.loc 1 646 5 discriminator 3 view .LVU521
 647:poly.c        ****     r[13*i+ 8]  =  t[4] >> 12;
 1616              		.loc 1 647 5 discriminator 3 view .LVU522
 648:poly.c        ****     r[13*i+ 8] |=  t[5] <<  1;
 1617              		.loc 1 648 5 discriminator 3 view .LVU523
 649:poly.c        ****     r[13*i+ 9]  =  t[5] >>  7;
 1618              		.loc 1 649 5 discriminator 3 view .LVU524
 650:poly.c        ****     r[13*i+ 9] |=  t[6] <<  6;
 1619              		.loc 1 650 5 discriminator 3 view .LVU525
 651:poly.c        ****     r[13*i+10]  =  t[6] >>  2;
 1620              		.loc 1 651 5 discriminator 3 view .LVU526
 652:poly.c        ****     r[13*i+11]  =  t[6] >> 10;
 1621              		.loc 1 652 5 discriminator 3 view .LVU527
 653:poly.c        ****     r[13*i+11] |=  t[7] <<  3;
 1622              		.loc 1 653 5 discriminator 3 view .LVU528
 654:poly.c        ****     r[13*i+12]  =  t[7] >>  5;
 1623              		.loc 1 654 5 discriminator 3 view .LVU529
 654:poly.c        ****     r[13*i+12]  =  t[7] >>  5;
 1624              		.loc 1 654 16 is_stmt 0 discriminator 3 view .LVU530
 1625 008a C372     		strb	r3, [r0, #11]
 1626              		.loc 1 655 5 is_stmt 1 discriminator 3 view .LVU531
 1627              		.loc 1 655 17 is_stmt 0 discriminator 3 view .LVU532
 1628 008c 0573     		strb	r5, [r0, #12]
 626:poly.c        ****     t[0] = (1 << (D-1)) - a->coeffs[8*i+0];
 1629              		.loc 1 626 23 is_stmt 1 discriminator 3 view .LVU533
 626:poly.c        ****     t[0] = (1 << (D-1)) - a->coeffs[8*i+0];
 1630              		.loc 1 626 14 discriminator 3 view .LVU534
 626:poly.c        ****     t[0] = (1 << (D-1)) - a->coeffs[8*i+0];
 1631              		.loc 1 626 3 is_stmt 0 discriminator 3 view .LVU535
 1632 008e 0D30     		adds	r0, r0, #13
 1633 0090 8445     		cmp	ip, r0
 1634 0092 01F12001 		add	r1, r1, #32
 1635 0096 B7D1     		bne	.L73
 656:poly.c        ****   }
 657:poly.c        **** 
 658:poly.c        ****   DBENCH_STOP(*tpack);
 659:poly.c        **** }
 1636              		.loc 1 659 1 view .LVU536
 1637 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1638              		.loc 1 659 1 view .LVU537
 1639              		.cfi_endproc
 1640              	.LFE26:
 1642              		.section	.text.pqcrystals_dilithium_polyt0_unpack,"ax",%progbits
 1643              		.align	1
 1644              		.global	pqcrystals_dilithium_polyt0_unpack
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
 1648              		.fpu softvfp
 1650              	pqcrystals_dilithium_polyt0_unpack:
 1651              	.LVL133:
 1652              	.LFB27:
 660:poly.c        **** 
 661:poly.c        **** /*************************************************
 662:poly.c        **** * Name:        polyt0_unpack
 663:poly.c        **** *
 664:poly.c        **** * Description: Unpack polynomial t0 with coefficients in ]-2^{D-1}, 2^{D-1}].
 665:poly.c        **** *
 666:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 667:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 668:poly.c        **** **************************************************/
 669:poly.c        **** void polyt0_unpack(poly *r, const uint8_t *a) {
 1653              		.loc 1 669 47 is_stmt 1 view -0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 670:poly.c        ****   unsigned int i;
 1657              		.loc 1 670 3 view .LVU539
 671:poly.c        ****   DBENCH_START();
 1658              		.loc 1 671 17 view .LVU540
 672:poly.c        **** 
 673:poly.c        ****   for(i = 0; i < N/8; ++i) {
 1659              		.loc 1 673 3 view .LVU541
 1660              		.loc 1 673 14 view .LVU542
 669:poly.c        ****   unsigned int i;
 1661              		.loc 1 669 47 is_stmt 0 view .LVU543
 1662 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1663              	.LCFI24:
 1664              		.cfi_def_cfa_offset 28
 1665              		.cfi_offset 4, -28
 1666              		.cfi_offset 5, -24
 1667              		.cfi_offset 6, -20
 1668              		.cfi_offset 7, -16
 1669              		.cfi_offset 8, -12
 1670              		.cfi_offset 9, -8
 1671              		.cfi_offset 14, -4
 1672 0004 00F5806C 		add	ip, r0, #1024
 1673              	.LVL134:
 1674              	.L76:
 674:poly.c        ****     r->coeffs[8*i+0]  = a[13*i+0];
 1675              		.loc 1 674 5 is_stmt 1 discriminator 3 view .LVU544
 1676              		.loc 1 674 26 is_stmt 0 discriminator 3 view .LVU545
 1677 0008 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 1678 000a 0760     		str	r7, [r0]
 675:poly.c        ****     r->coeffs[8*i+0] |= (uint32_t)a[13*i+1] << 8;
 1679              		.loc 1 675 5 is_stmt 1 discriminator 3 view .LVU546
 676:poly.c        ****     r->coeffs[8*i+0] &= 0x1FFF;
 1680              		.loc 1 676 5 discriminator 3 view .LVU547
 675:poly.c        ****     r->coeffs[8*i+0] |= (uint32_t)a[13*i+1] << 8;
 1681              		.loc 1 675 25 is_stmt 0 discriminator 3 view .LVU548
 1682 000c 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 675:poly.c        ****     r->coeffs[8*i+0] |= (uint32_t)a[13*i+1] << 8;
 1683              		.loc 1 675 22 discriminator 3 view .LVU549
 1684 000e 47EA0327 		orr	r7, r7, r3, lsl #8
 1685              		.loc 1 676 22 discriminator 3 view .LVU550
 1686 0012 C7F30C07 		ubfx	r7, r7, #0, #13
 1687 0016 0760     		str	r7, [r0]
 677:poly.c        **** 
 678:poly.c        ****     r->coeffs[8*i+1]  = a[13*i+1] >> 5;
 1688              		.loc 1 678 5 is_stmt 1 discriminator 3 view .LVU551
 1689              		.loc 1 678 35 is_stmt 0 discriminator 3 view .LVU552
 1690 0018 4D78     		ldrb	r5, [r1, #1]	@ zero_extendqisi2
 1691 001a 6D09     		lsrs	r5, r5, #5
 1692 001c 4560     		str	r5, [r0, #4]
 679:poly.c        ****     r->coeffs[8*i+1] |= (uint32_t)a[13*i+2] << 3;
 1693              		.loc 1 679 5 is_stmt 1 discriminator 3 view .LVU553
 1694              		.loc 1 679 25 is_stmt 0 discriminator 3 view .LVU554
 1695 001e 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1696              		.loc 1 679 22 discriminator 3 view .LVU555
 1697 0020 45EAC305 		orr	r5, r5, r3, lsl #3
 1698 0024 4560     		str	r5, [r0, #4]
 680:poly.c        ****     r->coeffs[8*i+1] |= (uint32_t)a[13*i+3] << 11;
 1699              		.loc 1 680 5 is_stmt 1 discriminator 3 view .LVU556
 681:poly.c        ****     r->coeffs[8*i+1] &= 0x1FFF;
 1700              		.loc 1 681 5 discriminator 3 view .LVU557
 680:poly.c        ****     r->coeffs[8*i+1] |= (uint32_t)a[13*i+3] << 11;
 1701              		.loc 1 680 25 is_stmt 0 discriminator 3 view .LVU558
 1702 0026 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 680:poly.c        ****     r->coeffs[8*i+1] |= (uint32_t)a[13*i+3] << 11;
 1703              		.loc 1 680 22 discriminator 3 view .LVU559
 1704 0028 45EAC325 		orr	r5, r5, r3, lsl #11
 1705              		.loc 1 681 22 discriminator 3 view .LVU560
 1706 002c C5F30C05 		ubfx	r5, r5, #0, #13
 1707 0030 4560     		str	r5, [r0, #4]
 682:poly.c        **** 
 683:poly.c        ****     r->coeffs[8*i+2]  = a[13*i+3] >> 2;
 1708              		.loc 1 683 5 is_stmt 1 discriminator 3 view .LVU561
 1709              		.loc 1 683 35 is_stmt 0 discriminator 3 view .LVU562
 1710 0032 CE78     		ldrb	r6, [r1, #3]	@ zero_extendqisi2
 1711 0034 B608     		lsrs	r6, r6, #2
 1712 0036 8660     		str	r6, [r0, #8]
 684:poly.c        ****     r->coeffs[8*i+2] |= (uint32_t)a[13*i+4] << 6;
 1713              		.loc 1 684 5 is_stmt 1 discriminator 3 view .LVU563
 685:poly.c        ****     r->coeffs[8*i+2] &= 0x1FFF;
 1714              		.loc 1 685 5 discriminator 3 view .LVU564
 684:poly.c        ****     r->coeffs[8*i+2] |= (uint32_t)a[13*i+4] << 6;
 1715              		.loc 1 684 25 is_stmt 0 discriminator 3 view .LVU565
 1716 0038 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 684:poly.c        ****     r->coeffs[8*i+2] |= (uint32_t)a[13*i+4] << 6;
 1717              		.loc 1 684 22 discriminator 3 view .LVU566
 1718 003a 46EA8316 		orr	r6, r6, r3, lsl #6
 1719              		.loc 1 685 22 discriminator 3 view .LVU567
 1720 003e C6F30C06 		ubfx	r6, r6, #0, #13
 1721 0042 8660     		str	r6, [r0, #8]
 686:poly.c        **** 
 687:poly.c        ****     r->coeffs[8*i+3]  = a[13*i+4] >> 7;
 1722              		.loc 1 687 5 is_stmt 1 discriminator 3 view .LVU568
 1723              		.loc 1 687 35 is_stmt 0 discriminator 3 view .LVU569
 1724 0044 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 1725 0046 E409     		lsrs	r4, r4, #7
 1726 0048 C460     		str	r4, [r0, #12]
 688:poly.c        ****     r->coeffs[8*i+3] |= (uint32_t)a[13*i+5] << 1;
 1727              		.loc 1 688 5 is_stmt 1 discriminator 3 view .LVU570
 1728              		.loc 1 688 25 is_stmt 0 discriminator 3 view .LVU571
 1729 004a 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 1730              		.loc 1 688 22 discriminator 3 view .LVU572
 1731 004c 44EA4304 		orr	r4, r4, r3, lsl #1
 1732 0050 C460     		str	r4, [r0, #12]
 689:poly.c        ****     r->coeffs[8*i+3] |= (uint32_t)a[13*i+6] << 9;
 1733              		.loc 1 689 5 is_stmt 1 discriminator 3 view .LVU573
 690:poly.c        ****     r->coeffs[8*i+3] &= 0x1FFF;
 1734              		.loc 1 690 5 discriminator 3 view .LVU574
 689:poly.c        ****     r->coeffs[8*i+3] |= (uint32_t)a[13*i+6] << 9;
 1735              		.loc 1 689 25 is_stmt 0 discriminator 3 view .LVU575
 1736 0052 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 689:poly.c        ****     r->coeffs[8*i+3] |= (uint32_t)a[13*i+6] << 9;
 1737              		.loc 1 689 22 discriminator 3 view .LVU576
 1738 0054 44EA4324 		orr	r4, r4, r3, lsl #9
 1739              		.loc 1 690 22 discriminator 3 view .LVU577
 1740 0058 C4F30C04 		ubfx	r4, r4, #0, #13
 1741 005c C460     		str	r4, [r0, #12]
 691:poly.c        **** 
 692:poly.c        ****     r->coeffs[8*i+4]  = a[13*i+6] >> 4;
 1742              		.loc 1 692 5 is_stmt 1 discriminator 3 view .LVU578
 1743              		.loc 1 692 35 is_stmt 0 discriminator 3 view .LVU579
 1744 005e 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 1745 0060 1209     		lsrs	r2, r2, #4
 1746 0062 0261     		str	r2, [r0, #16]
 693:poly.c        ****     r->coeffs[8*i+4] |= (uint32_t)a[13*i+7] << 4;
 1747              		.loc 1 693 5 is_stmt 1 discriminator 3 view .LVU580
 1748              		.loc 1 693 25 is_stmt 0 discriminator 3 view .LVU581
 1749 0064 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 1750              		.loc 1 693 22 discriminator 3 view .LVU582
 1751 0066 42EA0312 		orr	r2, r2, r3, lsl #4
 1752 006a 0261     		str	r2, [r0, #16]
 694:poly.c        ****     r->coeffs[8*i+4] |= (uint32_t)a[13*i+8] << 12;
 1753              		.loc 1 694 5 is_stmt 1 discriminator 3 view .LVU583
 695:poly.c        ****     r->coeffs[8*i+4] &= 0x1FFF;
 1754              		.loc 1 695 5 discriminator 3 view .LVU584
 694:poly.c        ****     r->coeffs[8*i+4] |= (uint32_t)a[13*i+8] << 12;
 1755              		.loc 1 694 25 is_stmt 0 discriminator 3 view .LVU585
 1756 006c 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 694:poly.c        ****     r->coeffs[8*i+4] |= (uint32_t)a[13*i+8] << 12;
 1757              		.loc 1 694 22 discriminator 3 view .LVU586
 1758 006e 42EA0332 		orr	r2, r2, r3, lsl #12
 1759              		.loc 1 695 22 discriminator 3 view .LVU587
 1760 0072 C2F30C02 		ubfx	r2, r2, #0, #13
 1761 0076 0261     		str	r2, [r0, #16]
 696:poly.c        **** 
 697:poly.c        ****     r->coeffs[8*i+5]  = a[13*i+8] >> 1;
 1762              		.loc 1 697 5 is_stmt 1 discriminator 3 view .LVU588
 1763              		.loc 1 697 35 is_stmt 0 discriminator 3 view .LVU589
 1764 0078 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 1765 007a 5B08     		lsrs	r3, r3, #1
 1766 007c 4361     		str	r3, [r0, #20]
 698:poly.c        ****     r->coeffs[8*i+5] |= (uint32_t)a[13*i+9] << 7;
 1767              		.loc 1 698 5 is_stmt 1 discriminator 3 view .LVU590
 699:poly.c        ****     r->coeffs[8*i+5] &= 0x1FFF;
 1768              		.loc 1 699 5 discriminator 3 view .LVU591
 698:poly.c        ****     r->coeffs[8*i+5] |= (uint32_t)a[13*i+9] << 7;
 1769              		.loc 1 698 25 is_stmt 0 discriminator 3 view .LVU592
 1770 007e 91F809E0 		ldrb	lr, [r1, #9]	@ zero_extendqisi2
 698:poly.c        ****     r->coeffs[8*i+5] |= (uint32_t)a[13*i+9] << 7;
 1771              		.loc 1 698 22 discriminator 3 view .LVU593
 1772 0082 43EACE13 		orr	r3, r3, lr, lsl #7
 1773              		.loc 1 699 22 discriminator 3 view .LVU594
 1774 0086 C3F30C0E 		ubfx	lr, r3, #0, #13
 1775 008a C0F814E0 		str	lr, [r0, #20]
 700:poly.c        **** 
 701:poly.c        ****     r->coeffs[8*i+6]  = a[13*i+9] >> 6;
 1776              		.loc 1 701 5 is_stmt 1 discriminator 3 view .LVU595
 1777              		.loc 1 701 35 is_stmt 0 discriminator 3 view .LVU596
 1778 008e 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 1779 0090 9B09     		lsrs	r3, r3, #6
 1780 0092 8361     		str	r3, [r0, #24]
 702:poly.c        ****     r->coeffs[8*i+6] |= (uint32_t)a[13*i+10] << 2;
 1781              		.loc 1 702 5 is_stmt 1 discriminator 3 view .LVU597
 1782              		.loc 1 702 25 is_stmt 0 discriminator 3 view .LVU598
 1783 0094 91F80A80 		ldrb	r8, [r1, #10]	@ zero_extendqisi2
 1784              		.loc 1 702 22 discriminator 3 view .LVU599
 1785 0098 43EA8803 		orr	r3, r3, r8, lsl #2
 1786 009c 8361     		str	r3, [r0, #24]
 703:poly.c        ****     r->coeffs[8*i+6] |= (uint32_t)a[13*i+11] << 10;
 1787              		.loc 1 703 5 is_stmt 1 discriminator 3 view .LVU600
 704:poly.c        ****     r->coeffs[8*i+6] &= 0x1FFF;
 1788              		.loc 1 704 5 discriminator 3 view .LVU601
 703:poly.c        ****     r->coeffs[8*i+6] |= (uint32_t)a[13*i+11] << 10;
 1789              		.loc 1 703 25 is_stmt 0 discriminator 3 view .LVU602
 1790 009e 91F80B80 		ldrb	r8, [r1, #11]	@ zero_extendqisi2
 703:poly.c        ****     r->coeffs[8*i+6] |= (uint32_t)a[13*i+11] << 10;
 1791              		.loc 1 703 22 discriminator 3 view .LVU603
 1792 00a2 43EA8823 		orr	r3, r3, r8, lsl #10
 1793              		.loc 1 704 22 discriminator 3 view .LVU604
 1794 00a6 C3F30C03 		ubfx	r3, r3, #0, #13
 1795 00aa 8361     		str	r3, [r0, #24]
 705:poly.c        **** 
 706:poly.c        ****     r->coeffs[8*i+7]  = a[13*i+11] >> 3;
 1796              		.loc 1 706 5 is_stmt 1 discriminator 3 view .LVU605
 1797              		.loc 1 706 36 is_stmt 0 discriminator 3 view .LVU606
 1798 00ac 91F80B80 		ldrb	r8, [r1, #11]	@ zero_extendqisi2
 1799 00b0 4FEAD808 		lsr	r8, r8, #3
 1800 00b4 C0F81C80 		str	r8, [r0, #28]
 707:poly.c        ****     r->coeffs[8*i+7] |= (uint32_t)a[13*i+12] << 5;
 1801              		.loc 1 707 5 is_stmt 1 discriminator 3 view .LVU607
 1802              		.loc 1 707 25 is_stmt 0 discriminator 3 view .LVU608
 1803 00b8 91F80C90 		ldrb	r9, [r1, #12]	@ zero_extendqisi2
 708:poly.c        ****     r->coeffs[8*i+7] &= 0x1FFF;
 709:poly.c        **** 
 710:poly.c        ****     r->coeffs[8*i+0] = (1 << (D-1)) - r->coeffs[8*i+0];
 711:poly.c        ****     r->coeffs[8*i+1] = (1 << (D-1)) - r->coeffs[8*i+1];
 712:poly.c        ****     r->coeffs[8*i+2] = (1 << (D-1)) - r->coeffs[8*i+2];
 713:poly.c        ****     r->coeffs[8*i+3] = (1 << (D-1)) - r->coeffs[8*i+3];
 714:poly.c        ****     r->coeffs[8*i+4] = (1 << (D-1)) - r->coeffs[8*i+4];
 1804              		.loc 1 714 37 discriminator 3 view .LVU609
 1805 00bc C2F58052 		rsb	r2, r2, #4096
 715:poly.c        ****     r->coeffs[8*i+5] = (1 << (D-1)) - r->coeffs[8*i+5];
 716:poly.c        ****     r->coeffs[8*i+6] = (1 << (D-1)) - r->coeffs[8*i+6];
 1806              		.loc 1 716 37 discriminator 3 view .LVU610
 1807 00c0 C3F58053 		rsb	r3, r3, #4096
 707:poly.c        ****     r->coeffs[8*i+7] &= 0x1FFF;
 1808              		.loc 1 707 22 discriminator 3 view .LVU611
 1809 00c4 48EA4918 		orr	r8, r8, r9, lsl #5
 708:poly.c        ****     r->coeffs[8*i+7] &= 0x1FFF;
 1810              		.loc 1 708 5 is_stmt 1 discriminator 3 view .LVU612
 710:poly.c        ****     r->coeffs[8*i+1] = (1 << (D-1)) - r->coeffs[8*i+1];
 1811              		.loc 1 710 5 discriminator 3 view .LVU613
 714:poly.c        ****     r->coeffs[8*i+5] = (1 << (D-1)) - r->coeffs[8*i+5];
 1812              		.loc 1 714 22 is_stmt 0 discriminator 3 view .LVU614
 1813 00c8 0261     		str	r2, [r0, #16]
 1814              		.loc 1 716 22 discriminator 3 view .LVU615
 1815 00ca 8361     		str	r3, [r0, #24]
 710:poly.c        ****     r->coeffs[8*i+1] = (1 << (D-1)) - r->coeffs[8*i+1];
 1816              		.loc 1 710 37 discriminator 3 view .LVU616
 1817 00cc C7F58057 		rsb	r7, r7, #4096
 711:poly.c        ****     r->coeffs[8*i+2] = (1 << (D-1)) - r->coeffs[8*i+2];
 1818              		.loc 1 711 37 discriminator 3 view .LVU617
 1819 00d0 C5F58055 		rsb	r5, r5, #4096
 712:poly.c        ****     r->coeffs[8*i+3] = (1 << (D-1)) - r->coeffs[8*i+3];
 1820              		.loc 1 712 37 discriminator 3 view .LVU618
 1821 00d4 C6F58056 		rsb	r6, r6, #4096
 713:poly.c        ****     r->coeffs[8*i+4] = (1 << (D-1)) - r->coeffs[8*i+4];
 1822              		.loc 1 713 37 discriminator 3 view .LVU619
 1823 00d8 C4F58054 		rsb	r4, r4, #4096
 715:poly.c        ****     r->coeffs[8*i+6] = (1 << (D-1)) - r->coeffs[8*i+6];
 1824              		.loc 1 715 37 discriminator 3 view .LVU620
 1825 00dc CEF58052 		rsb	r2, lr, #4096
 717:poly.c        ****     r->coeffs[8*i+7] = (1 << (D-1)) - r->coeffs[8*i+7];
 1826              		.loc 1 717 37 discriminator 3 view .LVU621
 1827 00e0 C8F58053 		rsb	r3, r8, #4096
 710:poly.c        ****     r->coeffs[8*i+1] = (1 << (D-1)) - r->coeffs[8*i+1];
 1828              		.loc 1 710 22 discriminator 3 view .LVU622
 1829 00e4 0760     		str	r7, [r0]
 711:poly.c        ****     r->coeffs[8*i+2] = (1 << (D-1)) - r->coeffs[8*i+2];
 1830              		.loc 1 711 5 is_stmt 1 discriminator 3 view .LVU623
 711:poly.c        ****     r->coeffs[8*i+2] = (1 << (D-1)) - r->coeffs[8*i+2];
 1831              		.loc 1 711 22 is_stmt 0 discriminator 3 view .LVU624
 1832 00e6 4560     		str	r5, [r0, #4]
 712:poly.c        ****     r->coeffs[8*i+3] = (1 << (D-1)) - r->coeffs[8*i+3];
 1833              		.loc 1 712 5 is_stmt 1 discriminator 3 view .LVU625
 712:poly.c        ****     r->coeffs[8*i+3] = (1 << (D-1)) - r->coeffs[8*i+3];
 1834              		.loc 1 712 22 is_stmt 0 discriminator 3 view .LVU626
 1835 00e8 8660     		str	r6, [r0, #8]
 713:poly.c        ****     r->coeffs[8*i+4] = (1 << (D-1)) - r->coeffs[8*i+4];
 1836              		.loc 1 713 5 is_stmt 1 discriminator 3 view .LVU627
 713:poly.c        ****     r->coeffs[8*i+4] = (1 << (D-1)) - r->coeffs[8*i+4];
 1837              		.loc 1 713 22 is_stmt 0 discriminator 3 view .LVU628
 1838 00ea C460     		str	r4, [r0, #12]
 714:poly.c        ****     r->coeffs[8*i+5] = (1 << (D-1)) - r->coeffs[8*i+5];
 1839              		.loc 1 714 5 is_stmt 1 discriminator 3 view .LVU629
 715:poly.c        ****     r->coeffs[8*i+6] = (1 << (D-1)) - r->coeffs[8*i+6];
 1840              		.loc 1 715 5 discriminator 3 view .LVU630
 715:poly.c        ****     r->coeffs[8*i+6] = (1 << (D-1)) - r->coeffs[8*i+6];
 1841              		.loc 1 715 22 is_stmt 0 discriminator 3 view .LVU631
 1842 00ec 4261     		str	r2, [r0, #20]
 716:poly.c        ****     r->coeffs[8*i+7] = (1 << (D-1)) - r->coeffs[8*i+7];
 1843              		.loc 1 716 5 is_stmt 1 discriminator 3 view .LVU632
 1844              		.loc 1 717 5 discriminator 3 view .LVU633
 1845              		.loc 1 717 22 is_stmt 0 discriminator 3 view .LVU634
 1846 00ee C361     		str	r3, [r0, #28]
 673:poly.c        ****     r->coeffs[8*i+0]  = a[13*i+0];
 1847              		.loc 1 673 23 is_stmt 1 discriminator 3 view .LVU635
 673:poly.c        ****     r->coeffs[8*i+0]  = a[13*i+0];
 1848              		.loc 1 673 14 discriminator 3 view .LVU636
 673:poly.c        ****     r->coeffs[8*i+0]  = a[13*i+0];
 1849              		.loc 1 673 3 is_stmt 0 discriminator 3 view .LVU637
 1850 00f0 2030     		adds	r0, r0, #32
 1851 00f2 6045     		cmp	r0, ip
 1852 00f4 01F10D01 		add	r1, r1, #13
 1853 00f8 86D1     		bne	.L76
 718:poly.c        ****   }
 719:poly.c        **** 
 720:poly.c        ****   DBENCH_STOP(*tpack);
 721:poly.c        **** }
 1854              		.loc 1 721 1 view .LVU638
 1855 00fa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1856              		.cfi_endproc
 1857              	.LFE27:
 1859              		.section	.text.pqcrystals_dilithium_polyz_pack,"ax",%progbits
 1860              		.align	1
 1861              		.global	pqcrystals_dilithium_polyz_pack
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1865              		.fpu softvfp
 1867              	pqcrystals_dilithium_polyz_pack:
 1868              	.LVL135:
 1869              	.LFB28:
 722:poly.c        **** 
 723:poly.c        **** /*************************************************
 724:poly.c        **** * Name:        polyz_pack
 725:poly.c        **** *
 726:poly.c        **** * Description: Bit-pack polynomial with coefficients
 727:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1].
 728:poly.c        **** *
 729:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 730:poly.c        **** *                            POLYZ_PACKEDBYTES bytes
 731:poly.c        **** *              - const poly *a: pointer to input polynomial
 732:poly.c        **** **************************************************/
 733:poly.c        **** void polyz_pack(uint8_t *r, const poly *a) {
 1870              		.loc 1 733 44 is_stmt 1 view -0
 1871              		.cfi_startproc
 1872              		@ args = 0, pretend = 0, frame = 0
 1873              		@ frame_needed = 0, uses_anonymous_args = 0
 734:poly.c        ****   unsigned int i;
 1874              		.loc 1 734 3 view .LVU640
 735:poly.c        ****   uint32_t t[4];
 1875              		.loc 1 735 3 view .LVU641
 736:poly.c        ****   DBENCH_START();
 1876              		.loc 1 736 17 view .LVU642
 737:poly.c        **** 
 738:poly.c        **** #if GAMMA1 == (1 << 17)
 739:poly.c        ****   for(i = 0; i < N/4; ++i) {
 1877              		.loc 1 739 3 view .LVU643
 1878              		.loc 1 739 14 view .LVU644
 733:poly.c        ****   unsigned int i;
 1879              		.loc 1 733 44 is_stmt 0 view .LVU645
 1880 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1881              	.LCFI25:
 1882              		.cfi_def_cfa_offset 20
 1883              		.cfi_offset 4, -20
 1884              		.cfi_offset 5, -16
 1885              		.cfi_offset 6, -12
 1886              		.cfi_offset 7, -8
 1887              		.cfi_offset 14, -4
 1888 0002 00F51076 		add	r6, r0, #576
 1889              	.LVL136:
 1890              	.L79:
 740:poly.c        ****     t[0] = GAMMA1 - a->coeffs[4*i+0];
 1891              		.loc 1 740 5 is_stmt 1 discriminator 3 view .LVU646
 1892              		.loc 1 740 19 is_stmt 0 discriminator 3 view .LVU647
 1893 0006 0D68     		ldr	r5, [r1]
 741:poly.c        ****     t[1] = GAMMA1 - a->coeffs[4*i+1];
 1894              		.loc 1 741 19 discriminator 3 view .LVU648
 1895 0008 4C68     		ldr	r4, [r1, #4]
 742:poly.c        ****     t[2] = GAMMA1 - a->coeffs[4*i+2];
 1896              		.loc 1 742 19 discriminator 3 view .LVU649
 1897 000a 8A68     		ldr	r2, [r1, #8]
 743:poly.c        ****     t[3] = GAMMA1 - a->coeffs[4*i+3];
 1898              		.loc 1 743 19 discriminator 3 view .LVU650
 1899 000c CB68     		ldr	r3, [r1, #12]
 740:poly.c        ****     t[1] = GAMMA1 - a->coeffs[4*i+1];
 1900              		.loc 1 740 19 discriminator 3 view .LVU651
 1901 000e C5F50035 		rsb	r5, r5, #131072
 1902              	.LVL137:
 741:poly.c        ****     t[2] = GAMMA1 - a->coeffs[4*i+2];
 1903              		.loc 1 741 5 is_stmt 1 discriminator 3 view .LVU652
 741:poly.c        ****     t[2] = GAMMA1 - a->coeffs[4*i+2];
 1904              		.loc 1 741 19 is_stmt 0 discriminator 3 view .LVU653
 1905 0012 C4F50034 		rsb	r4, r4, #131072
 1906              	.LVL138:
 742:poly.c        ****     t[3] = GAMMA1 - a->coeffs[4*i+3];
 1907              		.loc 1 742 5 is_stmt 1 discriminator 3 view .LVU654
 744:poly.c        **** 
 745:poly.c        ****     r[9*i+0]  = t[0];
 746:poly.c        ****     r[9*i+1]  = t[0] >> 8;
 1908              		.loc 1 746 22 is_stmt 0 discriminator 3 view .LVU655
 1909 0016 2F0A     		lsrs	r7, r5, #8
 1910              		.loc 1 746 15 discriminator 3 view .LVU656
 1911 0018 4770     		strb	r7, [r0, #1]
 747:poly.c        ****     r[9*i+2]  = t[0] >> 16;
 748:poly.c        ****     r[9*i+2] |= t[1] << 2;
 1912              		.loc 1 748 22 discriminator 3 view .LVU657
 1913 001a A700     		lsls	r7, r4, #2
 745:poly.c        ****     r[9*i+1]  = t[0] >> 8;
 1914              		.loc 1 745 15 discriminator 3 view .LVU658
 1915 001c 0570     		strb	r5, [r0]
 1916              		.loc 1 748 14 discriminator 3 view .LVU659
 1917 001e 47EA1545 		orr	r5, r7, r5, lsr #16
 1918              	.LVL139:
 742:poly.c        ****     t[3] = GAMMA1 - a->coeffs[4*i+3];
 1919              		.loc 1 742 19 discriminator 3 view .LVU660
 1920 0022 C2F50032 		rsb	r2, r2, #131072
 1921              	.LVL140:
 743:poly.c        **** 
 1922              		.loc 1 743 5 is_stmt 1 discriminator 3 view .LVU661
 1923              		.loc 1 748 14 is_stmt 0 discriminator 3 view .LVU662
 1924 0026 8570     		strb	r5, [r0, #2]
 749:poly.c        ****     r[9*i+3]  = t[1] >> 6;
 1925              		.loc 1 749 22 discriminator 3 view .LVU663
 1926 0028 A509     		lsrs	r5, r4, #6
 1927              		.loc 1 749 15 discriminator 3 view .LVU664
 1928 002a C570     		strb	r5, [r0, #3]
 750:poly.c        ****     r[9*i+4]  = t[1] >> 14;
 751:poly.c        ****     r[9*i+4] |= t[2] << 4;
 1929              		.loc 1 751 22 discriminator 3 view .LVU665
 1930 002c 1501     		lsls	r5, r2, #4
 1931              		.loc 1 751 14 discriminator 3 view .LVU666
 1932 002e 45EA9434 		orr	r4, r5, r4, lsr #14
 1933              	.LVL141:
 743:poly.c        **** 
 1934              		.loc 1 743 19 discriminator 3 view .LVU667
 1935 0032 C3F50033 		rsb	r3, r3, #131072
 1936              	.LVL142:
 745:poly.c        ****     r[9*i+1]  = t[0] >> 8;
 1937              		.loc 1 745 5 is_stmt 1 discriminator 3 view .LVU668
 746:poly.c        ****     r[9*i+2]  = t[0] >> 16;
 1938              		.loc 1 746 5 discriminator 3 view .LVU669
 747:poly.c        ****     r[9*i+2] |= t[1] << 2;
 1939              		.loc 1 747 5 discriminator 3 view .LVU670
 748:poly.c        ****     r[9*i+3]  = t[1] >> 6;
 1940              		.loc 1 748 5 discriminator 3 view .LVU671
 749:poly.c        ****     r[9*i+4]  = t[1] >> 14;
 1941              		.loc 1 749 5 discriminator 3 view .LVU672
 750:poly.c        ****     r[9*i+4] |= t[2] << 4;
 1942              		.loc 1 750 5 discriminator 3 view .LVU673
 1943              		.loc 1 751 5 discriminator 3 view .LVU674
 1944              		.loc 1 751 14 is_stmt 0 discriminator 3 view .LVU675
 1945 0036 0471     		strb	r4, [r0, #4]
 752:poly.c        ****     r[9*i+5]  = t[2] >> 4;
 1946              		.loc 1 752 5 is_stmt 1 discriminator 3 view .LVU676
 1947              		.loc 1 752 22 is_stmt 0 discriminator 3 view .LVU677
 1948 0038 1409     		lsrs	r4, r2, #4
 1949              		.loc 1 752 15 discriminator 3 view .LVU678
 1950 003a 4471     		strb	r4, [r0, #5]
 753:poly.c        ****     r[9*i+6]  = t[2] >> 12;
 1951              		.loc 1 753 5 is_stmt 1 discriminator 3 view .LVU679
 754:poly.c        ****     r[9*i+6] |= t[3] << 6;
 1952              		.loc 1 754 5 discriminator 3 view .LVU680
 1953              		.loc 1 754 22 is_stmt 0 discriminator 3 view .LVU681
 1954 003c 9C01     		lsls	r4, r3, #6
 1955              		.loc 1 754 14 discriminator 3 view .LVU682
 1956 003e 44EA1232 		orr	r2, r4, r2, lsr #12
 1957              	.LVL143:
 1958              		.loc 1 754 14 discriminator 3 view .LVU683
 1959 0042 8271     		strb	r2, [r0, #6]
 755:poly.c        ****     r[9*i+7]  = t[3] >> 2;
 1960              		.loc 1 755 5 is_stmt 1 discriminator 3 view .LVU684
 1961              		.loc 1 755 22 is_stmt 0 discriminator 3 view .LVU685
 1962 0044 9A08     		lsrs	r2, r3, #2
 756:poly.c        ****     r[9*i+8]  = t[3] >> 10;
 1963              		.loc 1 756 22 discriminator 3 view .LVU686
 1964 0046 9B0A     		lsrs	r3, r3, #10
 1965              	.LVL144:
 755:poly.c        ****     r[9*i+7]  = t[3] >> 2;
 1966              		.loc 1 755 15 discriminator 3 view .LVU687
 1967 0048 C271     		strb	r2, [r0, #7]
 1968              		.loc 1 756 5 is_stmt 1 discriminator 3 view .LVU688
 1969              		.loc 1 756 15 is_stmt 0 discriminator 3 view .LVU689
 1970 004a 0372     		strb	r3, [r0, #8]
 739:poly.c        ****     t[0] = GAMMA1 - a->coeffs[4*i+0];
 1971              		.loc 1 739 23 is_stmt 1 discriminator 3 view .LVU690
 739:poly.c        ****     t[0] = GAMMA1 - a->coeffs[4*i+0];
 1972              		.loc 1 739 14 discriminator 3 view .LVU691
 739:poly.c        ****     t[0] = GAMMA1 - a->coeffs[4*i+0];
 1973              		.loc 1 739 3 is_stmt 0 discriminator 3 view .LVU692
 1974 004c 0930     		adds	r0, r0, #9
 1975 004e 8642     		cmp	r6, r0
 1976 0050 01F11001 		add	r1, r1, #16
 1977 0054 D7D1     		bne	.L79
 757:poly.c        ****   }
 758:poly.c        **** #elif GAMMA1 == (1 << 19)
 759:poly.c        ****   for(i = 0; i < N/2; ++i) {
 760:poly.c        ****     t[0] = GAMMA1 - a->coeffs[2*i+0];
 761:poly.c        ****     t[1] = GAMMA1 - a->coeffs[2*i+1];
 762:poly.c        **** 
 763:poly.c        ****     r[5*i+0]  = t[0];
 764:poly.c        ****     r[5*i+1]  = t[0] >> 8;
 765:poly.c        ****     r[5*i+2]  = t[0] >> 16;
 766:poly.c        ****     r[5*i+2] |= t[1] << 4;
 767:poly.c        ****     r[5*i+3]  = t[1] >> 4;
 768:poly.c        ****     r[5*i+4]  = t[1] >> 12;
 769:poly.c        ****   }
 770:poly.c        **** #endif
 771:poly.c        **** 
 772:poly.c        ****   DBENCH_STOP(*tpack);
 773:poly.c        **** }
 1978              		.loc 1 773 1 view .LVU693
 1979 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 1980              		.loc 1 773 1 view .LVU694
 1981              		.cfi_endproc
 1982              	.LFE28:
 1984              		.section	.text.pqcrystals_dilithium_polyz_unpack,"ax",%progbits
 1985              		.align	1
 1986              		.global	pqcrystals_dilithium_polyz_unpack
 1987              		.syntax unified
 1988              		.thumb
 1989              		.thumb_func
 1990              		.fpu softvfp
 1992              	pqcrystals_dilithium_polyz_unpack:
 1993              	.LVL145:
 1994              	.LFB29:
 774:poly.c        **** 
 775:poly.c        **** /*************************************************
 776:poly.c        **** * Name:        polyz_unpack
 777:poly.c        **** *
 778:poly.c        **** * Description: Unpack polynomial z with coefficients
 779:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1].
 780:poly.c        **** *
 781:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 782:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 783:poly.c        **** **************************************************/
 784:poly.c        **** void polyz_unpack(poly *r, const uint8_t *a) {
 1995              		.loc 1 784 46 is_stmt 1 view -0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 785:poly.c        ****   unsigned int i;
 1999              		.loc 1 785 3 view .LVU696
 786:poly.c        ****   DBENCH_START();
 2000              		.loc 1 786 17 view .LVU697
 787:poly.c        **** 
 788:poly.c        **** #if GAMMA1 == (1 << 17)
 789:poly.c        ****   for(i = 0; i < N/4; ++i) {
 2001              		.loc 1 789 3 view .LVU698
 2002              		.loc 1 789 14 view .LVU699
 784:poly.c        ****   unsigned int i;
 2003              		.loc 1 784 46 is_stmt 0 view .LVU700
 2004 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2005              	.LCFI26:
 2006              		.cfi_def_cfa_offset 20
 2007              		.cfi_offset 4, -20
 2008              		.cfi_offset 5, -16
 2009              		.cfi_offset 6, -12
 2010              		.cfi_offset 7, -8
 2011              		.cfi_offset 14, -4
 2012 0002 00F58066 		add	r6, r0, #1024
 2013              	.LVL146:
 2014              	.L82:
 790:poly.c        ****     r->coeffs[4*i+0]  = a[9*i+0];
 2015              		.loc 1 790 5 is_stmt 1 discriminator 3 view .LVU701
 2016              		.loc 1 790 26 is_stmt 0 discriminator 3 view .LVU702
 2017 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 2018 0008 0460     		str	r4, [r0]
 791:poly.c        ****     r->coeffs[4*i+0] |= (uint32_t)a[9*i+1] << 8;
 2019              		.loc 1 791 5 is_stmt 1 discriminator 3 view .LVU703
 2020              		.loc 1 791 25 is_stmt 0 discriminator 3 view .LVU704
 2021 000a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 2022              		.loc 1 791 22 discriminator 3 view .LVU705
 2023 000c 44EA0324 		orr	r4, r4, r3, lsl #8
 2024 0010 0460     		str	r4, [r0]
 792:poly.c        ****     r->coeffs[4*i+0] |= (uint32_t)a[9*i+2] << 16;
 2025              		.loc 1 792 5 is_stmt 1 discriminator 3 view .LVU706
 793:poly.c        ****     r->coeffs[4*i+0] &= 0x3FFFF;
 2026              		.loc 1 793 5 discriminator 3 view .LVU707
 792:poly.c        ****     r->coeffs[4*i+0] |= (uint32_t)a[9*i+2] << 16;
 2027              		.loc 1 792 25 is_stmt 0 discriminator 3 view .LVU708
 2028 0012 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 792:poly.c        ****     r->coeffs[4*i+0] |= (uint32_t)a[9*i+2] << 16;
 2029              		.loc 1 792 22 discriminator 3 view .LVU709
 2030 0014 44EA0344 		orr	r4, r4, r3, lsl #16
 2031              		.loc 1 793 22 discriminator 3 view .LVU710
 2032 0018 C4F31104 		ubfx	r4, r4, #0, #18
 2033 001c 0460     		str	r4, [r0]
 794:poly.c        ****     r->coeffs[4*i+1]  = a[9*i+2] >> 2;
 2034              		.loc 1 794 5 is_stmt 1 discriminator 3 view .LVU711
 2035              		.loc 1 794 34 is_stmt 0 discriminator 3 view .LVU712
 2036 001e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2037 0020 9208     		lsrs	r2, r2, #2
 2038 0022 4260     		str	r2, [r0, #4]
 795:poly.c        ****     r->coeffs[4*i+1] |= (uint32_t)a[9*i+3] << 6;
 2039              		.loc 1 795 5 is_stmt 1 discriminator 3 view .LVU713
 2040              		.loc 1 795 25 is_stmt 0 discriminator 3 view .LVU714
 2041 0024 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2042              		.loc 1 795 22 discriminator 3 view .LVU715
 2043 0026 42EA8312 		orr	r2, r2, r3, lsl #6
 2044 002a 4260     		str	r2, [r0, #4]
 796:poly.c        ****     r->coeffs[4*i+1] |= (uint32_t)a[9*i+4] << 14;
 2045              		.loc 1 796 5 is_stmt 1 discriminator 3 view .LVU716
 797:poly.c        ****     r->coeffs[4*i+1] &= 0x3FFFF;
 2046              		.loc 1 797 5 discriminator 3 view .LVU717
 796:poly.c        ****     r->coeffs[4*i+1] |= (uint32_t)a[9*i+4] << 14;
 2047              		.loc 1 796 25 is_stmt 0 discriminator 3 view .LVU718
 2048 002c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 796:poly.c        ****     r->coeffs[4*i+1] |= (uint32_t)a[9*i+4] << 14;
 2049              		.loc 1 796 22 discriminator 3 view .LVU719
 2050 002e 42EA8332 		orr	r2, r2, r3, lsl #14
 2051              		.loc 1 797 22 discriminator 3 view .LVU720
 2052 0032 C2F31102 		ubfx	r2, r2, #0, #18
 2053 0036 4260     		str	r2, [r0, #4]
 798:poly.c        ****     r->coeffs[4*i+2]  = a[9*i+4] >> 4;
 2054              		.loc 1 798 5 is_stmt 1 discriminator 3 view .LVU721
 2055              		.loc 1 798 34 is_stmt 0 discriminator 3 view .LVU722
 2056 0038 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2057 003a 1B09     		lsrs	r3, r3, #4
 2058 003c 8360     		str	r3, [r0, #8]
 799:poly.c        ****     r->coeffs[4*i+2] |= (uint32_t)a[9*i+5] << 4;
 2059              		.loc 1 799 5 is_stmt 1 discriminator 3 view .LVU723
 2060              		.loc 1 799 25 is_stmt 0 discriminator 3 view .LVU724
 2061 003e 4D79     		ldrb	r5, [r1, #5]	@ zero_extendqisi2
 2062              		.loc 1 799 22 discriminator 3 view .LVU725
 2063 0040 43EA0513 		orr	r3, r3, r5, lsl #4
 2064 0044 8360     		str	r3, [r0, #8]
 800:poly.c        ****     r->coeffs[4*i+2] |= (uint32_t)a[9*i+6] << 12;
 2065              		.loc 1 800 5 is_stmt 1 discriminator 3 view .LVU726
 801:poly.c        ****     r->coeffs[4*i+2] &= 0x3FFFF;
 2066              		.loc 1 801 5 discriminator 3 view .LVU727
 800:poly.c        ****     r->coeffs[4*i+2] |= (uint32_t)a[9*i+6] << 12;
 2067              		.loc 1 800 25 is_stmt 0 discriminator 3 view .LVU728
 2068 0046 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
 800:poly.c        ****     r->coeffs[4*i+2] |= (uint32_t)a[9*i+6] << 12;
 2069              		.loc 1 800 22 discriminator 3 view .LVU729
 2070 0048 43EA0533 		orr	r3, r3, r5, lsl #12
 2071              		.loc 1 801 22 discriminator 3 view .LVU730
 2072 004c C3F31103 		ubfx	r3, r3, #0, #18
 2073 0050 8360     		str	r3, [r0, #8]
 802:poly.c        ****     r->coeffs[4*i+3]  = a[9*i+6] >> 6;
 2074              		.loc 1 802 5 is_stmt 1 discriminator 3 view .LVU731
 2075              		.loc 1 802 34 is_stmt 0 discriminator 3 view .LVU732
 2076 0052 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
 2077 0054 AD09     		lsrs	r5, r5, #6
 2078 0056 C560     		str	r5, [r0, #12]
 803:poly.c        ****     r->coeffs[4*i+3] |= (uint32_t)a[9*i+7] << 2;
 2079              		.loc 1 803 5 is_stmt 1 discriminator 3 view .LVU733
 2080              		.loc 1 803 25 is_stmt 0 discriminator 3 view .LVU734
 2081 0058 CF79     		ldrb	r7, [r1, #7]	@ zero_extendqisi2
 2082              		.loc 1 803 22 discriminator 3 view .LVU735
 2083 005a 45EA8705 		orr	r5, r5, r7, lsl #2
 2084 005e C560     		str	r5, [r0, #12]
 804:poly.c        ****     r->coeffs[4*i+3] |= (uint32_t)a[9*i+8] << 10;
 2085              		.loc 1 804 5 is_stmt 1 discriminator 3 view .LVU736
 2086              		.loc 1 804 25 is_stmt 0 discriminator 3 view .LVU737
 2087 0060 0F7A     		ldrb	r7, [r1, #8]	@ zero_extendqisi2
 2088              		.loc 1 804 22 discriminator 3 view .LVU738
 2089 0062 45EA8725 		orr	r5, r5, r7, lsl #10
 805:poly.c        ****     r->coeffs[4*i+3] &= 0x3FFFF;
 2090              		.loc 1 805 5 is_stmt 1 discriminator 3 view .LVU739
 806:poly.c        ****     r->coeffs[4*i+0] = GAMMA1 - r->coeffs[4*i+0];
 2091              		.loc 1 806 5 discriminator 3 view .LVU740
 2092              		.loc 1 806 31 is_stmt 0 discriminator 3 view .LVU741
 2093 0066 C4F50034 		rsb	r4, r4, #131072
 807:poly.c        ****     r->coeffs[4*i+1] = GAMMA1 - r->coeffs[4*i+1];
 2094              		.loc 1 807 31 discriminator 3 view .LVU742
 2095 006a C2F50032 		rsb	r2, r2, #131072
 808:poly.c        ****     r->coeffs[4*i+2] = GAMMA1 - r->coeffs[4*i+2];
 2096              		.loc 1 808 31 discriminator 3 view .LVU743
 2097 006e C3F50033 		rsb	r3, r3, #131072
 809:poly.c        ****     r->coeffs[4*i+3] = GAMMA1 - r->coeffs[4*i+3];
 2098              		.loc 1 809 31 discriminator 3 view .LVU744
 2099 0072 C5F50035 		rsb	r5, r5, #131072
 806:poly.c        ****     r->coeffs[4*i+1] = GAMMA1 - r->coeffs[4*i+1];
 2100              		.loc 1 806 22 discriminator 3 view .LVU745
 2101 0076 0460     		str	r4, [r0]
 807:poly.c        ****     r->coeffs[4*i+2] = GAMMA1 - r->coeffs[4*i+2];
 2102              		.loc 1 807 5 is_stmt 1 discriminator 3 view .LVU746
 807:poly.c        ****     r->coeffs[4*i+2] = GAMMA1 - r->coeffs[4*i+2];
 2103              		.loc 1 807 22 is_stmt 0 discriminator 3 view .LVU747
 2104 0078 4260     		str	r2, [r0, #4]
 808:poly.c        ****     r->coeffs[4*i+3] = GAMMA1 - r->coeffs[4*i+3];
 2105              		.loc 1 808 5 is_stmt 1 discriminator 3 view .LVU748
 808:poly.c        ****     r->coeffs[4*i+3] = GAMMA1 - r->coeffs[4*i+3];
 2106              		.loc 1 808 22 is_stmt 0 discriminator 3 view .LVU749
 2107 007a 8360     		str	r3, [r0, #8]
 2108              		.loc 1 809 5 is_stmt 1 discriminator 3 view .LVU750
 2109              		.loc 1 809 22 is_stmt 0 discriminator 3 view .LVU751
 2110 007c C560     		str	r5, [r0, #12]
 789:poly.c        ****     r->coeffs[4*i+0]  = a[9*i+0];
 2111              		.loc 1 789 23 is_stmt 1 discriminator 3 view .LVU752
 789:poly.c        ****     r->coeffs[4*i+0]  = a[9*i+0];
 2112              		.loc 1 789 14 discriminator 3 view .LVU753
 789:poly.c        ****     r->coeffs[4*i+0]  = a[9*i+0];
 2113              		.loc 1 789 3 is_stmt 0 discriminator 3 view .LVU754
 2114 007e 1030     		adds	r0, r0, #16
 2115 0080 B042     		cmp	r0, r6
 2116 0082 01F10901 		add	r1, r1, #9
 2117 0086 BED1     		bne	.L82
 810:poly.c        ****   }
 811:poly.c        **** #elif GAMMA1 == (1 << 19)
 812:poly.c        ****   for(i = 0; i < N/2; ++i) {
 813:poly.c        ****     r->coeffs[2*i+0]  = a[5*i+0];
 814:poly.c        ****     r->coeffs[2*i+0] |= (uint32_t)a[5*i+1] << 8;
 815:poly.c        ****     r->coeffs[2*i+0] |= (uint32_t)a[5*i+2] << 16;
 816:poly.c        ****     r->coeffs[2*i+0] &= 0xFFFFF;
 817:poly.c        ****     r->coeffs[2*i+1]  = a[5*i+2] >> 4;
 818:poly.c        ****     r->coeffs[2*i+1] |= (uint32_t)a[5*i+3] << 4;
 819:poly.c        ****     r->coeffs[2*i+1] |= (uint32_t)a[5*i+4] << 12;
 820:poly.c        ****     r->coeffs[2*i+0] &= 0xFFFFF;
 821:poly.c        ****     r->coeffs[2*i+0] = GAMMA1 - r->coeffs[2*i+0];
 822:poly.c        ****     r->coeffs[2*i+1] = GAMMA1 - r->coeffs[2*i+1];
 823:poly.c        ****   }
 824:poly.c        **** #endif
 825:poly.c        ****   DBENCH_STOP(*tpack);
 826:poly.c        **** }
 2118              		.loc 1 826 1 view .LVU755
 2119 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 2120              		.loc 1 826 1 view .LVU756
 2121              		.cfi_endproc
 2122              	.LFE29:
 2124              		.section	.text.pqcrystals_dilithium_poly_uniform_gamma1,"ax",%progbits
 2125              		.align	1
 2126              		.global	pqcrystals_dilithium_poly_uniform_gamma1
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2130              		.fpu softvfp
 2132              	pqcrystals_dilithium_poly_uniform_gamma1:
 2133              	.LVL147:
 2134              	.LFB20:
 457:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2135              		.loc 1 457 1 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 888
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
 458:poly.c        ****   stream256_state state;
 2139              		.loc 1 458 3 view .LVU758
 459:poly.c        **** 
 2140              		.loc 1 459 3 view .LVU759
 461:poly.c        ****   stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2141              		.loc 1 461 3 view .LVU760
 457:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2142              		.loc 1 457 1 is_stmt 0 view .LVU761
 2143 0000 10B5     		push	{r4, lr}
 2144              	.LCFI27:
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 4, -8
 2147              		.cfi_offset 14, -4
 2148 0002 ADF55E7D 		sub	sp, sp, #888
 2149              	.LCFI28:
 2150              		.cfi_def_cfa_offset 896
 457:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2151              		.loc 1 457 1 view .LVU762
 2152 0006 0446     		mov	r4, r0
 461:poly.c        ****   stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2153              		.loc 1 461 3 view .LVU763
 2154 0008 6846     		mov	r0, sp
 2155              	.LVL148:
 461:poly.c        ****   stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2156              		.loc 1 461 3 view .LVU764
 2157 000a FFF7FEFF 		bl	pqcrystals_dilithium_dilithium_shake256_stream_init
 2158              	.LVL149:
 462:poly.c        ****   polyz_unpack(a, buf);
 2159              		.loc 1 462 3 is_stmt 1 view .LVU765
 2160 000e 6A46     		mov	r2, sp
 2161 0010 34A8     		add	r0, sp, #208
 2162 0012 4FF42A71 		mov	r1, #680
 2163 0016 FFF7FEFF 		bl	shake256_inc_squeeze
 2164              	.LVL150:
 463:poly.c        **** }
 2165              		.loc 1 463 3 view .LVU766
 2166 001a 34A9     		add	r1, sp, #208
 2167 001c 2046     		mov	r0, r4
 2168 001e FFF7FEFF 		bl	pqcrystals_dilithium_polyz_unpack
 2169              	.LVL151:
 464:poly.c        **** 
 2170              		.loc 1 464 1 is_stmt 0 view .LVU767
 2171 0022 0DF55E7D 		add	sp, sp, #888
 2172              	.LCFI29:
 2173              		.cfi_def_cfa_offset 8
 2174              		@ sp needed
 2175 0026 10BD     		pop	{r4, pc}
 464:poly.c        **** 
 2176              		.loc 1 464 1 view .LVU768
 2177              		.cfi_endproc
 2178              	.LFE20:
 2180              		.section	.text.poly_uniform_gamma11,"ax",%progbits
 2181              		.align	1
 2182              		.global	poly_uniform_gamma11
 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2186              		.fpu softvfp
 2188              	poly_uniform_gamma11:
 2189              	.LVL152:
 2190              	.LFB21:
 470:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2191              		.loc 1 470 1 is_stmt 1 view -0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 888
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 471:poly.c        ****   stream256_state state;
 2195              		.loc 1 471 3 view .LVU770
 472:poly.c        **** 
 2196              		.loc 1 472 3 view .LVU771
 474:poly.c        ****   stream256_squeezeblocks1(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2197              		.loc 1 474 3 view .LVU772
 470:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2198              		.loc 1 470 1 is_stmt 0 view .LVU773
 2199 0000 10B5     		push	{r4, lr}
 2200              	.LCFI30:
 2201              		.cfi_def_cfa_offset 8
 2202              		.cfi_offset 4, -8
 2203              		.cfi_offset 14, -4
 2204 0002 ADF55E7D 		sub	sp, sp, #888
 2205              	.LCFI31:
 2206              		.cfi_def_cfa_offset 896
 470:poly.c        ****   uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS*STREAM256_BLOCKBYTES];
 2207              		.loc 1 470 1 view .LVU774
 2208 0006 0446     		mov	r4, r0
 474:poly.c        ****   stream256_squeezeblocks1(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2209              		.loc 1 474 3 view .LVU775
 2210 0008 6846     		mov	r0, sp
 2211              	.LVL153:
 474:poly.c        ****   stream256_squeezeblocks1(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2212              		.loc 1 474 3 view .LVU776
 2213 000a FFF7FEFF 		bl	pqcrystals_dilithium_dilithium_shake256_stream_init
 2214              	.LVL154:
 475:poly.c        ****   polyz_unpack(a, buf);
 2215              		.loc 1 475 3 is_stmt 1 view .LVU777
 2216 000e 6A46     		mov	r2, sp
 2217 0010 34A8     		add	r0, sp, #208
 2218 0012 4FF42A71 		mov	r1, #680
 2219 0016 FFF7FEFF 		bl	shake256_inc_squeeze1
 2220              	.LVL155:
 476:poly.c        **** }
 2221              		.loc 1 476 3 view .LVU778
 2222 001a 34A9     		add	r1, sp, #208
 2223 001c 2046     		mov	r0, r4
 2224 001e FFF7FEFF 		bl	pqcrystals_dilithium_polyz_unpack
 2225              	.LVL156:
 477:poly.c        **** 
 2226              		.loc 1 477 1 is_stmt 0 view .LVU779
 2227 0022 0DF55E7D 		add	sp, sp, #888
 2228              	.LCFI32:
 2229              		.cfi_def_cfa_offset 8
 2230              		@ sp needed
 2231 0026 10BD     		pop	{r4, pc}
 477:poly.c        **** 
 2232              		.loc 1 477 1 view .LVU780
 2233              		.cfi_endproc
 2234              	.LFE21:
 2236              		.section	.text.pqcrystals_dilithium_polyw1_pack,"ax",%progbits
 2237              		.align	1
 2238              		.global	pqcrystals_dilithium_polyw1_pack
 2239              		.syntax unified
 2240              		.thumb
 2241              		.thumb_func
 2242              		.fpu softvfp
 2244              	pqcrystals_dilithium_polyw1_pack:
 2245              	.LVL157:
 2246              	.LFB30:
 827:poly.c        **** 
 828:poly.c        **** /*************************************************
 829:poly.c        **** * Name:        polyw1_pack
 830:poly.c        **** *
 831:poly.c        **** * Description: Bit-pack polynomial w1 with coefficients in [0,15] or [0,43].
 832:poly.c        **** *              Input coefficients are assumed to be standard representatives.
 833:poly.c        **** *
 834:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 835:poly.c        **** *                            POLYW1_PACKEDBYTES bytes
 836:poly.c        **** *              - const poly *a: pointer to input polynomial
 837:poly.c        **** **************************************************/
 838:poly.c        **** void polyw1_pack(uint8_t *r, const poly *a) {
 2247              		.loc 1 838 45 is_stmt 1 view -0
 2248              		.cfi_startproc
 2249              		@ args = 0, pretend = 0, frame = 0
 2250              		@ frame_needed = 0, uses_anonymous_args = 0
 839:poly.c        ****   unsigned int i;
 2251              		.loc 1 839 3 view .LVU782
 840:poly.c        ****   DBENCH_START();
 2252              		.loc 1 840 17 view .LVU783
 841:poly.c        **** 
 842:poly.c        **** #if GAMMA2 == (Q-1)/88
 843:poly.c        ****   for(i = 0; i < N/4; ++i) {
 2253              		.loc 1 843 3 view .LVU784
 2254              		.loc 1 843 14 view .LVU785
 838:poly.c        ****   unsigned int i;
 2255              		.loc 1 838 45 is_stmt 0 view .LVU786
 2256 0000 10B5     		push	{r4, lr}
 2257              	.LCFI33:
 2258              		.cfi_def_cfa_offset 8
 2259              		.cfi_offset 4, -8
 2260              		.cfi_offset 14, -4
 2261 0002 00F1C002 		add	r2, r0, #192
 2262              	.LVL158:
 2263              	.L87:
 844:poly.c        ****     r[3*i+0]  = a->coeffs[4*i+0];
 2264              		.loc 1 844 5 is_stmt 1 discriminator 3 view .LVU787
 2265              		.loc 1 844 26 is_stmt 0 discriminator 3 view .LVU788
 2266 0006 0B68     		ldr	r3, [r1]
 2267              		.loc 1 844 15 discriminator 3 view .LVU789
 2268 0008 0370     		strb	r3, [r0]
 845:poly.c        ****     r[3*i+0] |= a->coeffs[4*i+1] << 6;
 2269              		.loc 1 845 5 is_stmt 1 discriminator 3 view .LVU790
 2270              		.loc 1 845 34 is_stmt 0 discriminator 3 view .LVU791
 2271 000a 4C68     		ldr	r4, [r1, #4]
 2272              		.loc 1 845 14 discriminator 3 view .LVU792
 2273 000c 43EA8413 		orr	r3, r3, r4, lsl #6
 2274 0010 0370     		strb	r3, [r0]
 846:poly.c        ****     r[3*i+1]  = a->coeffs[4*i+1] >> 2;
 2275              		.loc 1 846 5 is_stmt 1 discriminator 3 view .LVU793
 2276              		.loc 1 846 34 is_stmt 0 discriminator 3 view .LVU794
 2277 0012 4B68     		ldr	r3, [r1, #4]
 2278 0014 9B10     		asrs	r3, r3, #2
 2279              		.loc 1 846 15 discriminator 3 view .LVU795
 2280 0016 4370     		strb	r3, [r0, #1]
 847:poly.c        ****     r[3*i+1] |= a->coeffs[4*i+2] << 4;
 2281              		.loc 1 847 5 is_stmt 1 discriminator 3 view .LVU796
 2282              		.loc 1 847 34 is_stmt 0 discriminator 3 view .LVU797
 2283 0018 8C68     		ldr	r4, [r1, #8]
 2284              		.loc 1 847 14 discriminator 3 view .LVU798
 2285 001a 43EA0413 		orr	r3, r3, r4, lsl #4
 2286 001e 4370     		strb	r3, [r0, #1]
 848:poly.c        ****     r[3*i+2]  = a->coeffs[4*i+2] >> 4;
 2287              		.loc 1 848 5 is_stmt 1 discriminator 3 view .LVU799
 2288              		.loc 1 848 34 is_stmt 0 discriminator 3 view .LVU800
 2289 0020 8B68     		ldr	r3, [r1, #8]
 2290 0022 1B11     		asrs	r3, r3, #4
 2291              		.loc 1 848 15 discriminator 3 view .LVU801
 2292 0024 8370     		strb	r3, [r0, #2]
 849:poly.c        ****     r[3*i+2] |= a->coeffs[4*i+3] << 2;
 2293              		.loc 1 849 5 is_stmt 1 discriminator 3 view .LVU802
 2294              		.loc 1 849 34 is_stmt 0 discriminator 3 view .LVU803
 2295 0026 CC68     		ldr	r4, [r1, #12]
 2296              		.loc 1 849 14 discriminator 3 view .LVU804
 2297 0028 43EA8403 		orr	r3, r3, r4, lsl #2
 2298 002c 8370     		strb	r3, [r0, #2]
 843:poly.c        ****     r[3*i+0]  = a->coeffs[4*i+0];
 2299              		.loc 1 843 23 is_stmt 1 discriminator 3 view .LVU805
 843:poly.c        ****     r[3*i+0]  = a->coeffs[4*i+0];
 2300              		.loc 1 843 14 discriminator 3 view .LVU806
 843:poly.c        ****     r[3*i+0]  = a->coeffs[4*i+0];
 2301              		.loc 1 843 3 is_stmt 0 discriminator 3 view .LVU807
 2302 002e 0330     		adds	r0, r0, #3
 2303 0030 9042     		cmp	r0, r2
 2304 0032 01F11001 		add	r1, r1, #16
 2305 0036 E6D1     		bne	.L87
 850:poly.c        ****   }
 851:poly.c        **** #elif GAMMA2 == (Q-1)/32
 852:poly.c        ****   for(i = 0; i < N/2; ++i)
 853:poly.c        ****     r[i] = a->coeffs[2*i+0] | (a->coeffs[2*i+1] << 4);
 854:poly.c        **** #endif
 855:poly.c        **** 
 856:poly.c        ****   DBENCH_STOP(*tpack);
 857:poly.c        **** }
 2306              		.loc 1 857 1 view .LVU808
 2307 0038 10BD     		pop	{r4, pc}
 2308              		.cfi_endproc
 2309              	.LFE30:
 2311              		.text
 2312              	.Letext0:
 2313              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 2314              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 2315              		.file 4 "poly.h"
 2316              		.file 5 "fips202.h"
 2317              		.file 6 "symmetric.h"
 2318              		.file 7 "vector1.h"
 2319              		.file 8 "rounding.h"
 2320              		.file 9 "pointwise_mont1.h"
 2321              		.file 10 "ntt1.h"
 2322              		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 poly.c
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:16     .text.rej_eta.constprop.0:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:23     .text.rej_eta.constprop.0:00000000 rej_eta.constprop.0
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:153    .text.pqcrystals_dilithium_poly_reduce:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:160    .text.pqcrystals_dilithium_poly_reduce:00000000 pqcrystals_dilithium_poly_reduce
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:176    .text.pqcrystals_dilithium_poly_caddq:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:183    .text.pqcrystals_dilithium_poly_caddq:00000000 pqcrystals_dilithium_poly_caddq
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:199    .text.pqcrystals_dilithium_poly_add:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:206    .text.pqcrystals_dilithium_poly_add:00000000 pqcrystals_dilithium_poly_add
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:248    .text.pqcrystals_dilithium_poly_sub:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:255    .text.pqcrystals_dilithium_poly_sub:00000000 pqcrystals_dilithium_poly_sub
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:297    .text.pqcrystals_dilithium_poly_shiftl:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:304    .text.pqcrystals_dilithium_poly_shiftl:00000000 pqcrystals_dilithium_poly_shiftl
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:338    .text.pqcrystals_dilithium_poly_ntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:345    .text.pqcrystals_dilithium_poly_ntt:00000000 pqcrystals_dilithium_poly_ntt
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:362    .text.pqcrystals_dilithium_poly_invntt_tomont:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:369    .text.pqcrystals_dilithium_poly_invntt_tomont:00000000 pqcrystals_dilithium_poly_invntt_tomont
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:386    .text.pqcrystals_dilithium_poly_pointwise_montgomery:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:393    .text.pqcrystals_dilithium_poly_pointwise_montgomery:00000000 pqcrystals_dilithium_poly_pointwise_montgomery
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:410    .text.pqcrystals_dilithium_poly_pointwise_acc_montgomery:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:417    .text.pqcrystals_dilithium_poly_pointwise_acc_montgomery:00000000 pqcrystals_dilithium_poly_pointwise_acc_montgomery
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:434    .text.pqcrystals_dilithium_poly_power2round:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:441    .text.pqcrystals_dilithium_poly_power2round:00000000 pqcrystals_dilithium_poly_power2round
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:490    .text.pqcrystals_dilithium_poly_decompose:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:497    .text.pqcrystals_dilithium_poly_decompose:00000000 pqcrystals_dilithium_poly_decompose
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:546    .text.pqcrystals_dilithium_poly_make_hint:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:553    .text.pqcrystals_dilithium_poly_make_hint:00000000 pqcrystals_dilithium_poly_make_hint
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:615    .text.pqcrystals_dilithium_poly_use_hint:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:622    .text.pqcrystals_dilithium_poly_use_hint:00000000 pqcrystals_dilithium_poly_use_hint
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:673    .text.pqcrystals_dilithium_poly_chknorm:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:680    .text.pqcrystals_dilithium_poly_chknorm:00000000 pqcrystals_dilithium_poly_chknorm
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:742    .text.pqcrystals_dilithium_poly_chknorm:0000002c $d
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:747    .text.pqcrystals_dilithium_poly_uniform:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:754    .text.pqcrystals_dilithium_poly_uniform:00000000 pqcrystals_dilithium_poly_uniform
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:890    .text.pqcrystals_dilithium_poly_uniform_eta:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:897    .text.pqcrystals_dilithium_poly_uniform_eta:00000000 pqcrystals_dilithium_poly_uniform_eta
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:980    .text.pqcrystals_dilithium_poly_challenge:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:987    .text.pqcrystals_dilithium_poly_challenge:00000000 pqcrystals_dilithium_poly_challenge
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1163   .text.pqcrystals_dilithium_polyeta_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1170   .text.pqcrystals_dilithium_polyeta_pack:00000000 pqcrystals_dilithium_polyeta_pack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1295   .text.pqcrystals_dilithium_polyt1_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1302   .text.pqcrystals_dilithium_polyt1_pack:00000000 pqcrystals_dilithium_polyt1_pack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1372   .text.pqcrystals_dilithium_polyt1_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1379   .text.pqcrystals_dilithium_polyt1_unpack:00000000 pqcrystals_dilithium_polyt1_unpack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1462   .text.pqcrystals_dilithium_polyt0_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1469   .text.pqcrystals_dilithium_polyt0_pack:00000000 pqcrystals_dilithium_polyt0_pack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1643   .text.pqcrystals_dilithium_polyt0_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1650   .text.pqcrystals_dilithium_polyt0_unpack:00000000 pqcrystals_dilithium_polyt0_unpack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1860   .text.pqcrystals_dilithium_polyz_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1867   .text.pqcrystals_dilithium_polyz_pack:00000000 pqcrystals_dilithium_polyz_pack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1985   .text.pqcrystals_dilithium_polyz_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:1992   .text.pqcrystals_dilithium_polyz_unpack:00000000 pqcrystals_dilithium_polyz_unpack
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2125   .text.pqcrystals_dilithium_poly_uniform_gamma1:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2132   .text.pqcrystals_dilithium_poly_uniform_gamma1:00000000 pqcrystals_dilithium_poly_uniform_gamma1
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2181   .text.poly_uniform_gamma11:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2188   .text.poly_uniform_gamma11:00000000 poly_uniform_gamma11
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2237   .text.pqcrystals_dilithium_polyw1_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\cc2LgDCQ.s:2244   .text.pqcrystals_dilithium_polyw1_pack:00000000 pqcrystals_dilithium_polyw1_pack

UNDEFINED SYMBOLS
pqcrystals_dilithium_asm_reduce32
pqcrystals_dilithium_asm_caddq
pqcrystals_dilithium_ntt
pqcrystals_dilithium_invntt_tomont
pqcrystals_dilithium_asm_pointwise_montgomery
pqcrystals_dilithium_asm_pointwise_acc_montgomery
pqcrystals_dilithium_power2round
pqcrystals_dilithium_decompose
pqcrystals_dilithium_make_hint
pqcrystals_dilithium_use_hint
pqcrystals_dilithium_dilithium_shake128_stream_init
shake128_inc_squeeze
pqcrystals_dilithium_asm_rej_uniform
pqcrystals_dilithium_dilithium_shake256_stream_init
shake256_inc_squeeze
shake256_inc_init
shake256_inc_absorb
shake256_inc_finalize
memset
shake256_inc_squeeze1
