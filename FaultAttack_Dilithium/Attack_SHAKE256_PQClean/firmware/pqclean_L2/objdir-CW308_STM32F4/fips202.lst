   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"fips202.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.load64,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	load64:
  24              	.LVL0:
  25              	.LFB0:
  26              		.file 1 "fips202.c"
   1:fips202.c     **** /* Based on the public domain implementation in
   2:fips202.c     ****  * crypto_hash/keccakc512/simple/ from http://bench.cr.yp.to/supercop.html
   3:fips202.c     ****  * by Ronny Van Keer
   4:fips202.c     ****  * and the public domain "TweetFips202" implementation
   5:fips202.c     ****  * from https://twitter.com/tweetfips202
   6:fips202.c     ****  * by Gilles Van Assche, Daniel J. Bernstein, and Peter Schwabe */
   7:fips202.c     **** 
   8:fips202.c     **** #include <stddef.h>
   9:fips202.c     **** #include <stdint.h>
  10:fips202.c     **** #include <stdlib.h>
  11:fips202.c     **** #include <string.h>
  12:fips202.c     **** 
  13:fips202.c     **** #include "fips202.h"
  14:fips202.c     **** 
  15:fips202.c     **** #define NROUNDS 24
  16:fips202.c     **** #define ROL(a, offset) (((a) << (offset)) ^ ((a) >> (64 - (offset))))
  17:fips202.c     **** 
  18:fips202.c     **** /*************************************************
  19:fips202.c     ****  * Name:        load64
  20:fips202.c     ****  *
  21:fips202.c     ****  * Description: Load 8 bytes into uint64_t in little-endian order
  22:fips202.c     ****  *
  23:fips202.c     ****  * Arguments:   - const uint8_t *x: pointer to input byte array
  24:fips202.c     ****  *
  25:fips202.c     ****  * Returns the loaded 64-bit unsigned integer
  26:fips202.c     ****  **************************************************/
  27:fips202.c     **** static uint64_t load64(const uint8_t *x) {
  27              		.loc 1 27 42 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  28:fips202.c     ****     uint64_t r = 0;
  31              		.loc 1 28 5 view .LVU1
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  32              		.loc 1 29 5 view .LVU2
  33              	.LBB2:
  34              		.loc 1 29 10 view .LVU3
  35              		.loc 1 29 24 view .LVU4
  36              	.LBE2:
  27:fips202.c     ****     uint64_t r = 0;
  37              		.loc 1 27 42 is_stmt 0 view .LVU5
  38 0000 0023     		movs	r3, #0
  39 0002 70B5     		push	{r4, r5, r6, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 4, -16
  43              		.cfi_offset 5, -12
  44              		.cfi_offset 6, -8
  45              		.cfi_offset 14, -4
  28:fips202.c     ****     uint64_t r = 0;
  46              		.loc 1 28 14 view .LVU6
  47 0004 1946     		mov	r1, r3
  48 0006 451E     		subs	r5, r0, #1
  49 0008 1846     		mov	r0, r3
  50              	.LVL1:
  51              	.L2:
  52              	.LBB3:
  30:fips202.c     ****         r |= (uint64_t)x[i] << 8 * i;
  53              		.loc 1 30 9 is_stmt 1 discriminator 3 view .LVU7
  54              		.loc 1 30 14 is_stmt 0 discriminator 3 view .LVU8
  55 000a 15F8014F 		ldrb	r4, [r5, #1]!	@ zero_extendqisi2
  56              	.LVL2:
  57              		.loc 1 30 29 discriminator 3 view .LVU9
  58 000e A3F12002 		sub	r2, r3, #32
  59 0012 C3F12006 		rsb	r6, r3, #32
  60 0016 04FA02F2 		lsl	r2, r4, r2
  61 001a 24FA06F6 		lsr	r6, r4, r6
  62 001e 9C40     		lsls	r4, r4, r3
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  63              		.loc 1 29 5 discriminator 3 view .LVU10
  64 0020 0833     		adds	r3, r3, #8
  65              		.loc 1 30 29 discriminator 3 view .LVU11
  66 0022 3243     		orrs	r2, r2, r6
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  67              		.loc 1 29 5 discriminator 3 view .LVU12
  68 0024 402B     		cmp	r3, #64
  69              		.loc 1 30 11 discriminator 3 view .LVU13
  70 0026 40EA0400 		orr	r0, r0, r4
  71              	.LVL3:
  72              		.loc 1 30 11 discriminator 3 view .LVU14
  73 002a 41EA0201 		orr	r1, r1, r2
  74              	.LVL4:
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  75              		.loc 1 29 31 is_stmt 1 discriminator 3 view .LVU15
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  76              		.loc 1 29 24 discriminator 3 view .LVU16
  29:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  77              		.loc 1 29 5 is_stmt 0 discriminator 3 view .LVU17
  78 002e ECD1     		bne	.L2
  79              	.LBE3:
  31:fips202.c     ****     }
  32:fips202.c     **** 
  33:fips202.c     ****     return r;
  80              		.loc 1 33 5 is_stmt 1 view .LVU18
  34:fips202.c     **** }
  81              		.loc 1 34 1 is_stmt 0 view .LVU19
  82 0030 70BD     		pop	{r4, r5, r6, pc}
  83              		.loc 1 34 1 view .LVU20
  84              		.cfi_endproc
  85              	.LFE0:
  87              		.section	.text.KeccakF1600_StatePermute,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu softvfp
  94              	KeccakF1600_StatePermute:
  95              	.LVL5:
  96              	.LFB2:
  35:fips202.c     **** 
  36:fips202.c     **** /*************************************************
  37:fips202.c     ****  * Name:        store64
  38:fips202.c     ****  *
  39:fips202.c     ****  * Description: Store a 64-bit integer to a byte array in little-endian order
  40:fips202.c     ****  *
  41:fips202.c     ****  * Arguments:   - uint8_t *x: pointer to the output byte array
  42:fips202.c     ****  *              - uint64_t u: input 64-bit unsigned integer
  43:fips202.c     ****  **************************************************/
  44:fips202.c     **** static void store64(uint8_t *x, uint64_t u) {
  45:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
  46:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
  47:fips202.c     ****     }
  48:fips202.c     **** }
  49:fips202.c     **** 
  50:fips202.c     **** /* Keccak round constants */
  51:fips202.c     **** static const uint64_t KeccakF_RoundConstants[NROUNDS] = {
  52:fips202.c     ****     0x0000000000000001ULL, 0x0000000000008082ULL,
  53:fips202.c     ****     0x800000000000808aULL, 0x8000000080008000ULL,
  54:fips202.c     ****     0x000000000000808bULL, 0x0000000080000001ULL,
  55:fips202.c     ****     0x8000000080008081ULL, 0x8000000000008009ULL,
  56:fips202.c     ****     0x000000000000008aULL, 0x0000000000000088ULL,
  57:fips202.c     ****     0x0000000080008009ULL, 0x000000008000000aULL,
  58:fips202.c     ****     0x000000008000808bULL, 0x800000000000008bULL,
  59:fips202.c     ****     0x8000000000008089ULL, 0x8000000000008003ULL,
  60:fips202.c     ****     0x8000000000008002ULL, 0x8000000000000080ULL,
  61:fips202.c     ****     0x000000000000800aULL, 0x800000008000000aULL,
  62:fips202.c     ****     0x8000000080008081ULL, 0x8000000000008080ULL,
  63:fips202.c     ****     0x0000000080000001ULL, 0x8000000080008008ULL
  64:fips202.c     **** };
  65:fips202.c     **** 
  66:fips202.c     **** /*************************************************
  67:fips202.c     ****  * Name:        KeccakF1600_StatePermute
  68:fips202.c     ****  *
  69:fips202.c     ****  * Description: The Keccak F1600 Permutation
  70:fips202.c     ****  *
  71:fips202.c     ****  * Arguments:   - uint64_t *state: pointer to input/output Keccak state
  72:fips202.c     ****  **************************************************/
  73:fips202.c     **** static void KeccakF1600_StatePermute(uint64_t *state) {
  97              		.loc 1 73 55 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 248
 100              		@ frame_needed = 0, uses_anonymous_args = 0
  74:fips202.c     ****     int round;
 101              		.loc 1 74 5 view .LVU22
  75:fips202.c     **** 
  76:fips202.c     ****     uint64_t Aba, Abe, Abi, Abo, Abu;
 102              		.loc 1 76 5 view .LVU23
  77:fips202.c     ****     uint64_t Aga, Age, Agi, Ago, Agu;
 103              		.loc 1 77 5 view .LVU24
  78:fips202.c     ****     uint64_t Aka, Ake, Aki, Ako, Aku;
 104              		.loc 1 78 5 view .LVU25
  79:fips202.c     ****     uint64_t Ama, Ame, Ami, Amo, Amu;
 105              		.loc 1 79 5 view .LVU26
  80:fips202.c     ****     uint64_t Asa, Ase, Asi, Aso, Asu;
 106              		.loc 1 80 5 view .LVU27
  81:fips202.c     ****     uint64_t BCa, BCe, BCi, BCo, BCu;
 107              		.loc 1 81 5 view .LVU28
  82:fips202.c     ****     uint64_t Da, De, Di, Do, Du;
 108              		.loc 1 82 5 view .LVU29
  83:fips202.c     ****     uint64_t Eba, Ebe, Ebi, Ebo, Ebu;
 109              		.loc 1 83 5 view .LVU30
  84:fips202.c     ****     uint64_t Ega, Ege, Egi, Ego, Egu;
 110              		.loc 1 84 5 view .LVU31
  85:fips202.c     ****     uint64_t Eka, Eke, Eki, Eko, Eku;
 111              		.loc 1 85 5 view .LVU32
  86:fips202.c     ****     uint64_t Ema, Eme, Emi, Emo, Emu;
 112              		.loc 1 86 5 view .LVU33
  87:fips202.c     ****     uint64_t Esa, Ese, Esi, Eso, Esu;
 113              		.loc 1 87 5 view .LVU34
  88:fips202.c     **** 
  89:fips202.c     ****     // copyFromState(A, state)
  90:fips202.c     ****     Aba = state[0];
 114              		.loc 1 90 5 view .LVU35
  73:fips202.c     ****     int round;
 115              		.loc 1 73 55 is_stmt 0 view .LVU36
 116 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 36
 119              		.cfi_offset 4, -36
 120              		.cfi_offset 5, -32
 121              		.cfi_offset 6, -28
 122              		.cfi_offset 7, -24
 123              		.cfi_offset 8, -20
 124              		.cfi_offset 9, -16
 125              		.cfi_offset 10, -12
 126              		.cfi_offset 11, -8
 127              		.cfi_offset 14, -4
 128 0004 BFB0     		sub	sp, sp, #252
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 288
 131              		.loc 1 90 9 view .LVU37
 132 0006 0368     		ldr	r3, [r0]
 133 0008 0C93     		str	r3, [sp, #48]
 134 000a 4368     		ldr	r3, [r0, #4]
 135 000c 0D93     		str	r3, [sp, #52]
 136              	.LVL6:
  91:fips202.c     ****     Abe = state[1];
 137              		.loc 1 91 5 is_stmt 1 view .LVU38
 138              		.loc 1 91 9 is_stmt 0 view .LVU39
 139 000e 8368     		ldr	r3, [r0, #8]
 140              	.LVL7:
 141              		.loc 1 91 9 view .LVU40
 142 0010 0E93     		str	r3, [sp, #56]
 143 0012 C368     		ldr	r3, [r0, #12]
 144 0014 0F93     		str	r3, [sp, #60]
 145              	.LVL8:
  92:fips202.c     ****     Abi = state[2];
 146              		.loc 1 92 5 is_stmt 1 view .LVU41
 147              		.loc 1 92 9 is_stmt 0 view .LVU42
 148 0016 0369     		ldr	r3, [r0, #16]
 149              	.LVL9:
 150              		.loc 1 92 9 view .LVU43
 151 0018 1093     		str	r3, [sp, #64]
 152 001a 4369     		ldr	r3, [r0, #20]
 153 001c 1193     		str	r3, [sp, #68]
 154              	.LVL10:
  93:fips202.c     ****     Abo = state[3];
 155              		.loc 1 93 5 is_stmt 1 view .LVU44
 156              		.loc 1 93 9 is_stmt 0 view .LVU45
 157 001e 8369     		ldr	r3, [r0, #24]
 158              	.LVL11:
 159              		.loc 1 93 9 view .LVU46
 160 0020 1293     		str	r3, [sp, #72]
 161 0022 C369     		ldr	r3, [r0, #28]
 162 0024 1393     		str	r3, [sp, #76]
 163              	.LVL12:
  94:fips202.c     ****     Abu = state[4];
 164              		.loc 1 94 5 is_stmt 1 view .LVU47
 165              		.loc 1 94 9 is_stmt 0 view .LVU48
 166 0026 036A     		ldr	r3, [r0, #32]
 167              	.LVL13:
 168              		.loc 1 94 9 view .LVU49
 169 0028 1493     		str	r3, [sp, #80]
 170 002a 436A     		ldr	r3, [r0, #36]
 171 002c 1593     		str	r3, [sp, #84]
 172              	.LVL14:
  95:fips202.c     ****     Aga = state[5];
 173              		.loc 1 95 5 is_stmt 1 view .LVU50
 174              		.loc 1 95 9 is_stmt 0 view .LVU51
 175 002e 836A     		ldr	r3, [r0, #40]
 176              	.LVL15:
 177              		.loc 1 95 9 view .LVU52
 178 0030 1693     		str	r3, [sp, #88]
 179 0032 C36A     		ldr	r3, [r0, #44]
 180 0034 1793     		str	r3, [sp, #92]
 181              	.LVL16:
  96:fips202.c     ****     Age = state[6];
 182              		.loc 1 96 5 is_stmt 1 view .LVU53
 183              		.loc 1 96 9 is_stmt 0 view .LVU54
 184 0036 036B     		ldr	r3, [r0, #48]
 185              	.LVL17:
 186              		.loc 1 96 9 view .LVU55
 187 0038 1893     		str	r3, [sp, #96]
 188 003a 436B     		ldr	r3, [r0, #52]
 189 003c 1993     		str	r3, [sp, #100]
 190              	.LVL18:
  97:fips202.c     ****     Agi = state[7];
 191              		.loc 1 97 5 is_stmt 1 view .LVU56
 192              		.loc 1 97 9 is_stmt 0 view .LVU57
 193 003e 836B     		ldr	r3, [r0, #56]
 194              	.LVL19:
 195              		.loc 1 97 9 view .LVU58
 196 0040 1A93     		str	r3, [sp, #104]
 197 0042 C36B     		ldr	r3, [r0, #60]
 198 0044 1B93     		str	r3, [sp, #108]
 199              	.LVL20:
  98:fips202.c     ****     Ago = state[8];
 200              		.loc 1 98 5 is_stmt 1 view .LVU59
 201              		.loc 1 98 9 is_stmt 0 view .LVU60
 202 0046 036C     		ldr	r3, [r0, #64]
 203              	.LVL21:
 204              		.loc 1 98 9 view .LVU61
 205 0048 1C93     		str	r3, [sp, #112]
 206 004a 436C     		ldr	r3, [r0, #68]
 207 004c 1D93     		str	r3, [sp, #116]
 208              	.LVL22:
  99:fips202.c     ****     Agu = state[9];
 209              		.loc 1 99 5 is_stmt 1 view .LVU62
 210              		.loc 1 99 9 is_stmt 0 view .LVU63
 211 004e 836C     		ldr	r3, [r0, #72]
 212              	.LVL23:
 213              		.loc 1 99 9 view .LVU64
 214 0050 1E93     		str	r3, [sp, #120]
 215 0052 C36C     		ldr	r3, [r0, #76]
 216 0054 1F93     		str	r3, [sp, #124]
 217              	.LVL24:
 100:fips202.c     ****     Aka = state[10];
 218              		.loc 1 100 5 is_stmt 1 view .LVU65
 219              		.loc 1 100 9 is_stmt 0 view .LVU66
 220 0056 036D     		ldr	r3, [r0, #80]
 221              	.LVL25:
 222              		.loc 1 100 9 view .LVU67
 223 0058 2093     		str	r3, [sp, #128]
 224 005a 436D     		ldr	r3, [r0, #84]
 225 005c 2193     		str	r3, [sp, #132]
 226              	.LVL26:
 101:fips202.c     ****     Ake = state[11];
 227              		.loc 1 101 5 is_stmt 1 view .LVU68
 228              		.loc 1 101 9 is_stmt 0 view .LVU69
 229 005e 836D     		ldr	r3, [r0, #88]
 230              	.LVL27:
 231              		.loc 1 101 9 view .LVU70
 232 0060 2293     		str	r3, [sp, #136]
 233 0062 C36D     		ldr	r3, [r0, #92]
 234 0064 2393     		str	r3, [sp, #140]
 235              	.LVL28:
 102:fips202.c     ****     Aki = state[12];
 236              		.loc 1 102 5 is_stmt 1 view .LVU71
 237              		.loc 1 102 9 is_stmt 0 view .LVU72
 238 0066 036E     		ldr	r3, [r0, #96]
 239              	.LVL29:
 240              		.loc 1 102 9 view .LVU73
 241 0068 2493     		str	r3, [sp, #144]
 242 006a 436E     		ldr	r3, [r0, #100]
 243 006c 2593     		str	r3, [sp, #148]
 244              	.LVL30:
 103:fips202.c     ****     Ako = state[13];
 245              		.loc 1 103 5 is_stmt 1 view .LVU74
 246              		.loc 1 103 9 is_stmt 0 view .LVU75
 247 006e 836E     		ldr	r3, [r0, #104]
 248              	.LVL31:
 249              		.loc 1 103 9 view .LVU76
 250 0070 2693     		str	r3, [sp, #152]
 251 0072 C36E     		ldr	r3, [r0, #108]
 252 0074 2793     		str	r3, [sp, #156]
 253              	.LVL32:
 104:fips202.c     ****     Aku = state[14];
 254              		.loc 1 104 5 is_stmt 1 view .LVU77
 255              		.loc 1 104 9 is_stmt 0 view .LVU78
 256 0076 036F     		ldr	r3, [r0, #112]
 257              	.LVL33:
 258              		.loc 1 104 9 view .LVU79
 259 0078 2893     		str	r3, [sp, #160]
 260 007a 436F     		ldr	r3, [r0, #116]
 261 007c 2993     		str	r3, [sp, #164]
 262              	.LVL34:
 105:fips202.c     ****     Ama = state[15];
 263              		.loc 1 105 5 is_stmt 1 view .LVU80
 264              		.loc 1 105 9 is_stmt 0 view .LVU81
 265 007e 836F     		ldr	r3, [r0, #120]
 266              	.LVL35:
 267              		.loc 1 105 9 view .LVU82
 268 0080 2A93     		str	r3, [sp, #168]
 269 0082 C36F     		ldr	r3, [r0, #124]
 270 0084 2B93     		str	r3, [sp, #172]
 271              	.LVL36:
 106:fips202.c     ****     Ame = state[16];
 272              		.loc 1 106 5 is_stmt 1 view .LVU83
 273              		.loc 1 106 9 is_stmt 0 view .LVU84
 274 0086 D0F88030 		ldr	r3, [r0, #128]
 275              	.LVL37:
 276              		.loc 1 106 9 view .LVU85
 277 008a 2C93     		str	r3, [sp, #176]
 278 008c D0F88430 		ldr	r3, [r0, #132]
 279 0090 2D93     		str	r3, [sp, #180]
 280              	.LVL38:
 107:fips202.c     ****     Ami = state[17];
 281              		.loc 1 107 5 is_stmt 1 view .LVU86
 282              		.loc 1 107 9 is_stmt 0 view .LVU87
 283 0092 D0F88830 		ldr	r3, [r0, #136]
 284              	.LVL39:
 285              		.loc 1 107 9 view .LVU88
 286 0096 2E93     		str	r3, [sp, #184]
 287 0098 D0F88C30 		ldr	r3, [r0, #140]
 288 009c 2F93     		str	r3, [sp, #188]
 289              	.LVL40:
 108:fips202.c     ****     Amo = state[18];
 290              		.loc 1 108 5 is_stmt 1 view .LVU89
 291              		.loc 1 108 9 is_stmt 0 view .LVU90
 292 009e D0F89030 		ldr	r3, [r0, #144]
 293              	.LVL41:
 294              		.loc 1 108 9 view .LVU91
 295 00a2 3093     		str	r3, [sp, #192]
 296 00a4 D0F89430 		ldr	r3, [r0, #148]
 297 00a8 3193     		str	r3, [sp, #196]
 298              	.LVL42:
 109:fips202.c     ****     Amu = state[19];
 299              		.loc 1 109 5 is_stmt 1 view .LVU92
 300              		.loc 1 109 9 is_stmt 0 view .LVU93
 301 00aa D0F89830 		ldr	r3, [r0, #152]
 302              	.LVL43:
 303              		.loc 1 109 9 view .LVU94
 304 00ae 3293     		str	r3, [sp, #200]
 305 00b0 D0F89C30 		ldr	r3, [r0, #156]
 306 00b4 3393     		str	r3, [sp, #204]
 307              	.LVL44:
 110:fips202.c     ****     Asa = state[20];
 308              		.loc 1 110 5 is_stmt 1 view .LVU95
 309              		.loc 1 110 9 is_stmt 0 view .LVU96
 310 00b6 D0F8A030 		ldr	r3, [r0, #160]
 311              	.LVL45:
 312              		.loc 1 110 9 view .LVU97
 313 00ba 0B93     		str	r3, [sp, #44]
 314 00bc D0F8A430 		ldr	r3, [r0, #164]
 315 00c0 3493     		str	r3, [sp, #208]
 316              	.LVL46:
 111:fips202.c     ****     Ase = state[21];
 317              		.loc 1 111 5 is_stmt 1 view .LVU98
 318              		.loc 1 111 9 is_stmt 0 view .LVU99
 319 00c2 D0F8A830 		ldr	r3, [r0, #168]
 320              	.LVL47:
 321              		.loc 1 111 9 view .LVU100
 322 00c6 3593     		str	r3, [sp, #212]
 323 00c8 D0F8AC30 		ldr	r3, [r0, #172]
 324 00cc 3693     		str	r3, [sp, #216]
 325              	.LVL48:
 112:fips202.c     ****     Asi = state[22];
 326              		.loc 1 112 5 is_stmt 1 view .LVU101
 327              		.loc 1 112 9 is_stmt 0 view .LVU102
 328 00ce D0F8B030 		ldr	r3, [r0, #176]
 329              	.LVL49:
 330              		.loc 1 112 9 view .LVU103
 331 00d2 3793     		str	r3, [sp, #220]
 332 00d4 D0F8B430 		ldr	r3, [r0, #180]
 333 00d8 3893     		str	r3, [sp, #224]
 334              	.LVL50:
 113:fips202.c     ****     Aso = state[23];
 335              		.loc 1 113 5 is_stmt 1 view .LVU104
 336              		.loc 1 113 9 is_stmt 0 view .LVU105
 337 00da D0F8B830 		ldr	r3, [r0, #184]
 338              	.LVL51:
 339              		.loc 1 113 9 view .LVU106
 340 00de 3993     		str	r3, [sp, #228]
 341 00e0 D0F8BC30 		ldr	r3, [r0, #188]
 342 00e4 3A93     		str	r3, [sp, #232]
 343              	.LVL52:
 114:fips202.c     ****     Asu = state[24];
 344              		.loc 1 114 5 is_stmt 1 view .LVU107
 345              		.loc 1 114 9 is_stmt 0 view .LVU108
 346 00e6 D0F8C030 		ldr	r3, [r0, #192]
 347              	.LVL53:
 348              		.loc 1 114 9 view .LVU109
 349 00ea 3B93     		str	r3, [sp, #236]
 350 00ec D0F8C460 		ldr	r6, [r0, #196]
 351              	.LVL54:
 115:fips202.c     **** 
 116:fips202.c     ****     for (round = 0; round < NROUNDS; round += 2) {
 352              		.loc 1 116 5 is_stmt 1 view .LVU110
 353              		.loc 1 116 21 view .LVU111
 354 00f0 014B     		ldr	r3, .L7
 355              	.LVL55:
 356              		.loc 1 116 21 is_stmt 0 view .LVU112
 357 00f2 0193     		str	r3, [sp, #4]
 358 00f4 02E0     		b	.L8
 359              	.L9:
 360 00f6 00BF     		.align	2
 361              	.L7:
 362 00f8 00000000 		.word	.LANCHOR0
 363              	.L8:
 364              	.LVL56:
 365              	.L5:
 117:fips202.c     ****         //    prepareTheta
 118:fips202.c     ****         BCa = Aba ^ Aga ^ Aka ^ Ama ^ Asa;
 366              		.loc 1 118 9 is_stmt 1 discriminator 3 view .LVU113
 367              		.loc 1 118 19 is_stmt 0 discriminator 3 view .LVU114
 368 00fc 169A     		ldr	r2, [sp, #88]
 369 00fe 0C9B     		ldr	r3, [sp, #48]
 370 0100 1799     		ldr	r1, [sp, #92]
 371 0102 5340     		eors	r3, r3, r2
 372 0104 0D9A     		ldr	r2, [sp, #52]
 373 0106 82EA0105 		eor	r5, r2, r1
 374              		.loc 1 118 25 discriminator 3 view .LVU115
 375 010a 209A     		ldr	r2, [sp, #128]
 376 010c 5340     		eors	r3, r3, r2
 377 010e 219A     		ldr	r2, [sp, #132]
 378 0110 5540     		eors	r5, r5, r2
 379              		.loc 1 118 31 discriminator 3 view .LVU116
 380 0112 2A9A     		ldr	r2, [sp, #168]
 381 0114 5340     		eors	r3, r3, r2
 382 0116 2B9A     		ldr	r2, [sp, #172]
 383 0118 5540     		eors	r5, r5, r2
 384              		.loc 1 118 13 discriminator 3 view .LVU117
 385 011a 0B9A     		ldr	r2, [sp, #44]
 386 011c 5340     		eors	r3, r3, r2
 387 011e 349A     		ldr	r2, [sp, #208]
 388 0120 0993     		str	r3, [sp, #36]
 389 0122 5540     		eors	r5, r5, r2
 390              	.LVL57:
 119:fips202.c     ****         BCe = Abe ^ Age ^ Ake ^ Ame ^ Ase;
 391              		.loc 1 119 9 is_stmt 1 discriminator 3 view .LVU118
 392              		.loc 1 119 19 is_stmt 0 discriminator 3 view .LVU119
 393 0124 0E9B     		ldr	r3, [sp, #56]
 394              	.LVL58:
 395              		.loc 1 119 19 discriminator 3 view .LVU120
 396 0126 189A     		ldr	r2, [sp, #96]
 397 0128 83EA0209 		eor	r9, r3, r2
 398 012c 0F9B     		ldr	r3, [sp, #60]
 399 012e 199A     		ldr	r2, [sp, #100]
 400 0130 83EA0208 		eor	r8, r3, r2
 401              		.loc 1 119 25 discriminator 3 view .LVU121
 402 0134 229B     		ldr	r3, [sp, #136]
 120:fips202.c     ****         BCi = Abi ^ Agi ^ Aki ^ Ami ^ Asi;
 403              		.loc 1 120 19 discriminator 3 view .LVU122
 404 0136 1A9A     		ldr	r2, [sp, #104]
 119:fips202.c     ****         BCe = Abe ^ Age ^ Ake ^ Ame ^ Ase;
 405              		.loc 1 119 25 discriminator 3 view .LVU123
 406 0138 89EA0309 		eor	r9, r9, r3
 407 013c 239B     		ldr	r3, [sp, #140]
 408 013e 88EA0308 		eor	r8, r8, r3
 119:fips202.c     ****         BCe = Abe ^ Age ^ Ake ^ Ame ^ Ase;
 409              		.loc 1 119 31 discriminator 3 view .LVU124
 410 0142 2C9B     		ldr	r3, [sp, #176]
 411 0144 89EA0309 		eor	r9, r9, r3
 412 0148 2D9B     		ldr	r3, [sp, #180]
 413 014a 88EA0308 		eor	r8, r8, r3
 119:fips202.c     ****         BCe = Abe ^ Age ^ Ake ^ Ame ^ Ase;
 414              		.loc 1 119 13 discriminator 3 view .LVU125
 415 014e 359B     		ldr	r3, [sp, #212]
 416 0150 89EA0309 		eor	r9, r9, r3
 417 0154 369B     		ldr	r3, [sp, #216]
 418 0156 88EA0308 		eor	r8, r8, r3
 419              	.LVL59:
 420              		.loc 1 120 9 is_stmt 1 discriminator 3 view .LVU126
 421              		.loc 1 120 19 is_stmt 0 discriminator 3 view .LVU127
 422 015a 109B     		ldr	r3, [sp, #64]
 423 015c 83EA020C 		eor	ip, r3, r2
 424 0160 119B     		ldr	r3, [sp, #68]
 425 0162 1B9A     		ldr	r2, [sp, #108]
 426 0164 83EA0207 		eor	r7, r3, r2
 427              		.loc 1 120 25 discriminator 3 view .LVU128
 428 0168 249B     		ldr	r3, [sp, #144]
 429 016a 259A     		ldr	r2, [sp, #148]
 430 016c 8CEA030C 		eor	ip, ip, r3
 431 0170 5740     		eors	r7, r7, r2
 432              		.loc 1 120 31 discriminator 3 view .LVU129
 433 0172 2E9B     		ldr	r3, [sp, #184]
 434 0174 2F9A     		ldr	r2, [sp, #188]
 435 0176 8CEA030C 		eor	ip, ip, r3
 436 017a 5740     		eors	r7, r7, r2
 437              		.loc 1 120 13 discriminator 3 view .LVU130
 438 017c 379B     		ldr	r3, [sp, #220]
 439 017e 389A     		ldr	r2, [sp, #224]
 440 0180 8CEA030C 		eor	ip, ip, r3
 441 0184 5740     		eors	r7, r7, r2
 442              	.LVL60:
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 443              		.loc 1 121 9 is_stmt 1 discriminator 3 view .LVU131
 444              		.loc 1 121 19 is_stmt 0 discriminator 3 view .LVU132
 445 0186 129B     		ldr	r3, [sp, #72]
 446 0188 1C9A     		ldr	r2, [sp, #112]
 122:fips202.c     ****         BCu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
 447              		.loc 1 122 19 discriminator 3 view .LVU133
 448 018a DDF87CE0 		ldr	lr, [sp, #124]
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 449              		.loc 1 121 19 discriminator 3 view .LVU134
 450 018e 83EA0204 		eor	r4, r3, r2
 451 0192 139B     		ldr	r3, [sp, #76]
 452 0194 1D9A     		ldr	r2, [sp, #116]
 453 0196 83EA0201 		eor	r1, r3, r2
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 454              		.loc 1 121 25 discriminator 3 view .LVU135
 455 019a 269A     		ldr	r2, [sp, #152]
 456              		.loc 1 122 19 discriminator 3 view .LVU136
 457 019c 149B     		ldr	r3, [sp, #80]
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 458              		.loc 1 121 25 discriminator 3 view .LVU137
 459 019e 5440     		eors	r4, r4, r2
 460 01a0 279A     		ldr	r2, [sp, #156]
 461 01a2 5140     		eors	r1, r1, r2
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 462              		.loc 1 121 31 discriminator 3 view .LVU138
 463 01a4 309A     		ldr	r2, [sp, #192]
 464 01a6 5440     		eors	r4, r4, r2
 465 01a8 319A     		ldr	r2, [sp, #196]
 466 01aa 5140     		eors	r1, r1, r2
 121:fips202.c     ****         BCo = Abo ^ Ago ^ Ako ^ Amo ^ Aso;
 467              		.loc 1 121 13 discriminator 3 view .LVU139
 468 01ac 399A     		ldr	r2, [sp, #228]
 469 01ae 5440     		eors	r4, r4, r2
 470 01b0 3A9A     		ldr	r2, [sp, #232]
 471 01b2 5140     		eors	r1, r1, r2
 472              	.LVL61:
 473              		.loc 1 122 9 is_stmt 1 discriminator 3 view .LVU140
 474              		.loc 1 122 19 is_stmt 0 discriminator 3 view .LVU141
 475 01b4 1E9A     		ldr	r2, [sp, #120]
 476 01b6 5A40     		eors	r2, r2, r3
 477 01b8 159B     		ldr	r3, [sp, #84]
 478 01ba 83EA0E0E 		eor	lr, r3, lr
 479              		.loc 1 122 25 discriminator 3 view .LVU142
 480 01be 289B     		ldr	r3, [sp, #160]
 481 01c0 5A40     		eors	r2, r2, r3
 482 01c2 299B     		ldr	r3, [sp, #164]
 483 01c4 8EEA030E 		eor	lr, lr, r3
 484              		.loc 1 122 31 discriminator 3 view .LVU143
 485 01c8 329B     		ldr	r3, [sp, #200]
 486 01ca 5A40     		eors	r2, r2, r3
 487 01cc 339B     		ldr	r3, [sp, #204]
 488 01ce 8EEA030E 		eor	lr, lr, r3
 489              		.loc 1 122 13 discriminator 3 view .LVU144
 490 01d2 3B9B     		ldr	r3, [sp, #236]
 123:fips202.c     **** 
 124:fips202.c     ****         // thetaRhoPiChiIotaPrepareTheta(round  , A, E)
 125:fips202.c     ****         Da = BCu ^ ROL(BCe, 1);
 491              		.loc 1 125 20 discriminator 3 view .LVU145
 492 01d4 4FEA490B 		lsl	fp, r9, #1
 122:fips202.c     ****         BCu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
 493              		.loc 1 122 13 discriminator 3 view .LVU146
 494 01d8 5A40     		eors	r2, r2, r3
 495              		.loc 1 125 20 discriminator 3 view .LVU147
 496 01da 4BEAD87B 		orr	fp, fp, r8, lsr #31
 497 01de 4FEA480A 		lsl	r10, r8, #1
 122:fips202.c     ****         BCu = Abu ^ Agu ^ Aku ^ Amu ^ Asu;
 498              		.loc 1 122 13 discriminator 3 view .LVU148
 499 01e2 8EEA060E 		eor	lr, lr, r6
 500              	.LVL62:
 501              		.loc 1 125 9 is_stmt 1 discriminator 3 view .LVU149
 502              		.loc 1 125 12 is_stmt 0 discriminator 3 view .LVU150
 503 01e6 8BEA0203 		eor	r3, fp, r2
 504              		.loc 1 125 20 discriminator 3 view .LVU151
 505 01ea 4AEAD97A 		orr	r10, r10, r9, lsr #31
 506              		.loc 1 125 12 discriminator 3 view .LVU152
 507 01ee 0293     		str	r3, [sp, #8]
 508 01f0 8AEA0E03 		eor	r3, r10, lr
 509 01f4 0393     		str	r3, [sp, #12]
 510              	.LVL63:
 126:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 511              		.loc 1 126 9 is_stmt 1 discriminator 3 view .LVU153
 512              		.loc 1 126 20 is_stmt 0 discriminator 3 view .LVU154
 513 01f6 4FEA4C0B 		lsl	fp, ip, #1
 514              		.loc 1 126 12 discriminator 3 view .LVU155
 515 01fa 099B     		ldr	r3, [sp, #36]
 516              	.LVL64:
 517              		.loc 1 126 20 discriminator 3 view .LVU156
 518 01fc 4BEAD77B 		orr	fp, fp, r7, lsr #31
 519 0200 4FEA470A 		lsl	r10, r7, #1
 520 0204 4AEADC7A 		orr	r10, r10, ip, lsr #31
 521              		.loc 1 126 12 discriminator 3 view .LVU157
 522 0208 8BEA0303 		eor	r3, fp, r3
 523 020c 0493     		str	r3, [sp, #16]
 524 020e 8AEA0503 		eor	r3, r10, r5
 127:fips202.c     ****         Di = BCe ^ ROL(BCo, 1);
 525              		.loc 1 127 20 discriminator 3 view .LVU158
 526 0212 4FEA410A 		lsl	r10, r1, #1
 527 0216 4AEAD47A 		orr	r10, r10, r4, lsr #31
 126:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 528              		.loc 1 126 12 discriminator 3 view .LVU159
 529 021a 0593     		str	r3, [sp, #20]
 530              	.LVL65:
 531              		.loc 1 127 9 is_stmt 1 discriminator 3 view .LVU160
 532              		.loc 1 127 12 is_stmt 0 discriminator 3 view .LVU161
 533 021c 8AEA0803 		eor	r3, r10, r8
 534              	.LVL66:
 128:fips202.c     ****         Do = BCi ^ ROL(BCu, 1);
 535              		.loc 1 128 20 discriminator 3 view .LVU162
 536 0220 4FEA4E08 		lsl	r8, lr, #1
 537              	.LVL67:
 538              		.loc 1 128 20 discriminator 3 view .LVU163
 539 0224 48EAD278 		orr	r8, r8, r2, lsr #31
 540 0228 5200     		lsls	r2, r2, #1
 541              	.LVL68:
 542              		.loc 1 128 20 discriminator 3 view .LVU164
 543 022a 42EADE72 		orr	r2, r2, lr, lsr #31
 127:fips202.c     ****         Di = BCe ^ ROL(BCo, 1);
 544              		.loc 1 127 12 discriminator 3 view .LVU165
 545 022e 0693     		str	r3, [sp, #24]
 546              		.loc 1 128 12 discriminator 3 view .LVU166
 547 0230 82EA0C03 		eor	r3, r2, ip
 548 0234 0793     		str	r3, [sp, #28]
 549 0236 88EA0703 		eor	r3, r8, r7
 550 023a 0893     		str	r3, [sp, #32]
 129:fips202.c     ****         Du = BCo ^ ROL(BCa, 1);
 551              		.loc 1 129 20 discriminator 3 view .LVU167
 552 023c 099B     		ldr	r3, [sp, #36]
 553 023e 6A00     		lsls	r2, r5, #1
 554 0240 42EAD372 		orr	r2, r2, r3, lsr #31
 555 0244 5B00     		lsls	r3, r3, #1
 556 0246 43EAD573 		orr	r3, r3, r5, lsr #31
 557              		.loc 1 129 12 discriminator 3 view .LVU168
 558 024a 6340     		eors	r3, r3, r4
 559 024c 0993     		str	r3, [sp, #36]
 560              	.LVL69:
 561              		.loc 1 129 12 discriminator 3 view .LVU169
 562 024e 82EA0103 		eor	r3, r2, r1
 127:fips202.c     ****         Di = BCe ^ ROL(BCo, 1);
 563              		.loc 1 127 20 discriminator 3 view .LVU170
 564 0252 4FEA440B 		lsl	fp, r4, #1
 130:fips202.c     **** 
 131:fips202.c     ****         Aba ^= Da;
 565              		.loc 1 131 13 discriminator 3 view .LVU171
 566 0256 0C9A     		ldr	r2, [sp, #48]
 129:fips202.c     ****         Du = BCo ^ ROL(BCa, 1);
 567              		.loc 1 129 12 discriminator 3 view .LVU172
 568 0258 0A93     		str	r3, [sp, #40]
 569              		.loc 1 131 13 discriminator 3 view .LVU173
 570 025a 029B     		ldr	r3, [sp, #8]
 127:fips202.c     ****         Do = BCi ^ ROL(BCu, 1);
 571              		.loc 1 127 20 discriminator 3 view .LVU174
 572 025c 4BEAD17B 		orr	fp, fp, r1, lsr #31
 127:fips202.c     ****         Do = BCi ^ ROL(BCu, 1);
 573              		.loc 1 127 12 discriminator 3 view .LVU175
 574 0260 8BEA090B 		eor	fp, fp, r9
 575              	.LVL70:
 128:fips202.c     ****         Du = BCo ^ ROL(BCa, 1);
 576              		.loc 1 128 9 is_stmt 1 discriminator 3 view .LVU176
 129:fips202.c     **** 
 577              		.loc 1 129 9 discriminator 3 view .LVU177
 578              		.loc 1 131 9 discriminator 3 view .LVU178
 579              		.loc 1 131 13 is_stmt 0 discriminator 3 view .LVU179
 580 0264 83EA0209 		eor	r9, r3, r2
 581              	.LVL71:
 582              		.loc 1 131 13 discriminator 3 view .LVU180
 583 0268 039B     		ldr	r3, [sp, #12]
 584 026a 0D9A     		ldr	r2, [sp, #52]
 132:fips202.c     ****         BCa = Aba;
 133:fips202.c     ****         Age ^= De;
 134:fips202.c     ****         BCe = ROL(Age, 44);
 135:fips202.c     ****         Aki ^= Di;
 585              		.loc 1 135 13 discriminator 3 view .LVU181
 586 026c 0699     		ldr	r1, [sp, #24]
 587              	.LVL72:
 588              		.loc 1 135 13 discriminator 3 view .LVU182
 589 026e 259C     		ldr	r4, [sp, #148]
 590              	.LVL73:
 136:fips202.c     ****         BCi = ROL(Aki, 43);
 137:fips202.c     ****         Amo ^= Do;
 591              		.loc 1 137 13 discriminator 3 view .LVU183
 592 0270 319F     		ldr	r7, [sp, #196]
 593              	.LVL74:
 131:fips202.c     ****         BCa = Aba;
 594              		.loc 1 131 13 discriminator 3 view .LVU184
 595 0272 83EA020A 		eor	r10, r3, r2
 596              	.LVL75:
 132:fips202.c     ****         BCa = Aba;
 597              		.loc 1 132 9 is_stmt 1 discriminator 3 view .LVU185
 133:fips202.c     ****         BCe = ROL(Age, 44);
 598              		.loc 1 133 9 discriminator 3 view .LVU186
 134:fips202.c     ****         Aki ^= Di;
 599              		.loc 1 134 9 discriminator 3 view .LVU187
 133:fips202.c     ****         BCe = ROL(Age, 44);
 600              		.loc 1 133 13 is_stmt 0 discriminator 3 view .LVU188
 601 0276 189A     		ldr	r2, [sp, #96]
 602 0278 049B     		ldr	r3, [sp, #16]
 603 027a 83EA020E 		eor	lr, r3, r2
 604              	.LVL76:
 133:fips202.c     ****         BCe = ROL(Age, 44);
 605              		.loc 1 133 13 discriminator 3 view .LVU189
 606 027e 199A     		ldr	r2, [sp, #100]
 607 0280 059B     		ldr	r3, [sp, #20]
 608 0282 83EA020C 		eor	ip, r3, r2
 609              	.LVL77:
 135:fips202.c     ****         BCi = ROL(Aki, 43);
 610              		.loc 1 135 13 discriminator 3 view .LVU190
 611 0286 249A     		ldr	r2, [sp, #144]
 612 0288 8BEA0202 		eor	r2, fp, r2
 613 028c 4C40     		eors	r4, r4, r1
 136:fips202.c     ****         Amo ^= Do;
 614              		.loc 1 136 13 discriminator 3 view .LVU191
 615 028e 4FEA5258 		lsr	r8, r2, #21
 616 0292 48EAC428 		orr	r8, r8, r4, lsl #11
 617 0296 640D     		lsrs	r4, r4, #21
 618 0298 44EAC224 		orr	r4, r4, r2, lsl #11
 619              		.loc 1 137 13 discriminator 3 view .LVU192
 620 029c 3099     		ldr	r1, [sp, #192]
 621 029e 079A     		ldr	r2, [sp, #28]
 622 02a0 5140     		eors	r1, r1, r2
 623 02a2 089A     		ldr	r2, [sp, #32]
 134:fips202.c     ****         Aki ^= Di;
 624              		.loc 1 134 13 discriminator 3 view .LVU193
 625 02a4 4FEA1E55 		lsr	r5, lr, #20
 626 02a8 45EA0C35 		orr	r5, r5, ip, lsl #12
 627              		.loc 1 137 13 discriminator 3 view .LVU194
 628 02ac 7A40     		eors	r2, r2, r7
 134:fips202.c     ****         Aki ^= Di;
 629              		.loc 1 134 13 discriminator 3 view .LVU195
 630 02ae 4FEA1C5C 		lsr	ip, ip, #20
 631 02b2 4CEA0E33 		orr	r3, ip, lr, lsl #12
 632              	.LVL78:
 135:fips202.c     ****         BCi = ROL(Aki, 43);
 633              		.loc 1 135 9 is_stmt 1 discriminator 3 view .LVU196
 136:fips202.c     ****         Amo ^= Do;
 634              		.loc 1 136 9 discriminator 3 view .LVU197
 635              		.loc 1 137 9 discriminator 3 view .LVU198
 138:fips202.c     ****         BCo = ROL(Amo, 21);
 636              		.loc 1 138 9 discriminator 3 view .LVU199
 637              		.loc 1 138 13 is_stmt 0 discriminator 3 view .LVU200
 638 02b6 4FEA425E 		lsl	lr, r2, #21
 639 02ba 4EEAD12E 		orr	lr, lr, r1, lsr #11
 640 02be 4905     		lsls	r1, r1, #21
 641 02c0 41EAD221 		orr	r1, r1, r2, lsr #11
 642              	.LVL79:
 139:fips202.c     ****         Asu ^= Du;
 643              		.loc 1 139 9 is_stmt 1 discriminator 3 view .LVU201
 140:fips202.c     ****         BCu = ROL(Asu, 14);
 644              		.loc 1 140 9 discriminator 3 view .LVU202
 139:fips202.c     ****         Asu ^= Du;
 645              		.loc 1 139 13 is_stmt 0 discriminator 3 view .LVU203
 646 02c4 3B9F     		ldr	r7, [sp, #236]
 647 02c6 099A     		ldr	r2, [sp, #36]
 648 02c8 5740     		eors	r7, r7, r2
 649 02ca 0A9A     		ldr	r2, [sp, #40]
 650 02cc 5640     		eors	r6, r6, r2
 651              	.LVL80:
 652              		.loc 1 140 13 discriminator 3 view .LVU204
 653 02ce BA03     		lsls	r2, r7, #14
 654 02d0 42EA9642 		orr	r2, r2, r6, lsr #18
 655 02d4 4FEA863C 		lsl	ip, r6, #14
 141:fips202.c     ****         Eba = BCa ^ ((~BCe) & BCi);
 142:fips202.c     ****         Eba ^= KeccakF_RoundConstants[round];
 656              		.loc 1 142 13 discriminator 3 view .LVU205
 657 02d8 019E     		ldr	r6, [sp, #4]
 140:fips202.c     ****         BCu = ROL(Asu, 14);
 658              		.loc 1 140 13 discriminator 3 view .LVU206
 659 02da 4CEA974C 		orr	ip, ip, r7, lsr #18
 660              	.LVL81:
 141:fips202.c     ****         Eba = BCa ^ ((~BCe) & BCi);
 661              		.loc 1 141 9 is_stmt 1 discriminator 3 view .LVU207
 662              		.loc 1 142 9 discriminator 3 view .LVU208
 663              		.loc 1 142 13 is_stmt 0 discriminator 3 view .LVU209
 664 02de D6E90076 		ldrd	r7, r6, [r6]
 665 02e2 8AEA0606 		eor	r6, r10, r6
 666 02e6 0D96     		str	r6, [sp, #52]
 667 02e8 89EA0707 		eor	r7, r9, r7
 668 02ec 28EA0506 		bic	r6, r8, r5
 669 02f0 7E40     		eors	r6, r6, r7
 670 02f2 0D9F     		ldr	r7, [sp, #52]
 671 02f4 0C96     		str	r6, [sp, #48]
 672 02f6 24EA0306 		bic	r6, r4, r3
 673 02fa 7740     		eors	r7, r7, r6
 143:fips202.c     ****         Ebe = BCe ^ ((~BCi) & BCo);
 674              		.loc 1 143 29 discriminator 3 view .LVU210
 675 02fc 2EEA0406 		bic	r6, lr, r4
 676              		.loc 1 143 13 discriminator 3 view .LVU211
 677 0300 5E40     		eors	r6, r6, r3
 142:fips202.c     ****         Ebe = BCe ^ ((~BCi) & BCo);
 678              		.loc 1 142 13 discriminator 3 view .LVU212
 679 0302 0D97     		str	r7, [sp, #52]
 680              	.LVL82:
 681              		.loc 1 143 9 is_stmt 1 discriminator 3 view .LVU213
 682              		.loc 1 143 29 is_stmt 0 discriminator 3 view .LVU214
 683 0304 21EA0807 		bic	r7, r1, r8
 684              	.LVL83:
 685              		.loc 1 143 13 discriminator 3 view .LVU215
 686 0308 6F40     		eors	r7, r7, r5
 687 030a 2596     		str	r6, [sp, #148]
 688              	.LVL84:
 144:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 689              		.loc 1 144 9 is_stmt 1 discriminator 3 view .LVU216
 145:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 146:fips202.c     ****         Ebu = BCu ^ ((~BCa) & BCe);
 690              		.loc 1 146 29 is_stmt 0 discriminator 3 view .LVU217
 691 030c 25EA0905 		bic	r5, r5, r9
 692              	.LVL85:
 144:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 693              		.loc 1 144 29 discriminator 3 view .LVU218
 694 0310 2CEA0E06 		bic	r6, ip, lr
 695              	.LVL86:
 696              		.loc 1 146 29 discriminator 3 view .LVU219
 697 0314 23EA0A03 		bic	r3, r3, r10
 698              	.LVL87:
 144:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 699              		.loc 1 144 13 discriminator 3 view .LVU220
 700 0318 7440     		eors	r4, r4, r6
 701              	.LVL88:
 702              		.loc 1 146 13 discriminator 3 view .LVU221
 703 031a 83EA0C03 		eor	r3, r3, ip
 145:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 704              		.loc 1 145 29 discriminator 3 view .LVU222
 705 031e 29EA0206 		bic	r6, r9, r2
 143:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 706              		.loc 1 143 13 discriminator 3 view .LVU223
 707 0322 2497     		str	r7, [sp, #144]
 708              	.LVL89:
 144:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 709              		.loc 1 144 29 discriminator 3 view .LVU224
 710 0324 22EA0107 		bic	r7, r2, r1
 711              		.loc 1 146 13 discriminator 3 view .LVU225
 712 0328 6A40     		eors	r2, r2, r5
 713              	.LVL90:
 145:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 714              		.loc 1 145 13 discriminator 3 view .LVU226
 715 032a 7140     		eors	r1, r1, r6
 716              	.LVL91:
 144:fips202.c     ****         Ebi = BCi ^ ((~BCo) & BCu);
 717              		.loc 1 144 13 discriminator 3 view .LVU227
 718 032c 3C94     		str	r4, [sp, #240]
 719              	.LVL92:
 145:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 720              		.loc 1 145 9 is_stmt 1 discriminator 3 view .LVU228
 721              		.loc 1 146 13 is_stmt 0 discriminator 3 view .LVU229
 722 032e 3092     		str	r2, [sp, #192]
 723              	.LVL93:
 145:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 724              		.loc 1 145 29 discriminator 3 view .LVU230
 725 0330 2AEA0C04 		bic	r4, r10, ip
 726              	.LVL94:
 147:fips202.c     **** 
 148:fips202.c     ****         Abo ^= Do;
 727              		.loc 1 148 13 discriminator 3 view .LVU231
 728 0334 129A     		ldr	r2, [sp, #72]
 146:fips202.c     **** 
 729              		.loc 1 146 13 discriminator 3 view .LVU232
 730 0336 3193     		str	r3, [sp, #196]
 731              		.loc 1 148 13 discriminator 3 view .LVU233
 732 0338 079B     		ldr	r3, [sp, #28]
 145:fips202.c     ****         Ebu = BCu ^ ((~BCa) & BCe);
 733              		.loc 1 145 13 discriminator 3 view .LVU234
 734 033a 1891     		str	r1, [sp, #96]
 735              	.LVL95:
 144:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 736              		.loc 1 144 13 discriminator 3 view .LVU235
 737 033c 87EA0807 		eor	r7, r7, r8
 145:fips202.c     ****         Ebu = BCu ^ ((~BCa) & BCe);
 738              		.loc 1 145 13 discriminator 3 view .LVU236
 739 0340 84EA0E01 		eor	r1, r4, lr
 740              		.loc 1 148 13 discriminator 3 view .LVU237
 741 0344 5A40     		eors	r2, r2, r3
 144:fips202.c     ****         Ebo = BCo ^ ((~BCu) & BCa);
 742              		.loc 1 144 13 discriminator 3 view .LVU238
 743 0346 3B97     		str	r7, [sp, #236]
 744              	.LVL96:
 145:fips202.c     ****         Ebu = BCu ^ ((~BCa) & BCe);
 745              		.loc 1 145 13 discriminator 3 view .LVU239
 746 0348 1991     		str	r1, [sp, #100]
 747              	.LVL97:
 146:fips202.c     **** 
 748              		.loc 1 146 9 is_stmt 1 discriminator 3 view .LVU240
 749              		.loc 1 148 9 discriminator 3 view .LVU241
 149:fips202.c     ****         BCa = ROL(Abo, 28);
 750              		.loc 1 149 9 discriminator 3 view .LVU242
 148:fips202.c     ****         BCa = ROL(Abo, 28);
 751              		.loc 1 148 13 is_stmt 0 discriminator 3 view .LVU243
 752 034a 089B     		ldr	r3, [sp, #32]
 753 034c 1399     		ldr	r1, [sp, #76]
 754              	.LVL98:
 150:fips202.c     ****         Agu ^= Du;
 151:fips202.c     ****         BCe = ROL(Agu, 20);
 152:fips202.c     ****         Aka ^= Da;
 755              		.loc 1 152 13 discriminator 3 view .LVU244
 756 034e 219C     		ldr	r4, [sp, #132]
 153:fips202.c     ****         BCi = ROL(Aka, 3);
 154:fips202.c     ****         Ame ^= De;
 155:fips202.c     ****         BCo = ROL(Ame, 45);
 156:fips202.c     ****         Asi ^= Di;
 757              		.loc 1 156 13 discriminator 3 view .LVU245
 758 0350 389F     		ldr	r7, [sp, #224]
 148:fips202.c     ****         BCa = ROL(Abo, 28);
 759              		.loc 1 148 13 discriminator 3 view .LVU246
 760 0352 5940     		eors	r1, r1, r3
 149:fips202.c     ****         Agu ^= Du;
 761              		.loc 1 149 13 discriminator 3 view .LVU247
 762 0354 4FEA017C 		lsl	ip, r1, #28
 763 0358 4CEA121C 		orr	ip, ip, r2, lsr #4
 764 035c 1207     		lsls	r2, r2, #28
 765 035e 42EA111E 		orr	lr, r2, r1, lsr #4
 766              	.LVL99:
 150:fips202.c     ****         BCe = ROL(Agu, 20);
 767              		.loc 1 150 9 is_stmt 1 discriminator 3 view .LVU248
 151:fips202.c     ****         Aka ^= Da;
 768              		.loc 1 151 9 discriminator 3 view .LVU249
 150:fips202.c     ****         BCe = ROL(Agu, 20);
 769              		.loc 1 150 13 is_stmt 0 discriminator 3 view .LVU250
 770 0362 099B     		ldr	r3, [sp, #36]
 771 0364 1E9A     		ldr	r2, [sp, #120]
 152:fips202.c     ****         BCi = ROL(Aka, 3);
 772              		.loc 1 152 13 discriminator 3 view .LVU251
 773 0366 2099     		ldr	r1, [sp, #128]
 150:fips202.c     ****         BCe = ROL(Agu, 20);
 774              		.loc 1 150 13 discriminator 3 view .LVU252
 775 0368 83EA0208 		eor	r8, r3, r2
 150:fips202.c     ****         BCe = ROL(Agu, 20);
 776              		.loc 1 150 13 discriminator 3 view .LVU253
 777 036c 1F9A     		ldr	r2, [sp, #124]
 778 036e 0A9B     		ldr	r3, [sp, #40]
 779 0370 83EA0206 		eor	r6, r3, r2
 152:fips202.c     ****         BCi = ROL(Aka, 3);
 780              		.loc 1 152 13 discriminator 3 view .LVU254
 781 0374 029A     		ldr	r2, [sp, #8]
 782 0376 4A40     		eors	r2, r2, r1
 783 0378 0399     		ldr	r1, [sp, #12]
 784 037a 4C40     		eors	r4, r4, r1
 153:fips202.c     ****         Ame ^= De;
 785              		.loc 1 153 13 discriminator 3 view .LVU255
 786 037c 4FEAC409 		lsl	r9, r4, #3
 787              	.LVL100:
 153:fips202.c     ****         Ame ^= De;
 788              		.loc 1 153 13 discriminator 3 view .LVU256
 789 0380 49EA5279 		orr	r9, r9, r2, lsr #29
 790 0384 D200     		lsls	r2, r2, #3
 791 0386 42EA5474 		orr	r4, r2, r4, lsr #29
 154:fips202.c     ****         BCo = ROL(Ame, 45);
 792              		.loc 1 154 13 discriminator 3 view .LVU257
 793 038a 2C99     		ldr	r1, [sp, #176]
 794 038c 049A     		ldr	r2, [sp, #16]
 151:fips202.c     ****         Aka ^= Da;
 795              		.loc 1 151 13 discriminator 3 view .LVU258
 796 038e 3505     		lsls	r5, r6, #20
 797 0390 45EA1835 		orr	r5, r5, r8, lsr #12
 798 0394 4FEA0858 		lsl	r8, r8, #20
 799 0398 48EA1633 		orr	r3, r8, r6, lsr #12
 800              	.LVL101:
 152:fips202.c     ****         BCi = ROL(Aka, 3);
 801              		.loc 1 152 9 is_stmt 1 discriminator 3 view .LVU259
 153:fips202.c     ****         Ame ^= De;
 802              		.loc 1 153 9 discriminator 3 view .LVU260
 154:fips202.c     ****         BCo = ROL(Ame, 45);
 803              		.loc 1 154 9 discriminator 3 view .LVU261
 155:fips202.c     ****         Asi ^= Di;
 804              		.loc 1 155 9 discriminator 3 view .LVU262
 154:fips202.c     ****         BCo = ROL(Ame, 45);
 805              		.loc 1 154 13 is_stmt 0 discriminator 3 view .LVU263
 806 039c 5140     		eors	r1, r1, r2
 807 039e 2D9E     		ldr	r6, [sp, #180]
 808 03a0 059A     		ldr	r2, [sp, #20]
 155:fips202.c     ****         Asi ^= Di;
 809              		.loc 1 155 13 discriminator 3 view .LVU264
 810 03a2 4FEAD148 		lsr	r8, r1, #19
 154:fips202.c     ****         BCo = ROL(Ame, 45);
 811              		.loc 1 154 13 discriminator 3 view .LVU265
 812 03a6 7240     		eors	r2, r2, r6
 155:fips202.c     ****         Asi ^= Di;
 813              		.loc 1 155 13 discriminator 3 view .LVU266
 814 03a8 48EA4238 		orr	r8, r8, r2, lsl #13
 815 03ac D20C     		lsrs	r2, r2, #19
 816 03ae 42EA4132 		orr	r2, r2, r1, lsl #13
 817              	.LVL102:
 818              		.loc 1 156 9 is_stmt 1 discriminator 3 view .LVU267
 157:fips202.c     ****         BCu = ROL(Asi, 61);
 819              		.loc 1 157 9 discriminator 3 view .LVU268
 156:fips202.c     ****         BCu = ROL(Asi, 61);
 820              		.loc 1 156 13 is_stmt 0 discriminator 3 view .LVU269
 821 03b2 3799     		ldr	r1, [sp, #220]
 822 03b4 8BEA0106 		eor	r6, fp, r1
 823 03b8 0699     		ldr	r1, [sp, #24]
 824 03ba 7940     		eors	r1, r1, r7
 825              		.loc 1 157 13 discriminator 3 view .LVU270
 826 03bc F708     		lsrs	r7, r6, #3
 827 03be 47EA4177 		orr	r7, r7, r1, lsl #29
 158:fips202.c     ****         Ega = BCa ^ ((~BCe) & BCi);
 828              		.loc 1 158 29 discriminator 3 view .LVU271
 829 03c2 24EA030A 		bic	r10, r4, r3
 157:fips202.c     ****         BCu = ROL(Asi, 61);
 830              		.loc 1 157 13 discriminator 3 view .LVU272
 831 03c6 C908     		lsrs	r1, r1, #3
 832 03c8 41EA4671 		orr	r1, r1, r6, lsl #29
 833              	.LVL103:
 834              		.loc 1 158 9 is_stmt 1 discriminator 3 view .LVU273
 835              		.loc 1 158 13 is_stmt 0 discriminator 3 view .LVU274
 836 03cc 8AEA0E0A 		eor	r10, r10, lr
 837              		.loc 1 158 29 discriminator 3 view .LVU275
 838 03d0 29EA0506 		bic	r6, r9, r5
 839              		.loc 1 158 13 discriminator 3 view .LVU276
 840 03d4 86EA0C06 		eor	r6, r6, ip
 841 03d8 CDF8B0A0 		str	r10, [sp, #176]
 842              	.LVL104:
 159:fips202.c     ****         Ege = BCe ^ ((~BCi) & BCo);
 843              		.loc 1 159 29 discriminator 3 view .LVU277
 844 03dc 28EA040A 		bic	r10, r8, r4
 845              		.loc 1 159 13 discriminator 3 view .LVU278
 846 03e0 8AEA030A 		eor	r10, r10, r3
 158:fips202.c     ****         Ega = BCa ^ ((~BCe) & BCi);
 847              		.loc 1 158 13 discriminator 3 view .LVU279
 848 03e4 2D96     		str	r6, [sp, #180]
 849              	.LVL105:
 850              		.loc 1 159 9 is_stmt 1 discriminator 3 view .LVU280
 851              		.loc 1 159 29 is_stmt 0 discriminator 3 view .LVU281
 852 03e6 22EA0906 		bic	r6, r2, r9
 853              	.LVL106:
 854              		.loc 1 159 13 discriminator 3 view .LVU282
 855 03ea 6E40     		eors	r6, r6, r5
 856 03ec CDF848A0 		str	r10, [sp, #72]
 857              	.LVL107:
 160:fips202.c     ****         Egi = BCi ^ ((~BCo) & BCu);
 858              		.loc 1 160 29 discriminator 3 view .LVU283
 859 03f0 27EA080A 		bic	r10, r7, r8
 860              		.loc 1 160 13 discriminator 3 view .LVU284
 861 03f4 8AEA0404 		eor	r4, r10, r4
 862              	.LVL108:
 159:fips202.c     ****         Ege = BCe ^ ((~BCi) & BCo);
 863              		.loc 1 159 13 discriminator 3 view .LVU285
 864 03f8 1396     		str	r6, [sp, #76]
 865              	.LVL109:
 866              		.loc 1 160 9 is_stmt 1 discriminator 3 view .LVU286
 867              		.loc 1 160 29 is_stmt 0 discriminator 3 view .LVU287
 868 03fa 21EA0206 		bic	r6, r1, r2
 869              	.LVL110:
 870              		.loc 1 160 13 discriminator 3 view .LVU288
 871 03fe 2094     		str	r4, [sp, #128]
 872              	.LVL111:
 873              		.loc 1 160 13 discriminator 3 view .LVU289
 874 0400 86EA0904 		eor	r4, r6, r9
 161:fips202.c     ****         Ego = BCo ^ ((~BCu) & BCa);
 875              		.loc 1 161 29 discriminator 3 view .LVU290
 876 0404 2EEA0706 		bic	r6, lr, r7
 162:fips202.c     ****         Egu = BCu ^ ((~BCa) & BCe);
 877              		.loc 1 162 29 discriminator 3 view .LVU291
 878 0408 23EA0E0E 		bic	lr, r3, lr
 879              	.LVL112:
 880              		.loc 1 162 13 discriminator 3 view .LVU292
 881 040c 8EEA0703 		eor	r3, lr, r7
 882              	.LVL113:
 883              		.loc 1 162 29 discriminator 3 view .LVU293
 884 0410 25EA0C05 		bic	r5, r5, ip
 885              	.LVL114:
 160:fips202.c     ****         Egi = BCi ^ ((~BCo) & BCu);
 886              		.loc 1 160 13 discriminator 3 view .LVU294
 887 0414 2194     		str	r4, [sp, #132]
 888              	.LVL115:
 161:fips202.c     ****         Ego = BCo ^ ((~BCu) & BCa);
 889              		.loc 1 161 9 is_stmt 1 discriminator 3 view .LVU295
 161:fips202.c     ****         Ego = BCo ^ ((~BCu) & BCa);
 890              		.loc 1 161 29 is_stmt 0 discriminator 3 view .LVU296
 891 0416 2CEA0104 		bic	r4, ip, r1
 892              	.LVL116:
 161:fips202.c     ****         Ego = BCo ^ ((~BCu) & BCa);
 893              		.loc 1 161 13 discriminator 3 view .LVU297
 894 041a 6240     		eors	r2, r2, r4
 895              	.LVL117:
 896              		.loc 1 162 13 discriminator 3 view .LVU298
 897 041c 1E93     		str	r3, [sp, #120]
 898              	.LVL118:
 899              		.loc 1 162 13 discriminator 3 view .LVU299
 900 041e 85EA0103 		eor	r3, r5, r1
 161:fips202.c     ****         Ego = BCo ^ ((~BCu) & BCa);
 901              		.loc 1 161 13 discriminator 3 view .LVU300
 902 0422 3892     		str	r2, [sp, #224]
 903              	.LVL119:
 904              		.loc 1 162 9 is_stmt 1 discriminator 3 view .LVU301
 905              		.loc 1 162 13 is_stmt 0 discriminator 3 view .LVU302
 906 0424 1F93     		str	r3, [sp, #124]
 907              	.LVL120:
 163:fips202.c     **** 
 164:fips202.c     ****         Abe ^= De;
 908              		.loc 1 164 9 is_stmt 1 discriminator 3 view .LVU303
 165:fips202.c     ****         BCa = ROL(Abe, 1);
 909              		.loc 1 165 9 discriminator 3 view .LVU304
 164:fips202.c     ****         BCa = ROL(Abe, 1);
 910              		.loc 1 164 13 is_stmt 0 discriminator 3 view .LVU305
 911 0426 0E9A     		ldr	r2, [sp, #56]
 912              	.LVL121:
 164:fips202.c     ****         BCa = ROL(Abe, 1);
 913              		.loc 1 164 13 discriminator 3 view .LVU306
 914 0428 049B     		ldr	r3, [sp, #16]
 915              	.LVL122:
 164:fips202.c     ****         BCa = ROL(Abe, 1);
 916              		.loc 1 164 13 discriminator 3 view .LVU307
 917 042a 83EA0209 		eor	r9, r3, r2
 918 042e 059B     		ldr	r3, [sp, #20]
 919 0430 0F9A     		ldr	r2, [sp, #60]
 920 0432 83EA0205 		eor	r5, r3, r2
 166:fips202.c     ****         Agi ^= Di;
 921              		.loc 1 166 13 discriminator 3 view .LVU308
 922 0436 1A9B     		ldr	r3, [sp, #104]
 161:fips202.c     ****         Egu = BCu ^ ((~BCa) & BCe);
 923              		.loc 1 161 13 discriminator 3 view .LVU309
 924 0438 86EA0806 		eor	r6, r6, r8
 925              		.loc 1 166 13 discriminator 3 view .LVU310
 926 043c 8BEA0302 		eor	r2, fp, r3
 161:fips202.c     ****         Egu = BCu ^ ((~BCa) & BCe);
 927              		.loc 1 161 13 discriminator 3 view .LVU311
 928 0440 3796     		str	r6, [sp, #220]
 929              	.LVL123:
 930              		.loc 1 166 13 discriminator 3 view .LVU312
 931 0442 069B     		ldr	r3, [sp, #24]
 932 0444 1B99     		ldr	r1, [sp, #108]
 933              	.LVL124:
 934              		.loc 1 166 13 discriminator 3 view .LVU313
 935 0446 83EA0107 		eor	r7, r3, r1
 167:fips202.c     ****         BCe = ROL(Agi, 6);
 936              		.loc 1 167 13 discriminator 3 view .LVU314
 937 044a BE01     		lsls	r6, r7, #6
 938 044c 46EA9266 		orr	r6, r6, r2, lsr #26
 939 0450 9201     		lsls	r2, r2, #6
 940 0452 42EA9763 		orr	r3, r2, r7, lsr #26
 168:fips202.c     ****         Ako ^= Do;
 941              		.loc 1 168 13 discriminator 3 view .LVU315
 942 0456 2699     		ldr	r1, [sp, #152]
 943 0458 079A     		ldr	r2, [sp, #28]
 944 045a 82EA0107 		eor	r7, r2, r1
 945 045e 2799     		ldr	r1, [sp, #156]
 946 0460 089A     		ldr	r2, [sp, #32]
 165:fips202.c     ****         Agi ^= Di;
 947              		.loc 1 165 13 discriminator 3 view .LVU316
 948 0462 4FEA450C 		lsl	ip, r5, #1
 949 0466 4CEAD97C 		orr	ip, ip, r9, lsr #31
 950              		.loc 1 168 13 discriminator 3 view .LVU317
 951 046a 4A40     		eors	r2, r2, r1
 165:fips202.c     ****         Agi ^= Di;
 952              		.loc 1 165 13 discriminator 3 view .LVU318
 953 046c 4FEA4909 		lsl	r9, r9, #1
 169:fips202.c     ****         BCi = ROL(Ako, 25);
 954              		.loc 1 169 13 discriminator 3 view .LVU319
 955 0470 7906     		lsls	r1, r7, #25
 165:fips202.c     ****         Agi ^= Di;
 956              		.loc 1 165 13 discriminator 3 view .LVU320
 957 0472 49EAD574 		orr	r4, r9, r5, lsr #31
 958              	.LVL125:
 166:fips202.c     ****         BCe = ROL(Agi, 6);
 959              		.loc 1 166 9 is_stmt 1 discriminator 3 view .LVU321
 167:fips202.c     ****         Ako ^= Do;
 960              		.loc 1 167 9 discriminator 3 view .LVU322
 168:fips202.c     ****         BCi = ROL(Ako, 25);
 961              		.loc 1 168 9 discriminator 3 view .LVU323
 962              		.loc 1 169 9 discriminator 3 view .LVU324
 963              		.loc 1 169 13 is_stmt 0 discriminator 3 view .LVU325
 964 0476 41EAD211 		orr	r1, r1, r2, lsr #7
 170:fips202.c     ****         Amu ^= Du;
 965              		.loc 1 170 13 discriminator 3 view .LVU326
 966 047a 329D     		ldr	r5, [sp, #200]
 171:fips202.c     ****         BCo = ROL(Amu, 8);
 172:fips202.c     ****         Asa ^= Da;
 967              		.loc 1 172 13 discriminator 3 view .LVU327
 968 047c DDF8D090 		ldr	r9, [sp, #208]
 169:fips202.c     ****         Amu ^= Du;
 969              		.loc 1 169 13 discriminator 3 view .LVU328
 970 0480 4FEA4268 		lsl	r8, r2, #25
 170:fips202.c     ****         Amu ^= Du;
 971              		.loc 1 170 13 discriminator 3 view .LVU329
 972 0484 099A     		ldr	r2, [sp, #36]
 169:fips202.c     ****         Amu ^= Du;
 973              		.loc 1 169 13 discriminator 3 view .LVU330
 974 0486 48EAD718 		orr	r8, r8, r7, lsr #7
 975              	.LVL126:
 170:fips202.c     ****         Amu ^= Du;
 976              		.loc 1 170 9 is_stmt 1 discriminator 3 view .LVU331
 171:fips202.c     ****         BCo = ROL(Amu, 8);
 977              		.loc 1 171 9 discriminator 3 view .LVU332
 170:fips202.c     ****         Amu ^= Du;
 978              		.loc 1 170 13 is_stmt 0 discriminator 3 view .LVU333
 979 048a 5540     		eors	r5, r5, r2
 980 048c 339F     		ldr	r7, [sp, #204]
 981 048e 0A9A     		ldr	r2, [sp, #40]
 982 0490 7A40     		eors	r2, r2, r7
 171:fips202.c     ****         BCo = ROL(Amu, 8);
 983              		.loc 1 171 13 discriminator 3 view .LVU334
 984 0492 4FEA022E 		lsl	lr, r2, #8
 985 0496 4EEA156E 		orr	lr, lr, r5, lsr #24
 986 049a 2D02     		lsls	r5, r5, #8
 987 049c 45EA1265 		orr	r5, r5, r2, lsr #24
 988              	.LVL127:
 989              		.loc 1 172 9 is_stmt 1 discriminator 3 view .LVU335
 173:fips202.c     ****         BCu = ROL(Asa, 18);
 990              		.loc 1 173 9 discriminator 3 view .LVU336
 172:fips202.c     ****         BCu = ROL(Asa, 18);
 991              		.loc 1 172 13 is_stmt 0 discriminator 3 view .LVU337
 992 04a0 0B9F     		ldr	r7, [sp, #44]
 993 04a2 029A     		ldr	r2, [sp, #8]
 994 04a4 7A40     		eors	r2, r2, r7
 995 04a6 039F     		ldr	r7, [sp, #12]
 996 04a8 87EA0909 		eor	r9, r7, r9
 997              		.loc 1 173 13 discriminator 3 view .LVU338
 998 04ac 4FEA8947 		lsl	r7, r9, #18
 999 04b0 47EA9237 		orr	r7, r7, r2, lsr #14
 174:fips202.c     ****         Eka = BCa ^ ((~BCe) & BCi);
 1000              		.loc 1 174 29 discriminator 3 view .LVU339
 1001 04b4 21EA030A 		bic	r10, r1, r3
 173:fips202.c     ****         BCu = ROL(Asa, 18);
 1002              		.loc 1 173 13 discriminator 3 view .LVU340
 1003 04b8 9204     		lsls	r2, r2, #18
 1004 04ba 42EA9932 		orr	r2, r2, r9, lsr #14
 1005              	.LVL128:
 1006              		.loc 1 174 9 is_stmt 1 discriminator 3 view .LVU341
 1007              		.loc 1 174 13 is_stmt 0 discriminator 3 view .LVU342
 1008 04be 8AEA040A 		eor	r10, r10, r4
 1009              		.loc 1 174 29 discriminator 3 view .LVU343
 1010 04c2 28EA0609 		bic	r9, r8, r6
 1011              		.loc 1 174 13 discriminator 3 view .LVU344
 1012 04c6 89EA0C09 		eor	r9, r9, ip
 1013 04ca CDF868A0 		str	r10, [sp, #104]
 175:fips202.c     ****         Eke = BCe ^ ((~BCi) & BCo);
 1014              		.loc 1 175 29 discriminator 3 view .LVU345
 1015 04ce 25EA010A 		bic	r10, r5, r1
 1016              		.loc 1 175 13 discriminator 3 view .LVU346
 1017 04d2 8AEA030A 		eor	r10, r10, r3
 174:fips202.c     ****         Eka = BCa ^ ((~BCe) & BCi);
 1018              		.loc 1 174 13 discriminator 3 view .LVU347
 1019 04d6 CDF86C90 		str	r9, [sp, #108]
 1020              	.LVL129:
 1021              		.loc 1 175 9 is_stmt 1 discriminator 3 view .LVU348
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 177:fips202.c     ****         Eko = BCo ^ ((~BCu) & BCa);
 178:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1022              		.loc 1 178 29 is_stmt 0 discriminator 3 view .LVU349
 1023 04da 23EA0403 		bic	r3, r3, r4
 1024              	.LVL130:
 175:fips202.c     ****         Eke = BCe ^ ((~BCi) & BCo);
 1025              		.loc 1 175 29 discriminator 3 view .LVU350
 1026 04de 2EEA0809 		bic	r9, lr, r8
 1027              	.LVL131:
 175:fips202.c     ****         Eke = BCe ^ ((~BCi) & BCo);
 1028              		.loc 1 175 13 discriminator 3 view .LVU351
 1029 04e2 89EA0609 		eor	r9, r9, r6
 1030              		.loc 1 178 13 discriminator 3 view .LVU352
 1031 04e6 5340     		eors	r3, r3, r2
 1032              		.loc 1 178 29 discriminator 3 view .LVU353
 1033 04e8 26EA0C06 		bic	r6, r6, ip
 175:fips202.c     ****         Eke = BCe ^ ((~BCi) & BCo);
 1034              		.loc 1 175 13 discriminator 3 view .LVU354
 1035 04ec CDF8C8A0 		str	r10, [sp, #200]
 1036              	.LVL132:
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1037              		.loc 1 176 29 discriminator 3 view .LVU355
 1038 04f0 22EA050A 		bic	r10, r2, r5
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1039              		.loc 1 176 13 discriminator 3 view .LVU356
 1040 04f4 8AEA0101 		eor	r1, r10, r1
 1041              	.LVL133:
 175:fips202.c     ****         Eke = BCe ^ ((~BCi) & BCo);
 1042              		.loc 1 175 13 discriminator 3 view .LVU357
 1043 04f8 CDF8CC90 		str	r9, [sp, #204]
 1044              	.LVL134:
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1045              		.loc 1 176 9 is_stmt 1 discriminator 3 view .LVU358
 1046              		.loc 1 178 13 is_stmt 0 discriminator 3 view .LVU359
 1047 04fc 3493     		str	r3, [sp, #208]
 1048              	.LVL135:
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1049              		.loc 1 176 29 discriminator 3 view .LVU360
 1050 04fe 27EA0E09 		bic	r9, r7, lr
 1051              	.LVL136:
 1052              		.loc 1 178 13 discriminator 3 view .LVU361
 1053 0502 86EA0703 		eor	r3, r6, r7
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1054              		.loc 1 176 13 discriminator 3 view .LVU362
 1055 0506 0E91     		str	r1, [sp, #56]
 1056              	.LVL137:
 1057              		.loc 1 178 13 discriminator 3 view .LVU363
 1058 0508 3D93     		str	r3, [sp, #244]
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1059              		.loc 1 176 13 discriminator 3 view .LVU364
 1060 050a 89EA0801 		eor	r1, r9, r8
 179:fips202.c     **** 
 180:fips202.c     ****         Abu ^= Du;
 1061              		.loc 1 180 13 discriminator 3 view .LVU365
 1062 050e 099B     		ldr	r3, [sp, #36]
 176:fips202.c     ****         Eki = BCi ^ ((~BCo) & BCu);
 1063              		.loc 1 176 13 discriminator 3 view .LVU366
 1064 0510 0F91     		str	r1, [sp, #60]
 1065              	.LVL138:
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1066              		.loc 1 177 9 is_stmt 1 discriminator 3 view .LVU367
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1067              		.loc 1 177 29 is_stmt 0 discriminator 3 view .LVU368
 1068 0512 24EA0208 		bic	r8, r4, r2
 1069              	.LVL139:
 1070              		.loc 1 180 13 discriminator 3 view .LVU369
 1071 0516 149A     		ldr	r2, [sp, #80]
 1072              	.LVL140:
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1073              		.loc 1 177 29 discriminator 3 view .LVU370
 1074 0518 2CEA0701 		bic	r1, ip, r7
 1075              	.LVL141:
 1076              		.loc 1 180 13 discriminator 3 view .LVU371
 1077 051c 83EA0207 		eor	r7, r3, r2
 1078 0520 0A9B     		ldr	r3, [sp, #40]
 1079 0522 159A     		ldr	r2, [sp, #84]
 1080 0524 83EA0206 		eor	r6, r3, r2
 181:fips202.c     ****         BCa = ROL(Abu, 27);
 182:fips202.c     ****         Aga ^= Da;
 1081              		.loc 1 182 13 discriminator 3 view .LVU372
 1082 0528 169A     		ldr	r2, [sp, #88]
 1083 052a 029B     		ldr	r3, [sp, #8]
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1084              		.loc 1 177 13 discriminator 3 view .LVU373
 1085 052c 81EA0E01 		eor	r1, r1, lr
 1086              		.loc 1 182 13 discriminator 3 view .LVU374
 1087 0530 5340     		eors	r3, r3, r2
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1088              		.loc 1 177 13 discriminator 3 view .LVU375
 1089 0532 2791     		str	r1, [sp, #156]
 1090              	.LVL142:
 178:fips202.c     **** 
 1091              		.loc 1 178 9 is_stmt 1 discriminator 3 view .LVU376
 180:fips202.c     ****         BCa = ROL(Abu, 27);
 1092              		.loc 1 180 9 discriminator 3 view .LVU377
 181:fips202.c     ****         BCa = ROL(Abu, 27);
 1093              		.loc 1 181 9 discriminator 3 view .LVU378
 1094              		.loc 1 182 13 is_stmt 0 discriminator 3 view .LVU379
 1095 0534 039A     		ldr	r2, [sp, #12]
 1096 0536 1799     		ldr	r1, [sp, #92]
 1097              	.LVL143:
 181:fips202.c     ****         BCa = ROL(Abu, 27);
 1098              		.loc 1 181 13 discriminator 3 view .LVU380
 1099 0538 4FEAC66E 		lsl	lr, r6, #27
 1100              	.LVL144:
 181:fips202.c     ****         BCa = ROL(Abu, 27);
 1101              		.loc 1 181 13 discriminator 3 view .LVU381
 1102 053c 4EEA571E 		orr	lr, lr, r7, lsr #5
 1103 0540 FF06     		lsls	r7, r7, #27
 1104 0542 47EA561C 		orr	ip, r7, r6, lsr #5
 1105              	.LVL145:
 1106              		.loc 1 182 9 is_stmt 1 discriminator 3 view .LVU382
 183:fips202.c     ****         BCe = ROL(Aga, 36);
 1107              		.loc 1 183 9 discriminator 3 view .LVU383
 182:fips202.c     ****         BCe = ROL(Aga, 36);
 1108              		.loc 1 182 13 is_stmt 0 discriminator 3 view .LVU384
 1109 0546 5140     		eors	r1, r1, r2
 1110              		.loc 1 183 13 discriminator 3 view .LVU385
 1111 0548 1E0F     		lsrs	r6, r3, #28
 1112 054a 46EA0116 		orr	r6, r6, r1, lsl #4
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1113              		.loc 1 177 13 discriminator 3 view .LVU386
 1114 054e 88EA0505 		eor	r5, r8, r5
 1115              		.loc 1 183 13 discriminator 3 view .LVU387
 1116 0552 090F     		lsrs	r1, r1, #28
 1117 0554 41EA0311 		orr	r1, r1, r3, lsl #4
 1118              	.LVL146:
 184:fips202.c     ****         Ake ^= De;
 1119              		.loc 1 184 9 is_stmt 1 discriminator 3 view .LVU388
 185:fips202.c     ****         BCi = ROL(Ake, 10);
 1120              		.loc 1 185 9 discriminator 3 view .LVU389
 177:fips202.c     ****         Eku = BCu ^ ((~BCa) & BCe);
 1121              		.loc 1 177 13 is_stmt 0 discriminator 3 view .LVU390
 1122 0558 2695     		str	r5, [sp, #152]
 1123              	.LVL147:
 184:fips202.c     ****         Ake ^= De;
 1124              		.loc 1 184 13 discriminator 3 view .LVU391
 1125 055a 049B     		ldr	r3, [sp, #16]
 1126 055c 229A     		ldr	r2, [sp, #136]
 186:fips202.c     ****         Ami ^= Di;
 187:fips202.c     ****         BCo = ROL(Ami, 15);
 188:fips202.c     ****         Aso ^= Do;
 1127              		.loc 1 188 13 discriminator 3 view .LVU392
 1128 055e 399F     		ldr	r7, [sp, #228]
 184:fips202.c     ****         BCi = ROL(Ake, 10);
 1129              		.loc 1 184 13 discriminator 3 view .LVU393
 1130 0560 83EA0204 		eor	r4, r3, r2
 1131 0564 239A     		ldr	r2, [sp, #140]
 1132 0566 059B     		ldr	r3, [sp, #20]
 1133 0568 83EA0205 		eor	r5, r3, r2
 185:fips202.c     ****         BCi = ROL(Ake, 10);
 1134              		.loc 1 185 13 discriminator 3 view .LVU394
 1135 056c 4FEA8528 		lsl	r8, r5, #10
 1136 0570 48EA9458 		orr	r8, r8, r4, lsr #22
 1137 0574 A402     		lsls	r4, r4, #10
 1138 0576 44EA9555 		orr	r5, r4, r5, lsr #22
 1139              	.LVL148:
 186:fips202.c     ****         Ami ^= Di;
 1140              		.loc 1 186 9 is_stmt 1 discriminator 3 view .LVU395
 187:fips202.c     ****         Aso ^= Do;
 1141              		.loc 1 187 9 discriminator 3 view .LVU396
 186:fips202.c     ****         Ami ^= Di;
 1142              		.loc 1 186 13 is_stmt 0 discriminator 3 view .LVU397
 1143 057a 069A     		ldr	r2, [sp, #24]
 1144 057c 2F9C     		ldr	r4, [sp, #188]
 1145 057e 2E9B     		ldr	r3, [sp, #184]
 1146 0580 5440     		eors	r4, r4, r2
 1147 0582 8BEA0303 		eor	r3, fp, r3
 187:fips202.c     ****         Aso ^= Do;
 1148              		.loc 1 187 13 discriminator 3 view .LVU398
 1149 0586 E203     		lsls	r2, r4, #15
 1150 0588 42EA5342 		orr	r2, r2, r3, lsr #17
 1151 058c DB03     		lsls	r3, r3, #15
 1152 058e 43EA5443 		orr	r3, r3, r4, lsr #17
 1153              	.LVL149:
 1154              		.loc 1 188 9 is_stmt 1 discriminator 3 view .LVU399
 189:fips202.c     ****         BCu = ROL(Aso, 56);
 1155              		.loc 1 189 9 discriminator 3 view .LVU400
 188:fips202.c     ****         BCu = ROL(Aso, 56);
 1156              		.loc 1 188 13 is_stmt 0 discriminator 3 view .LVU401
 1157 0592 079C     		ldr	r4, [sp, #28]
 1158 0594 84EA0709 		eor	r9, r4, r7
 1159 0598 3A9F     		ldr	r7, [sp, #232]
 1160 059a 089C     		ldr	r4, [sp, #32]
 1161 059c 7C40     		eors	r4, r4, r7
 1162              		.loc 1 189 13 discriminator 3 view .LVU402
 1163 059e 4FEA1927 		lsr	r7, r9, #8
 1164 05a2 47EA0467 		orr	r7, r7, r4, lsl #24
 190:fips202.c     ****         Ema = BCa ^ ((~BCe) & BCi);
 1165              		.loc 1 190 29 discriminator 3 view .LVU403
 1166 05a6 25EA060A 		bic	r10, r5, r6
 189:fips202.c     ****         BCu = ROL(Aso, 56);
 1167              		.loc 1 189 13 discriminator 3 view .LVU404
 1168 05aa 240A     		lsrs	r4, r4, #8
 1169 05ac 44EA0964 		orr	r4, r4, r9, lsl #24
 1170              	.LVL150:
 1171              		.loc 1 190 9 is_stmt 1 discriminator 3 view .LVU405
 1172              		.loc 1 190 13 is_stmt 0 discriminator 3 view .LVU406
 1173 05b0 8AEA0C0A 		eor	r10, r10, ip
 1174              		.loc 1 190 29 discriminator 3 view .LVU407
 1175 05b4 28EA0109 		bic	r9, r8, r1
 1176              		.loc 1 190 13 discriminator 3 view .LVU408
 1177 05b8 89EA0E09 		eor	r9, r9, lr
 1178 05bc CDF8E4A0 		str	r10, [sp, #228]
 1179              	.LVL151:
 191:fips202.c     ****         Eme = BCe ^ ((~BCi) & BCo);
 1180              		.loc 1 191 29 discriminator 3 view .LVU409
 1181 05c0 23EA050A 		bic	r10, r3, r5
 1182              		.loc 1 191 13 discriminator 3 view .LVU410
 1183 05c4 8AEA060A 		eor	r10, r10, r6
 190:fips202.c     ****         Ema = BCa ^ ((~BCe) & BCi);
 1184              		.loc 1 190 13 discriminator 3 view .LVU411
 1185 05c8 CDF8E890 		str	r9, [sp, #232]
 1186              	.LVL152:
 1187              		.loc 1 191 9 is_stmt 1 discriminator 3 view .LVU412
 1188              		.loc 1 191 29 is_stmt 0 discriminator 3 view .LVU413
 1189 05cc 22EA0809 		bic	r9, r2, r8
 1190              	.LVL153:
 1191              		.loc 1 191 13 discriminator 3 view .LVU414
 1192 05d0 89EA0109 		eor	r9, r9, r1
 1193 05d4 CDF858A0 		str	r10, [sp, #88]
 1194              	.LVL154:
 192:fips202.c     ****         Emi = BCi ^ ((~BCo) & BCu);
 1195              		.loc 1 192 29 discriminator 3 view .LVU415
 1196 05d8 27EA030A 		bic	r10, r7, r3
 1197              		.loc 1 192 13 discriminator 3 view .LVU416
 1198 05dc 8AEA0505 		eor	r5, r10, r5
 1199              	.LVL155:
 191:fips202.c     ****         Eme = BCe ^ ((~BCi) & BCo);
 1200              		.loc 1 191 13 discriminator 3 view .LVU417
 1201 05e0 CDF85C90 		str	r9, [sp, #92]
 1202              	.LVL156:
 1203              		.loc 1 192 9 is_stmt 1 discriminator 3 view .LVU418
 1204              		.loc 1 192 29 is_stmt 0 discriminator 3 view .LVU419
 1205 05e4 24EA0209 		bic	r9, r4, r2
 1206              	.LVL157:
 1207              		.loc 1 192 13 discriminator 3 view .LVU420
 1208 05e8 2E95     		str	r5, [sp, #184]
 1209              	.LVL158:
 1210              		.loc 1 192 13 discriminator 3 view .LVU421
 1211 05ea 89EA0805 		eor	r5, r9, r8
 193:fips202.c     ****         Emo = BCo ^ ((~BCu) & BCa);
 1212              		.loc 1 193 29 discriminator 3 view .LVU422
 1213 05ee 2CEA0708 		bic	r8, ip, r7
 1214              	.LVL159:
 1215              		.loc 1 193 13 discriminator 3 view .LVU423
 1216 05f2 88EA0303 		eor	r3, r8, r3
 1217              	.LVL160:
 192:fips202.c     ****         Emi = BCi ^ ((~BCo) & BCu);
 1218              		.loc 1 192 13 discriminator 3 view .LVU424
 1219 05f6 2F95     		str	r5, [sp, #188]
 1220              	.LVL161:
 1221              		.loc 1 193 9 is_stmt 1 discriminator 3 view .LVU425
 1222              		.loc 1 193 29 is_stmt 0 discriminator 3 view .LVU426
 1223 05f8 2EEA0405 		bic	r5, lr, r4
 1224              	.LVL162:
 194:fips202.c     ****         Emu = BCu ^ ((~BCa) & BCe);
 1225              		.loc 1 194 29 discriminator 3 view .LVU427
 1226 05fc 26EA0C0C 		bic	ip, r6, ip
 1227              	.LVL163:
 193:fips202.c     ****         Emo = BCo ^ ((~BCu) & BCa);
 1228              		.loc 1 193 13 discriminator 3 view .LVU428
 1229 0600 1493     		str	r3, [sp, #80]
 1230              	.LVL164:
 193:fips202.c     ****         Emo = BCo ^ ((~BCu) & BCa);
 1231              		.loc 1 193 13 discriminator 3 view .LVU429
 1232 0602 85EA0203 		eor	r3, r5, r2
 1233              		.loc 1 194 29 discriminator 3 view .LVU430
 1234 0606 21EA0E01 		bic	r1, r1, lr
 1235              	.LVL165:
 193:fips202.c     ****         Emo = BCo ^ ((~BCu) & BCa);
 1236              		.loc 1 193 13 discriminator 3 view .LVU431
 1237 060a 1593     		str	r3, [sp, #84]
 1238              	.LVL166:
 1239              		.loc 1 194 9 is_stmt 1 discriminator 3 view .LVU432
 1240              		.loc 1 194 13 is_stmt 0 discriminator 3 view .LVU433
 1241 060c 8CEA0703 		eor	r3, ip, r7
 1242              	.LVL167:
 1243              		.loc 1 194 13 discriminator 3 view .LVU434
 1244 0610 2293     		str	r3, [sp, #136]
 1245              	.LVL168:
 1246              		.loc 1 194 13 discriminator 3 view .LVU435
 1247 0612 81EA0403 		eor	r3, r1, r4
 1248 0616 2393     		str	r3, [sp, #140]
 1249              	.LVL169:
 195:fips202.c     **** 
 196:fips202.c     ****         Abi ^= Di;
 1250              		.loc 1 196 9 is_stmt 1 discriminator 3 view .LVU436
 197:fips202.c     ****         BCa = ROL(Abi, 62);
 1251              		.loc 1 197 9 discriminator 3 view .LVU437
 196:fips202.c     ****         BCa = ROL(Abi, 62);
 1252              		.loc 1 196 13 is_stmt 0 discriminator 3 view .LVU438
 1253 0618 109B     		ldr	r3, [sp, #64]
 1254              	.LVL170:
 196:fips202.c     ****         BCa = ROL(Abi, 62);
 1255              		.loc 1 196 13 discriminator 3 view .LVU439
 1256 061a 119A     		ldr	r2, [sp, #68]
 1257 061c 8BEA0309 		eor	r9, fp, r3
 1258 0620 069B     		ldr	r3, [sp, #24]
 1259 0622 83EA020A 		eor	r10, r3, r2
 198:fips202.c     ****         Ago ^= Do;
 1260              		.loc 1 198 13 discriminator 3 view .LVU440
 1261 0626 079B     		ldr	r3, [sp, #28]
 1262 0628 1C9A     		ldr	r2, [sp, #112]
 1263 062a 83EA020C 		eor	ip, r3, r2
 1264 062e 089B     		ldr	r3, [sp, #32]
 1265 0630 1D9A     		ldr	r2, [sp, #116]
 1266 0632 83EA0207 		eor	r7, r3, r2
 1267              	.LVL171:
 199:fips202.c     ****         BCe = ROL(Ago, 55);
 200:fips202.c     ****         Aku ^= Du;
 1268              		.loc 1 200 13 discriminator 3 view .LVU441
 1269 0636 099B     		ldr	r3, [sp, #36]
 1270 0638 289A     		ldr	r2, [sp, #160]
 1271 063a 83EA0204 		eor	r4, r3, r2
 1272 063e 299A     		ldr	r2, [sp, #164]
 1273 0640 0A9B     		ldr	r3, [sp, #40]
 1274 0642 83EA0201 		eor	r1, r3, r2
 201:fips202.c     ****         BCi = ROL(Aku, 39);
 202:fips202.c     ****         Ama ^= Da;
 1275              		.loc 1 202 13 discriminator 3 view .LVU442
 1276 0646 029B     		ldr	r3, [sp, #8]
 1277 0648 2A9A     		ldr	r2, [sp, #168]
 197:fips202.c     ****         Ago ^= Do;
 1278              		.loc 1 197 13 discriminator 3 view .LVU443
 1279 064a 4FEA9906 		lsr	r6, r9, #2
 1280              		.loc 1 202 13 discriminator 3 view .LVU444
 1281 064e 83EA020B 		eor	fp, r3, r2
 1282              	.LVL172:
 199:fips202.c     ****         BCe = ROL(Ago, 55);
 1283              		.loc 1 199 13 discriminator 3 view .LVU445
 1284 0652 4FEA5C2E 		lsr	lr, ip, #9
 1285              		.loc 1 202 13 discriminator 3 view .LVU446
 1286 0656 2B9A     		ldr	r2, [sp, #172]
 1287 0658 039B     		ldr	r3, [sp, #12]
 197:fips202.c     ****         Ago ^= Do;
 1288              		.loc 1 197 13 discriminator 3 view .LVU447
 1289 065a 46EA8A76 		orr	r6, r6, r10, lsl #30
 199:fips202.c     ****         BCe = ROL(Ago, 55);
 1290              		.loc 1 199 13 discriminator 3 view .LVU448
 1291 065e 4EEAC75E 		orr	lr, lr, r7, lsl #23
 197:fips202.c     ****         Ago ^= Do;
 1292              		.loc 1 197 13 discriminator 3 view .LVU449
 1293 0662 4FEA9A0A 		lsr	r10, r10, #2
 199:fips202.c     ****         BCe = ROL(Ago, 55);
 1294              		.loc 1 199 13 discriminator 3 view .LVU450
 1295 0666 7F0A     		lsrs	r7, r7, #9
 1296 0668 47EACC55 		orr	r5, r7, ip, lsl #23
 197:fips202.c     ****         Ago ^= Do;
 1297              		.loc 1 197 13 discriminator 3 view .LVU451
 1298 066c 4AEA8979 		orr	r9, r10, r9, lsl #30
 1299              	.LVL173:
 198:fips202.c     ****         BCe = ROL(Ago, 55);
 1300              		.loc 1 198 9 is_stmt 1 discriminator 3 view .LVU452
 199:fips202.c     ****         Aku ^= Du;
 1301              		.loc 1 199 9 discriminator 3 view .LVU453
 200:fips202.c     ****         BCi = ROL(Aku, 39);
 1302              		.loc 1 200 9 discriminator 3 view .LVU454
 201:fips202.c     ****         Ama ^= Da;
 1303              		.loc 1 201 9 discriminator 3 view .LVU455
 201:fips202.c     ****         Ama ^= Da;
 1304              		.loc 1 201 13 is_stmt 0 discriminator 3 view .LVU456
 1305 0670 4FEA546C 		lsr	ip, r4, #25
 1306              		.loc 1 202 13 discriminator 3 view .LVU457
 1307 0674 83EA020A 		eor	r10, r3, r2
 203:fips202.c     ****         BCo = ROL(Ama, 41);
 204:fips202.c     ****         Ase ^= De;
 1308              		.loc 1 204 13 discriminator 3 view .LVU458
 1309 0678 359A     		ldr	r2, [sp, #212]
 1310 067a 049B     		ldr	r3, [sp, #16]
 201:fips202.c     ****         Ama ^= Da;
 1311              		.loc 1 201 13 discriminator 3 view .LVU459
 1312 067c 4CEAC11C 		orr	ip, ip, r1, lsl #7
 203:fips202.c     ****         BCo = ROL(Ama, 41);
 1313              		.loc 1 203 13 discriminator 3 view .LVU460
 1314 0680 4FEADA57 		lsr	r7, r10, #23
 201:fips202.c     ****         Ama ^= Da;
 1315              		.loc 1 201 13 discriminator 3 view .LVU461
 1316 0684 490E     		lsrs	r1, r1, #25
 1317 0686 41EAC418 		orr	r8, r1, r4, lsl #7
 1318              	.LVL174:
 202:fips202.c     ****         BCo = ROL(Ama, 41);
 1319              		.loc 1 202 9 is_stmt 1 discriminator 3 view .LVU462
 203:fips202.c     ****         BCo = ROL(Ama, 41);
 1320              		.loc 1 203 9 discriminator 3 view .LVU463
 203:fips202.c     ****         BCo = ROL(Ama, 41);
 1321              		.loc 1 203 13 is_stmt 0 discriminator 3 view .LVU464
 1322 068a 47EA4B27 		orr	r7, r7, fp, lsl #9
 1323 068e 4FEADB51 		lsr	r1, fp, #23
 1324              		.loc 1 204 13 discriminator 3 view .LVU465
 1325 0692 83EA020B 		eor	fp, r3, r2
 1326 0696 369A     		ldr	r2, [sp, #216]
 1327 0698 059B     		ldr	r3, [sp, #20]
 203:fips202.c     ****         BCo = ROL(Ama, 41);
 1328              		.loc 1 203 13 discriminator 3 view .LVU466
 1329 069a 41EA4A21 		orr	r1, r1, r10, lsl #9
 1330              	.LVL175:
 1331              		.loc 1 204 9 is_stmt 1 discriminator 3 view .LVU467
 205:fips202.c     ****         BCu = ROL(Ase, 2);
 1332              		.loc 1 205 9 discriminator 3 view .LVU468
 204:fips202.c     ****         BCu = ROL(Ase, 2);
 1333              		.loc 1 204 13 is_stmt 0 discriminator 3 view .LVU469
 1334 069e 83EA020A 		eor	r10, r3, r2
 1335              		.loc 1 205 13 discriminator 3 view .LVU470
 1336 06a2 4FEA8B03 		lsl	r3, fp, #2
 1337 06a6 43EA9A72 		orr	r2, r3, r10, lsr #30
 206:fips202.c     ****         Esa = BCa ^ ((~BCe) & BCi);
 1338              		.loc 1 206 29 discriminator 3 view .LVU471
 1339 06aa 28EA0503 		bic	r3, r8, r5
 1340              		.loc 1 206 13 discriminator 3 view .LVU472
 1341 06ae 83EA0903 		eor	r3, r3, r9
 205:fips202.c     ****         BCu = ROL(Ase, 2);
 1342              		.loc 1 205 13 discriminator 3 view .LVU473
 1343 06b2 4FEA8A04 		lsl	r4, r10, #2
 1344              		.loc 1 206 29 discriminator 3 view .LVU474
 1345 06b6 2CEA0E0A 		bic	r10, ip, lr
 1346              		.loc 1 206 13 discriminator 3 view .LVU475
 1347 06ba 8AEA060A 		eor	r10, r10, r6
 1348 06be 2993     		str	r3, [sp, #164]
 207:fips202.c     ****         Ese = BCe ^ ((~BCi) & BCo);
 1349              		.loc 1 207 29 discriminator 3 view .LVU476
 1350 06c0 21EA0C03 		bic	r3, r1, ip
 206:fips202.c     ****         Esa = BCa ^ ((~BCe) & BCi);
 1351              		.loc 1 206 13 discriminator 3 view .LVU477
 1352 06c4 CDF8A0A0 		str	r10, [sp, #160]
 1353              		.loc 1 207 13 discriminator 3 view .LVU478
 1354 06c8 83EA0E03 		eor	r3, r3, lr
 1355              		.loc 1 207 29 discriminator 3 view .LVU479
 1356 06cc 27EA080A 		bic	r10, r7, r8
 205:fips202.c     ****         Esa = BCa ^ ((~BCe) & BCi);
 1357              		.loc 1 205 13 discriminator 3 view .LVU480
 1358 06d0 44EA9B74 		orr	r4, r4, fp, lsr #30
 1359              	.LVL176:
 206:fips202.c     ****         Esa = BCa ^ ((~BCe) & BCi);
 1360              		.loc 1 206 9 is_stmt 1 discriminator 3 view .LVU481
 1361              		.loc 1 207 9 discriminator 3 view .LVU482
 1362              		.loc 1 207 13 is_stmt 0 discriminator 3 view .LVU483
 1363 06d4 3593     		str	r3, [sp, #212]
 1364              	.LVL177:
 1365              		.loc 1 207 13 discriminator 3 view .LVU484
 1366 06d6 8AEA0503 		eor	r3, r10, r5
 1367 06da 3693     		str	r3, [sp, #216]
 1368              	.LVL178:
 208:fips202.c     ****         Esi = BCi ^ ((~BCo) & BCu);
 1369              		.loc 1 208 9 is_stmt 1 discriminator 3 view .LVU485
 1370              		.loc 1 208 29 is_stmt 0 discriminator 3 view .LVU486
 1371 06dc 24EA0703 		bic	r3, r4, r7
 1372              	.LVL179:
 1373              		.loc 1 208 13 discriminator 3 view .LVU487
 1374 06e0 83EA0803 		eor	r3, r3, r8
 1375 06e4 1D93     		str	r3, [sp, #116]
 1376              	.LVL180:
 209:fips202.c     ****         Eso = BCo ^ ((~BCu) & BCa);
 1377              		.loc 1 209 9 is_stmt 1 discriminator 3 view .LVU488
 1378              		.loc 1 209 29 is_stmt 0 discriminator 3 view .LVU489
 1379 06e6 29EA0403 		bic	r3, r9, r4
 1380              	.LVL181:
 1381              		.loc 1 209 13 discriminator 3 view .LVU490
 1382 06ea 7B40     		eors	r3, r3, r7
 1383 06ec 2B93     		str	r3, [sp, #172]
 1384              	.LVL182:
 210:fips202.c     ****         Esu = BCu ^ ((~BCa) & BCe);
 1385              		.loc 1 210 9 is_stmt 1 discriminator 3 view .LVU491
 1386              		.loc 1 210 29 is_stmt 0 discriminator 3 view .LVU492
 1387 06ee 2EEA0603 		bic	r3, lr, r6
 1388              	.LVL183:
 208:fips202.c     ****         Esi = BCi ^ ((~BCo) & BCu);
 1389              		.loc 1 208 29 discriminator 3 view .LVU493
 1390 06f2 22EA010A 		bic	r10, r2, r1
 1391              		.loc 1 210 29 discriminator 3 view .LVU494
 1392 06f6 25EA0909 		bic	r9, r5, r9
 1393              	.LVL184:
 1394              		.loc 1 210 13 discriminator 3 view .LVU495
 1395 06fa 5340     		eors	r3, r3, r2
 208:fips202.c     ****         Esi = BCi ^ ((~BCo) & BCu);
 1396              		.loc 1 208 13 discriminator 3 view .LVU496
 1397 06fc 8AEA0C0C 		eor	ip, r10, ip
 1398              	.LVL185:
 1399              		.loc 1 210 13 discriminator 3 view .LVU497
 1400 0700 1093     		str	r3, [sp, #64]
 1401 0702 89EA0403 		eor	r3, r9, r4
 208:fips202.c     ****         Esi = BCi ^ ((~BCo) & BCu);
 1402              		.loc 1 208 13 discriminator 3 view .LVU498
 1403 0706 CDF870C0 		str	ip, [sp, #112]
 1404              	.LVL186:
 1405              		.loc 1 210 13 discriminator 3 view .LVU499
 1406 070a 1193     		str	r3, [sp, #68]
 1407              	.LVL187:
 211:fips202.c     **** 
 212:fips202.c     ****         //    prepareTheta
 213:fips202.c     ****         BCa = Eba ^ Ega ^ Eka ^ Ema ^ Esa;
 1408              		.loc 1 213 9 is_stmt 1 discriminator 3 view .LVU500
 209:fips202.c     ****         Esu = BCu ^ ((~BCa) & BCe);
 1409              		.loc 1 209 29 is_stmt 0 discriminator 3 view .LVU501
 1410 070c 26EA020C 		bic	ip, r6, r2
 1411              		.loc 1 213 13 discriminator 3 view .LVU502
 1412 0710 0C9B     		ldr	r3, [sp, #48]
 1413              	.LVL188:
 1414              		.loc 1 213 13 discriminator 3 view .LVU503
 1415 0712 2C9A     		ldr	r2, [sp, #176]
 1416              	.LVL189:
 209:fips202.c     ****         Esu = BCu ^ ((~BCa) & BCe);
 1417              		.loc 1 209 13 discriminator 3 view .LVU504
 1418 0714 8CEA0101 		eor	r1, ip, r1
 1419              	.LVL190:
 209:fips202.c     ****         Esu = BCu ^ ((~BCa) & BCe);
 1420              		.loc 1 209 13 discriminator 3 view .LVU505
 1421 0718 2A91     		str	r1, [sp, #168]
 1422              	.LVL191:
 1423              		.loc 1 213 13 discriminator 3 view .LVU506
 1424 071a 5A40     		eors	r2, r2, r3
 1425 071c 2D99     		ldr	r1, [sp, #180]
 1426 071e 0D9B     		ldr	r3, [sp, #52]
 1427 0720 83EA0106 		eor	r6, r3, r1
 1428              		.loc 1 213 13 discriminator 3 view .LVU507
 1429 0724 1A99     		ldr	r1, [sp, #104]
 214:fips202.c     ****         BCe = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
 1430              		.loc 1 214 19 discriminator 3 view .LVU508
 1431 0726 249B     		ldr	r3, [sp, #144]
 213:fips202.c     ****         BCe = Ebe ^ Ege ^ Eke ^ Eme ^ Ese;
 1432              		.loc 1 213 13 discriminator 3 view .LVU509
 1433 0728 4A40     		eors	r2, r2, r1
 1434 072a 1B99     		ldr	r1, [sp, #108]
 1435 072c 4E40     		eors	r6, r6, r1
 1436 072e 3999     		ldr	r1, [sp, #228]
 1437 0730 4A40     		eors	r2, r2, r1
 1438 0732 3A99     		ldr	r1, [sp, #232]
 1439 0734 4E40     		eors	r6, r6, r1
 1440 0736 2899     		ldr	r1, [sp, #160]
 1441 0738 4A40     		eors	r2, r2, r1
 1442 073a 2999     		ldr	r1, [sp, #164]
 1443 073c 4E40     		eors	r6, r6, r1
 1444              	.LVL192:
 1445              		.loc 1 214 9 is_stmt 1 discriminator 3 view .LVU510
 1446              		.loc 1 214 19 is_stmt 0 discriminator 3 view .LVU511
 1447 073e 1299     		ldr	r1, [sp, #72]
 1448 0740 83EA0109 		eor	r9, r3, r1
 1449 0744 1399     		ldr	r1, [sp, #76]
 1450 0746 259B     		ldr	r3, [sp, #148]
 1451 0748 83EA0108 		eor	r8, r3, r1
 1452              		.loc 1 214 25 discriminator 3 view .LVU512
 1453 074c 329B     		ldr	r3, [sp, #200]
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1454              		.loc 1 215 19 discriminator 3 view .LVU513
 1455 074e 2099     		ldr	r1, [sp, #128]
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 217:fips202.c     ****         BCu = Ebu ^ Egu ^ Eku ^ Emu ^ Esu;
 1456              		.loc 1 217 25 discriminator 3 view .LVU514
 1457 0750 DDF8F4E0 		ldr	lr, [sp, #244]
 1458              	.LVL193:
 214:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1459              		.loc 1 214 25 discriminator 3 view .LVU515
 1460 0754 89EA0309 		eor	r9, r9, r3
 1461 0758 339B     		ldr	r3, [sp, #204]
 1462 075a 88EA0308 		eor	r8, r8, r3
 214:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1463              		.loc 1 214 31 discriminator 3 view .LVU516
 1464 075e 169B     		ldr	r3, [sp, #88]
 1465 0760 89EA0309 		eor	r9, r9, r3
 1466 0764 179B     		ldr	r3, [sp, #92]
 1467 0766 88EA0308 		eor	r8, r8, r3
 214:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1468              		.loc 1 214 13 discriminator 3 view .LVU517
 1469 076a 359B     		ldr	r3, [sp, #212]
 1470 076c 89EA0309 		eor	r9, r9, r3
 1471 0770 369B     		ldr	r3, [sp, #216]
 1472 0772 88EA0308 		eor	r8, r8, r3
 1473              	.LVL194:
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1474              		.loc 1 215 9 is_stmt 1 discriminator 3 view .LVU518
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1475              		.loc 1 215 19 is_stmt 0 discriminator 3 view .LVU519
 1476 0776 3B9B     		ldr	r3, [sp, #236]
 1477 0778 83EA010C 		eor	ip, r3, r1
 1478 077c 3C9B     		ldr	r3, [sp, #240]
 1479 077e 2199     		ldr	r1, [sp, #132]
 1480 0780 83EA0107 		eor	r7, r3, r1
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1481              		.loc 1 215 25 discriminator 3 view .LVU520
 1482 0784 0E9B     		ldr	r3, [sp, #56]
 1483 0786 0F99     		ldr	r1, [sp, #60]
 1484 0788 8CEA030C 		eor	ip, ip, r3
 1485 078c 4F40     		eors	r7, r7, r1
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1486              		.loc 1 215 31 discriminator 3 view .LVU521
 1487 078e 2E9B     		ldr	r3, [sp, #184]
 1488 0790 2F99     		ldr	r1, [sp, #188]
 1489 0792 8CEA030C 		eor	ip, ip, r3
 1490 0796 4F40     		eors	r7, r7, r1
 215:fips202.c     ****         BCi = Ebi ^ Egi ^ Eki ^ Emi ^ Esi;
 1491              		.loc 1 215 13 discriminator 3 view .LVU522
 1492 0798 1C9B     		ldr	r3, [sp, #112]
 1493 079a 1D99     		ldr	r1, [sp, #116]
 1494 079c 8CEA030C 		eor	ip, ip, r3
 1495 07a0 4F40     		eors	r7, r7, r1
 1496              	.LVL195:
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1497              		.loc 1 216 9 is_stmt 1 discriminator 3 view .LVU523
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1498              		.loc 1 216 19 is_stmt 0 discriminator 3 view .LVU524
 1499 07a2 189B     		ldr	r3, [sp, #96]
 1500 07a4 3799     		ldr	r1, [sp, #220]
 1501 07a6 83EA0105 		eor	r5, r3, r1
 1502 07aa 199B     		ldr	r3, [sp, #100]
 1503 07ac 3899     		ldr	r1, [sp, #224]
 1504 07ae 83EA0104 		eor	r4, r3, r1
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1505              		.loc 1 216 25 discriminator 3 view .LVU525
 1506 07b2 2699     		ldr	r1, [sp, #152]
 1507              		.loc 1 217 25 discriminator 3 view .LVU526
 1508 07b4 1E9B     		ldr	r3, [sp, #120]
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1509              		.loc 1 216 25 discriminator 3 view .LVU527
 1510 07b6 4D40     		eors	r5, r5, r1
 1511 07b8 2799     		ldr	r1, [sp, #156]
 1512 07ba 4C40     		eors	r4, r4, r1
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1513              		.loc 1 216 31 discriminator 3 view .LVU528
 1514 07bc 1499     		ldr	r1, [sp, #80]
 1515 07be 4D40     		eors	r5, r5, r1
 1516 07c0 1599     		ldr	r1, [sp, #84]
 1517 07c2 4C40     		eors	r4, r4, r1
 216:fips202.c     ****         BCo = Ebo ^ Ego ^ Eko ^ Emo ^ Eso;
 1518              		.loc 1 216 13 discriminator 3 view .LVU529
 1519 07c4 2A99     		ldr	r1, [sp, #168]
 1520 07c6 4D40     		eors	r5, r5, r1
 1521 07c8 2B99     		ldr	r1, [sp, #172]
 1522 07ca 4C40     		eors	r4, r4, r1
 1523              	.LVL196:
 1524              		.loc 1 217 9 is_stmt 1 discriminator 3 view .LVU530
 1525              		.loc 1 217 25 is_stmt 0 discriminator 3 view .LVU531
 1526 07cc 3499     		ldr	r1, [sp, #208]
 1527 07ce 5940     		eors	r1, r1, r3
 1528 07d0 1F9B     		ldr	r3, [sp, #124]
 1529 07d2 83EA0E0E 		eor	lr, r3, lr
 1530 07d6 309B     		ldr	r3, [sp, #192]
 1531 07d8 5940     		eors	r1, r1, r3
 1532 07da 319B     		ldr	r3, [sp, #196]
 1533 07dc 8EEA030E 		eor	lr, lr, r3
 1534              		.loc 1 217 31 discriminator 3 view .LVU532
 1535 07e0 229B     		ldr	r3, [sp, #136]
 1536 07e2 5940     		eors	r1, r1, r3
 1537 07e4 239B     		ldr	r3, [sp, #140]
 1538 07e6 8EEA030E 		eor	lr, lr, r3
 1539              		.loc 1 217 13 discriminator 3 view .LVU533
 1540 07ea 109B     		ldr	r3, [sp, #64]
 218:fips202.c     **** 
 219:fips202.c     ****         // thetaRhoPiChiIotaPrepareTheta(round+1, E, A)
 220:fips202.c     ****         Da = BCu ^ ROL(BCe, 1);
 1541              		.loc 1 220 20 discriminator 3 view .LVU534
 1542 07ec 4FEA490B 		lsl	fp, r9, #1
 217:fips202.c     **** 
 1543              		.loc 1 217 13 discriminator 3 view .LVU535
 1544 07f0 5940     		eors	r1, r1, r3
 1545 07f2 119B     		ldr	r3, [sp, #68]
 1546              		.loc 1 220 20 discriminator 3 view .LVU536
 1547 07f4 4BEAD87B 		orr	fp, fp, r8, lsr #31
 1548 07f8 4FEA480A 		lsl	r10, r8, #1
 217:fips202.c     **** 
 1549              		.loc 1 217 13 discriminator 3 view .LVU537
 1550 07fc 8EEA030E 		eor	lr, lr, r3
 1551              	.LVL197:
 1552              		.loc 1 220 9 is_stmt 1 discriminator 3 view .LVU538
 1553              		.loc 1 220 20 is_stmt 0 discriminator 3 view .LVU539
 1554 0800 4AEAD97A 		orr	r10, r10, r9, lsr #31
 1555              		.loc 1 220 12 discriminator 3 view .LVU540
 1556 0804 8BEA0103 		eor	r3, fp, r1
 221:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1557              		.loc 1 221 20 discriminator 3 view .LVU541
 1558 0808 4FEA4C0B 		lsl	fp, ip, #1
 220:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1559              		.loc 1 220 12 discriminator 3 view .LVU542
 1560 080c 0293     		str	r3, [sp, #8]
 1561              	.LVL198:
 1562              		.loc 1 221 20 discriminator 3 view .LVU543
 1563 080e 4BEAD77B 		orr	fp, fp, r7, lsr #31
 220:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1564              		.loc 1 220 12 discriminator 3 view .LVU544
 1565 0812 8AEA0E03 		eor	r3, r10, lr
 1566              		.loc 1 221 20 discriminator 3 view .LVU545
 1567 0816 4FEA470A 		lsl	r10, r7, #1
 220:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1568              		.loc 1 220 12 discriminator 3 view .LVU546
 1569 081a 0393     		str	r3, [sp, #12]
 1570              	.LVL199:
 1571              		.loc 1 221 9 is_stmt 1 discriminator 3 view .LVU547
 1572              		.loc 1 221 20 is_stmt 0 discriminator 3 view .LVU548
 1573 081c 4AEADC7A 		orr	r10, r10, ip, lsr #31
 1574              		.loc 1 221 12 discriminator 3 view .LVU549
 1575 0820 8BEA0203 		eor	r3, fp, r2
 1576              	.LVL200:
 222:fips202.c     ****         Di = BCe ^ ROL(BCo, 1);
 1577              		.loc 1 222 20 discriminator 3 view .LVU550
 1578 0824 4FEA450B 		lsl	fp, r5, #1
 221:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1579              		.loc 1 221 12 discriminator 3 view .LVU551
 1580 0828 0493     		str	r3, [sp, #16]
 1581              	.LVL201:
 1582              		.loc 1 222 20 discriminator 3 view .LVU552
 1583 082a 4BEAD47B 		orr	fp, fp, r4, lsr #31
 221:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1584              		.loc 1 221 12 discriminator 3 view .LVU553
 1585 082e 8AEA0603 		eor	r3, r10, r6
 1586              		.loc 1 222 20 discriminator 3 view .LVU554
 1587 0832 4FEA440A 		lsl	r10, r4, #1
 221:fips202.c     ****         De = BCa ^ ROL(BCi, 1);
 1588              		.loc 1 221 12 discriminator 3 view .LVU555
 1589 0836 0593     		str	r3, [sp, #20]
 1590              	.LVL202:
 1591              		.loc 1 222 9 is_stmt 1 discriminator 3 view .LVU556
 1592              		.loc 1 222 20 is_stmt 0 discriminator 3 view .LVU557
 1593 0838 4AEAD57A 		orr	r10, r10, r5, lsr #31
 1594              		.loc 1 222 12 discriminator 3 view .LVU558
 1595 083c 8BEA0903 		eor	r3, fp, r9
 1596              	.LVL203:
 1597              		.loc 1 222 12 discriminator 3 view .LVU559
 1598 0840 0693     		str	r3, [sp, #24]
 1599 0842 8AEA0803 		eor	r3, r10, r8
 223:fips202.c     ****         Do = BCi ^ ROL(BCu, 1);
 1600              		.loc 1 223 20 discriminator 3 view .LVU560
 1601 0846 4FEA4E08 		lsl	r8, lr, #1
 1602              	.LVL204:
 1603              		.loc 1 223 20 discriminator 3 view .LVU561
 1604 084a 48EAD178 		orr	r8, r8, r1, lsr #31
 1605 084e 4900     		lsls	r1, r1, #1
 1606              	.LVL205:
 1607              		.loc 1 223 20 discriminator 3 view .LVU562
 1608 0850 41EADE71 		orr	r1, r1, lr, lsr #31
 222:fips202.c     ****         Di = BCe ^ ROL(BCo, 1);
 1609              		.loc 1 222 12 discriminator 3 view .LVU563
 1610 0854 0793     		str	r3, [sp, #28]
 1611              	.LVL206:
 1612              		.loc 1 223 9 is_stmt 1 discriminator 3 view .LVU564
 1613              		.loc 1 223 12 is_stmt 0 discriminator 3 view .LVU565
 1614 0856 81EA0C03 		eor	r3, r1, ip
 1615              	.LVL207:
 1616              		.loc 1 223 12 discriminator 3 view .LVU566
 1617 085a 0893     		str	r3, [sp, #32]
 1618 085c 88EA0703 		eor	r3, r8, r7
 224:fips202.c     ****         Du = BCo ^ ROL(BCa, 1);
 1619              		.loc 1 224 20 discriminator 3 view .LVU567
 1620 0860 7700     		lsls	r7, r6, #1
 1621              	.LVL208:
 1622              		.loc 1 224 20 discriminator 3 view .LVU568
 1623 0862 47EAD277 		orr	r7, r7, r2, lsr #31
 1624 0866 5200     		lsls	r2, r2, #1
 1625              	.LVL209:
 1626              		.loc 1 224 20 discriminator 3 view .LVU569
 1627 0868 42EAD672 		orr	r2, r2, r6, lsr #31
 223:fips202.c     ****         Do = BCi ^ ROL(BCu, 1);
 1628              		.loc 1 223 12 discriminator 3 view .LVU570
 1629 086c 0993     		str	r3, [sp, #36]
 1630              	.LVL210:
 1631              		.loc 1 224 9 is_stmt 1 discriminator 3 view .LVU571
 1632              		.loc 1 224 12 is_stmt 0 discriminator 3 view .LVU572
 1633 086e 82EA0503 		eor	r3, r2, r5
 1634              	.LVL211:
 1635              		.loc 1 224 12 discriminator 3 view .LVU573
 1636 0872 0A93     		str	r3, [sp, #40]
 1637 0874 87EA0403 		eor	r3, r7, r4
 225:fips202.c     **** 
 226:fips202.c     ****         Eba ^= Da;
 1638              		.loc 1 226 13 discriminator 3 view .LVU574
 1639 0878 029A     		ldr	r2, [sp, #8]
 224:fips202.c     ****         Du = BCo ^ ROL(BCa, 1);
 1640              		.loc 1 224 12 discriminator 3 view .LVU575
 1641 087a 0B93     		str	r3, [sp, #44]
 1642              	.LVL212:
 1643              		.loc 1 226 9 is_stmt 1 discriminator 3 view .LVU576
 1644              		.loc 1 226 13 is_stmt 0 discriminator 3 view .LVU577
 1645 087c 0C9B     		ldr	r3, [sp, #48]
 1646              	.LVL213:
 1647              		.loc 1 226 13 discriminator 3 view .LVU578
 1648 087e 83EA0207 		eor	r7, r3, r2
 1649 0882 0D9B     		ldr	r3, [sp, #52]
 1650 0884 039A     		ldr	r2, [sp, #12]
 1651 0886 83EA020B 		eor	fp, r3, r2
 1652              	.LVL214:
 227:fips202.c     ****         BCa = Eba;
 1653              		.loc 1 227 9 is_stmt 1 discriminator 3 view .LVU579
 228:fips202.c     ****         Ege ^= De;
 1654              		.loc 1 228 9 discriminator 3 view .LVU580
 229:fips202.c     ****         BCe = ROL(Ege, 44);
 1655              		.loc 1 229 9 discriminator 3 view .LVU581
 228:fips202.c     ****         Ege ^= De;
 1656              		.loc 1 228 13 is_stmt 0 discriminator 3 view .LVU582
 1657 088a 129B     		ldr	r3, [sp, #72]
 1658 088c 049A     		ldr	r2, [sp, #16]
 1659 088e 83EA020A 		eor	r10, r3, r2
 1660 0892 139B     		ldr	r3, [sp, #76]
 1661 0894 059A     		ldr	r2, [sp, #20]
 1662              		.loc 1 229 13 discriminator 3 view .LVU583
 1663 0896 4FEA1A54 		lsr	r4, r10, #20
 1664              	.LVL215:
 228:fips202.c     ****         Ege ^= De;
 1665              		.loc 1 228 13 discriminator 3 view .LVU584
 1666 089a 83EA0206 		eor	r6, r3, r2
 230:fips202.c     ****         Eki ^= Di;
 1667              		.loc 1 230 13 discriminator 3 view .LVU585
 1668 089e 0E9B     		ldr	r3, [sp, #56]
 1669 08a0 069A     		ldr	r2, [sp, #24]
 229:fips202.c     ****         BCe = ROL(Ege, 44);
 1670              		.loc 1 229 13 discriminator 3 view .LVU586
 1671 08a2 44EA0634 		orr	r4, r4, r6, lsl #12
 1672 08a6 360D     		lsrs	r6, r6, #20
 1673 08a8 46EA0A36 		orr	r6, r6, r10, lsl #12
 1674              	.LVL216:
 1675              		.loc 1 230 9 is_stmt 1 discriminator 3 view .LVU587
 231:fips202.c     ****         BCi = ROL(Eki, 43);
 1676              		.loc 1 231 9 discriminator 3 view .LVU588
 230:fips202.c     ****         Eki ^= Di;
 1677              		.loc 1 230 13 is_stmt 0 discriminator 3 view .LVU589
 1678 08ac 83EA020A 		eor	r10, r3, r2
 1679 08b0 0F9B     		ldr	r3, [sp, #60]
 1680 08b2 079A     		ldr	r2, [sp, #28]
 1681 08b4 83EA0209 		eor	r9, r3, r2
 232:fips202.c     ****         Emo ^= Do;
 1682              		.loc 1 232 13 discriminator 3 view .LVU590
 1683 08b8 149B     		ldr	r3, [sp, #80]
 1684 08ba 089A     		ldr	r2, [sp, #32]
 1685 08bc 83EA020C 		eor	ip, r3, r2
 1686              	.LVL217:
 1687              		.loc 1 232 13 discriminator 3 view .LVU591
 1688 08c0 159B     		ldr	r3, [sp, #84]
 1689 08c2 099A     		ldr	r2, [sp, #36]
 1690 08c4 83EA0205 		eor	r5, r3, r2
 1691              	.LVL218:
 233:fips202.c     ****         BCo = ROL(Emo, 21);
 1692              		.loc 1 233 13 discriminator 3 view .LVU592
 1693 08c8 4FEA4C52 		lsl	r2, ip, #21
 1694 08cc 42EAD522 		orr	r2, r2, r5, lsr #11
 234:fips202.c     ****         Esu ^= Du;
 1695              		.loc 1 234 13 discriminator 3 view .LVU593
 1696 08d0 0A9B     		ldr	r3, [sp, #40]
 233:fips202.c     ****         BCo = ROL(Emo, 21);
 1697              		.loc 1 233 13 discriminator 3 view .LVU594
 1698 08d2 4FEA455E 		lsl	lr, r5, #21
 1699              	.LVL219:
 1700              		.loc 1 234 13 discriminator 3 view .LVU595
 1701 08d6 109D     		ldr	r5, [sp, #64]
 1702 08d8 5D40     		eors	r5, r5, r3
 233:fips202.c     ****         BCo = ROL(Emo, 21);
 1703              		.loc 1 233 13 discriminator 3 view .LVU596
 1704 08da 4EEADC2E 		orr	lr, lr, ip, lsr #11
 1705              		.loc 1 234 13 discriminator 3 view .LVU597
 1706 08de 2B46     		mov	r3, r5
 1707 08e0 119D     		ldr	r5, [sp, #68]
 1708 08e2 DDF82CC0 		ldr	ip, [sp, #44]
 1709 08e6 85EA0C05 		eor	r5, r5, ip
 235:fips202.c     ****         BCu = ROL(Esu, 14);
 1710              		.loc 1 235 13 discriminator 3 view .LVU598
 1711 08ea 4FEA853C 		lsl	ip, r5, #14
 1712 08ee 4CEA934C 		orr	ip, ip, r3, lsr #18
 1713 08f2 9B03     		lsls	r3, r3, #14
 1714 08f4 43EA9543 		orr	r3, r3, r5, lsr #18
 236:fips202.c     ****         Aba = BCa ^ ((~BCe) & BCi);
 237:fips202.c     ****         Aba ^= KeccakF_RoundConstants[round + 1];
 1715              		.loc 1 237 13 discriminator 3 view .LVU599
 1716 08f8 019D     		ldr	r5, [sp, #4]
 1717 08fa AD68     		ldr	r5, [r5, #8]
 1718 08fc 0C95     		str	r5, [sp, #48]
 1719 08fe 019D     		ldr	r5, [sp, #4]
 231:fips202.c     ****         Emo ^= Do;
 1720              		.loc 1 231 13 discriminator 3 view .LVU600
 1721 0900 4FEA5A58 		lsr	r8, r10, #21
 1722 0904 48EAC928 		orr	r8, r8, r9, lsl #11
 1723              		.loc 1 237 13 discriminator 3 view .LVU601
 1724 0908 ED68     		ldr	r5, [r5, #12]
 231:fips202.c     ****         Emo ^= Do;
 1725              		.loc 1 231 13 discriminator 3 view .LVU602
 1726 090a 4FEA5959 		lsr	r9, r9, #21
 1727 090e 49EACA21 		orr	r1, r9, r10, lsl #11
 1728              	.LVL220:
 232:fips202.c     ****         BCo = ROL(Emo, 21);
 1729              		.loc 1 232 9 is_stmt 1 discriminator 3 view .LVU603
 233:fips202.c     ****         Esu ^= Du;
 1730              		.loc 1 233 9 discriminator 3 view .LVU604
 234:fips202.c     ****         BCu = ROL(Esu, 14);
 1731              		.loc 1 234 9 discriminator 3 view .LVU605
 235:fips202.c     ****         Aba = BCa ^ ((~BCe) & BCi);
 1732              		.loc 1 235 9 discriminator 3 view .LVU606
 236:fips202.c     ****         Aba ^= KeccakF_RoundConstants[round + 1];
 1733              		.loc 1 236 9 discriminator 3 view .LVU607
 1734              		.loc 1 237 9 discriminator 3 view .LVU608
 1735              		.loc 1 237 13 is_stmt 0 discriminator 3 view .LVU609
 1736 0912 DDF83090 		ldr	r9, [sp, #48]
 236:fips202.c     ****         Aba ^= KeccakF_RoundConstants[round + 1];
 1737              		.loc 1 236 29 discriminator 3 view .LVU610
 1738 0916 28EA040A 		bic	r10, r8, r4
 1739              		.loc 1 237 13 discriminator 3 view .LVU611
 1740 091a 8BEA0505 		eor	r5, fp, r5
 1741 091e 0D95     		str	r5, [sp, #52]
 1742 0920 87EA0909 		eor	r9, r7, r9
 236:fips202.c     ****         Aba ^= KeccakF_RoundConstants[round + 1];
 1743              		.loc 1 236 29 discriminator 3 view .LVU612
 1744 0924 5546     		mov	r5, r10
 1745              		.loc 1 237 13 discriminator 3 view .LVU613
 1746 0926 89EA0509 		eor	r9, r9, r5
 1747 092a 0D9D     		ldr	r5, [sp, #52]
 1748 092c CDF83090 		str	r9, [sp, #48]
 236:fips202.c     ****         Aba ^= KeccakF_RoundConstants[round + 1];
 1749              		.loc 1 236 29 discriminator 3 view .LVU614
 1750 0930 21EA060A 		bic	r10, r1, r6
 1751              		.loc 1 237 13 discriminator 3 view .LVU615
 1752 0934 85EA0A05 		eor	r5, r5, r10
 1753 0938 0D95     		str	r5, [sp, #52]
 1754              	.LVL221:
 238:fips202.c     ****         Abe = BCe ^ ((~BCi) & BCo);
 1755              		.loc 1 238 9 is_stmt 1 discriminator 3 view .LVU616
 1756              		.loc 1 238 29 is_stmt 0 discriminator 3 view .LVU617
 1757 093a 2EEA0105 		bic	r5, lr, r1
 1758              	.LVL222:
 1759              		.loc 1 238 13 discriminator 3 view .LVU618
 1760 093e 7540     		eors	r5, r5, r6
 1761              		.loc 1 238 29 discriminator 3 view .LVU619
 1762 0940 22EA0809 		bic	r9, r2, r8
 1763              	.LVL223:
 1764              		.loc 1 238 13 discriminator 3 view .LVU620
 1765 0944 0F95     		str	r5, [sp, #60]
 1766              	.LVL224:
 239:fips202.c     ****         Abi = BCi ^ ((~BCo) & BCu);
 1767              		.loc 1 239 9 is_stmt 1 discriminator 3 view .LVU621
 1768              		.loc 1 239 29 is_stmt 0 discriminator 3 view .LVU622
 1769 0946 2CEA0E05 		bic	r5, ip, lr
 1770              	.LVL225:
 238:fips202.c     ****         Abe = BCe ^ ((~BCi) & BCo);
 1771              		.loc 1 238 13 discriminator 3 view .LVU623
 1772 094a 89EA0409 		eor	r9, r9, r4
 1773              		.loc 1 239 13 discriminator 3 view .LVU624
 1774 094e 6940     		eors	r1, r1, r5
 1775              	.LVL226:
 240:fips202.c     ****         Abo = BCo ^ ((~BCu) & BCa);
 1776              		.loc 1 240 29 discriminator 3 view .LVU625
 1777 0950 27EA0305 		bic	r5, r7, r3
 241:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1778              		.loc 1 241 29 discriminator 3 view .LVU626
 1779 0954 24EA0707 		bic	r7, r4, r7
 1780              	.LVL227:
 1781              		.loc 1 241 29 discriminator 3 view .LVU627
 1782 0958 26EA0B06 		bic	r6, r6, fp
 1783              	.LVL228:
 238:fips202.c     ****         Abi = BCi ^ ((~BCo) & BCu);
 1784              		.loc 1 238 13 discriminator 3 view .LVU628
 1785 095c CDF83890 		str	r9, [sp, #56]
 1786              	.LVL229:
 239:fips202.c     ****         Abo = BCo ^ ((~BCu) & BCa);
 1787              		.loc 1 239 13 discriminator 3 view .LVU629
 1788 0960 1191     		str	r1, [sp, #68]
 1789              	.LVL230:
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1790              		.loc 1 240 9 is_stmt 1 discriminator 3 view .LVU630
 239:fips202.c     ****         Abo = BCo ^ ((~BCu) & BCa);
 1791              		.loc 1 239 29 is_stmt 0 discriminator 3 view .LVU631
 1792 0962 23EA0209 		bic	r9, r3, r2
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1793              		.loc 1 240 29 discriminator 3 view .LVU632
 1794 0966 2BEA0C01 		bic	r1, fp, ip
 1795              	.LVL231:
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1796              		.loc 1 240 13 discriminator 3 view .LVU633
 1797 096a 6A40     		eors	r2, r2, r5
 1798              	.LVL232:
 1799              		.loc 1 241 13 discriminator 3 view .LVU634
 1800 096c 7B40     		eors	r3, r3, r7
 1801              	.LVL233:
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1802              		.loc 1 240 13 discriminator 3 view .LVU635
 1803 096e 1292     		str	r2, [sp, #72]
 1804              	.LVL234:
 1805              		.loc 1 241 13 discriminator 3 view .LVU636
 1806 0970 1493     		str	r3, [sp, #80]
 1807              	.LVL235:
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1808              		.loc 1 240 13 discriminator 3 view .LVU637
 1809 0972 81EA0E02 		eor	r2, r1, lr
 1810              		.loc 1 241 13 discriminator 3 view .LVU638
 1811 0976 86EA0C03 		eor	r3, r6, ip
 240:fips202.c     ****         Abu = BCu ^ ((~BCa) & BCe);
 1812              		.loc 1 240 13 discriminator 3 view .LVU639
 1813 097a 1392     		str	r2, [sp, #76]
 1814              	.LVL236:
 1815              		.loc 1 241 9 is_stmt 1 discriminator 3 view .LVU640
 1816              		.loc 1 241 13 is_stmt 0 discriminator 3 view .LVU641
 1817 097c 1593     		str	r3, [sp, #84]
 1818              	.LVL237:
 242:fips202.c     **** 
 243:fips202.c     ****         Ebo ^= Do;
 1819              		.loc 1 243 9 is_stmt 1 discriminator 3 view .LVU642
 244:fips202.c     ****         BCa = ROL(Ebo, 28);
 1820              		.loc 1 244 9 discriminator 3 view .LVU643
 243:fips202.c     ****         BCa = ROL(Ebo, 28);
 1821              		.loc 1 243 13 is_stmt 0 discriminator 3 view .LVU644
 1822 097e 089A     		ldr	r2, [sp, #32]
 1823              	.LVL238:
 243:fips202.c     ****         BCa = ROL(Ebo, 28);
 1824              		.loc 1 243 13 discriminator 3 view .LVU645
 1825 0980 189B     		ldr	r3, [sp, #96]
 1826              	.LVL239:
 243:fips202.c     ****         BCa = ROL(Ebo, 28);
 1827              		.loc 1 243 13 discriminator 3 view .LVU646
 1828 0982 83EA0201 		eor	r1, r3, r2
 1829 0986 199B     		ldr	r3, [sp, #100]
 1830 0988 099A     		ldr	r2, [sp, #36]
 1831 098a 83EA020E 		eor	lr, r3, r2
 1832              		.loc 1 244 13 discriminator 3 view .LVU647
 1833 098e 4FEA0E7B 		lsl	fp, lr, #28
 245:fips202.c     ****         Egu ^= Du;
 1834              		.loc 1 245 13 discriminator 3 view .LVU648
 1835 0992 1E9B     		ldr	r3, [sp, #120]
 1836 0994 0A9A     		ldr	r2, [sp, #40]
 244:fips202.c     ****         BCa = ROL(Ebo, 28);
 1837              		.loc 1 244 13 discriminator 3 view .LVU649
 1838 0996 4BEA111B 		orr	fp, fp, r1, lsr #4
 1839 099a 0907     		lsls	r1, r1, #28
 1840 099c 41EA1E14 		orr	r4, r1, lr, lsr #4
 1841              	.LVL240:
 1842              		.loc 1 245 9 is_stmt 1 discriminator 3 view .LVU650
 246:fips202.c     ****         BCe = ROL(Egu, 20);
 1843              		.loc 1 246 9 discriminator 3 view .LVU651
 245:fips202.c     ****         Egu ^= Du;
 1844              		.loc 1 245 13 is_stmt 0 discriminator 3 view .LVU652
 1845 09a0 83EA020E 		eor	lr, r3, r2
 1846 09a4 1F9B     		ldr	r3, [sp, #124]
 1847 09a6 0B9A     		ldr	r2, [sp, #44]
 1848 09a8 83EA0205 		eor	r5, r3, r2
 247:fips202.c     ****         Eka ^= Da;
 1849              		.loc 1 247 13 discriminator 3 view .LVU653
 1850 09ac 1A9B     		ldr	r3, [sp, #104]
 1851 09ae 029A     		ldr	r2, [sp, #8]
 246:fips202.c     ****         BCe = ROL(Egu, 20);
 1852              		.loc 1 246 13 discriminator 3 view .LVU654
 1853 09b0 2E05     		lsls	r6, r5, #20
 1854              		.loc 1 247 13 discriminator 3 view .LVU655
 1855 09b2 83EA020A 		eor	r10, r3, r2
 1856 09b6 039A     		ldr	r2, [sp, #12]
 1857 09b8 1B9B     		ldr	r3, [sp, #108]
 246:fips202.c     ****         BCe = ROL(Egu, 20);
 1858              		.loc 1 246 13 discriminator 3 view .LVU656
 1859 09ba 46EA1E36 		orr	r6, r6, lr, lsr #12
 239:fips202.c     ****         Abo = BCo ^ ((~BCu) & BCa);
 1860              		.loc 1 239 13 discriminator 3 view .LVU657
 1861 09be 89EA0808 		eor	r8, r9, r8
 246:fips202.c     ****         BCe = ROL(Egu, 20);
 1862              		.loc 1 246 13 discriminator 3 view .LVU658
 1863 09c2 4FEA0E5E 		lsl	lr, lr, #20
 1864 09c6 4EEA1531 		orr	r1, lr, r5, lsr #12
 1865              	.LVL241:
 1866              		.loc 1 247 9 is_stmt 1 discriminator 3 view .LVU659
 248:fips202.c     ****         BCi = ROL(Eka, 3);
 1867              		.loc 1 248 9 discriminator 3 view .LVU660
 247:fips202.c     ****         Eka ^= Da;
 1868              		.loc 1 247 13 is_stmt 0 discriminator 3 view .LVU661
 1869 09ca 83EA0209 		eor	r9, r3, r2
 239:fips202.c     ****         Abo = BCo ^ ((~BCu) & BCa);
 1870              		.loc 1 239 13 discriminator 3 view .LVU662
 1871 09ce CDF84080 		str	r8, [sp, #64]
 1872              	.LVL242:
 249:fips202.c     ****         Eme ^= De;
 1873              		.loc 1 249 13 discriminator 3 view .LVU663
 1874 09d2 169B     		ldr	r3, [sp, #88]
 1875 09d4 049D     		ldr	r5, [sp, #16]
 1876 09d6 DDF814C0 		ldr	ip, [sp, #20]
 250:fips202.c     ****         BCo = ROL(Eme, 45);
 251:fips202.c     ****         Esi ^= Di;
 1877              		.loc 1 251 13 discriminator 3 view .LVU664
 1878 09da DDF81CE0 		ldr	lr, [sp, #28]
 249:fips202.c     ****         Eme ^= De;
 1879              		.loc 1 249 13 discriminator 3 view .LVU665
 1880 09de 6B40     		eors	r3, r3, r5
 248:fips202.c     ****         Eme ^= De;
 1881              		.loc 1 248 13 discriminator 3 view .LVU666
 1882 09e0 4FEAC907 		lsl	r7, r9, #3
 249:fips202.c     ****         Eme ^= De;
 1883              		.loc 1 249 13 discriminator 3 view .LVU667
 1884 09e4 179D     		ldr	r5, [sp, #92]
 248:fips202.c     ****         Eme ^= De;
 1885              		.loc 1 248 13 discriminator 3 view .LVU668
 1886 09e6 47EA5A77 		orr	r7, r7, r10, lsr #29
 1887 09ea 4FEACA0A 		lsl	r10, r10, #3
 1888 09ee 4AEA5972 		orr	r2, r10, r9, lsr #29
 1889              	.LVL243:
 249:fips202.c     ****         Eme ^= De;
 1890              		.loc 1 249 9 is_stmt 1 discriminator 3 view .LVU669
 250:fips202.c     ****         BCo = ROL(Eme, 45);
 1891              		.loc 1 250 9 discriminator 3 view .LVU670
 249:fips202.c     ****         Eme ^= De;
 1892              		.loc 1 249 13 is_stmt 0 discriminator 3 view .LVU671
 1893 09f2 85EA0C09 		eor	r9, r5, ip
 250:fips202.c     ****         BCo = ROL(Eme, 45);
 1894              		.loc 1 250 13 discriminator 3 view .LVU672
 1895 09f6 DD0C     		lsrs	r5, r3, #19
 1896 09f8 45EA4935 		orr	r5, r5, r9, lsl #13
 1897 09fc 4FEAD949 		lsr	r9, r9, #19
 1898 0a00 49EA433A 		orr	r10, r9, r3, lsl #13
 1899              	.LVL244:
 1900              		.loc 1 251 9 is_stmt 1 discriminator 3 view .LVU673
 252:fips202.c     ****         BCu = ROL(Esi, 61);
 1901              		.loc 1 252 9 discriminator 3 view .LVU674
 251:fips202.c     ****         BCu = ROL(Esi, 61);
 1902              		.loc 1 251 13 is_stmt 0 discriminator 3 view .LVU675
 1903 0a04 DDF818C0 		ldr	ip, [sp, #24]
 1904 0a08 1C9B     		ldr	r3, [sp, #112]
 1905 0a0a 83EA0C0C 		eor	ip, r3, ip
 1906 0a0e 1D9B     		ldr	r3, [sp, #116]
 1907              		.loc 1 252 13 discriminator 3 view .LVU676
 1908 0a10 4FEADC08 		lsr	r8, ip, #3
 251:fips202.c     ****         BCu = ROL(Esi, 61);
 1909              		.loc 1 251 13 discriminator 3 view .LVU677
 1910 0a14 83EA0E03 		eor	r3, r3, lr
 1911              		.loc 1 252 13 discriminator 3 view .LVU678
 1912 0a18 48EA4378 		orr	r8, r8, r3, lsl #29
 253:fips202.c     ****         Aga = BCa ^ ((~BCe) & BCi);
 1913              		.loc 1 253 29 discriminator 3 view .LVU679
 1914 0a1c 22EA010E 		bic	lr, r2, r1
 252:fips202.c     ****         BCu = ROL(Esi, 61);
 1915              		.loc 1 252 13 discriminator 3 view .LVU680
 1916 0a20 DB08     		lsrs	r3, r3, #3
 1917 0a22 43EA4C73 		orr	r3, r3, ip, lsl #29
 1918              	.LVL245:
 1919              		.loc 1 253 9 is_stmt 1 discriminator 3 view .LVU681
 1920              		.loc 1 253 13 is_stmt 0 discriminator 3 view .LVU682
 1921 0a26 8EEA040E 		eor	lr, lr, r4
 1922              		.loc 1 253 29 discriminator 3 view .LVU683
 1923 0a2a 27EA060C 		bic	ip, r7, r6
 1924              		.loc 1 253 13 discriminator 3 view .LVU684
 1925 0a2e 8CEA0B0C 		eor	ip, ip, fp
 1926 0a32 CDF858E0 		str	lr, [sp, #88]
 254:fips202.c     ****         Age = BCe ^ ((~BCi) & BCo);
 1927              		.loc 1 254 29 discriminator 3 view .LVU685
 1928 0a36 25EA020E 		bic	lr, r5, r2
 1929              		.loc 1 254 13 discriminator 3 view .LVU686
 1930 0a3a 8EEA010E 		eor	lr, lr, r1
 253:fips202.c     ****         Aga = BCa ^ ((~BCe) & BCi);
 1931              		.loc 1 253 13 discriminator 3 view .LVU687
 1932 0a3e CDF85CC0 		str	ip, [sp, #92]
 1933              	.LVL246:
 1934              		.loc 1 254 9 is_stmt 1 discriminator 3 view .LVU688
 1935              		.loc 1 254 29 is_stmt 0 discriminator 3 view .LVU689
 1936 0a42 2AEA070C 		bic	ip, r10, r7
 1937              	.LVL247:
 1938              		.loc 1 254 13 discriminator 3 view .LVU690
 1939 0a46 8CEA060C 		eor	ip, ip, r6
 1940 0a4a CDF860E0 		str	lr, [sp, #96]
 1941              	.LVL248:
 255:fips202.c     ****         Agi = BCi ^ ((~BCo) & BCu);
 1942              		.loc 1 255 29 discriminator 3 view .LVU691
 1943 0a4e 28EA050E 		bic	lr, r8, r5
 1944              		.loc 1 255 13 discriminator 3 view .LVU692
 1945 0a52 8EEA0202 		eor	r2, lr, r2
 1946              	.LVL249:
 254:fips202.c     ****         Age = BCe ^ ((~BCi) & BCo);
 1947              		.loc 1 254 13 discriminator 3 view .LVU693
 1948 0a56 CDF864C0 		str	ip, [sp, #100]
 1949              	.LVL250:
 1950              		.loc 1 255 9 is_stmt 1 discriminator 3 view .LVU694
 1951              		.loc 1 255 29 is_stmt 0 discriminator 3 view .LVU695
 1952 0a5a 23EA0A0C 		bic	ip, r3, r10
 1953              	.LVL251:
 1954              		.loc 1 255 13 discriminator 3 view .LVU696
 1955 0a5e 1A92     		str	r2, [sp, #104]
 1956              	.LVL252:
 1957              		.loc 1 255 13 discriminator 3 view .LVU697
 1958 0a60 8CEA0702 		eor	r2, ip, r7
 1959 0a64 1B92     		str	r2, [sp, #108]
 1960              	.LVL253:
 256:fips202.c     ****         Ago = BCo ^ ((~BCu) & BCa);
 1961              		.loc 1 256 9 is_stmt 1 discriminator 3 view .LVU698
 1962              		.loc 1 256 29 is_stmt 0 discriminator 3 view .LVU699
 1963 0a66 2BEA0302 		bic	r2, fp, r3
 1964              	.LVL254:
 1965              		.loc 1 256 13 discriminator 3 view .LVU700
 1966 0a6a 82EA0A02 		eor	r2, r2, r10
 257:fips202.c     ****         Agu = BCu ^ ((~BCa) & BCe);
 1967              		.loc 1 257 29 discriminator 3 view .LVU701
 1968 0a6e 21EA0401 		bic	r1, r1, r4
 1969              	.LVL255:
 1970              		.loc 1 257 29 discriminator 3 view .LVU702
 1971 0a72 26EA0B06 		bic	r6, r6, fp
 1972              	.LVL256:
 1973              		.loc 1 257 13 discriminator 3 view .LVU703
 1974 0a76 7340     		eors	r3, r3, r6
 1975              	.LVL257:
 256:fips202.c     ****         Ago = BCo ^ ((~BCu) & BCa);
 1976              		.loc 1 256 13 discriminator 3 view .LVU704
 1977 0a78 1D92     		str	r2, [sp, #116]
 1978              	.LVL258:
 1979              		.loc 1 257 9 is_stmt 1 discriminator 3 view .LVU705
 1980              		.loc 1 257 13 is_stmt 0 discriminator 3 view .LVU706
 1981 0a7a 81EA0802 		eor	r2, r1, r8
 1982              	.LVL259:
 1983              		.loc 1 257 13 discriminator 3 view .LVU707
 1984 0a7e 1E92     		str	r2, [sp, #120]
 1985              	.LVL260:
 1986              		.loc 1 257 13 discriminator 3 view .LVU708
 1987 0a80 1F93     		str	r3, [sp, #124]
 1988              	.LVL261:
 258:fips202.c     **** 
 259:fips202.c     ****         Ebe ^= De;
 1989              		.loc 1 259 9 is_stmt 1 discriminator 3 view .LVU709
 260:fips202.c     ****         BCa = ROL(Ebe, 1);
 1990              		.loc 1 260 9 discriminator 3 view .LVU710
 259:fips202.c     ****         BCa = ROL(Ebe, 1);
 1991              		.loc 1 259 13 is_stmt 0 discriminator 3 view .LVU711
 1992 0a82 049A     		ldr	r2, [sp, #16]
 1993              	.LVL262:
 259:fips202.c     ****         BCa = ROL(Ebe, 1);
 1994              		.loc 1 259 13 discriminator 3 view .LVU712
 1995 0a84 249B     		ldr	r3, [sp, #144]
 1996              	.LVL263:
 256:fips202.c     ****         Agu = BCu ^ ((~BCa) & BCe);
 1997              		.loc 1 256 29 discriminator 3 view .LVU713
 1998 0a86 24EA0807 		bic	r7, r4, r8
 256:fips202.c     ****         Agu = BCu ^ ((~BCa) & BCe);
 1999              		.loc 1 256 13 discriminator 3 view .LVU714
 2000 0a8a 7D40     		eors	r5, r5, r7
 2001              	.LVL264:
 259:fips202.c     ****         BCa = ROL(Ebe, 1);
 2002              		.loc 1 259 13 discriminator 3 view .LVU715
 2003 0a8c 83EA0207 		eor	r7, r3, r2
 2004 0a90 259B     		ldr	r3, [sp, #148]
 2005 0a92 059A     		ldr	r2, [sp, #20]
 256:fips202.c     ****         Agu = BCu ^ ((~BCa) & BCe);
 2006              		.loc 1 256 13 discriminator 3 view .LVU716
 2007 0a94 1C95     		str	r5, [sp, #112]
 2008              	.LVL265:
 259:fips202.c     ****         BCa = ROL(Ebe, 1);
 2009              		.loc 1 259 13 discriminator 3 view .LVU717
 2010 0a96 83EA0206 		eor	r6, r3, r2
 261:fips202.c     ****         Egi ^= Di;
 2011              		.loc 1 261 13 discriminator 3 view .LVU718
 2012 0a9a 209B     		ldr	r3, [sp, #128]
 2013 0a9c 069A     		ldr	r2, [sp, #24]
 260:fips202.c     ****         Egi ^= Di;
 2014              		.loc 1 260 13 discriminator 3 view .LVU719
 2015 0a9e 4FEA4608 		lsl	r8, r6, #1
 2016              		.loc 1 261 13 discriminator 3 view .LVU720
 2017 0aa2 83EA0204 		eor	r4, r3, r2
 2018              	.LVL266:
 2019              		.loc 1 261 13 discriminator 3 view .LVU721
 2020 0aa6 219B     		ldr	r3, [sp, #132]
 2021 0aa8 079A     		ldr	r2, [sp, #28]
 260:fips202.c     ****         Egi ^= Di;
 2022              		.loc 1 260 13 discriminator 3 view .LVU722
 2023 0aaa 48EAD778 		orr	r8, r8, r7, lsr #31
 2024 0aae 7F00     		lsls	r7, r7, #1
 2025 0ab0 47EAD67B 		orr	fp, r7, r6, lsr #31
 2026              	.LVL267:
 2027              		.loc 1 261 9 is_stmt 1 discriminator 3 view .LVU723
 262:fips202.c     ****         BCe = ROL(Egi, 6);
 2028              		.loc 1 262 9 discriminator 3 view .LVU724
 261:fips202.c     ****         Egi ^= Di;
 2029              		.loc 1 261 13 is_stmt 0 discriminator 3 view .LVU725
 2030 0ab4 83EA0206 		eor	r6, r3, r2
 263:fips202.c     ****         Eko ^= Do;
 2031              		.loc 1 263 13 discriminator 3 view .LVU726
 2032 0ab8 269B     		ldr	r3, [sp, #152]
 2033 0aba 089A     		ldr	r2, [sp, #32]
 2034 0abc 83EA0205 		eor	r5, r3, r2
 2035 0ac0 279B     		ldr	r3, [sp, #156]
 2036 0ac2 099A     		ldr	r2, [sp, #36]
 2037 0ac4 83EA0201 		eor	r1, r3, r2
 264:fips202.c     ****         BCi = ROL(Eko, 25);
 2038              		.loc 1 264 13 discriminator 3 view .LVU727
 2039 0ac8 6A06     		lsls	r2, r5, #25
 2040 0aca 42EAD112 		orr	r2, r2, r1, lsr #7
 265:fips202.c     ****         Emu ^= Du;
 2041              		.loc 1 265 13 discriminator 3 view .LVU728
 2042 0ace 229B     		ldr	r3, [sp, #136]
 264:fips202.c     ****         BCi = ROL(Eko, 25);
 2043              		.loc 1 264 13 discriminator 3 view .LVU729
 2044 0ad0 4FEA416A 		lsl	r10, r1, #25
 2045              		.loc 1 265 13 discriminator 3 view .LVU730
 2046 0ad4 0A99     		ldr	r1, [sp, #40]
 262:fips202.c     ****         Eko ^= Do;
 2047              		.loc 1 262 13 discriminator 3 view .LVU731
 2048 0ad6 4FEA861C 		lsl	ip, r6, #6
 2049              		.loc 1 265 13 discriminator 3 view .LVU732
 2050 0ada 83EA0107 		eor	r7, r3, r1
 2051 0ade 239B     		ldr	r3, [sp, #140]
 2052 0ae0 0B99     		ldr	r1, [sp, #44]
 262:fips202.c     ****         Eko ^= Do;
 2053              		.loc 1 262 13 discriminator 3 view .LVU733
 2054 0ae2 4CEA946C 		orr	ip, ip, r4, lsr #26
 2055 0ae6 A401     		lsls	r4, r4, #6
 2056 0ae8 44EA9669 		orr	r9, r4, r6, lsr #26
 2057              	.LVL268:
 263:fips202.c     ****         BCi = ROL(Eko, 25);
 2058              		.loc 1 263 9 is_stmt 1 discriminator 3 view .LVU734
 264:fips202.c     ****         Emu ^= Du;
 2059              		.loc 1 264 9 discriminator 3 view .LVU735
 2060              		.loc 1 265 13 is_stmt 0 discriminator 3 view .LVU736
 2061 0aec 83EA0104 		eor	r4, r3, r1
 266:fips202.c     ****         BCo = ROL(Emu, 8);
 2062              		.loc 1 266 13 discriminator 3 view .LVU737
 2063 0af0 2102     		lsls	r1, r4, #8
 2064 0af2 41EA1761 		orr	r1, r1, r7, lsr #24
 2065 0af6 3F02     		lsls	r7, r7, #8
 2066 0af8 47EA1467 		orr	r7, r7, r4, lsr #24
 267:fips202.c     ****         Esa ^= Da;
 2067              		.loc 1 267 13 discriminator 3 view .LVU738
 2068 0afc 289B     		ldr	r3, [sp, #160]
 2069 0afe 029C     		ldr	r4, [sp, #8]
 264:fips202.c     ****         Emu ^= Du;
 2070              		.loc 1 264 13 discriminator 3 view .LVU739
 2071 0b00 4AEAD51A 		orr	r10, r10, r5, lsr #7
 2072              	.LVL269:
 265:fips202.c     ****         BCo = ROL(Emu, 8);
 2073              		.loc 1 265 9 is_stmt 1 discriminator 3 view .LVU740
 266:fips202.c     ****         BCo = ROL(Emu, 8);
 2074              		.loc 1 266 9 discriminator 3 view .LVU741
 2075              		.loc 1 267 9 discriminator 3 view .LVU742
 268:fips202.c     ****         BCu = ROL(Esa, 18);
 2076              		.loc 1 268 9 discriminator 3 view .LVU743
 267:fips202.c     ****         Esa ^= Da;
 2077              		.loc 1 267 13 is_stmt 0 discriminator 3 view .LVU744
 2078 0b04 6340     		eors	r3, r3, r4
 2079 0b06 039D     		ldr	r5, [sp, #12]
 2080 0b08 299C     		ldr	r4, [sp, #164]
 2081 0b0a 6C40     		eors	r4, r4, r5
 2082              		.loc 1 268 13 discriminator 3 view .LVU745
 2083 0b0c 4FEA844E 		lsl	lr, r4, #18
 2084 0b10 4EEA933E 		orr	lr, lr, r3, lsr #14
 2085 0b14 9B04     		lsls	r3, r3, #18
 2086 0b16 43EA9433 		orr	r3, r3, r4, lsr #14
 2087              	.LVL270:
 269:fips202.c     ****         Aka = BCa ^ ((~BCe) & BCi);
 2088              		.loc 1 269 9 is_stmt 1 discriminator 3 view .LVU746
 2089              		.loc 1 269 29 is_stmt 0 discriminator 3 view .LVU747
 2090 0b1a 2AEA0C04 		bic	r4, r10, ip
 2091 0b1e 22EA0905 		bic	r5, r2, r9
 2092              		.loc 1 269 13 discriminator 3 view .LVU748
 2093 0b22 84EA0804 		eor	r4, r4, r8
 2094 0b26 85EA0B05 		eor	r5, r5, fp
 2095 0b2a 2194     		str	r4, [sp, #132]
 2096              	.LVL271:
 270:fips202.c     ****         Ake = BCe ^ ((~BCi) & BCo);
 2097              		.loc 1 270 9 is_stmt 1 discriminator 3 view .LVU749
 2098              		.loc 1 270 29 is_stmt 0 discriminator 3 view .LVU750
 2099 0b2c 27EA0204 		bic	r4, r7, r2
 2100              	.LVL272:
 2101              		.loc 1 270 13 discriminator 3 view .LVU751
 2102 0b30 84EA0904 		eor	r4, r4, r9
 269:fips202.c     ****         Aka = BCa ^ ((~BCe) & BCi);
 2103              		.loc 1 269 13 discriminator 3 view .LVU752
 2104 0b34 2095     		str	r5, [sp, #128]
 2105              	.LVL273:
 2106              		.loc 1 270 29 discriminator 3 view .LVU753
 2107 0b36 21EA0A05 		bic	r5, r1, r10
 2108              		.loc 1 270 13 discriminator 3 view .LVU754
 2109 0b3a 2294     		str	r4, [sp, #136]
 2110 0b3c 85EA0C04 		eor	r4, r5, ip
 271:fips202.c     ****         Aki = BCi ^ ((~BCo) & BCu);
 2111              		.loc 1 271 29 discriminator 3 view .LVU755
 2112 0b40 23EA0705 		bic	r5, r3, r7
 2113              		.loc 1 271 13 discriminator 3 view .LVU756
 2114 0b44 6A40     		eors	r2, r2, r5
 2115              	.LVL274:
 270:fips202.c     ****         Ake = BCe ^ ((~BCi) & BCo);
 2116              		.loc 1 270 13 discriminator 3 view .LVU757
 2117 0b46 2394     		str	r4, [sp, #140]
 2118              	.LVL275:
 2119              		.loc 1 271 9 is_stmt 1 discriminator 3 view .LVU758
 2120              		.loc 1 271 29 is_stmt 0 discriminator 3 view .LVU759
 2121 0b48 2EEA0104 		bic	r4, lr, r1
 2122              	.LVL276:
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 273:fips202.c     ****         Aku = BCu ^ ((~BCa) & BCe);
 2123              		.loc 1 273 29 discriminator 3 view .LVU760
 2124 0b4c 29EA0B09 		bic	r9, r9, fp
 2125              	.LVL277:
 271:fips202.c     ****         Aki = BCi ^ ((~BCo) & BCu);
 2126              		.loc 1 271 13 discriminator 3 view .LVU761
 2127 0b50 2492     		str	r2, [sp, #144]
 2128              	.LVL278:
 271:fips202.c     ****         Aki = BCi ^ ((~BCo) & BCu);
 2129              		.loc 1 271 13 discriminator 3 view .LVU762
 2130 0b52 84EA0A02 		eor	r2, r4, r10
 2131              		.loc 1 273 29 discriminator 3 view .LVU763
 2132 0b56 2CEA080C 		bic	ip, ip, r8
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 2133              		.loc 1 272 29 discriminator 3 view .LVU764
 2134 0b5a 2BEA0304 		bic	r4, fp, r3
 271:fips202.c     ****         Aki = BCi ^ ((~BCo) & BCu);
 2135              		.loc 1 271 13 discriminator 3 view .LVU765
 2136 0b5e 2592     		str	r2, [sp, #148]
 2137              	.LVL279:
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 2138              		.loc 1 272 9 is_stmt 1 discriminator 3 view .LVU766
 2139              		.loc 1 273 13 is_stmt 0 discriminator 3 view .LVU767
 2140 0b60 89EA0303 		eor	r3, r9, r3
 2141              	.LVL280:
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 2142              		.loc 1 272 29 discriminator 3 view .LVU768
 2143 0b64 28EA0E02 		bic	r2, r8, lr
 2144              	.LVL281:
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 2145              		.loc 1 272 13 discriminator 3 view .LVU769
 2146 0b68 4A40     		eors	r2, r2, r1
 2147              		.loc 1 273 13 discriminator 3 view .LVU770
 2148 0b6a 2893     		str	r3, [sp, #160]
 2149              	.LVL282:
 2150              		.loc 1 273 13 discriminator 3 view .LVU771
 2151 0b6c 8CEA0E03 		eor	r3, ip, lr
 272:fips202.c     ****         Ako = BCo ^ ((~BCu) & BCa);
 2152              		.loc 1 272 13 discriminator 3 view .LVU772
 2153 0b70 2792     		str	r2, [sp, #156]
 2154              	.LVL283:
 2155              		.loc 1 273 9 is_stmt 1 discriminator 3 view .LVU773
 2156              		.loc 1 273 13 is_stmt 0 discriminator 3 view .LVU774
 2157 0b72 2993     		str	r3, [sp, #164]
 2158              	.LVL284:
 274:fips202.c     **** 
 275:fips202.c     ****         Ebu ^= Du;
 2159              		.loc 1 275 9 is_stmt 1 discriminator 3 view .LVU775
 276:fips202.c     ****         BCa = ROL(Ebu, 27);
 2160              		.loc 1 276 9 discriminator 3 view .LVU776
 275:fips202.c     ****         BCa = ROL(Ebu, 27);
 2161              		.loc 1 275 13 is_stmt 0 discriminator 3 view .LVU777
 2162 0b74 0A9A     		ldr	r2, [sp, #40]
 2163              	.LVL285:
 275:fips202.c     ****         BCa = ROL(Ebu, 27);
 2164              		.loc 1 275 13 discriminator 3 view .LVU778
 2165 0b76 309B     		ldr	r3, [sp, #192]
 2166              	.LVL286:
 277:fips202.c     ****         Ega ^= Da;
 278:fips202.c     ****         BCe = ROL(Ega, 36);
 279:fips202.c     ****         Eke ^= De;
 2167              		.loc 1 279 13 discriminator 3 view .LVU779
 2168 0b78 0599     		ldr	r1, [sp, #20]
 2169              	.LVL287:
 275:fips202.c     ****         BCa = ROL(Ebu, 27);
 2170              		.loc 1 275 13 discriminator 3 view .LVU780
 2171 0b7a 83EA0205 		eor	r5, r3, r2
 2172 0b7e 0B9A     		ldr	r2, [sp, #44]
 2173 0b80 319B     		ldr	r3, [sp, #196]
 2174 0b82 5340     		eors	r3, r3, r2
 276:fips202.c     ****         Ega ^= Da;
 2175              		.loc 1 276 13 discriminator 3 view .LVU781
 2176 0b84 4FEAC36B 		lsl	fp, r3, #27
 2177              	.LVL288:
 276:fips202.c     ****         Ega ^= Da;
 2178              		.loc 1 276 13 discriminator 3 view .LVU782
 2179 0b88 4BEA551B 		orr	fp, fp, r5, lsr #5
 2180 0b8c ED06     		lsls	r5, r5, #27
 2181 0b8e 45EA531C 		orr	ip, r5, r3, lsr #5
 2182              	.LVL289:
 277:fips202.c     ****         Ega ^= Da;
 2183              		.loc 1 277 9 is_stmt 1 discriminator 3 view .LVU783
 278:fips202.c     ****         Eke ^= De;
 2184              		.loc 1 278 9 discriminator 3 view .LVU784
 277:fips202.c     ****         Ega ^= Da;
 2185              		.loc 1 277 13 is_stmt 0 discriminator 3 view .LVU785
 2186 0b92 029A     		ldr	r2, [sp, #8]
 2187 0b94 2C9B     		ldr	r3, [sp, #176]
 2188 0b96 83EA020A 		eor	r10, r3, r2
 2189 0b9a 2D9B     		ldr	r3, [sp, #180]
 2190 0b9c 039A     		ldr	r2, [sp, #12]
 2191 0b9e 83EA0206 		eor	r6, r3, r2
 2192              		.loc 1 279 13 discriminator 3 view .LVU786
 2193 0ba2 329B     		ldr	r3, [sp, #200]
 2194 0ba4 049A     		ldr	r2, [sp, #16]
 2195 0ba6 5A40     		eors	r2, r2, r3
 2196 0ba8 339B     		ldr	r3, [sp, #204]
 278:fips202.c     ****         Eke ^= De;
 2197              		.loc 1 278 13 discriminator 3 view .LVU787
 2198 0baa 4FEA1A7E 		lsr	lr, r10, #28
 2199 0bae 4EEA061E 		orr	lr, lr, r6, lsl #4
 2200              		.loc 1 279 13 discriminator 3 view .LVU788
 2201 0bb2 83EA0109 		eor	r9, r3, r1
 278:fips202.c     ****         Eke ^= De;
 2202              		.loc 1 278 13 discriminator 3 view .LVU789
 2203 0bb6 360F     		lsrs	r6, r6, #28
 2204 0bb8 46EA0A16 		orr	r6, r6, r10, lsl #4
 2205              	.LVL290:
 2206              		.loc 1 279 9 is_stmt 1 discriminator 3 view .LVU790
 280:fips202.c     ****         BCi = ROL(Eke, 10);
 2207              		.loc 1 280 9 discriminator 3 view .LVU791
 2208              		.loc 1 280 13 is_stmt 0 discriminator 3 view .LVU792
 2209 0bbc 4FEA892A 		lsl	r10, r9, #10
 2210 0bc0 4AEA925A 		orr	r10, r10, r2, lsr #22
 281:fips202.c     ****         Emi ^= Di;
 2211              		.loc 1 281 13 discriminator 3 view .LVU793
 2212 0bc4 0699     		ldr	r1, [sp, #24]
 280:fips202.c     ****         BCi = ROL(Eke, 10);
 2213              		.loc 1 280 13 discriminator 3 view .LVU794
 2214 0bc6 9302     		lsls	r3, r2, #10
 2215              		.loc 1 281 13 discriminator 3 view .LVU795
 2216 0bc8 2E9A     		ldr	r2, [sp, #184]
 2217 0bca 82EA0105 		eor	r5, r2, r1
 2218 0bce 0799     		ldr	r1, [sp, #28]
 2219 0bd0 2F9A     		ldr	r2, [sp, #188]
 280:fips202.c     ****         BCi = ROL(Eke, 10);
 2220              		.loc 1 280 13 discriminator 3 view .LVU796
 2221 0bd2 43EA9953 		orr	r3, r3, r9, lsr #22
 2222              	.LVL291:
 2223              		.loc 1 281 9 is_stmt 1 discriminator 3 view .LVU797
 282:fips202.c     ****         BCo = ROL(Emi, 15);
 2224              		.loc 1 282 9 discriminator 3 view .LVU798
 272:fips202.c     ****         Aku = BCu ^ ((~BCa) & BCe);
 2225              		.loc 1 272 13 is_stmt 0 discriminator 3 view .LVU799
 2226 0bd6 7C40     		eors	r4, r4, r7
 281:fips202.c     ****         Emi ^= Di;
 2227              		.loc 1 281 13 discriminator 3 view .LVU800
 2228 0bd8 82EA0109 		eor	r9, r2, r1
 272:fips202.c     ****         Aku = BCu ^ ((~BCa) & BCe);
 2229              		.loc 1 272 13 discriminator 3 view .LVU801
 2230 0bdc 2694     		str	r4, [sp, #152]
 2231              	.LVL292:
 283:fips202.c     ****         Eso ^= Do;
 2232              		.loc 1 283 13 discriminator 3 view .LVU802
 2233 0bde 2A9A     		ldr	r2, [sp, #168]
 2234 0be0 0899     		ldr	r1, [sp, #32]
 282:fips202.c     ****         BCo = ROL(Emi, 15);
 2235              		.loc 1 282 13 discriminator 3 view .LVU803
 2236 0be2 4FEAC934 		lsl	r4, r9, #15
 2237 0be6 44EA5544 		orr	r4, r4, r5, lsr #17
 2238 0bea ED03     		lsls	r5, r5, #15
 2239 0bec 45EA5948 		orr	r8, r5, r9, lsr #17
 2240              	.LVL293:
 2241              		.loc 1 283 9 is_stmt 1 discriminator 3 view .LVU804
 284:fips202.c     ****         BCu = ROL(Eso, 56);
 2242              		.loc 1 284 9 discriminator 3 view .LVU805
 283:fips202.c     ****         Eso ^= Do;
 2243              		.loc 1 283 13 is_stmt 0 discriminator 3 view .LVU806
 2244 0bf0 5140     		eors	r1, r1, r2
 2245 0bf2 099D     		ldr	r5, [sp, #36]
 2246 0bf4 2B9A     		ldr	r2, [sp, #172]
 2247              		.loc 1 284 13 discriminator 3 view .LVU807
 2248 0bf6 4FEA1129 		lsr	r9, r1, #8
 283:fips202.c     ****         Eso ^= Do;
 2249              		.loc 1 283 13 discriminator 3 view .LVU808
 2250 0bfa 82EA0507 		eor	r7, r2, r5
 2251              		.loc 1 284 13 discriminator 3 view .LVU809
 2252 0bfe 49EA0769 		orr	r9, r9, r7, lsl #24
 2253 0c02 3F0A     		lsrs	r7, r7, #8
 2254 0c04 47EA0167 		orr	r7, r7, r1, lsl #24
 2255              	.LVL294:
 285:fips202.c     ****         Ama = BCa ^ ((~BCe) & BCi);
 2256              		.loc 1 285 9 is_stmt 1 discriminator 3 view .LVU810
 2257              		.loc 1 285 29 is_stmt 0 discriminator 3 view .LVU811
 2258 0c08 23EA0E01 		bic	r1, r3, lr
 2259 0c0c 2AEA0602 		bic	r2, r10, r6
 2260              		.loc 1 285 13 discriminator 3 view .LVU812
 2261 0c10 81EA0C01 		eor	r1, r1, ip
 2262 0c14 82EA0B02 		eor	r2, r2, fp
 2263 0c18 2A91     		str	r1, [sp, #168]
 286:fips202.c     ****         Ame = BCe ^ ((~BCi) & BCo);
 2264              		.loc 1 286 29 discriminator 3 view .LVU813
 2265 0c1a 28EA0301 		bic	r1, r8, r3
 2266              		.loc 1 286 13 discriminator 3 view .LVU814
 2267 0c1e 81EA0E01 		eor	r1, r1, lr
 285:fips202.c     ****         Ama = BCa ^ ((~BCe) & BCi);
 2268              		.loc 1 285 13 discriminator 3 view .LVU815
 2269 0c22 2B92     		str	r2, [sp, #172]
 2270              	.LVL295:
 2271              		.loc 1 286 9 is_stmt 1 discriminator 3 view .LVU816
 2272              		.loc 1 286 29 is_stmt 0 discriminator 3 view .LVU817
 2273 0c24 24EA0A02 		bic	r2, r4, r10
 2274              	.LVL296:
 2275              		.loc 1 286 13 discriminator 3 view .LVU818
 2276 0c28 7240     		eors	r2, r2, r6
 2277 0c2a 2C91     		str	r1, [sp, #176]
 2278              	.LVL297:
 287:fips202.c     ****         Ami = BCi ^ ((~BCo) & BCu);
 2279              		.loc 1 287 29 discriminator 3 view .LVU819
 2280 0c2c 29EA0801 		bic	r1, r9, r8
 2281              		.loc 1 287 13 discriminator 3 view .LVU820
 2282 0c30 4B40     		eors	r3, r3, r1
 2283              	.LVL298:
 286:fips202.c     ****         Ame = BCe ^ ((~BCi) & BCo);
 2284              		.loc 1 286 13 discriminator 3 view .LVU821
 2285 0c32 2D92     		str	r2, [sp, #180]
 2286              	.LVL299:
 2287              		.loc 1 287 9 is_stmt 1 discriminator 3 view .LVU822
 2288              		.loc 1 287 29 is_stmt 0 discriminator 3 view .LVU823
 2289 0c34 27EA0402 		bic	r2, r7, r4
 2290              	.LVL300:
 288:fips202.c     ****         Amo = BCo ^ ((~BCu) & BCa);
 2291              		.loc 1 288 29 discriminator 3 view .LVU824
 2292 0c38 2CEA0901 		bic	r1, ip, r9
 287:fips202.c     ****         Ami = BCi ^ ((~BCo) & BCu);
 2293              		.loc 1 287 13 discriminator 3 view .LVU825
 2294 0c3c 2E93     		str	r3, [sp, #184]
 2295              	.LVL301:
 287:fips202.c     ****         Ami = BCi ^ ((~BCo) & BCu);
 2296              		.loc 1 287 13 discriminator 3 view .LVU826
 2297 0c3e 82EA0A03 		eor	r3, r2, r10
 2298 0c42 2F93     		str	r3, [sp, #188]
 2299              	.LVL302:
 2300              		.loc 1 288 9 is_stmt 1 discriminator 3 view .LVU827
 2301              		.loc 1 288 29 is_stmt 0 discriminator 3 view .LVU828
 2302 0c44 2BEA0702 		bic	r2, fp, r7
 2303              		.loc 1 288 13 discriminator 3 view .LVU829
 2304 0c48 81EA0803 		eor	r3, r1, r8
 2305              	.LVL303:
 289:fips202.c     ****         Amu = BCu ^ ((~BCa) & BCe);
 2306              		.loc 1 289 29 discriminator 3 view .LVU830
 2307 0c4c 2EEA0C0C 		bic	ip, lr, ip
 2308              	.LVL304:
 288:fips202.c     ****         Amo = BCo ^ ((~BCu) & BCa);
 2309              		.loc 1 288 13 discriminator 3 view .LVU831
 2310 0c50 3093     		str	r3, [sp, #192]
 2311              	.LVL305:
 288:fips202.c     ****         Amo = BCo ^ ((~BCu) & BCa);
 2312              		.loc 1 288 13 discriminator 3 view .LVU832
 2313 0c52 82EA0403 		eor	r3, r2, r4
 2314              		.loc 1 289 29 discriminator 3 view .LVU833
 2315 0c56 26EA0B06 		bic	r6, r6, fp
 2316              	.LVL306:
 288:fips202.c     ****         Amo = BCo ^ ((~BCu) & BCa);
 2317              		.loc 1 288 13 discriminator 3 view .LVU834
 2318 0c5a 3193     		str	r3, [sp, #196]
 2319              	.LVL307:
 2320              		.loc 1 289 9 is_stmt 1 discriminator 3 view .LVU835
 2321              		.loc 1 289 13 is_stmt 0 discriminator 3 view .LVU836
 2322 0c5c 8CEA0903 		eor	r3, ip, r9
 2323              	.LVL308:
 2324              		.loc 1 289 13 discriminator 3 view .LVU837
 2325 0c60 3293     		str	r3, [sp, #200]
 2326              	.LVL309:
 2327              		.loc 1 289 13 discriminator 3 view .LVU838
 2328 0c62 86EA0703 		eor	r3, r6, r7
 290:fips202.c     **** 
 291:fips202.c     ****         Ebi ^= Di;
 2329              		.loc 1 291 13 discriminator 3 view .LVU839
 2330 0c66 069A     		ldr	r2, [sp, #24]
 289:fips202.c     ****         Amu = BCu ^ ((~BCa) & BCe);
 2331              		.loc 1 289 13 discriminator 3 view .LVU840
 2332 0c68 3393     		str	r3, [sp, #204]
 2333              	.LVL310:
 2334              		.loc 1 291 9 is_stmt 1 discriminator 3 view .LVU841
 292:fips202.c     ****         BCa = ROL(Ebi, 62);
 2335              		.loc 1 292 9 discriminator 3 view .LVU842
 291:fips202.c     ****         BCa = ROL(Ebi, 62);
 2336              		.loc 1 291 13 is_stmt 0 discriminator 3 view .LVU843
 2337 0c6a 3B9B     		ldr	r3, [sp, #236]
 2338              	.LVL311:
 293:fips202.c     ****         Ego ^= Do;
 2339              		.loc 1 293 13 discriminator 3 view .LVU844
 2340 0c6c 0899     		ldr	r1, [sp, #32]
 291:fips202.c     ****         BCa = ROL(Ebi, 62);
 2341              		.loc 1 291 13 discriminator 3 view .LVU845
 2342 0c6e 83EA0209 		eor	r9, r3, r2
 2343              	.LVL312:
 291:fips202.c     ****         BCa = ROL(Ebi, 62);
 2344              		.loc 1 291 13 discriminator 3 view .LVU846
 2345 0c72 3C9B     		ldr	r3, [sp, #240]
 2346 0c74 079A     		ldr	r2, [sp, #28]
 2347 0c76 83EA0208 		eor	r8, r3, r2
 2348              	.LVL313:
 2349              		.loc 1 293 13 discriminator 3 view .LVU847
 2350 0c7a 379A     		ldr	r2, [sp, #220]
 292:fips202.c     ****         BCa = ROL(Ebi, 62);
 2351              		.loc 1 292 13 discriminator 3 view .LVU848
 2352 0c7c 4FEA990C 		lsr	ip, r9, #2
 2353              		.loc 1 293 13 discriminator 3 view .LVU849
 2354 0c80 82EA0106 		eor	r6, r2, r1
 2355 0c84 389A     		ldr	r2, [sp, #224]
 294:fips202.c     ****         BCe = ROL(Ego, 55);
 295:fips202.c     ****         Eku ^= Du;
 2356              		.loc 1 295 13 discriminator 3 view .LVU850
 2357 0c86 0A99     		ldr	r1, [sp, #40]
 292:fips202.c     ****         Ego ^= Do;
 2358              		.loc 1 292 13 discriminator 3 view .LVU851
 2359 0c88 4CEA887C 		orr	ip, ip, r8, lsl #30
 2360 0c8c 4FEA9808 		lsr	r8, r8, #2
 2361 0c90 48EA8973 		orr	r3, r8, r9, lsl #30
 2362              	.LVL314:
 293:fips202.c     ****         Ego ^= Do;
 2363              		.loc 1 293 9 is_stmt 1 discriminator 3 view .LVU852
 294:fips202.c     ****         BCe = ROL(Ego, 55);
 2364              		.loc 1 294 9 discriminator 3 view .LVU853
 293:fips202.c     ****         Ego ^= Do;
 2365              		.loc 1 293 13 is_stmt 0 discriminator 3 view .LVU854
 2366 0c94 82EA0508 		eor	r8, r2, r5
 2367              		.loc 1 295 13 discriminator 3 view .LVU855
 2368 0c98 349A     		ldr	r2, [sp, #208]
 2369 0c9a 82EA0105 		eor	r5, r2, r1
 2370 0c9e 3D9A     		ldr	r2, [sp, #244]
 2371 0ca0 0B99     		ldr	r1, [sp, #44]
 296:fips202.c     ****         BCi = ROL(Eku, 39);
 2372              		.loc 1 296 13 discriminator 3 view .LVU856
 2373 0ca2 4FEA556B 		lsr	fp, r5, #25
 295:fips202.c     ****         BCi = ROL(Eku, 39);
 2374              		.loc 1 295 13 discriminator 3 view .LVU857
 2375 0ca6 82EA0104 		eor	r4, r2, r1
 2376              		.loc 1 296 13 discriminator 3 view .LVU858
 2377 0caa 4BEAC41B 		orr	fp, fp, r4, lsl #7
 297:fips202.c     ****         Ema ^= Da;
 2378              		.loc 1 297 13 discriminator 3 view .LVU859
 2379 0cae 399A     		ldr	r2, [sp, #228]
 296:fips202.c     ****         BCi = ROL(Eku, 39);
 2380              		.loc 1 296 13 discriminator 3 view .LVU860
 2381 0cb0 610E     		lsrs	r1, r4, #25
 2382              		.loc 1 297 13 discriminator 3 view .LVU861
 2383 0cb2 029C     		ldr	r4, [sp, #8]
 296:fips202.c     ****         BCi = ROL(Eku, 39);
 2384              		.loc 1 296 13 discriminator 3 view .LVU862
 2385 0cb4 41EAC511 		orr	r1, r1, r5, lsl #7
 2386              		.loc 1 297 13 discriminator 3 view .LVU863
 2387 0cb8 6240     		eors	r2, r2, r4
 2388 0cba 039D     		ldr	r5, [sp, #12]
 2389 0cbc 3A9C     		ldr	r4, [sp, #232]
 2390 0cbe 84EA050A 		eor	r10, r4, r5
 298:fips202.c     ****         BCo = ROL(Ema, 41);
 2391              		.loc 1 298 13 discriminator 3 view .LVU864
 2392 0cc2 4FEADA54 		lsr	r4, r10, #23
 2393 0cc6 44EA4224 		orr	r4, r4, r2, lsl #9
 299:fips202.c     ****         Ese ^= De;
 2394              		.loc 1 299 13 discriminator 3 view .LVU865
 2395 0cca 049D     		ldr	r5, [sp, #16]
 298:fips202.c     ****         BCo = ROL(Ema, 41);
 2396              		.loc 1 298 13 discriminator 3 view .LVU866
 2397 0ccc D70D     		lsrs	r7, r2, #23
 2398              		.loc 1 299 13 discriminator 3 view .LVU867
 2399 0cce 359A     		ldr	r2, [sp, #212]
 2400 0cd0 82EA0509 		eor	r9, r2, r5
 2401 0cd4 369A     		ldr	r2, [sp, #216]
 2402 0cd6 059D     		ldr	r5, [sp, #20]
 294:fips202.c     ****         Eku ^= Du;
 2403              		.loc 1 294 13 discriminator 3 view .LVU868
 2404 0cd8 4FEA562E 		lsr	lr, r6, #9
 294:fips202.c     ****         Eku ^= Du;
 2405              		.loc 1 294 13 discriminator 3 view .LVU869
 2406 0cdc 4EEAC85E 		orr	lr, lr, r8, lsl #23
 298:fips202.c     ****         BCo = ROL(Ema, 41);
 2407              		.loc 1 298 13 discriminator 3 view .LVU870
 2408 0ce0 47EA4A27 		orr	r7, r7, r10, lsl #9
 294:fips202.c     ****         Eku ^= Du;
 2409              		.loc 1 294 13 discriminator 3 view .LVU871
 2410 0ce4 4FEA5828 		lsr	r8, r8, #9
 2411              		.loc 1 299 13 discriminator 3 view .LVU872
 2412 0ce8 82EA050A 		eor	r10, r2, r5
 294:fips202.c     ****         Eku ^= Du;
 2413              		.loc 1 294 13 discriminator 3 view .LVU873
 2414 0cec 48EAC658 		orr	r8, r8, r6, lsl #23
 2415              	.LVL315:
 295:fips202.c     ****         BCi = ROL(Eku, 39);
 2416              		.loc 1 295 9 is_stmt 1 discriminator 3 view .LVU874
 296:fips202.c     ****         Ema ^= Da;
 2417              		.loc 1 296 9 discriminator 3 view .LVU875
 297:fips202.c     ****         BCo = ROL(Ema, 41);
 2418              		.loc 1 297 9 discriminator 3 view .LVU876
 298:fips202.c     ****         Ese ^= De;
 2419              		.loc 1 298 9 discriminator 3 view .LVU877
 2420              		.loc 1 299 9 discriminator 3 view .LVU878
 300:fips202.c     ****         BCu = ROL(Ese, 2);
 2421              		.loc 1 300 9 discriminator 3 view .LVU879
 2422              		.loc 1 300 13 is_stmt 0 discriminator 3 view .LVU880
 2423 0cf0 4FEA8A06 		lsl	r6, r10, #2
 2424 0cf4 46EA9975 		orr	r5, r6, r9, lsr #30
 301:fips202.c     ****         Asa = BCa ^ ((~BCe) & BCi);
 2425              		.loc 1 301 29 discriminator 3 view .LVU881
 2426 0cf8 2BEA0E02 		bic	r2, fp, lr
 300:fips202.c     ****         BCu = ROL(Ese, 2);
 2427              		.loc 1 300 13 discriminator 3 view .LVU882
 2428 0cfc 4FEA8909 		lsl	r9, r9, #2
 2429 0d00 49EA9A7A 		orr	r10, r9, r10, lsr #30
 2430              	.LVL316:
 2431              		.loc 1 301 9 is_stmt 1 discriminator 3 view .LVU883
 2432              		.loc 1 301 13 is_stmt 0 discriminator 3 view .LVU884
 2433 0d04 82EA0C02 		eor	r2, r2, ip
 2434              		.loc 1 301 29 discriminator 3 view .LVU885
 2435 0d08 21EA0809 		bic	r9, r1, r8
 2436              		.loc 1 301 13 discriminator 3 view .LVU886
 2437 0d0c 0B92     		str	r2, [sp, #44]
 2438              	.LVL317:
 2439              		.loc 1 301 13 discriminator 3 view .LVU887
 2440 0d0e 89EA0302 		eor	r2, r9, r3
 2441 0d12 3492     		str	r2, [sp, #208]
 2442              	.LVL318:
 302:fips202.c     ****         Ase = BCe ^ ((~BCi) & BCo);
 2443              		.loc 1 302 9 is_stmt 1 discriminator 3 view .LVU888
 2444              		.loc 1 302 29 is_stmt 0 discriminator 3 view .LVU889
 2445 0d14 27EA0B06 		bic	r6, r7, fp
 2446 0d18 24EA0102 		bic	r2, r4, r1
 2447              	.LVL319:
 2448              		.loc 1 302 13 discriminator 3 view .LVU890
 2449 0d1c 86EA0E06 		eor	r6, r6, lr
 2450 0d20 82EA0802 		eor	r2, r2, r8
 2451 0d24 3596     		str	r6, [sp, #212]
 2452 0d26 3692     		str	r2, [sp, #216]
 2453              	.LVL320:
 303:fips202.c     ****         Asi = BCi ^ ((~BCo) & BCu);
 2454              		.loc 1 303 9 is_stmt 1 discriminator 3 view .LVU891
 2455              		.loc 1 303 29 is_stmt 0 discriminator 3 view .LVU892
 2456 0d28 2AEA0706 		bic	r6, r10, r7
 2457              	.LVL321:
 2458              		.loc 1 303 29 discriminator 3 view .LVU893
 2459 0d2c 25EA0402 		bic	r2, r5, r4
 2460              	.LVL322:
 2461              		.loc 1 303 13 discriminator 3 view .LVU894
 2462 0d30 4A40     		eors	r2, r2, r1
 2463 0d32 86EA0B06 		eor	r6, r6, fp
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 305:fips202.c     ****         Asu = BCu ^ ((~BCa) & BCe);
 2464              		.loc 1 305 29 discriminator 3 view .LVU895
 2465 0d36 2EEA0C0E 		bic	lr, lr, ip
 2466              	.LVL323:
 303:fips202.c     ****         Asi = BCi ^ ((~BCo) & BCu);
 2467              		.loc 1 303 13 discriminator 3 view .LVU896
 2468 0d3a 3796     		str	r6, [sp, #220]
 2469              	.LVL324:
 303:fips202.c     ****         Asi = BCi ^ ((~BCo) & BCu);
 2470              		.loc 1 303 13 discriminator 3 view .LVU897
 2471 0d3c 3892     		str	r2, [sp, #224]
 2472              	.LVL325:
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2473              		.loc 1 304 9 is_stmt 1 discriminator 3 view .LVU898
 2474              		.loc 1 305 29 is_stmt 0 discriminator 3 view .LVU899
 2475 0d3e 28EA0306 		bic	r6, r8, r3
 2476              	.LVL326:
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2477              		.loc 1 304 29 discriminator 3 view .LVU900
 2478 0d42 23EA0502 		bic	r2, r3, r5
 2479              	.LVL327:
 2480              		.loc 1 305 13 discriminator 3 view .LVU901
 2481 0d46 8EEA0A03 		eor	r3, lr, r10
 2482              	.LVL328:
 2483              		.loc 1 305 13 discriminator 3 view .LVU902
 2484 0d4a 3B93     		str	r3, [sp, #236]
 2485              	.LVL329:
 116:fips202.c     ****         //    prepareTheta
 2486              		.loc 1 116 5 discriminator 3 view .LVU903
 2487 0d4c 019B     		ldr	r3, [sp, #4]
 2488 0d4e 1033     		adds	r3, r3, #16
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2489              		.loc 1 304 13 discriminator 3 view .LVU904
 2490 0d50 6240     		eors	r2, r2, r4
 116:fips202.c     ****         //    prepareTheta
 2491              		.loc 1 116 5 discriminator 3 view .LVU905
 2492 0d52 0193     		str	r3, [sp, #4]
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2493              		.loc 1 304 13 discriminator 3 view .LVU906
 2494 0d54 3A92     		str	r2, [sp, #232]
 2495              	.LVL330:
 2496              		.loc 1 305 9 is_stmt 1 discriminator 3 view .LVU907
 116:fips202.c     ****         //    prepareTheta
 2497              		.loc 1 116 5 is_stmt 0 discriminator 3 view .LVU908
 2498 0d56 404B     		ldr	r3, .L10
 2499 0d58 019A     		ldr	r2, [sp, #4]
 2500              	.LVL331:
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2501              		.loc 1 304 29 discriminator 3 view .LVU909
 2502 0d5a 2CEA0A09 		bic	r9, ip, r10
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2503              		.loc 1 304 13 discriminator 3 view .LVU910
 2504 0d5e 89EA0701 		eor	r1, r9, r7
 2505              	.LVL332:
 116:fips202.c     ****         //    prepareTheta
 2506              		.loc 1 116 5 discriminator 3 view .LVU911
 2507 0d62 9342     		cmp	r3, r2
 304:fips202.c     ****         Aso = BCo ^ ((~BCu) & BCa);
 2508              		.loc 1 304 13 discriminator 3 view .LVU912
 2509 0d64 3991     		str	r1, [sp, #228]
 2510              	.LVL333:
 2511              		.loc 1 305 13 discriminator 3 view .LVU913
 2512 0d66 86EA0506 		eor	r6, r6, r5
 2513              	.LVL334:
 116:fips202.c     ****         //    prepareTheta
 2514              		.loc 1 116 38 is_stmt 1 discriminator 3 view .LVU914
 116:fips202.c     ****         //    prepareTheta
 2515              		.loc 1 116 21 discriminator 3 view .LVU915
 116:fips202.c     ****         //    prepareTheta
 2516              		.loc 1 116 5 is_stmt 0 discriminator 3 view .LVU916
 2517 0d6a 7FF4C7A9 		bne	.L5
 306:fips202.c     ****     }
 307:fips202.c     **** 
 308:fips202.c     ****     // copyToState(state, A)
 309:fips202.c     ****     state[0] = Aba;
 2518              		.loc 1 309 5 is_stmt 1 view .LVU917
 2519              		.loc 1 309 14 is_stmt 0 view .LVU918
 2520 0d6e 0C9B     		ldr	r3, [sp, #48]
 2521 0d70 0360     		str	r3, [r0]
 2522 0d72 0D9B     		ldr	r3, [sp, #52]
 2523 0d74 4360     		str	r3, [r0, #4]
 310:fips202.c     ****     state[1] = Abe;
 2524              		.loc 1 310 5 is_stmt 1 view .LVU919
 2525              		.loc 1 310 14 is_stmt 0 view .LVU920
 2526 0d76 0E9B     		ldr	r3, [sp, #56]
 2527 0d78 8360     		str	r3, [r0, #8]
 2528 0d7a 0F9B     		ldr	r3, [sp, #60]
 2529 0d7c C360     		str	r3, [r0, #12]
 311:fips202.c     ****     state[2] = Abi;
 2530              		.loc 1 311 5 is_stmt 1 view .LVU921
 2531              		.loc 1 311 14 is_stmt 0 view .LVU922
 2532 0d7e 109B     		ldr	r3, [sp, #64]
 2533 0d80 0361     		str	r3, [r0, #16]
 2534 0d82 119B     		ldr	r3, [sp, #68]
 2535 0d84 4361     		str	r3, [r0, #20]
 312:fips202.c     ****     state[3] = Abo;
 2536              		.loc 1 312 5 is_stmt 1 view .LVU923
 2537              		.loc 1 312 14 is_stmt 0 view .LVU924
 2538 0d86 129B     		ldr	r3, [sp, #72]
 2539 0d88 8361     		str	r3, [r0, #24]
 2540 0d8a 139B     		ldr	r3, [sp, #76]
 2541 0d8c C361     		str	r3, [r0, #28]
 313:fips202.c     ****     state[4] = Abu;
 2542              		.loc 1 313 5 is_stmt 1 view .LVU925
 2543              		.loc 1 313 14 is_stmt 0 view .LVU926
 2544 0d8e 149B     		ldr	r3, [sp, #80]
 2545 0d90 0362     		str	r3, [r0, #32]
 2546 0d92 159B     		ldr	r3, [sp, #84]
 2547 0d94 4362     		str	r3, [r0, #36]
 314:fips202.c     ****     state[5] = Aga;
 2548              		.loc 1 314 5 is_stmt 1 view .LVU927
 2549              		.loc 1 314 14 is_stmt 0 view .LVU928
 2550 0d96 169B     		ldr	r3, [sp, #88]
 2551 0d98 8362     		str	r3, [r0, #40]
 2552 0d9a 179B     		ldr	r3, [sp, #92]
 2553 0d9c C362     		str	r3, [r0, #44]
 315:fips202.c     ****     state[6] = Age;
 2554              		.loc 1 315 5 is_stmt 1 view .LVU929
 2555              		.loc 1 315 14 is_stmt 0 view .LVU930
 2556 0d9e 189B     		ldr	r3, [sp, #96]
 2557 0da0 0363     		str	r3, [r0, #48]
 2558 0da2 199B     		ldr	r3, [sp, #100]
 2559 0da4 4363     		str	r3, [r0, #52]
 316:fips202.c     ****     state[7] = Agi;
 2560              		.loc 1 316 5 is_stmt 1 view .LVU931
 2561              		.loc 1 316 14 is_stmt 0 view .LVU932
 2562 0da6 1A9B     		ldr	r3, [sp, #104]
 2563 0da8 8363     		str	r3, [r0, #56]
 2564 0daa 1B9B     		ldr	r3, [sp, #108]
 2565 0dac C363     		str	r3, [r0, #60]
 317:fips202.c     ****     state[8] = Ago;
 2566              		.loc 1 317 5 is_stmt 1 view .LVU933
 2567              		.loc 1 317 14 is_stmt 0 view .LVU934
 2568 0dae 1C9B     		ldr	r3, [sp, #112]
 2569 0db0 0364     		str	r3, [r0, #64]
 2570 0db2 1D9B     		ldr	r3, [sp, #116]
 2571 0db4 4364     		str	r3, [r0, #68]
 318:fips202.c     ****     state[9] = Agu;
 2572              		.loc 1 318 5 is_stmt 1 view .LVU935
 2573              		.loc 1 318 14 is_stmt 0 view .LVU936
 2574 0db6 1E9B     		ldr	r3, [sp, #120]
 2575 0db8 8364     		str	r3, [r0, #72]
 2576 0dba 1F9B     		ldr	r3, [sp, #124]
 2577 0dbc C364     		str	r3, [r0, #76]
 319:fips202.c     ****     state[10] = Aka;
 2578              		.loc 1 319 5 is_stmt 1 view .LVU937
 2579              		.loc 1 319 15 is_stmt 0 view .LVU938
 2580 0dbe 209B     		ldr	r3, [sp, #128]
 2581 0dc0 0365     		str	r3, [r0, #80]
 2582 0dc2 219B     		ldr	r3, [sp, #132]
 2583 0dc4 4365     		str	r3, [r0, #84]
 320:fips202.c     ****     state[11] = Ake;
 2584              		.loc 1 320 5 is_stmt 1 view .LVU939
 2585              		.loc 1 320 15 is_stmt 0 view .LVU940
 2586 0dc6 229B     		ldr	r3, [sp, #136]
 2587 0dc8 8365     		str	r3, [r0, #88]
 2588 0dca 239B     		ldr	r3, [sp, #140]
 2589 0dcc C365     		str	r3, [r0, #92]
 321:fips202.c     ****     state[12] = Aki;
 2590              		.loc 1 321 5 is_stmt 1 view .LVU941
 2591              		.loc 1 321 15 is_stmt 0 view .LVU942
 2592 0dce 249B     		ldr	r3, [sp, #144]
 2593 0dd0 0366     		str	r3, [r0, #96]
 2594 0dd2 259B     		ldr	r3, [sp, #148]
 2595 0dd4 4366     		str	r3, [r0, #100]
 322:fips202.c     ****     state[13] = Ako;
 2596              		.loc 1 322 5 is_stmt 1 view .LVU943
 2597              		.loc 1 322 15 is_stmt 0 view .LVU944
 2598 0dd6 269B     		ldr	r3, [sp, #152]
 2599 0dd8 8366     		str	r3, [r0, #104]
 2600 0dda 279B     		ldr	r3, [sp, #156]
 2601 0ddc C366     		str	r3, [r0, #108]
 323:fips202.c     ****     state[14] = Aku;
 2602              		.loc 1 323 5 is_stmt 1 view .LVU945
 2603              		.loc 1 323 15 is_stmt 0 view .LVU946
 2604 0dde 289B     		ldr	r3, [sp, #160]
 2605 0de0 0367     		str	r3, [r0, #112]
 2606 0de2 299B     		ldr	r3, [sp, #164]
 2607 0de4 4367     		str	r3, [r0, #116]
 324:fips202.c     ****     state[15] = Ama;
 2608              		.loc 1 324 5 is_stmt 1 view .LVU947
 2609              		.loc 1 324 15 is_stmt 0 view .LVU948
 2610 0de6 2A9B     		ldr	r3, [sp, #168]
 2611 0de8 8367     		str	r3, [r0, #120]
 2612 0dea 2B9B     		ldr	r3, [sp, #172]
 2613 0dec C367     		str	r3, [r0, #124]
 325:fips202.c     ****     state[16] = Ame;
 2614              		.loc 1 325 5 is_stmt 1 view .LVU949
 2615              		.loc 1 325 15 is_stmt 0 view .LVU950
 2616 0dee 2C9B     		ldr	r3, [sp, #176]
 2617 0df0 C0F88030 		str	r3, [r0, #128]
 2618 0df4 2D9B     		ldr	r3, [sp, #180]
 2619 0df6 C0F88430 		str	r3, [r0, #132]
 326:fips202.c     ****     state[17] = Ami;
 2620              		.loc 1 326 5 is_stmt 1 view .LVU951
 2621              		.loc 1 326 15 is_stmt 0 view .LVU952
 2622 0dfa 2E9B     		ldr	r3, [sp, #184]
 2623 0dfc C0F88830 		str	r3, [r0, #136]
 2624 0e00 2F9B     		ldr	r3, [sp, #188]
 2625 0e02 C0F88C30 		str	r3, [r0, #140]
 327:fips202.c     ****     state[18] = Amo;
 2626              		.loc 1 327 5 is_stmt 1 view .LVU953
 2627              		.loc 1 327 15 is_stmt 0 view .LVU954
 2628 0e06 309B     		ldr	r3, [sp, #192]
 2629 0e08 C0F89030 		str	r3, [r0, #144]
 2630 0e0c 319B     		ldr	r3, [sp, #196]
 2631 0e0e C0F89430 		str	r3, [r0, #148]
 328:fips202.c     ****     state[19] = Amu;
 2632              		.loc 1 328 5 is_stmt 1 view .LVU955
 2633              		.loc 1 328 15 is_stmt 0 view .LVU956
 2634 0e12 329B     		ldr	r3, [sp, #200]
 2635 0e14 C0F89830 		str	r3, [r0, #152]
 2636 0e18 339B     		ldr	r3, [sp, #204]
 2637 0e1a C0F89C30 		str	r3, [r0, #156]
 329:fips202.c     ****     state[20] = Asa;
 2638              		.loc 1 329 5 is_stmt 1 view .LVU957
 2639              		.loc 1 329 15 is_stmt 0 view .LVU958
 2640 0e1e 0B9B     		ldr	r3, [sp, #44]
 2641 0e20 C0F8A030 		str	r3, [r0, #160]
 2642 0e24 349B     		ldr	r3, [sp, #208]
 2643 0e26 C0F8A430 		str	r3, [r0, #164]
 330:fips202.c     ****     state[21] = Ase;
 2644              		.loc 1 330 5 is_stmt 1 view .LVU959
 2645              		.loc 1 330 15 is_stmt 0 view .LVU960
 2646 0e2a 359B     		ldr	r3, [sp, #212]
 2647 0e2c C0F8A830 		str	r3, [r0, #168]
 2648 0e30 369B     		ldr	r3, [sp, #216]
 2649 0e32 C0F8AC30 		str	r3, [r0, #172]
 331:fips202.c     ****     state[22] = Asi;
 2650              		.loc 1 331 5 is_stmt 1 view .LVU961
 2651              		.loc 1 331 15 is_stmt 0 view .LVU962
 2652 0e36 379B     		ldr	r3, [sp, #220]
 2653 0e38 C0F8B030 		str	r3, [r0, #176]
 2654 0e3c 389B     		ldr	r3, [sp, #224]
 2655 0e3e C0F8B430 		str	r3, [r0, #180]
 332:fips202.c     ****     state[23] = Aso;
 2656              		.loc 1 332 5 is_stmt 1 view .LVU963
 2657              		.loc 1 332 15 is_stmt 0 view .LVU964
 2658 0e42 3A9B     		ldr	r3, [sp, #232]
 2659 0e44 C0F8BC30 		str	r3, [r0, #188]
 333:fips202.c     ****     state[24] = Asu;
 2660              		.loc 1 333 5 is_stmt 1 view .LVU965
 2661              		.loc 1 333 15 is_stmt 0 view .LVU966
 2662 0e48 3B9B     		ldr	r3, [sp, #236]
 332:fips202.c     ****     state[23] = Aso;
 2663              		.loc 1 332 15 view .LVU967
 2664 0e4a C0F8B810 		str	r1, [r0, #184]
 2665              		.loc 1 333 15 view .LVU968
 2666 0e4e C0E93036 		strd	r3, r6, [r0, #192]
 334:fips202.c     **** }
 2667              		.loc 1 334 1 view .LVU969
 2668 0e52 3FB0     		add	sp, sp, #252
 2669              	.LCFI3:
 2670              		.cfi_def_cfa_offset 36
 2671              		@ sp needed
 2672 0e54 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2673              	.LVL335:
 2674              	.L11:
 2675              		.loc 1 334 1 view .LVU970
 2676              		.align	2
 2677              	.L10:
 2678 0e58 C0000000 		.word	.LANCHOR0+192
 2679              		.cfi_endproc
 2680              	.LFE2:
 2682              		.section	.text.keccak_absorb,"ax",%progbits
 2683              		.align	1
 2684              		.syntax unified
 2685              		.thumb
 2686              		.thumb_func
 2687              		.fpu softvfp
 2689              	keccak_absorb:
 2690              	.LVL336:
 2691              	.LFB3:
 335:fips202.c     **** 
 336:fips202.c     **** /*************************************************
 337:fips202.c     ****  * Name:        keccak_absorb
 338:fips202.c     ****  *
 339:fips202.c     ****  * Description: Absorb step of Keccak;
 340:fips202.c     ****  *              non-incremental, starts by zeroeing the state.
 341:fips202.c     ****  *
 342:fips202.c     ****  * Arguments:   - uint64_t *s: pointer to (uninitialized) output Keccak state
 343:fips202.c     ****  *              - uint32_t r: rate in bytes (e.g., 168 for SHAKE128)
 344:fips202.c     ****  *              - const uint8_t *m: pointer to input to be absorbed into s
 345:fips202.c     ****  *              - size_t mlen: length of input in bytes
 346:fips202.c     ****  *              - uint8_t p: domain-separation byte for different
 347:fips202.c     ****  *                                 Keccak-derived functions
 348:fips202.c     ****  **************************************************/
 349:fips202.c     **** static void keccak_absorb(uint64_t *s, uint32_t r, const uint8_t *m,
 350:fips202.c     ****                           size_t mlen, uint8_t p) {
 2692              		.loc 1 350 51 is_stmt 1 view -0
 2693              		.cfi_startproc
 2694              		@ args = 4, pretend = 0, frame = 200
 2695              		@ frame_needed = 0, uses_anonymous_args = 0
 351:fips202.c     ****     size_t i;
 2696              		.loc 1 351 5 view .LVU972
 352:fips202.c     ****     uint8_t t[200];
 2697              		.loc 1 352 5 view .LVU973
 353:fips202.c     **** 
 354:fips202.c     ****     /* Zero state */
 355:fips202.c     ****     for (i = 0; i < 25; ++i) {
 2698              		.loc 1 355 5 view .LVU974
 2699              		.loc 1 355 17 view .LVU975
 350:fips202.c     ****     size_t i;
 2700              		.loc 1 350 51 is_stmt 0 view .LVU976
 2701 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2702              	.LCFI4:
 2703              		.cfi_def_cfa_offset 36
 2704              		.cfi_offset 4, -36
 2705              		.cfi_offset 5, -32
 2706              		.cfi_offset 6, -28
 2707              		.cfi_offset 7, -24
 2708              		.cfi_offset 8, -20
 2709              		.cfi_offset 9, -16
 2710              		.cfi_offset 10, -12
 2711              		.cfi_offset 11, -8
 2712              		.cfi_offset 14, -4
 2713 0004 0C46     		mov	r4, r1
 2714 0006 B3B0     		sub	sp, sp, #204
 2715              	.LCFI5:
 2716              		.cfi_def_cfa_offset 240
 350:fips202.c     ****     size_t i;
 2717              		.loc 1 350 51 view .LVU977
 2718 0008 9046     		mov	r8, r2
 356:fips202.c     ****         s[i] = 0;
 2719              		.loc 1 356 14 view .LVU978
 2720 000a 0021     		movs	r1, #0
 2721              	.LVL337:
 2722              		.loc 1 356 14 view .LVU979
 2723 000c C822     		movs	r2, #200
 2724              	.LVL338:
 350:fips202.c     ****     size_t i;
 2725              		.loc 1 350 51 view .LVU980
 2726 000e 8246     		mov	r10, r0
 2727 0010 1D46     		mov	r5, r3
 2728              		.loc 1 356 14 view .LVU981
 2729 0012 FFF7FEFF 		bl	memset
 2730              	.LVL339:
 357:fips202.c     ****     }
 358:fips202.c     **** 
 359:fips202.c     ****     while (mlen >= r) {
 360:fips202.c     ****         for (i = 0; i < r / 8; ++i) {
 2731              		.loc 1 360 27 view .LVU982
 2732 0016 E608     		lsrs	r6, r4, #3
 2733 0018 AAF10807 		sub	r7, r10, #8
 2734              	.L13:
 359:fips202.c     ****         for (i = 0; i < r / 8; ++i) {
 2735              		.loc 1 359 11 is_stmt 1 view .LVU983
 2736 001c A542     		cmp	r5, r4
 2737 001e 2DD2     		bcs	.L15
 361:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 362:fips202.c     ****         }
 363:fips202.c     **** 
 364:fips202.c     ****         KeccakF1600_StatePermute(s);
 365:fips202.c     ****         mlen -= r;
 366:fips202.c     ****         m += r;
 367:fips202.c     ****     }
 368:fips202.c     **** 
 369:fips202.c     ****     for (i = 0; i < r; ++i) {
 370:fips202.c     ****         t[i] = 0;
 2738              		.loc 1 370 14 is_stmt 0 view .LVU984
 2739 0020 2246     		mov	r2, r4
 2740 0022 0021     		movs	r1, #0
 2741 0024 6846     		mov	r0, sp
 2742 0026 FFF7FEFF 		bl	memset
 2743              	.LVL340:
 371:fips202.c     ****     }
 372:fips202.c     ****     for (i = 0; i < mlen; ++i) {
 373:fips202.c     ****         t[i] = m[i];
 2744              		.loc 1 373 14 view .LVU985
 2745 002a 2A46     		mov	r2, r5
 2746 002c 4146     		mov	r1, r8
 2747 002e 6846     		mov	r0, sp
 2748 0030 FFF7FEFF 		bl	memcpy
 2749              	.LVL341:
 374:fips202.c     ****     }
 375:fips202.c     ****     t[i] = p;
 2750              		.loc 1 375 5 is_stmt 1 view .LVU986
 2751              		.loc 1 375 10 is_stmt 0 view .LVU987
 2752 0034 32AB     		add	r3, sp, #200
 2753 0036 1D44     		add	r5, r5, r3
 2754              	.LVL342:
 2755              		.loc 1 375 10 view .LVU988
 2756 0038 9DF8F030 		ldrb	r3, [sp, #240]	@ zero_extendqisi2
 2757 003c 05F8C83C 		strb	r3, [r5, #-200]
 376:fips202.c     ****     t[r - 1] |= 128;
 2758              		.loc 1 376 5 is_stmt 1 view .LVU989
 2759              		.loc 1 376 14 is_stmt 0 view .LVU990
 2760 0040 013C     		subs	r4, r4, #1
 2761              	.LVL343:
 2762              		.loc 1 376 14 view .LVU991
 2763 0042 32AB     		add	r3, sp, #200
 2764 0044 1C44     		add	r4, r4, r3
 2765              	.LVL344:
 2766              		.loc 1 376 14 view .LVU992
 2767 0046 6D46     		mov	r5, sp
 2768 0048 14F8C83C 		ldrb	r3, [r4, #-200]	@ zero_extendqisi2
 2769 004c 63F07F03 		orn	r3, r3, #127
 2770 0050 04F8C83C 		strb	r3, [r4, #-200]
 377:fips202.c     ****     
 378:fips202.c     ****     for (i = 0; i <r / 8 ; ++i) {
 2771              		.loc 1 378 5 is_stmt 1 view .LVU993
 2772              	.LVL345:
 2773              		.loc 1 378 17 view .LVU994
 2774 0054 3C46     		mov	r4, r7
 2775              		.loc 1 378 12 is_stmt 0 view .LVU995
 2776 0056 0027     		movs	r7, #0
 2777              	.LVL346:
 2778              	.L16:
 379:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2779              		.loc 1 379 9 is_stmt 1 discriminator 3 view .LVU996
 2780              		.loc 1 379 17 is_stmt 0 discriminator 3 view .LVU997
 2781 0058 2846     		mov	r0, r5
 2782 005a FFF7FEFF 		bl	load64
 2783              	.LVL347:
 2784              		.loc 1 379 14 discriminator 3 view .LVU998
 2785 005e 54F8082F 		ldr	r2, [r4, #8]!
 2786 0062 6368     		ldr	r3, [r4, #4]
 378:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2787              		.loc 1 378 28 discriminator 3 view .LVU999
 2788 0064 0137     		adds	r7, r7, #1
 2789              	.LVL348:
 2790              		.loc 1 379 14 discriminator 3 view .LVU1000
 2791 0066 4240     		eors	r2, r2, r0
 2792 0068 4B40     		eors	r3, r3, r1
 378:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2793              		.loc 1 378 5 discriminator 3 view .LVU1001
 2794 006a BE42     		cmp	r6, r7
 2795              		.loc 1 379 14 discriminator 3 view .LVU1002
 2796 006c C4E90023 		strd	r2, r3, [r4]
 378:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2797              		.loc 1 378 28 is_stmt 1 discriminator 3 view .LVU1003
 2798              	.LVL349:
 378:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2799              		.loc 1 378 17 discriminator 3 view .LVU1004
 378:fips202.c     ****         s[i] ^= load64(t + 8 * i);
 2800              		.loc 1 378 5 is_stmt 0 discriminator 3 view .LVU1005
 2801 0070 05F10805 		add	r5, r5, #8
 2802 0074 F0D8     		bhi	.L16
 380:fips202.c     ****     }
 381:fips202.c     **** 	
 382:fips202.c     **** }
 2803              		.loc 1 382 1 view .LVU1006
 2804 0076 33B0     		add	sp, sp, #204
 2805              	.LCFI6:
 2806              		.cfi_remember_state
 2807              		.cfi_def_cfa_offset 36
 2808              		@ sp needed
 2809 0078 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2810              	.LVL350:
 2811              	.L15:
 2812              	.LCFI7:
 2813              		.cfi_restore_state
 2814              		.loc 1 382 1 view .LVU1007
 2815 007c B946     		mov	r9, r7
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2816              		.loc 1 360 16 view .LVU1008
 2817 007e 4FF0000B 		mov	fp, #0
 2818              	.L14:
 2819              	.LVL351:
 361:fips202.c     ****         }
 2820              		.loc 1 361 13 is_stmt 1 discriminator 3 view .LVU1009
 361:fips202.c     ****         }
 2821              		.loc 1 361 21 is_stmt 0 discriminator 3 view .LVU1010
 2822 0082 08EBCB00 		add	r0, r8, fp, lsl #3
 2823 0086 FFF7FEFF 		bl	load64
 2824              	.LVL352:
 361:fips202.c     ****         }
 2825              		.loc 1 361 18 discriminator 3 view .LVU1011
 2826 008a 59F8082F 		ldr	r2, [r9, #8]!
 2827 008e D9F80430 		ldr	r3, [r9, #4]
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2828              		.loc 1 360 32 discriminator 3 view .LVU1012
 2829 0092 0BF1010B 		add	fp, fp, #1
 2830              	.LVL353:
 361:fips202.c     ****         }
 2831              		.loc 1 361 18 discriminator 3 view .LVU1013
 2832 0096 4240     		eors	r2, r2, r0
 2833 0098 4B40     		eors	r3, r3, r1
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2834              		.loc 1 360 9 discriminator 3 view .LVU1014
 2835 009a 5E45     		cmp	r6, fp
 361:fips202.c     ****         }
 2836              		.loc 1 361 18 discriminator 3 view .LVU1015
 2837 009c C9E90023 		strd	r2, r3, [r9]
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2838              		.loc 1 360 32 is_stmt 1 discriminator 3 view .LVU1016
 2839              	.LVL354:
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2840              		.loc 1 360 21 discriminator 3 view .LVU1017
 360:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 2841              		.loc 1 360 9 is_stmt 0 discriminator 3 view .LVU1018
 2842 00a0 EFD8     		bhi	.L14
 364:fips202.c     ****         mlen -= r;
 2843              		.loc 1 364 9 is_stmt 1 view .LVU1019
 2844 00a2 5046     		mov	r0, r10
 2845 00a4 FFF7FEFF 		bl	KeccakF1600_StatePermute
 2846              	.LVL355:
 365:fips202.c     ****         m += r;
 2847              		.loc 1 365 9 view .LVU1020
 365:fips202.c     ****         m += r;
 2848              		.loc 1 365 14 is_stmt 0 view .LVU1021
 2849 00a8 2D1B     		subs	r5, r5, r4
 2850              	.LVL356:
 366:fips202.c     ****     }
 2851              		.loc 1 366 9 is_stmt 1 view .LVU1022
 366:fips202.c     ****     }
 2852              		.loc 1 366 11 is_stmt 0 view .LVU1023
 2853 00aa A044     		add	r8, r8, r4
 2854              	.LVL357:
 366:fips202.c     ****     }
 2855              		.loc 1 366 11 view .LVU1024
 2856 00ac B6E7     		b	.L13
 2857              		.cfi_endproc
 2858              	.LFE3:
 2860              		.section	.text.keccak_squeezeblocks,"ax",%progbits
 2861              		.align	1
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2865              		.fpu softvfp
 2867              	keccak_squeezeblocks:
 2868              	.LVL358:
 2869              	.LFB5:
 383:fips202.c     **** 
 384:fips202.c     **** 
 385:fips202.c     **** static void keccak_absorb1(uint64_t *s, uint32_t r, const uint8_t *m,
 386:fips202.c     ****                           size_t mlen, uint8_t p,uint8_t *pp) {
 387:fips202.c     ****     size_t i;
 388:fips202.c     ****     uint8_t t[200];
 389:fips202.c     **** 
 390:fips202.c     ****     /* Zero state */
 391:fips202.c     ****     for (i = 0; i < 25; ++i) {
 392:fips202.c     ****         s[i] = 0;
 393:fips202.c     ****     }
 394:fips202.c     **** 
 395:fips202.c     ****     while (mlen >= r) {
 396:fips202.c     ****         for (i = 0; i < r / 8; ++i) {
 397:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 398:fips202.c     ****         }
 399:fips202.c     **** 
 400:fips202.c     ****         KeccakF1600_StatePermute(s);
 401:fips202.c     ****         mlen -= r;
 402:fips202.c     ****         m += r;
 403:fips202.c     ****     }
 404:fips202.c     **** 
 405:fips202.c     ****     for (i = 0; i < r; ++i) {
 406:fips202.c     ****         t[i] = 0;
 407:fips202.c     ****     }
 408:fips202.c     ****     for (i = 0; i < mlen; ++i) {
 409:fips202.c     ****         t[i] = m[i];
 410:fips202.c     ****         
 411:fips202.c     ****     }
 412:fips202.c     ****     t[i] = p;
 413:fips202.c     ****     t[r - 1] |= 128;
 414:fips202.c     ****     //r/8
 415:fips202.c     ****      for (i = 0; i < 4; ++i) {
 416:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 417:fips202.c     ****      }
 418:fips202.c     ****     
 419:fips202.c     **** }
 420:fips202.c     **** /*************************************************
 421:fips202.c     ****  * Name:        keccak_squeezeblocks
 422:fips202.c     ****  *
 423:fips202.c     ****  * Description: Squeeze step of Keccak. Squeezes full blocks of r bytes each.
 424:fips202.c     ****  *              Modifies the state. Can be called multiple times to keep
 425:fips202.c     ****  *              squeezing, i.e., is incremental.
 426:fips202.c     ****  *
 427:fips202.c     ****  * Arguments:   - uint8_t *h: pointer to output blocks
 428:fips202.c     ****  *              - size_t nblocks: number of blocks to be
 429:fips202.c     ****  *                                                squeezed (written to h)
 430:fips202.c     ****  *              - uint64_t *s: pointer to input/output Keccak state
 431:fips202.c     ****  *              - uint32_t r: rate in bytes (e.g., 168 for SHAKE128)
 432:fips202.c     ****  **************************************************/
 433:fips202.c     **** static void keccak_squeezeblocks(uint8_t *h, size_t nblocks,
 434:fips202.c     ****                                  uint64_t *s, uint32_t r) {
 2870              		.loc 1 434 59 is_stmt 1 view -0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 0
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
 435:fips202.c     ****     while (nblocks > 0) {
 2874              		.loc 1 435 5 view .LVU1026
 434:fips202.c     ****     while (nblocks > 0) {
 2875              		.loc 1 434 59 is_stmt 0 view .LVU1027
 2876 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2877              	.LCFI8:
 2878              		.cfi_def_cfa_offset 40
 2879              		.cfi_offset 3, -40
 2880              		.cfi_offset 4, -36
 2881              		.cfi_offset 5, -32
 2882              		.cfi_offset 6, -28
 2883              		.cfi_offset 7, -24
 2884              		.cfi_offset 8, -20
 2885              		.cfi_offset 9, -16
 2886              		.cfi_offset 10, -12
 2887              		.cfi_offset 11, -8
 2888              		.cfi_offset 14, -4
 434:fips202.c     ****     while (nblocks > 0) {
 2889              		.loc 1 434 59 view .LVU1028
 2890 0004 0646     		mov	r6, r0
 2891 0006 0D46     		mov	r5, r1
 2892 0008 1046     		mov	r0, r2
 2893              	.LVL359:
 434:fips202.c     ****     while (nblocks > 0) {
 2894              		.loc 1 434 59 view .LVU1029
 2895 000a 1F46     		mov	r7, r3
 2896              	.LBB8:
 436:fips202.c     ****         KeccakF1600_StatePermute(s);
 437:fips202.c     ****         for (size_t i = 0; i < (r >> 3); i++) {
 2897              		.loc 1 437 35 view .LVU1030
 2898 000c 4FEAD308 		lsr	r8, r3, #3
 2899              	.LVL360:
 2900              	.L20:
 2901              		.loc 1 437 35 view .LVU1031
 2902              	.LBE8:
 435:fips202.c     ****         KeccakF1600_StatePermute(s);
 2903              		.loc 1 435 11 is_stmt 1 view .LVU1032
 2904 0010 0DB9     		cbnz	r5, .L23
 438:fips202.c     ****             store64(h + 8 * i, s[i]);
 439:fips202.c     ****         }
 440:fips202.c     ****         h += r;
 441:fips202.c     ****         nblocks--;
 442:fips202.c     ****     }
 443:fips202.c     **** }
 2905              		.loc 1 443 1 is_stmt 0 view .LVU1033
 2906 0012 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2907              	.LVL361:
 2908              	.L23:
 436:fips202.c     ****         for (size_t i = 0; i < (r >> 3); i++) {
 2909              		.loc 1 436 9 is_stmt 1 view .LVU1034
 2910 0016 FFF7FEFF 		bl	KeccakF1600_StatePermute
 2911              	.LVL362:
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2912              		.loc 1 437 9 view .LVU1035
 2913              	.LBB14:
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2914              		.loc 1 437 14 view .LVU1036
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2915              		.loc 1 437 28 view .LVU1037
 2916 001a A0F10802 		sub	r2, r0, #8
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2917              		.loc 1 437 21 is_stmt 0 view .LVU1038
 2918 001e 0023     		movs	r3, #0
 2919              	.LVL363:
 2920              	.L22:
 438:fips202.c     ****             store64(h + 8 * i, s[i]);
 2921              		.loc 1 438 13 is_stmt 1 discriminator 3 view .LVU1039
 2922 0020 52F808BF 		ldr	fp, [r2, #8]!
 2923 0024 D2F804A0 		ldr	r10, [r2, #4]
 2924              	.LVL364:
 2925              	.LBB9:
 2926              	.LBI9:
  44:fips202.c     ****     for (size_t i = 0; i < 8; ++i) {
 2927              		.loc 1 44 13 discriminator 3 view .LVU1040
 2928              	.LBE9:
 2929              	.LBE14:
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2930              		.loc 1 45 5 discriminator 3 view .LVU1041
 2931              	.LBB15:
 2932              	.LBB12:
 2933              	.LBB10:
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2934              		.loc 1 45 10 discriminator 3 view .LVU1042
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2935              		.loc 1 45 24 discriminator 3 view .LVU1043
 2936 0028 06EBC309 		add	r9, r6, r3, lsl #3
 2937              	.LVL365:
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2938              		.loc 1 45 24 is_stmt 0 discriminator 3 view .LVU1044
 2939              	.LBE10:
 2940              	.LBE12:
 438:fips202.c     ****         }
 2941              		.loc 1 438 13 discriminator 3 view .LVU1045
 2942 002c 0024     		movs	r4, #0
 2943              	.LVL366:
 2944              	.L21:
 2945              	.LBB13:
 2946              	.LBB11:
  46:fips202.c     ****     }
 2947              		.loc 1 46 9 is_stmt 1 view .LVU1046
  46:fips202.c     ****     }
 2948              		.loc 1 46 29 is_stmt 0 view .LVU1047
 2949 002e C4F1200E 		rsb	lr, r4, #32
 2950 0032 A4F1200C 		sub	ip, r4, #32
 2951 0036 2BFA04F1 		lsr	r1, fp, r4
 2952 003a 0AFA0EFE 		lsl	lr, r10, lr
 2953 003e 41EA0E01 		orr	r1, r1, lr
 2954 0042 2AFA0CFC 		lsr	ip, r10, ip
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2955              		.loc 1 45 5 view .LVU1048
 2956 0046 0834     		adds	r4, r4, #8
  46:fips202.c     ****     }
 2957              		.loc 1 46 29 view .LVU1049
 2958 0048 41EA0C01 		orr	r1, r1, ip
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2959              		.loc 1 45 5 view .LVU1050
 2960 004c 402C     		cmp	r4, #64
  46:fips202.c     ****     }
 2961              		.loc 1 46 16 view .LVU1051
 2962 004e 09F8011B 		strb	r1, [r9], #1
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2963              		.loc 1 45 31 is_stmt 1 view .LVU1052
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2964              		.loc 1 45 24 view .LVU1053
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2965              		.loc 1 45 5 is_stmt 0 view .LVU1054
 2966 0052 ECD1     		bne	.L21
 2967              	.LVL367:
  45:fips202.c     ****         x[i] = (uint8_t) (u >> 8 * i);
 2968              		.loc 1 45 5 view .LVU1055
 2969              	.LBE11:
 2970              	.LBE13:
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2971              		.loc 1 437 42 is_stmt 1 discriminator 3 view .LVU1056
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2972              		.loc 1 437 43 is_stmt 0 discriminator 3 view .LVU1057
 2973 0054 0133     		adds	r3, r3, #1
 2974              	.LVL368:
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2975              		.loc 1 437 28 is_stmt 1 discriminator 3 view .LVU1058
 437:fips202.c     ****             store64(h + 8 * i, s[i]);
 2976              		.loc 1 437 9 is_stmt 0 discriminator 3 view .LVU1059
 2977 0056 9845     		cmp	r8, r3
 2978 0058 E2D8     		bhi	.L22
 2979              	.LBE15:
 440:fips202.c     ****         nblocks--;
 2980              		.loc 1 440 9 is_stmt 1 view .LVU1060
 440:fips202.c     ****         nblocks--;
 2981              		.loc 1 440 11 is_stmt 0 view .LVU1061
 2982 005a 3E44     		add	r6, r6, r7
 2983              	.LVL369:
 441:fips202.c     ****     }
 2984              		.loc 1 441 9 is_stmt 1 view .LVU1062
 441:fips202.c     ****     }
 2985              		.loc 1 441 16 is_stmt 0 view .LVU1063
 2986 005c 013D     		subs	r5, r5, #1
 2987              	.LVL370:
 441:fips202.c     ****     }
 2988              		.loc 1 441 16 view .LVU1064
 2989 005e D7E7     		b	.L20
 2990              		.cfi_endproc
 2991              	.LFE5:
 2993              		.section	.text.keccak_inc_init,"ax",%progbits
 2994              		.align	1
 2995              		.syntax unified
 2996              		.thumb
 2997              		.thumb_func
 2998              		.fpu softvfp
 3000              	keccak_inc_init:
 3001              	.LVL371:
 3002              	.LFB6:
 444:fips202.c     **** 
 445:fips202.c     **** /*************************************************
 446:fips202.c     ****  * Name:        keccak_inc_init
 447:fips202.c     ****  *
 448:fips202.c     ****  * Description: Initializes the incremental Keccak state to zero.
 449:fips202.c     ****  *
 450:fips202.c     ****  * Arguments:   - uint64_t *s_inc: pointer to input/output incremental state
 451:fips202.c     ****  *                First 25 values represent Keccak state.
 452:fips202.c     ****  *                26th value represents either the number of absorbed bytes
 453:fips202.c     ****  *                that have not been permuted, or not-yet-squeezed bytes.
 454:fips202.c     ****  **************************************************/
 455:fips202.c     **** static void keccak_inc_init(uint64_t *s_inc) {
 3003              		.loc 1 455 46 is_stmt 1 view -0
 3004              		.cfi_startproc
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 0, uses_anonymous_args = 0
 456:fips202.c     ****     size_t i;
 3007              		.loc 1 456 5 view .LVU1066
 457:fips202.c     **** 
 458:fips202.c     ****     for (i = 0; i < 25; ++i) {
 3008              		.loc 1 458 5 view .LVU1067
 3009              		.loc 1 458 17 view .LVU1068
 455:fips202.c     ****     size_t i;
 3010              		.loc 1 455 46 is_stmt 0 view .LVU1069
 3011 0000 10B5     		push	{r4, lr}
 3012              	.LCFI9:
 3013              		.cfi_def_cfa_offset 8
 3014              		.cfi_offset 4, -8
 3015              		.cfi_offset 14, -4
 459:fips202.c     ****         s_inc[i] = 0;
 3016              		.loc 1 459 18 view .LVU1070
 3017 0002 C822     		movs	r2, #200
 3018 0004 0021     		movs	r1, #0
 455:fips202.c     ****     size_t i;
 3019              		.loc 1 455 46 view .LVU1071
 3020 0006 0446     		mov	r4, r0
 3021              		.loc 1 459 18 view .LVU1072
 3022 0008 FFF7FEFF 		bl	memset
 3023              	.LVL372:
 460:fips202.c     ****     }
 461:fips202.c     ****     s_inc[25] = 0;
 3024              		.loc 1 461 5 is_stmt 1 view .LVU1073
 3025              		.loc 1 461 15 is_stmt 0 view .LVU1074
 3026 000c 0022     		movs	r2, #0
 3027 000e 0023     		movs	r3, #0
 3028 0010 C4E93223 		strd	r2, [r4, #200]
 462:fips202.c     **** }
 3029              		.loc 1 462 1 view .LVU1075
 3030 0014 10BD     		pop	{r4, pc}
 3031              		.loc 1 462 1 view .LVU1076
 3032              		.cfi_endproc
 3033              	.LFE6:
 3035              		.section	.text.keccak_inc_absorb,"ax",%progbits
 3036              		.align	1
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3040              		.fpu softvfp
 3042              	keccak_inc_absorb:
 3043              	.LVL373:
 3044              	.LFB7:
 463:fips202.c     **** 
 464:fips202.c     **** /*************************************************
 465:fips202.c     ****  * Name:        keccak_inc_absorb
 466:fips202.c     ****  *
 467:fips202.c     ****  * Description: Incremental keccak absorb
 468:fips202.c     ****  *              Preceded by keccak_inc_init, succeeded by keccak_inc_finalize
 469:fips202.c     ****  *
 470:fips202.c     ****  * Arguments:   - uint64_t *s_inc: pointer to input/output incremental state
 471:fips202.c     ****  *                First 25 values represent Keccak state.
 472:fips202.c     ****  *                26th value represents either the number of absorbed bytes
 473:fips202.c     ****  *                that have not been permuted, or not-yet-squeezed bytes.
 474:fips202.c     ****  *              - uint32_t r: rate in bytes (e.g., 168 for SHAKE128)
 475:fips202.c     ****  *              - const uint8_t *m: pointer to input to be absorbed into s
 476:fips202.c     ****  *              - size_t mlen: length of input in bytes
 477:fips202.c     ****  **************************************************/
 478:fips202.c     **** static void keccak_inc_absorb(uint64_t *s_inc, uint32_t r, const uint8_t *m,
 479:fips202.c     ****                               size_t mlen) {
 3045              		.loc 1 479 44 is_stmt 1 view -0
 3046              		.cfi_startproc
 3047              		@ args = 0, pretend = 0, frame = 0
 3048              		@ frame_needed = 0, uses_anonymous_args = 0
 480:fips202.c     ****     size_t i;
 3049              		.loc 1 480 5 view .LVU1078
 481:fips202.c     **** 
 482:fips202.c     ****     /* Recall that s_inc[25] is the non-absorbed bytes xored into the state */
 483:fips202.c     ****     while (mlen + s_inc[25] >= r) {
 3050              		.loc 1 483 5 view .LVU1079
 479:fips202.c     ****     size_t i;
 3051              		.loc 1 479 44 is_stmt 0 view .LVU1080
 3052 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3053              	.LCFI10:
 3054              		.cfi_def_cfa_offset 32
 3055              		.cfi_offset 4, -32
 3056              		.cfi_offset 5, -28
 3057              		.cfi_offset 6, -24
 3058              		.cfi_offset 7, -20
 3059              		.cfi_offset 8, -16
 3060              		.cfi_offset 9, -12
 3061              		.cfi_offset 10, -8
 3062              		.cfi_offset 14, -4
 479:fips202.c     ****     size_t i;
 3063              		.loc 1 479 44 view .LVU1081
 3064 0004 0D46     		mov	r5, r1
 3065 0006 9046     		mov	r8, r2
 3066 0008 9946     		mov	r9, r3
 484:fips202.c     ****         for (i = 0; i < r - (uint32_t)s_inc[25]; i++) {
 485:fips202.c     ****             /* Take the i'th byte from message
 486:fips202.c     ****                xor with the s_inc[25] + i'th byte of the state; little-endian */
 487:fips202.c     ****             s_inc[(s_inc[25] + i) >> 3] ^= (uint64_t)m[i] << (8 * ((s_inc[25] + i) & 0x07));
 488:fips202.c     ****         }
 489:fips202.c     ****         mlen -= (size_t)(r - s_inc[25]);
 490:fips202.c     ****         m += r - s_inc[25];
 491:fips202.c     ****         s_inc[25] = 0;
 3067              		.loc 1 491 19 view .LVU1082
 3068 000a 0026     		movs	r6, #0
 3069 000c 0027     		movs	r7, #0
 3070              	.LVL374:
 3071              	.L28:
 483:fips202.c     ****         for (i = 0; i < r - (uint32_t)s_inc[25]; i++) {
 3072              		.loc 1 483 11 is_stmt 1 view .LVU1083
 483:fips202.c     ****         for (i = 0; i < r - (uint32_t)s_inc[25]; i++) {
 3073              		.loc 1 483 17 is_stmt 0 view .LVU1084
 3074 000e D0E93232 		ldrd	r3, r2, [r0, #200]
 3075 0012 19EB0303 		adds	r3, r9, r3
 3076 0016 42F10002 		adc	r2, r2, #0
 483:fips202.c     ****         for (i = 0; i < r - (uint32_t)s_inc[25]; i++) {
 3077              		.loc 1 483 11 view .LVU1085
 3078 001a AB42     		cmp	r3, r5
 3079 001c 72F10003 		sbcs	r3, r2, #0
 3080 0020 40D2     		bcs	.L33
 483:fips202.c     ****         for (i = 0; i < r - (uint32_t)s_inc[25]; i++) {
 3081              		.loc 1 483 11 view .LVU1086
 3082 0022 0022     		movs	r2, #0
 3083 0024 1546     		mov	r5, r2
 3084              	.LVL375:
 3085              	.L31:
 492:fips202.c     **** 
 493:fips202.c     ****         KeccakF1600_StatePermute(s_inc);
 494:fips202.c     ****     }
 495:fips202.c     **** 
 496:fips202.c     ****     for (i = 0; i < mlen; i++) {
 3086              		.loc 1 496 17 is_stmt 1 discriminator 1 view .LVU1087
 3087              		.loc 1 496 5 is_stmt 0 discriminator 1 view .LVU1088
 3088 0026 9145     		cmp	r9, r2
 497:fips202.c     ****         s_inc[(s_inc[25] + i) >> 3] ^= (uint64_t)m[i] << (8 * ((s_inc[25] + i) & 0x07));
 3089              		.loc 1 497 21 discriminator 1 view .LVU1089
 3090 0028 D0E93231 		ldrd	r3, r1, [r0, #200]
 496:fips202.c     ****         s_inc[(s_inc[25] + i) >> 3] ^= (uint64_t)m[i] << (8 * ((s_inc[25] + i) & 0x07));
 3091              		.loc 1 496 5 discriminator 1 view .LVU1090
 3092 002c 3CD8     		bhi	.L32
 498:fips202.c     ****     }
 499:fips202.c     ****     s_inc[25] += mlen;
 3093              		.loc 1 499 5 is_stmt 1 view .LVU1091
 3094              		.loc 1 499 15 is_stmt 0 view .LVU1092
 3095 002e 19EB0303 		adds	r3, r9, r3
 3096 0032 41F10001 		adc	r1, r1, #0
 3097 0036 C0E93231 		strd	r3, r1, [r0, #200]
 500:fips202.c     **** }
 3098              		.loc 1 500 1 view .LVU1093
 3099 003a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3100              	.LVL376:
 3101              	.L29:
 487:fips202.c     ****         }
 3102              		.loc 1 487 13 is_stmt 1 discriminator 3 view .LVU1094
 487:fips202.c     ****         }
 3103              		.loc 1 487 41 is_stmt 0 discriminator 3 view .LVU1095
 3104 003e 0C19     		adds	r4, r1, r4
 3105 0040 43F10003 		adc	r3, r3, #0
 3106 0044 4FEAD40C 		lsr	ip, r4, #3
 487:fips202.c     ****         }
 3107              		.loc 1 487 59 discriminator 3 view .LVU1096
 3108 0048 04F00704 		and	r4, r4, #7
 487:fips202.c     ****         }
 3109              		.loc 1 487 41 discriminator 3 view .LVU1097
 3110 004c 4CEA437C 		orr	ip, ip, r3, lsl #29
 487:fips202.c     ****         }
 3111              		.loc 1 487 59 discriminator 3 view .LVU1098
 3112 0050 E400     		lsls	r4, r4, #3
 487:fips202.c     ****         }
 3113              		.loc 1 487 44 discriminator 3 view .LVU1099
 3114 0052 18F80130 		ldrb	r3, [r8, r1]	@ zero_extendqisi2
 487:fips202.c     ****         }
 3115              		.loc 1 487 41 discriminator 3 view .LVU1100
 3116 0056 00EBCC0E 		add	lr, r0, ip, lsl #3
 487:fips202.c     ****         }
 3117              		.loc 1 487 59 discriminator 3 view .LVU1101
 3118 005a A4F1200A 		sub	r10, r4, #32
 3119 005e C4F12002 		rsb	r2, r4, #32
 3120 0062 23FA02F2 		lsr	r2, r3, r2
 3121 0066 03FA0AFA 		lsl	r10, r3, r10
 3122 006a 4AEA020A 		orr	r10, r10, r2
 3123 006e 03FA04F4 		lsl	r4, r3, r4
 487:fips202.c     ****         }
 3124              		.loc 1 487 41 discriminator 3 view .LVU1102
 3125 0072 50F83C20 		ldr	r2, [r0, ip, lsl #3]
 3126 0076 DEF80430 		ldr	r3, [lr, #4]
 3127 007a 5440     		eors	r4, r4, r2
 3128 007c 83EA0A03 		eor	r3, r3, r10
 3129 0080 40F83C40 		str	r4, [r0, ip, lsl #3]
 484:fips202.c     ****             /* Take the i'th byte from message
 3130              		.loc 1 484 51 discriminator 3 view .LVU1103
 3131 0084 0131     		adds	r1, r1, #1
 3132              	.LVL377:
 487:fips202.c     ****         }
 3133              		.loc 1 487 41 discriminator 3 view .LVU1104
 3134 0086 CEF80430 		str	r3, [lr, #4]
 484:fips202.c     ****             /* Take the i'th byte from message
 3135              		.loc 1 484 50 is_stmt 1 discriminator 3 view .LVU1105
 3136              	.LVL378:
 3137              	.L30:
 484:fips202.c     ****             /* Take the i'th byte from message
 3138              		.loc 1 484 21 discriminator 1 view .LVU1106
 484:fips202.c     ****             /* Take the i'th byte from message
 3139              		.loc 1 484 44 is_stmt 0 discriminator 1 view .LVU1107
 3140 008a D0E93243 		ldrd	r4, r3, [r0, #200]
 484:fips202.c     ****             /* Take the i'th byte from message
 3141              		.loc 1 484 27 discriminator 1 view .LVU1108
 3142 008e 2A1B     		subs	r2, r5, r4
 484:fips202.c     ****             /* Take the i'th byte from message
 3143              		.loc 1 484 9 discriminator 1 view .LVU1109
 3144 0090 8A42     		cmp	r2, r1
 3145 0092 D4D8     		bhi	.L29
 489:fips202.c     ****         m += r - s_inc[25];
 3146              		.loc 1 489 9 is_stmt 1 view .LVU1110
 489:fips202.c     ****         m += r - s_inc[25];
 3147              		.loc 1 489 17 is_stmt 0 view .LVU1111
 3148 0094 641B     		subs	r4, r4, r5
 491:fips202.c     **** 
 3149              		.loc 1 491 19 view .LVU1112
 3150 0096 C0E93267 		strd	r6, [r0, #200]
 489:fips202.c     ****         m += r - s_inc[25];
 3151              		.loc 1 489 14 view .LVU1113
 3152 009a A144     		add	r9, r9, r4
 3153              	.LVL379:
 490:fips202.c     ****         s_inc[25] = 0;
 3154              		.loc 1 490 9 is_stmt 1 view .LVU1114
 490:fips202.c     ****         s_inc[25] = 0;
 3155              		.loc 1 490 11 is_stmt 0 view .LVU1115
 3156 009c 9044     		add	r8, r8, r2
 3157              	.LVL380:
 491:fips202.c     **** 
 3158              		.loc 1 491 9 is_stmt 1 view .LVU1116
 493:fips202.c     ****     }
 3159              		.loc 1 493 9 view .LVU1117
 3160 009e FFF7FEFF 		bl	KeccakF1600_StatePermute
 3161              	.LVL381:
 493:fips202.c     ****     }
 3162              		.loc 1 493 9 is_stmt 0 view .LVU1118
 3163 00a2 B4E7     		b	.L28
 3164              	.L33:
 484:fips202.c     ****             /* Take the i'th byte from message
 3165              		.loc 1 484 16 view .LVU1119
 3166 00a4 0021     		movs	r1, #0
 3167 00a6 F0E7     		b	.L30
 3168              	.LVL382:
 3169              	.L32:
 497:fips202.c     ****     }
 3170              		.loc 1 497 9 is_stmt 1 discriminator 3 view .LVU1120
 497:fips202.c     ****     }
 3171              		.loc 1 497 37 is_stmt 0 discriminator 3 view .LVU1121
 3172 00a8 D318     		adds	r3, r2, r3
 3173 00aa 45EB0101 		adc	r1, r5, r1
 3174 00ae DC08     		lsrs	r4, r3, #3
 497:fips202.c     ****     }
 3175              		.loc 1 497 55 discriminator 3 view .LVU1122
 3176 00b0 03F00703 		and	r3, r3, #7
 497:fips202.c     ****     }
 3177              		.loc 1 497 40 discriminator 3 view .LVU1123
 3178 00b4 18F80260 		ldrb	r6, [r8, r2]	@ zero_extendqisi2
 497:fips202.c     ****     }
 3179              		.loc 1 497 37 discriminator 3 view .LVU1124
 3180 00b8 44EA4174 		orr	r4, r4, r1, lsl #29
 497:fips202.c     ****     }
 3181              		.loc 1 497 55 discriminator 3 view .LVU1125
 3182 00bc DB00     		lsls	r3, r3, #3
 497:fips202.c     ****     }
 3183              		.loc 1 497 37 discriminator 3 view .LVU1126
 3184 00be 00EBC40C 		add	ip, r0, r4, lsl #3
 497:fips202.c     ****     }
 3185              		.loc 1 497 55 discriminator 3 view .LVU1127
 3186 00c2 A3F12001 		sub	r1, r3, #32
 3187 00c6 C3F12007 		rsb	r7, r3, #32
 3188 00ca 26FA07F7 		lsr	r7, r6, r7
 3189 00ce 06FA01F1 		lsl	r1, r6, r1
 3190 00d2 3943     		orrs	r1, r1, r7
 3191 00d4 06FA03F3 		lsl	r3, r6, r3
 497:fips202.c     ****     }
 3192              		.loc 1 497 37 discriminator 3 view .LVU1128
 3193 00d8 50F83470 		ldr	r7, [r0, r4, lsl #3]
 3194 00dc DCF80460 		ldr	r6, [ip, #4]
 3195 00e0 7B40     		eors	r3, r3, r7
 3196 00e2 7140     		eors	r1, r1, r6
 3197 00e4 0132     		adds	r2, r2, #1
 3198              	.LVL383:
 497:fips202.c     ****     }
 3199              		.loc 1 497 37 discriminator 3 view .LVU1129
 3200 00e6 40F83430 		str	r3, [r0, r4, lsl #3]
 3201 00ea 45F10005 		adc	r5, r5, #0
 3202 00ee CCF80410 		str	r1, [ip, #4]
 496:fips202.c     ****         s_inc[(s_inc[25] + i) >> 3] ^= (uint64_t)m[i] << (8 * ((s_inc[25] + i) & 0x07));
 3203              		.loc 1 496 27 is_stmt 1 discriminator 3 view .LVU1130
 3204              	.LVL384:
 496:fips202.c     ****         s_inc[(s_inc[25] + i) >> 3] ^= (uint64_t)m[i] << (8 * ((s_inc[25] + i) & 0x07));
 3205              		.loc 1 496 27 is_stmt 0 discriminator 3 view .LVU1131
 3206 00f2 98E7     		b	.L31
 3207              		.cfi_endproc
 3208              	.LFE7:
 3210              		.section	.text.keccak_inc_finalize,"ax",%progbits
 3211              		.align	1
 3212              		.syntax unified
 3213              		.thumb
 3214              		.thumb_func
 3215              		.fpu softvfp
 3217              	keccak_inc_finalize:
 3218              	.LVL385:
 3219              	.LFB8:
 501:fips202.c     **** 
 502:fips202.c     **** /*************************************************
 503:fips202.c     ****  * Name:        keccak_inc_finalize
 504:fips202.c     ****  *
 505:fips202.c     ****  * Description: Finalizes Keccak absorb phase, prepares for squeezing
 506:fips202.c     ****  *
 507:fips202.c     ****  * Arguments:   - uint64_t *s_inc: pointer to input/output incremental state
 508:fips202.c     ****  *                First 25 values represent Keccak state.
 509:fips202.c     ****  *                26th value represents either the number of absorbed bytes
 510:fips202.c     ****  *                that have not been permuted, or not-yet-squeezed bytes.
 511:fips202.c     ****  *              - uint32_t r: rate in bytes (e.g., 168 for SHAKE128)
 512:fips202.c     ****  *              - uint8_t p: domain-separation byte for different
 513:fips202.c     ****  *                                 Keccak-derived functions
 514:fips202.c     ****  **************************************************/
 515:fips202.c     **** static void keccak_inc_finalize(uint64_t *s_inc, uint32_t r, uint8_t p) {
 3220              		.loc 1 515 73 is_stmt 1 view -0
 3221              		.cfi_startproc
 3222              		@ args = 0, pretend = 0, frame = 0
 3223              		@ frame_needed = 0, uses_anonymous_args = 0
 516:fips202.c     ****     /* After keccak_inc_absorb, we are guaranteed that s_inc[25] < r,
 517:fips202.c     ****        so we can always use one more byte for p in the current state. */
 518:fips202.c     ****     s_inc[s_inc[25] >> 3] ^= (uint64_t)p << (8 * (s_inc[25] & 0x07));
 3224              		.loc 1 518 5 view .LVU1133
 515:fips202.c     ****     /* After keccak_inc_absorb, we are guaranteed that s_inc[25] < r,
 3225              		.loc 1 515 73 is_stmt 0 view .LVU1134
 3226 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3227              	.LCFI11:
 3228              		.cfi_def_cfa_offset 20
 3229              		.cfi_offset 4, -20
 3230              		.cfi_offset 5, -16
 3231              		.cfi_offset 6, -12
 3232              		.cfi_offset 7, -8
 3233              		.cfi_offset 14, -4
 3234              		.loc 1 518 16 view .LVU1135
 3235 0002 D0E93235 		ldrd	r3, r5, [r0, #200]
 3236              		.loc 1 518 27 view .LVU1136
 3237 0006 DC08     		lsrs	r4, r3, #3
 3238              		.loc 1 518 42 view .LVU1137
 3239 0008 03F00703 		and	r3, r3, #7
 3240              		.loc 1 518 27 view .LVU1138
 3241 000c 44EA4574 		orr	r4, r4, r5, lsl #29
 3242              		.loc 1 518 42 view .LVU1139
 3243 0010 DB00     		lsls	r3, r3, #3
 3244              		.loc 1 518 27 view .LVU1140
 3245 0012 00EBC407 		add	r7, r0, r4, lsl #3
 3246              		.loc 1 518 42 view .LVU1141
 3247 0016 A3F12005 		sub	r5, r3, #32
 3248 001a C3F12006 		rsb	r6, r3, #32
 3249 001e 22FA06F6 		lsr	r6, r2, r6
 3250 0022 02FA05F5 		lsl	r5, r2, r5
 3251 0026 9A40     		lsls	r2, r2, r3
 3252              	.LVL386:
 3253              		.loc 1 518 27 view .LVU1142
 3254 0028 50F83430 		ldr	r3, [r0, r4, lsl #3]
 3255              		.loc 1 518 42 view .LVU1143
 3256 002c 3543     		orrs	r5, r5, r6
 519:fips202.c     ****     s_inc[(r - 1) >> 3] ^= (uint64_t)128 << (8 * ((r - 1) & 0x07));
 3257              		.loc 1 519 25 view .LVU1144
 3258 002e 0139     		subs	r1, r1, #1
 3259              	.LVL387:
 518:fips202.c     ****     s_inc[(r - 1) >> 3] ^= (uint64_t)128 << (8 * ((r - 1) & 0x07));
 3260              		.loc 1 518 27 view .LVU1145
 3261 0030 7E68     		ldr	r6, [r7, #4]
 3262 0032 5A40     		eors	r2, r2, r3
 3263              		.loc 1 519 25 view .LVU1146
 3264 0034 21F00701 		bic	r1, r1, #7
 3265              	.LVL388:
 518:fips202.c     ****     s_inc[(r - 1) >> 3] ^= (uint64_t)128 << (8 * ((r - 1) & 0x07));
 3266              		.loc 1 518 27 view .LVU1147
 3267 0038 40F83420 		str	r2, [r0, r4, lsl #3]
 3268              		.loc 1 519 25 view .LVU1148
 3269 003c 0144     		add	r1, r1, r0
 518:fips202.c     ****     s_inc[(r - 1) >> 3] ^= (uint64_t)128 << (8 * ((r - 1) & 0x07));
 3270              		.loc 1 518 27 view .LVU1149
 3271 003e 7540     		eors	r5, r5, r6
 3272 0040 7D60     		str	r5, [r7, #4]
 3273              		.loc 1 519 5 is_stmt 1 view .LVU1150
 3274              		.loc 1 519 25 is_stmt 0 view .LVU1151
 3275 0042 4B68     		ldr	r3, [r1, #4]
 3276 0044 03F10043 		add	r3, r3, #-2147483648
 3277 0048 4B60     		str	r3, [r1, #4]
 520:fips202.c     ****     s_inc[25] = 0;
 3278              		.loc 1 520 5 is_stmt 1 view .LVU1152
 3279              		.loc 1 520 15 is_stmt 0 view .LVU1153
 3280 004a 0022     		movs	r2, #0
 3281 004c 0023     		movs	r3, #0
 3282 004e C0E93223 		strd	r2, [r0, #200]
 521:fips202.c     **** }
 3283              		.loc 1 521 1 view .LVU1154
 3284 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 3285              		.cfi_endproc
 3286              	.LFE8:
 3288              		.section	.text.keccak_inc_squeeze,"ax",%progbits
 3289              		.align	1
 3290              		.syntax unified
 3291              		.thumb
 3292              		.thumb_func
 3293              		.fpu softvfp
 3295              	keccak_inc_squeeze:
 3296              	.LVL389:
 3297              	.LFB9:
 522:fips202.c     **** 
 523:fips202.c     **** /*************************************************
 524:fips202.c     ****  * Name:        keccak_inc_squeeze
 525:fips202.c     ****  *
 526:fips202.c     ****  * Description: Incremental Keccak squeeze; can be called on byte-level
 527:fips202.c     ****  *
 528:fips202.c     ****  * Arguments:   - uint8_t *h: pointer to output bytes
 529:fips202.c     ****  *              - size_t outlen: number of bytes to be squeezed
 530:fips202.c     ****  *              - uint64_t *s_inc: pointer to input/output incremental state
 531:fips202.c     ****  *                First 25 values represent Keccak state.
 532:fips202.c     ****  *                26th value represents either the number of absorbed bytes
 533:fips202.c     ****  *                that have not been permuted, or not-yet-squeezed bytes.
 534:fips202.c     ****  *              - uint32_t r: rate in bytes (e.g., 168 for SHAKE128)
 535:fips202.c     ****  **************************************************/
 536:fips202.c     **** static void keccak_inc_squeeze(uint8_t *h, size_t outlen,
 537:fips202.c     ****                                uint64_t *s_inc, uint32_t r) {
 3298              		.loc 1 537 61 is_stmt 1 view -0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 0
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 538:fips202.c     ****     size_t i;
 3302              		.loc 1 538 5 view .LVU1156
 539:fips202.c     **** 
 540:fips202.c     ****     /* First consume any bytes we still have sitting around */
 541:fips202.c     ****     for (i = 0; i < outlen && i < s_inc[25]; i++) {
 3303              		.loc 1 541 5 view .LVU1157
 537:fips202.c     ****     size_t i;
 3304              		.loc 1 537 61 is_stmt 0 view .LVU1158
 3305 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3306              	.LCFI12:
 3307              		.cfi_def_cfa_offset 32
 3308              		.cfi_offset 3, -32
 3309              		.cfi_offset 4, -28
 3310              		.cfi_offset 5, -24
 3311              		.cfi_offset 6, -20
 3312              		.cfi_offset 7, -16
 3313              		.cfi_offset 8, -12
 3314              		.cfi_offset 9, -8
 3315              		.cfi_offset 14, -4
 3316              		.loc 1 541 5 view .LVU1159
 3317 0004 0025     		movs	r5, #0
 537:fips202.c     ****     size_t i;
 3318              		.loc 1 537 61 view .LVU1160
 3319 0006 1646     		mov	r6, r2
 3320 0008 1F46     		mov	r7, r3
 3321              		.loc 1 541 5 view .LVU1161
 3322 000a 2A46     		mov	r2, r5
 3323              	.LVL390:
 3324              	.L36:
 3325              		.loc 1 541 17 is_stmt 1 discriminator 1 view .LVU1162
 3326              		.loc 1 541 5 is_stmt 0 discriminator 1 view .LVU1163
 3327 000c A942     		cmp	r1, r5
 3328              		.loc 1 541 40 discriminator 1 view .LVU1164
 3329 000e D6E93243 		ldrd	r4, r3, [r6, #200]
 542:fips202.c     ****         /* There are s_inc[25] bytes left, so r - s_inc[25] is the first
 543:fips202.c     ****            available byte. We consume from there, i.e., up to r. */
 544:fips202.c     ****         h[i] = (uint8_t)(s_inc[(r - s_inc[25] + i) >> 3] >> (8 * ((r - s_inc[25] + i) & 0x07)));
 3330              		.loc 1 544 10 discriminator 1 view .LVU1165
 3331 0012 8146     		mov	r9, r0
 541:fips202.c     ****         /* There are s_inc[25] bytes left, so r - s_inc[25] is the first
 3332              		.loc 1 541 5 discriminator 1 view .LVU1166
 3333 0014 03D9     		bls	.L37
 541:fips202.c     ****         /* There are s_inc[25] bytes left, so r - s_inc[25] is the first
 3334              		.loc 1 541 28 discriminator 3 view .LVU1167
 3335 0016 A542     		cmp	r5, r4
 3336 0018 72EB030C 		sbcs	ip, r2, r3
 3337 001c 0CD3     		bcc	.L38
 3338              	.L37:
 545:fips202.c     ****     }
 546:fips202.c     ****     h += i;
 3339              		.loc 1 546 5 is_stmt 1 view .LVU1168
 3340              	.LVL391:
 547:fips202.c     ****     outlen -= i;
 3341              		.loc 1 547 5 view .LVU1169
 548:fips202.c     ****     s_inc[25] -= i;
 3342              		.loc 1 548 15 is_stmt 0 view .LVU1170
 3343 001e 641B     		subs	r4, r4, r5
 3344 0020 63EB0203 		sbc	r3, r3, r2
 3345 0024 C6E93243 		strd	r4, r3, [r6, #200]
 547:fips202.c     ****     outlen -= i;
 3346              		.loc 1 547 12 view .LVU1171
 3347 0028 A1EB0508 		sub	r8, r1, r5
 3348              	.LVL392:
 3349              		.loc 1 548 5 is_stmt 1 view .LVU1172
 549:fips202.c     **** 
 550:fips202.c     ****     /* Then squeeze the remaining necessary blocks */
 551:fips202.c     ****     while (outlen > 0) {
 3350              		.loc 1 551 5 view .LVU1173
 552:fips202.c     ****         KeccakF1600_StatePermute(s_inc);
 553:fips202.c     **** 
 554:fips202.c     ****         for (i = 0; i < outlen && i < r; i++) {
 555:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 556:fips202.c     ****         }
 557:fips202.c     ****         h += i;
 558:fips202.c     ****         outlen -= i;
 559:fips202.c     ****         s_inc[25] = r - i;
 3351              		.loc 1 559 23 is_stmt 0 view .LVU1174
 3352 002c 0024     		movs	r4, #0
 3353              	.LVL393:
 3354              	.L39:
 551:fips202.c     ****         KeccakF1600_StatePermute(s_inc);
 3355              		.loc 1 551 11 is_stmt 1 view .LVU1175
 3356 002e B8F1000F 		cmp	r8, #0
 3357 0032 29D1     		bne	.L42
 560:fips202.c     ****     }
 561:fips202.c     **** }
 3358              		.loc 1 561 1 is_stmt 0 view .LVU1176
 3359 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3360              	.LVL394:
 3361              	.L38:
 544:fips202.c     ****     }
 3362              		.loc 1 544 9 is_stmt 1 discriminator 4 view .LVU1177
 544:fips202.c     ****     }
 3363              		.loc 1 544 35 is_stmt 0 discriminator 4 view .LVU1178
 3364 0038 3C1B     		subs	r4, r7, r4
 3365 003a 63EB4303 		sbc	r3, r3, r3, lsl #1
 544:fips202.c     ****     }
 3366              		.loc 1 544 47 discriminator 4 view .LVU1179
 3367 003e 6419     		adds	r4, r4, r5
 3368 0040 42EB0303 		adc	r3, r2, r3
 544:fips202.c     ****     }
 3369              		.loc 1 544 52 discriminator 4 view .LVU1180
 3370 0044 4FEAD40C 		lsr	ip, r4, #3
 3371 0048 4CEA437C 		orr	ip, ip, r3, lsl #29
 544:fips202.c     ****     }
 3372              		.loc 1 544 31 discriminator 4 view .LVU1181
 3373 004c 06EBCC0E 		add	lr, r6, ip, lsl #3
 544:fips202.c     ****     }
 3374              		.loc 1 544 58 discriminator 4 view .LVU1182
 3375 0050 04F00704 		and	r4, r4, #7
 3376 0054 DEF80480 		ldr	r8, [lr, #4]
 3377 0058 56F83C30 		ldr	r3, [r6, ip, lsl #3]
 3378 005c E400     		lsls	r4, r4, #3
 3379 005e C4F1200E 		rsb	lr, r4, #32
 3380 0062 A4F1200C 		sub	ip, r4, #32
 3381 0066 08FA0EFE 		lsl	lr, r8, lr
 3382 006a 23FA04F4 		lsr	r4, r3, r4
 3383 006e 44EA0E04 		orr	r4, r4, lr
 3384 0072 28FA0CFC 		lsr	ip, r8, ip
 3385 0076 44EA0C04 		orr	r4, r4, ip
 544:fips202.c     ****     }
 3386              		.loc 1 544 16 discriminator 4 view .LVU1183
 3387 007a 00F8014B 		strb	r4, [r0], #1
 541:fips202.c     ****         /* There are s_inc[25] bytes left, so r - s_inc[25] is the first
 3388              		.loc 1 541 46 is_stmt 1 discriminator 4 view .LVU1184
 3389              	.LVL395:
 541:fips202.c     ****         /* There are s_inc[25] bytes left, so r - s_inc[25] is the first
 3390              		.loc 1 541 46 is_stmt 0 discriminator 4 view .LVU1185
 3391 007e 6C1C     		adds	r4, r5, #1
 3392 0080 2546     		mov	r5, r4
 3393 0082 42F10002 		adc	r2, r2, #0
 3394 0086 C1E7     		b	.L36
 3395              	.LVL396:
 3396              	.L42:
 552:fips202.c     **** 
 3397              		.loc 1 552 9 is_stmt 1 view .LVU1186
 3398 0088 3046     		mov	r0, r6
 3399 008a FFF7FEFF 		bl	KeccakF1600_StatePermute
 3400              	.LVL397:
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3401              		.loc 1 554 9 view .LVU1187
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3402              		.loc 1 554 21 view .LVU1188
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3403              		.loc 1 554 16 is_stmt 0 view .LVU1189
 3404 008e 0022     		movs	r2, #0
 3405              	.LVL398:
 3406              	.L41:
 555:fips202.c     ****         }
 3407              		.loc 1 555 13 is_stmt 1 discriminator 4 view .LVU1190
 555:fips202.c     ****         }
 3408              		.loc 1 555 35 is_stmt 0 discriminator 4 view .LVU1191
 3409 0090 22F00700 		bic	r0, r2, #7
 555:fips202.c     ****         }
 3410              		.loc 1 555 38 discriminator 4 view .LVU1192
 3411 0094 D508     		lsrs	r5, r2, #3
 555:fips202.c     ****         }
 3412              		.loc 1 555 35 discriminator 4 view .LVU1193
 3413 0096 3044     		add	r0, r0, r6
 555:fips202.c     ****         }
 3414              		.loc 1 555 55 discriminator 4 view .LVU1194
 3415 0098 02F00703 		and	r3, r2, #7
 555:fips202.c     ****         }
 3416              		.loc 1 555 44 discriminator 4 view .LVU1195
 3417 009c D0F804C0 		ldr	ip, [r0, #4]
 555:fips202.c     ****         }
 3418              		.loc 1 555 50 discriminator 4 view .LVU1196
 3419 00a0 D900     		lsls	r1, r3, #3
 555:fips202.c     ****         }
 3420              		.loc 1 555 44 discriminator 4 view .LVU1197
 3421 00a2 56F83530 		ldr	r3, [r6, r5, lsl #3]
 3422 00a6 C1F12005 		rsb	r5, r1, #32
 3423 00aa A1F12000 		sub	r0, r1, #32
 3424 00ae CB40     		lsrs	r3, r3, r1
 3425 00b0 0CFA05F5 		lsl	r5, ip, r5
 3426 00b4 2B43     		orrs	r3, r3, r5
 3427 00b6 2CFA00F0 		lsr	r0, ip, r0
 3428 00ba 0343     		orrs	r3, r3, r0
 555:fips202.c     ****         }
 3429              		.loc 1 555 20 discriminator 4 view .LVU1198
 3430 00bc 09F80230 		strb	r3, [r9, r2]
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3431              		.loc 1 554 42 is_stmt 1 discriminator 4 view .LVU1199
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3432              		.loc 1 554 43 is_stmt 0 discriminator 4 view .LVU1200
 3433 00c0 0132     		adds	r2, r2, #1
 3434              	.LVL399:
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3435              		.loc 1 554 21 is_stmt 1 discriminator 4 view .LVU1201
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3436              		.loc 1 554 9 is_stmt 0 discriminator 4 view .LVU1202
 3437 00c2 9045     		cmp	r8, r2
 3438 00c4 01D0     		beq	.L40
 554:fips202.c     ****             h[i] = (uint8_t)(s_inc[i >> 3] >> (8 * (i & 0x07)));
 3439              		.loc 1 554 32 discriminator 3 view .LVU1203
 3440 00c6 9742     		cmp	r7, r2
 3441 00c8 E2D1     		bne	.L41
 3442              	.L40:
 557:fips202.c     ****         outlen -= i;
 3443              		.loc 1 557 9 is_stmt 1 view .LVU1204
 557:fips202.c     ****         outlen -= i;
 3444              		.loc 1 557 11 is_stmt 0 view .LVU1205
 3445 00ca 9144     		add	r9, r9, r2
 3446              	.LVL400:
 558:fips202.c     ****         s_inc[25] = r - i;
 3447              		.loc 1 558 9 is_stmt 1 view .LVU1206
 558:fips202.c     ****         s_inc[25] = r - i;
 3448              		.loc 1 558 16 is_stmt 0 view .LVU1207
 3449 00cc A8EB0208 		sub	r8, r8, r2
 3450              	.LVL401:
 559:fips202.c     ****     }
 3451              		.loc 1 559 9 is_stmt 1 view .LVU1208
 559:fips202.c     ****     }
 3452              		.loc 1 559 23 is_stmt 0 view .LVU1209
 3453 00d0 BA1A     		subs	r2, r7, r2
 3454              	.LVL402:
 559:fips202.c     ****     }
 3455              		.loc 1 559 23 view .LVU1210
 3456 00d2 C6E93224 		strd	r2, r4, [r6, #200]
 3457 00d6 AAE7     		b	.L39
 3458              		.cfi_endproc
 3459              	.LFE9:
 3461              		.section	.text.shake128_inc_init,"ax",%progbits
 3462              		.align	1
 3463              		.global	shake128_inc_init
 3464              		.syntax unified
 3465              		.thumb
 3466              		.thumb_func
 3467              		.fpu softvfp
 3469              	shake128_inc_init:
 3470              	.LVL403:
 3471              	.LFB10:
 562:fips202.c     **** 
 563:fips202.c     **** void shake128_inc_init(shake128incctx *state) {
 3472              		.loc 1 563 47 is_stmt 1 view -0
 3473              		.cfi_startproc
 3474              		@ args = 0, pretend = 0, frame = 0
 3475              		@ frame_needed = 0, uses_anonymous_args = 0
 564:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3476              		.loc 1 564 5 view .LVU1212
 563:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3477              		.loc 1 563 47 is_stmt 0 view .LVU1213
 3478 0000 10B5     		push	{r4, lr}
 3479              	.LCFI13:
 3480              		.cfi_def_cfa_offset 8
 3481              		.cfi_offset 4, -8
 3482              		.cfi_offset 14, -4
 563:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3483              		.loc 1 563 47 view .LVU1214
 3484 0002 0446     		mov	r4, r0
 3485              		.loc 1 564 18 view .LVU1215
 3486 0004 D020     		movs	r0, #208
 3487              	.LVL404:
 3488              		.loc 1 564 18 view .LVU1216
 3489 0006 FFF7FEFF 		bl	malloc
 3490              	.LVL405:
 3491              		.loc 1 564 16 view .LVU1217
 3492 000a 2060     		str	r0, [r4]
 565:fips202.c     ****     if (state->ctx == NULL) {
 3493              		.loc 1 565 5 is_stmt 1 view .LVU1218
 3494              		.loc 1 565 8 is_stmt 0 view .LVU1219
 3495 000c 10B9     		cbnz	r0, .L46
 566:fips202.c     ****         exit(111);
 3496              		.loc 1 566 9 is_stmt 1 view .LVU1220
 3497 000e 6F20     		movs	r0, #111
 3498 0010 FFF7FEFF 		bl	exit
 3499              	.LVL406:
 3500              	.L46:
 567:fips202.c     ****     }
 568:fips202.c     ****     keccak_inc_init(state->ctx);
 3501              		.loc 1 568 5 view .LVU1221
 569:fips202.c     **** }
 3502              		.loc 1 569 1 is_stmt 0 view .LVU1222
 3503 0014 BDE81040 		pop	{r4, lr}
 3504              	.LCFI14:
 3505              		.cfi_restore 14
 3506              		.cfi_restore 4
 3507              		.cfi_def_cfa_offset 0
 3508              	.LVL407:
 568:fips202.c     **** }
 3509              		.loc 1 568 5 view .LVU1223
 3510 0018 FFF7FEBF 		b	keccak_inc_init
 3511              	.LVL408:
 3512              		.cfi_endproc
 3513              	.LFE10:
 3515              		.section	.text.shake128_inc_absorb,"ax",%progbits
 3516              		.align	1
 3517              		.global	shake128_inc_absorb
 3518              		.syntax unified
 3519              		.thumb
 3520              		.thumb_func
 3521              		.fpu softvfp
 3523              	shake128_inc_absorb:
 3524              	.LVL409:
 3525              	.LFB11:
 570:fips202.c     **** 
 571:fips202.c     **** void shake128_inc_absorb(shake128incctx *state, const uint8_t *input, size_t inlen) {
 3526              		.loc 1 571 85 is_stmt 1 view -0
 3527              		.cfi_startproc
 3528              		@ args = 0, pretend = 0, frame = 0
 3529              		@ frame_needed = 0, uses_anonymous_args = 0
 3530              		@ link register save eliminated.
 572:fips202.c     ****     keccak_inc_absorb(state->ctx, SHAKE128_RATE, input, inlen);
 3531              		.loc 1 572 5 view .LVU1225
 571:fips202.c     ****     keccak_inc_absorb(state->ctx, SHAKE128_RATE, input, inlen);
 3532              		.loc 1 571 85 is_stmt 0 view .LVU1226
 3533 0000 1346     		mov	r3, r2
 3534              		.loc 1 572 5 view .LVU1227
 3535 0002 0068     		ldr	r0, [r0]
 3536              	.LVL410:
 3537              		.loc 1 572 5 view .LVU1228
 3538 0004 0A46     		mov	r2, r1
 3539              	.LVL411:
 3540              		.loc 1 572 5 view .LVU1229
 3541 0006 A821     		movs	r1, #168
 3542              	.LVL412:
 3543              		.loc 1 572 5 view .LVU1230
 3544 0008 FFF7FEBF 		b	keccak_inc_absorb
 3545              	.LVL413:
 3546              		.loc 1 572 5 view .LVU1231
 3547              		.cfi_endproc
 3548              	.LFE11:
 3550              		.section	.text.shake128_inc_finalize,"ax",%progbits
 3551              		.align	1
 3552              		.global	shake128_inc_finalize
 3553              		.syntax unified
 3554              		.thumb
 3555              		.thumb_func
 3556              		.fpu softvfp
 3558              	shake128_inc_finalize:
 3559              	.LVL414:
 3560              	.LFB12:
 573:fips202.c     **** }
 574:fips202.c     **** 
 575:fips202.c     **** void shake128_inc_finalize(shake128incctx *state) {
 3561              		.loc 1 575 51 is_stmt 1 view -0
 3562              		.cfi_startproc
 3563              		@ args = 0, pretend = 0, frame = 0
 3564              		@ frame_needed = 0, uses_anonymous_args = 0
 3565              		@ link register save eliminated.
 576:fips202.c     ****     keccak_inc_finalize(state->ctx, SHAKE128_RATE, 0x1F);
 3566              		.loc 1 576 5 view .LVU1233
 3567 0000 0068     		ldr	r0, [r0]
 3568              	.LVL415:
 3569              		.loc 1 576 5 is_stmt 0 view .LVU1234
 3570 0002 1F22     		movs	r2, #31
 3571 0004 A821     		movs	r1, #168
 3572 0006 FFF7FEBF 		b	keccak_inc_finalize
 3573              	.LVL416:
 3574              		.cfi_endproc
 3575              	.LFE12:
 3577              		.section	.text.shake128_inc_squeeze,"ax",%progbits
 3578              		.align	1
 3579              		.global	shake128_inc_squeeze
 3580              		.syntax unified
 3581              		.thumb
 3582              		.thumb_func
 3583              		.fpu softvfp
 3585              	shake128_inc_squeeze:
 3586              	.LVL417:
 3587              	.LFB13:
 577:fips202.c     **** }
 578:fips202.c     **** 
 579:fips202.c     **** void shake128_inc_squeeze(uint8_t *output, size_t outlen, shake128incctx *state) {
 3588              		.loc 1 579 82 is_stmt 1 view -0
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 0
 3591              		@ frame_needed = 0, uses_anonymous_args = 0
 3592              		@ link register save eliminated.
 580:fips202.c     ****     keccak_inc_squeeze(output, outlen, state->ctx, SHAKE128_RATE);
 3593              		.loc 1 580 5 view .LVU1236
 3594 0000 1268     		ldr	r2, [r2]
 3595              	.LVL418:
 3596              		.loc 1 580 5 is_stmt 0 view .LVU1237
 3597 0002 A823     		movs	r3, #168
 3598 0004 FFF7FEBF 		b	keccak_inc_squeeze
 3599              	.LVL419:
 3600              		.loc 1 580 5 view .LVU1238
 3601              		.cfi_endproc
 3602              	.LFE13:
 3604              		.section	.text.shake128_inc_ctx_clone,"ax",%progbits
 3605              		.align	1
 3606              		.global	shake128_inc_ctx_clone
 3607              		.syntax unified
 3608              		.thumb
 3609              		.thumb_func
 3610              		.fpu softvfp
 3612              	shake128_inc_ctx_clone:
 3613              	.LVL420:
 3614              	.LFB14:
 581:fips202.c     **** }
 582:fips202.c     **** 
 583:fips202.c     **** void shake128_inc_ctx_clone(shake128incctx *dest, const shake128incctx *src) {
 3615              		.loc 1 583 78 is_stmt 1 view -0
 3616              		.cfi_startproc
 3617              		@ args = 0, pretend = 0, frame = 0
 3618              		@ frame_needed = 0, uses_anonymous_args = 0
 584:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3619              		.loc 1 584 5 view .LVU1240
 583:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3620              		.loc 1 583 78 is_stmt 0 view .LVU1241
 3621 0000 38B5     		push	{r3, r4, r5, lr}
 3622              	.LCFI15:
 3623              		.cfi_def_cfa_offset 16
 3624              		.cfi_offset 3, -16
 3625              		.cfi_offset 4, -12
 3626              		.cfi_offset 5, -8
 3627              		.cfi_offset 14, -4
 583:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3628              		.loc 1 583 78 view .LVU1242
 3629 0002 0546     		mov	r5, r0
 3630              		.loc 1 584 17 view .LVU1243
 3631 0004 D020     		movs	r0, #208
 3632              	.LVL421:
 583:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3633              		.loc 1 583 78 view .LVU1244
 3634 0006 0C46     		mov	r4, r1
 3635              		.loc 1 584 17 view .LVU1245
 3636 0008 FFF7FEFF 		bl	malloc
 3637              	.LVL422:
 3638              		.loc 1 584 15 view .LVU1246
 3639 000c 2860     		str	r0, [r5]
 585:fips202.c     ****     if (dest->ctx == NULL) {
 3640              		.loc 1 585 5 is_stmt 1 view .LVU1247
 3641              		.loc 1 585 8 is_stmt 0 view .LVU1248
 3642 000e 10B9     		cbnz	r0, .L51
 586:fips202.c     ****         exit(111);
 3643              		.loc 1 586 9 is_stmt 1 view .LVU1249
 3644 0010 6F20     		movs	r0, #111
 3645 0012 FFF7FEFF 		bl	exit
 3646              	.LVL423:
 3647              	.L51:
 587:fips202.c     ****     }
 588:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKEINCCTX_BYTES);
 3648              		.loc 1 588 5 view .LVU1250
 3649 0016 2168     		ldr	r1, [r4]
 3650 0018 D022     		movs	r2, #208
 589:fips202.c     **** }
 3651              		.loc 1 589 1 is_stmt 0 view .LVU1251
 3652 001a BDE83840 		pop	{r3, r4, r5, lr}
 3653              	.LCFI16:
 3654              		.cfi_restore 14
 3655              		.cfi_restore 5
 3656              		.cfi_restore 4
 3657              		.cfi_restore 3
 3658              		.cfi_def_cfa_offset 0
 3659              	.LVL424:
 588:fips202.c     **** }
 3660              		.loc 1 588 5 view .LVU1252
 3661 001e FFF7FEBF 		b	memcpy
 3662              	.LVL425:
 3663              		.cfi_endproc
 3664              	.LFE14:
 3666              		.section	.text.shake128_inc_ctx_release,"ax",%progbits
 3667              		.align	1
 3668              		.global	shake128_inc_ctx_release
 3669              		.syntax unified
 3670              		.thumb
 3671              		.thumb_func
 3672              		.fpu softvfp
 3674              	shake128_inc_ctx_release:
 3675              	.LVL426:
 3676              	.LFB15:
 590:fips202.c     **** 
 591:fips202.c     **** void shake128_inc_ctx_release(shake128incctx *state) {
 3677              		.loc 1 591 54 is_stmt 1 view -0
 3678              		.cfi_startproc
 3679              		@ args = 0, pretend = 0, frame = 0
 3680              		@ frame_needed = 0, uses_anonymous_args = 0
 3681              		@ link register save eliminated.
 592:fips202.c     ****     free(state->ctx);
 3682              		.loc 1 592 5 view .LVU1254
 3683 0000 0068     		ldr	r0, [r0]
 3684              	.LVL427:
 3685              		.loc 1 592 5 is_stmt 0 view .LVU1255
 3686 0002 FFF7FEBF 		b	free
 3687              	.LVL428:
 3688              		.cfi_endproc
 3689              	.LFE15:
 3691              		.section	.text.shake256_inc_init,"ax",%progbits
 3692              		.align	1
 3693              		.global	shake256_inc_init
 3694              		.syntax unified
 3695              		.thumb
 3696              		.thumb_func
 3697              		.fpu softvfp
 3699              	shake256_inc_init:
 3700              	.LVL429:
 3701              	.LFB16:
 593:fips202.c     **** }
 594:fips202.c     **** 
 595:fips202.c     **** void shake256_inc_init(shake256incctx *state) {
 3702              		.loc 1 595 47 is_stmt 1 view -0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 0
 3705              		@ frame_needed = 0, uses_anonymous_args = 0
 596:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3706              		.loc 1 596 5 view .LVU1257
 595:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3707              		.loc 1 595 47 is_stmt 0 view .LVU1258
 3708 0000 10B5     		push	{r4, lr}
 3709              	.LCFI17:
 3710              		.cfi_def_cfa_offset 8
 3711              		.cfi_offset 4, -8
 3712              		.cfi_offset 14, -4
 595:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3713              		.loc 1 595 47 view .LVU1259
 3714 0002 0446     		mov	r4, r0
 3715              		.loc 1 596 18 view .LVU1260
 3716 0004 D020     		movs	r0, #208
 3717              	.LVL430:
 3718              		.loc 1 596 18 view .LVU1261
 3719 0006 FFF7FEFF 		bl	malloc
 3720              	.LVL431:
 3721              		.loc 1 596 16 view .LVU1262
 3722 000a 2060     		str	r0, [r4]
 597:fips202.c     ****     if (state->ctx == NULL) {
 3723              		.loc 1 597 5 is_stmt 1 view .LVU1263
 3724              		.loc 1 597 8 is_stmt 0 view .LVU1264
 3725 000c 10B9     		cbnz	r0, .L54
 598:fips202.c     ****         exit(111);
 3726              		.loc 1 598 9 is_stmt 1 view .LVU1265
 3727 000e 6F20     		movs	r0, #111
 3728 0010 FFF7FEFF 		bl	exit
 3729              	.LVL432:
 3730              	.L54:
 599:fips202.c     ****     }
 600:fips202.c     ****     keccak_inc_init(state->ctx);
 3731              		.loc 1 600 5 view .LVU1266
 601:fips202.c     **** }
 3732              		.loc 1 601 1 is_stmt 0 view .LVU1267
 3733 0014 BDE81040 		pop	{r4, lr}
 3734              	.LCFI18:
 3735              		.cfi_restore 14
 3736              		.cfi_restore 4
 3737              		.cfi_def_cfa_offset 0
 3738              	.LVL433:
 600:fips202.c     **** }
 3739              		.loc 1 600 5 view .LVU1268
 3740 0018 FFF7FEBF 		b	keccak_inc_init
 3741              	.LVL434:
 3742              		.cfi_endproc
 3743              	.LFE16:
 3745              		.section	.text.shake256_inc_absorb,"ax",%progbits
 3746              		.align	1
 3747              		.global	shake256_inc_absorb
 3748              		.syntax unified
 3749              		.thumb
 3750              		.thumb_func
 3751              		.fpu softvfp
 3753              	shake256_inc_absorb:
 3754              	.LVL435:
 3755              	.LFB17:
 602:fips202.c     **** 
 603:fips202.c     **** void shake256_inc_absorb(shake256incctx *state, const uint8_t *input, size_t inlen) {
 3756              		.loc 1 603 85 is_stmt 1 view -0
 3757              		.cfi_startproc
 3758              		@ args = 0, pretend = 0, frame = 0
 3759              		@ frame_needed = 0, uses_anonymous_args = 0
 3760              		@ link register save eliminated.
 604:fips202.c     ****     keccak_inc_absorb(state->ctx, SHAKE256_RATE, input, inlen);
 3761              		.loc 1 604 5 view .LVU1270
 603:fips202.c     ****     keccak_inc_absorb(state->ctx, SHAKE256_RATE, input, inlen);
 3762              		.loc 1 603 85 is_stmt 0 view .LVU1271
 3763 0000 1346     		mov	r3, r2
 3764              		.loc 1 604 5 view .LVU1272
 3765 0002 0068     		ldr	r0, [r0]
 3766              	.LVL436:
 3767              		.loc 1 604 5 view .LVU1273
 3768 0004 0A46     		mov	r2, r1
 3769              	.LVL437:
 3770              		.loc 1 604 5 view .LVU1274
 3771 0006 8821     		movs	r1, #136
 3772              	.LVL438:
 3773              		.loc 1 604 5 view .LVU1275
 3774 0008 FFF7FEBF 		b	keccak_inc_absorb
 3775              	.LVL439:
 3776              		.loc 1 604 5 view .LVU1276
 3777              		.cfi_endproc
 3778              	.LFE17:
 3780              		.section	.text.shake256_inc_finalize,"ax",%progbits
 3781              		.align	1
 3782              		.global	shake256_inc_finalize
 3783              		.syntax unified
 3784              		.thumb
 3785              		.thumb_func
 3786              		.fpu softvfp
 3788              	shake256_inc_finalize:
 3789              	.LVL440:
 3790              	.LFB18:
 605:fips202.c     **** }
 606:fips202.c     **** 
 607:fips202.c     **** void shake256_inc_finalize(shake256incctx *state) {
 3791              		.loc 1 607 51 is_stmt 1 view -0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 0
 3794              		@ frame_needed = 0, uses_anonymous_args = 0
 3795              		@ link register save eliminated.
 608:fips202.c     ****     keccak_inc_finalize(state->ctx, SHAKE256_RATE, 0x1F);
 3796              		.loc 1 608 5 view .LVU1278
 3797 0000 0068     		ldr	r0, [r0]
 3798              	.LVL441:
 3799              		.loc 1 608 5 is_stmt 0 view .LVU1279
 3800 0002 1F22     		movs	r2, #31
 3801 0004 8821     		movs	r1, #136
 3802 0006 FFF7FEBF 		b	keccak_inc_finalize
 3803              	.LVL442:
 3804              		.cfi_endproc
 3805              	.LFE18:
 3807              		.section	.text.shake256_inc_squeeze,"ax",%progbits
 3808              		.align	1
 3809              		.global	shake256_inc_squeeze
 3810              		.syntax unified
 3811              		.thumb
 3812              		.thumb_func
 3813              		.fpu softvfp
 3815              	shake256_inc_squeeze:
 3816              	.LVL443:
 3817              	.LFB19:
 609:fips202.c     **** }
 610:fips202.c     **** 
 611:fips202.c     **** void shake256_inc_squeeze(uint8_t *output, size_t outlen, shake256incctx *state) {
 3818              		.loc 1 611 82 is_stmt 1 view -0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 0
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              		@ link register save eliminated.
 612:fips202.c     ****     keccak_inc_squeeze(output, outlen, state->ctx, SHAKE256_RATE);
 3823              		.loc 1 612 5 view .LVU1281
 3824 0000 1268     		ldr	r2, [r2]
 3825              	.LVL444:
 3826              		.loc 1 612 5 is_stmt 0 view .LVU1282
 3827 0002 8823     		movs	r3, #136
 3828 0004 FFF7FEBF 		b	keccak_inc_squeeze
 3829              	.LVL445:
 3830              		.loc 1 612 5 view .LVU1283
 3831              		.cfi_endproc
 3832              	.LFE19:
 3834              		.section	.text.shake256_inc_ctx_clone,"ax",%progbits
 3835              		.align	1
 3836              		.global	shake256_inc_ctx_clone
 3837              		.syntax unified
 3838              		.thumb
 3839              		.thumb_func
 3840              		.fpu softvfp
 3842              	shake256_inc_ctx_clone:
 3843              	.LVL446:
 3844              	.LFB20:
 613:fips202.c     **** }
 614:fips202.c     **** 
 615:fips202.c     **** void shake256_inc_ctx_clone(shake256incctx *dest, const shake256incctx *src) {
 3845              		.loc 1 615 78 is_stmt 1 view -0
 3846              		.cfi_startproc
 3847              		@ args = 0, pretend = 0, frame = 0
 3848              		@ frame_needed = 0, uses_anonymous_args = 0
 616:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3849              		.loc 1 616 5 view .LVU1285
 615:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3850              		.loc 1 615 78 is_stmt 0 view .LVU1286
 3851 0000 38B5     		push	{r3, r4, r5, lr}
 3852              	.LCFI19:
 3853              		.cfi_def_cfa_offset 16
 3854              		.cfi_offset 3, -16
 3855              		.cfi_offset 4, -12
 3856              		.cfi_offset 5, -8
 3857              		.cfi_offset 14, -4
 615:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3858              		.loc 1 615 78 view .LVU1287
 3859 0002 0546     		mov	r5, r0
 3860              		.loc 1 616 17 view .LVU1288
 3861 0004 D020     		movs	r0, #208
 3862              	.LVL447:
 615:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 3863              		.loc 1 615 78 view .LVU1289
 3864 0006 0C46     		mov	r4, r1
 3865              		.loc 1 616 17 view .LVU1290
 3866 0008 FFF7FEFF 		bl	malloc
 3867              	.LVL448:
 3868              		.loc 1 616 15 view .LVU1291
 3869 000c 2860     		str	r0, [r5]
 617:fips202.c     ****     if (dest->ctx == NULL) {
 3870              		.loc 1 617 5 is_stmt 1 view .LVU1292
 3871              		.loc 1 617 8 is_stmt 0 view .LVU1293
 3872 000e 10B9     		cbnz	r0, .L59
 618:fips202.c     ****         exit(111);
 3873              		.loc 1 618 9 is_stmt 1 view .LVU1294
 3874 0010 6F20     		movs	r0, #111
 3875 0012 FFF7FEFF 		bl	exit
 3876              	.LVL449:
 3877              	.L59:
 619:fips202.c     ****     }
 620:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKEINCCTX_BYTES);
 3878              		.loc 1 620 5 view .LVU1295
 3879 0016 2168     		ldr	r1, [r4]
 3880 0018 D022     		movs	r2, #208
 621:fips202.c     **** }
 3881              		.loc 1 621 1 is_stmt 0 view .LVU1296
 3882 001a BDE83840 		pop	{r3, r4, r5, lr}
 3883              	.LCFI20:
 3884              		.cfi_restore 14
 3885              		.cfi_restore 5
 3886              		.cfi_restore 4
 3887              		.cfi_restore 3
 3888              		.cfi_def_cfa_offset 0
 3889              	.LVL450:
 620:fips202.c     **** }
 3890              		.loc 1 620 5 view .LVU1297
 3891 001e FFF7FEBF 		b	memcpy
 3892              	.LVL451:
 3893              		.cfi_endproc
 3894              	.LFE20:
 3896              		.section	.text.shake256_inc_ctx_release,"ax",%progbits
 3897              		.align	1
 3898              		.global	shake256_inc_ctx_release
 3899              		.syntax unified
 3900              		.thumb
 3901              		.thumb_func
 3902              		.fpu softvfp
 3904              	shake256_inc_ctx_release:
 3905              	.LVL452:
 3906              	.LFB21:
 622:fips202.c     **** 
 623:fips202.c     **** void shake256_inc_ctx_release(shake256incctx *state) {
 3907              		.loc 1 623 54 is_stmt 1 view -0
 3908              		.cfi_startproc
 3909              		@ args = 0, pretend = 0, frame = 0
 3910              		@ frame_needed = 0, uses_anonymous_args = 0
 3911              		@ link register save eliminated.
 624:fips202.c     ****     free(state->ctx);
 3912              		.loc 1 624 5 view .LVU1299
 3913 0000 0068     		ldr	r0, [r0]
 3914              	.LVL453:
 3915              		.loc 1 624 5 is_stmt 0 view .LVU1300
 3916 0002 FFF7FEBF 		b	free
 3917              	.LVL454:
 3918              		.cfi_endproc
 3919              	.LFE21:
 3921              		.section	.text.shake128_absorb,"ax",%progbits
 3922              		.align	1
 3923              		.global	shake128_absorb
 3924              		.syntax unified
 3925              		.thumb
 3926              		.thumb_func
 3927              		.fpu softvfp
 3929              	shake128_absorb:
 3930              	.LVL455:
 3931              	.LFB22:
 625:fips202.c     **** }
 626:fips202.c     **** 
 627:fips202.c     **** /*************************************************
 628:fips202.c     ****  * Name:        shake128_absorb
 629:fips202.c     ****  *
 630:fips202.c     ****  * Description: Absorb step of the SHAKE128 XOF.
 631:fips202.c     ****  *              non-incremental, starts by zeroeing the state.
 632:fips202.c     ****  *
 633:fips202.c     ****  * Arguments:   - uint64_t *s: pointer to (uninitialized) output Keccak state
 634:fips202.c     ****  *              - const uint8_t *input: pointer to input to be absorbed
 635:fips202.c     ****  *                                            into s
 636:fips202.c     ****  *              - size_t inlen: length of input in bytes
 637:fips202.c     ****  **************************************************/
 638:fips202.c     **** void shake128_absorb(shake128ctx *state, const uint8_t *input, size_t inlen) {
 3932              		.loc 1 638 78 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
 639:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 3936              		.loc 1 639 5 view .LVU1302
 638:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 3937              		.loc 1 638 78 is_stmt 0 view .LVU1303
 3938 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3939              	.LCFI21:
 3940              		.cfi_def_cfa_offset 32
 3941              		.cfi_offset 4, -20
 3942              		.cfi_offset 5, -16
 3943              		.cfi_offset 6, -12
 3944              		.cfi_offset 7, -8
 3945              		.cfi_offset 14, -4
 638:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 3946              		.loc 1 638 78 view .LVU1304
 3947 0002 0746     		mov	r7, r0
 3948              		.loc 1 639 18 view .LVU1305
 3949 0004 C820     		movs	r0, #200
 3950              	.LVL456:
 638:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 3951              		.loc 1 638 78 view .LVU1306
 3952 0006 0D46     		mov	r5, r1
 3953 0008 1646     		mov	r6, r2
 3954              		.loc 1 639 18 view .LVU1307
 3955 000a FFF7FEFF 		bl	malloc
 3956              	.LVL457:
 3957              		.loc 1 639 16 view .LVU1308
 3958 000e 3860     		str	r0, [r7]
 640:fips202.c     ****     if (state->ctx == NULL) {
 3959              		.loc 1 640 5 is_stmt 1 view .LVU1309
 3960              		.loc 1 640 8 is_stmt 0 view .LVU1310
 3961 0010 10B9     		cbnz	r0, .L62
 641:fips202.c     ****         exit(111);
 3962              		.loc 1 641 9 is_stmt 1 view .LVU1311
 3963 0012 6F20     		movs	r0, #111
 3964 0014 FFF7FEFF 		bl	exit
 3965              	.LVL458:
 3966              	.L62:
 642:fips202.c     ****     }
 643:fips202.c     ****     keccak_absorb(state->ctx, SHAKE128_RATE, input, inlen, 0x1F);
 3967              		.loc 1 643 5 view .LVU1312
 3968 0018 1F23     		movs	r3, #31
 3969 001a 0093     		str	r3, [sp]
 3970 001c 2A46     		mov	r2, r5
 3971 001e 3346     		mov	r3, r6
 3972 0020 A821     		movs	r1, #168
 3973 0022 FFF7FEFF 		bl	keccak_absorb
 3974              	.LVL459:
 644:fips202.c     **** }
 3975              		.loc 1 644 1 is_stmt 0 view .LVU1313
 3976 0026 03B0     		add	sp, sp, #12
 3977              	.LCFI22:
 3978              		.cfi_def_cfa_offset 20
 3979              		@ sp needed
 3980 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 3981              		.loc 1 644 1 view .LVU1314
 3982              		.cfi_endproc
 3983              	.LFE22:
 3985              		.section	.text.shake128_squeezeblocks,"ax",%progbits
 3986              		.align	1
 3987              		.global	shake128_squeezeblocks
 3988              		.syntax unified
 3989              		.thumb
 3990              		.thumb_func
 3991              		.fpu softvfp
 3993              	shake128_squeezeblocks:
 3994              	.LVL460:
 3995              	.LFB23:
 645:fips202.c     **** 
 646:fips202.c     **** /*************************************************
 647:fips202.c     ****  * Name:        shake128_squeezeblocks
 648:fips202.c     ****  *
 649:fips202.c     ****  * Description: Squeeze step of SHAKE128 XOF. Squeezes full blocks of
 650:fips202.c     ****  *              SHAKE128_RATE bytes each. Modifies the state. Can be called
 651:fips202.c     ****  *              multiple times to keep squeezing, i.e., is incremental.
 652:fips202.c     ****  *
 653:fips202.c     ****  * Arguments:   - uint8_t *output: pointer to output blocks
 654:fips202.c     ****  *              - size_t nblocks: number of blocks to be squeezed
 655:fips202.c     ****  *                                            (written to output)
 656:fips202.c     ****  *              - shake128ctx *state: pointer to input/output Keccak state
 657:fips202.c     ****  **************************************************/
 658:fips202.c     **** void shake128_squeezeblocks(uint8_t *output, size_t nblocks, shake128ctx *state) {
 3996              		.loc 1 658 82 is_stmt 1 view -0
 3997              		.cfi_startproc
 3998              		@ args = 0, pretend = 0, frame = 0
 3999              		@ frame_needed = 0, uses_anonymous_args = 0
 4000              		@ link register save eliminated.
 659:fips202.c     ****     keccak_squeezeblocks(output, nblocks, state->ctx, SHAKE128_RATE);
 4001              		.loc 1 659 5 view .LVU1316
 4002 0000 1268     		ldr	r2, [r2]
 4003              	.LVL461:
 4004              		.loc 1 659 5 is_stmt 0 view .LVU1317
 4005 0002 A823     		movs	r3, #168
 4006 0004 FFF7FEBF 		b	keccak_squeezeblocks
 4007              	.LVL462:
 4008              		.loc 1 659 5 view .LVU1318
 4009              		.cfi_endproc
 4010              	.LFE23:
 4012              		.section	.text.shake128_ctx_clone,"ax",%progbits
 4013              		.align	1
 4014              		.global	shake128_ctx_clone
 4015              		.syntax unified
 4016              		.thumb
 4017              		.thumb_func
 4018              		.fpu softvfp
 4020              	shake128_ctx_clone:
 4021              	.LVL463:
 4022              	.LFB24:
 660:fips202.c     **** }
 661:fips202.c     **** 
 662:fips202.c     **** void shake128_ctx_clone(shake128ctx *dest, const shake128ctx *src) {
 4023              		.loc 1 662 68 is_stmt 1 view -0
 4024              		.cfi_startproc
 4025              		@ args = 0, pretend = 0, frame = 0
 4026              		@ frame_needed = 0, uses_anonymous_args = 0
 663:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4027              		.loc 1 663 5 view .LVU1320
 662:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4028              		.loc 1 662 68 is_stmt 0 view .LVU1321
 4029 0000 38B5     		push	{r3, r4, r5, lr}
 4030              	.LCFI23:
 4031              		.cfi_def_cfa_offset 16
 4032              		.cfi_offset 3, -16
 4033              		.cfi_offset 4, -12
 4034              		.cfi_offset 5, -8
 4035              		.cfi_offset 14, -4
 662:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4036              		.loc 1 662 68 view .LVU1322
 4037 0002 0546     		mov	r5, r0
 4038              		.loc 1 663 17 view .LVU1323
 4039 0004 C820     		movs	r0, #200
 4040              	.LVL464:
 662:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4041              		.loc 1 662 68 view .LVU1324
 4042 0006 0C46     		mov	r4, r1
 4043              		.loc 1 663 17 view .LVU1325
 4044 0008 FFF7FEFF 		bl	malloc
 4045              	.LVL465:
 4046              		.loc 1 663 15 view .LVU1326
 4047 000c 2860     		str	r0, [r5]
 664:fips202.c     ****     if (dest->ctx == NULL) {
 4048              		.loc 1 664 5 is_stmt 1 view .LVU1327
 4049              		.loc 1 664 8 is_stmt 0 view .LVU1328
 4050 000e 10B9     		cbnz	r0, .L65
 665:fips202.c     ****         exit(111);
 4051              		.loc 1 665 9 is_stmt 1 view .LVU1329
 4052 0010 6F20     		movs	r0, #111
 4053 0012 FFF7FEFF 		bl	exit
 4054              	.LVL466:
 4055              	.L65:
 666:fips202.c     ****     }
 667:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKECTX_BYTES);
 4056              		.loc 1 667 5 view .LVU1330
 4057 0016 2168     		ldr	r1, [r4]
 4058 0018 C822     		movs	r2, #200
 668:fips202.c     **** }
 4059              		.loc 1 668 1 is_stmt 0 view .LVU1331
 4060 001a BDE83840 		pop	{r3, r4, r5, lr}
 4061              	.LCFI24:
 4062              		.cfi_restore 14
 4063              		.cfi_restore 5
 4064              		.cfi_restore 4
 4065              		.cfi_restore 3
 4066              		.cfi_def_cfa_offset 0
 4067              	.LVL467:
 667:fips202.c     **** }
 4068              		.loc 1 667 5 view .LVU1332
 4069 001e FFF7FEBF 		b	memcpy
 4070              	.LVL468:
 4071              		.cfi_endproc
 4072              	.LFE24:
 4074              		.section	.text.shake128_ctx_release,"ax",%progbits
 4075              		.align	1
 4076              		.global	shake128_ctx_release
 4077              		.syntax unified
 4078              		.thumb
 4079              		.thumb_func
 4080              		.fpu softvfp
 4082              	shake128_ctx_release:
 4083              	.LVL469:
 4084              	.LFB25:
 669:fips202.c     **** 
 670:fips202.c     **** /** Release the allocated state. Call only once. */
 671:fips202.c     **** void shake128_ctx_release(shake128ctx *state) {
 4085              		.loc 1 671 47 is_stmt 1 view -0
 4086              		.cfi_startproc
 4087              		@ args = 0, pretend = 0, frame = 0
 4088              		@ frame_needed = 0, uses_anonymous_args = 0
 4089              		@ link register save eliminated.
 672:fips202.c     ****     free(state->ctx);
 4090              		.loc 1 672 5 view .LVU1334
 4091 0000 0068     		ldr	r0, [r0]
 4092              	.LVL470:
 4093              		.loc 1 672 5 is_stmt 0 view .LVU1335
 4094 0002 FFF7FEBF 		b	free
 4095              	.LVL471:
 4096              		.cfi_endproc
 4097              	.LFE25:
 4099              		.section	.text.shake256_absorb,"ax",%progbits
 4100              		.align	1
 4101              		.global	shake256_absorb
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4105              		.fpu softvfp
 4107              	shake256_absorb:
 4108              	.LVL472:
 4109              	.LFB26:
 673:fips202.c     **** }
 674:fips202.c     **** 
 675:fips202.c     **** /*************************************************
 676:fips202.c     ****  * Name:        shake256_absorb
 677:fips202.c     ****  *
 678:fips202.c     ****  * Description: Absorb step of the SHAKE256 XOF.
 679:fips202.c     ****  *              non-incremental, starts by zeroeing the state.
 680:fips202.c     ****  *
 681:fips202.c     ****  * Arguments:   - shake256ctx *state: pointer to (uninitialized) output Keccak state
 682:fips202.c     ****  *              - const uint8_t *input: pointer to input to be absorbed
 683:fips202.c     ****  *                                            into s
 684:fips202.c     ****  *              - size_t inlen: length of input in bytes
 685:fips202.c     ****  **************************************************/
 686:fips202.c     **** void shake256_absorb(shake256ctx *state, const uint8_t *input, size_t inlen) {
 4110              		.loc 1 686 78 is_stmt 1 view -0
 4111              		.cfi_startproc
 4112              		@ args = 0, pretend = 0, frame = 0
 4113              		@ frame_needed = 0, uses_anonymous_args = 0
 687:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4114              		.loc 1 687 5 view .LVU1337
 686:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4115              		.loc 1 686 78 is_stmt 0 view .LVU1338
 4116 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4117              	.LCFI25:
 4118              		.cfi_def_cfa_offset 32
 4119              		.cfi_offset 4, -20
 4120              		.cfi_offset 5, -16
 4121              		.cfi_offset 6, -12
 4122              		.cfi_offset 7, -8
 4123              		.cfi_offset 14, -4
 686:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4124              		.loc 1 686 78 view .LVU1339
 4125 0002 0746     		mov	r7, r0
 4126              		.loc 1 687 18 view .LVU1340
 4127 0004 C820     		movs	r0, #200
 4128              	.LVL473:
 686:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4129              		.loc 1 686 78 view .LVU1341
 4130 0006 0D46     		mov	r5, r1
 4131 0008 1646     		mov	r6, r2
 4132              		.loc 1 687 18 view .LVU1342
 4133 000a FFF7FEFF 		bl	malloc
 4134              	.LVL474:
 4135              		.loc 1 687 16 view .LVU1343
 4136 000e 3860     		str	r0, [r7]
 688:fips202.c     ****     if (state->ctx == NULL) {
 4137              		.loc 1 688 5 is_stmt 1 view .LVU1344
 4138              		.loc 1 688 8 is_stmt 0 view .LVU1345
 4139 0010 10B9     		cbnz	r0, .L68
 689:fips202.c     ****         exit(111);
 4140              		.loc 1 689 9 is_stmt 1 view .LVU1346
 4141 0012 6F20     		movs	r0, #111
 4142 0014 FFF7FEFF 		bl	exit
 4143              	.LVL475:
 4144              	.L68:
 690:fips202.c     ****     }
 691:fips202.c     ****     keccak_absorb(state->ctx, SHAKE256_RATE, input, inlen, 0x1F);
 4145              		.loc 1 691 5 view .LVU1347
 4146 0018 1F23     		movs	r3, #31
 4147 001a 0093     		str	r3, [sp]
 4148 001c 2A46     		mov	r2, r5
 4149 001e 3346     		mov	r3, r6
 4150 0020 8821     		movs	r1, #136
 4151 0022 FFF7FEFF 		bl	keccak_absorb
 4152              	.LVL476:
 692:fips202.c     **** }
 4153              		.loc 1 692 1 is_stmt 0 view .LVU1348
 4154 0026 03B0     		add	sp, sp, #12
 4155              	.LCFI26:
 4156              		.cfi_def_cfa_offset 20
 4157              		@ sp needed
 4158 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 4159              		.loc 1 692 1 view .LVU1349
 4160              		.cfi_endproc
 4161              	.LFE26:
 4163              		.section	.text.shake256_absorb1,"ax",%progbits
 4164              		.align	1
 4165              		.global	shake256_absorb1
 4166              		.syntax unified
 4167              		.thumb
 4168              		.thumb_func
 4169              		.fpu softvfp
 4171              	shake256_absorb1:
 4172              	.LVL477:
 4173              	.LFB27:
 693:fips202.c     **** 
 694:fips202.c     **** void shake256_absorb1(shake256ctx *state, const uint8_t *input, size_t inlen,uint8_t *p) {
 4174              		.loc 1 694 90 is_stmt 1 view -0
 4175              		.cfi_startproc
 4176              		@ args = 0, pretend = 0, frame = 200
 4177              		@ frame_needed = 0, uses_anonymous_args = 0
 695:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4178              		.loc 1 695 5 view .LVU1351
 694:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4179              		.loc 1 694 90 is_stmt 0 view .LVU1352
 4180 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 4181              	.LCFI27:
 4182              		.cfi_def_cfa_offset 32
 4183              		.cfi_offset 4, -32
 4184              		.cfi_offset 5, -28
 4185              		.cfi_offset 6, -24
 4186              		.cfi_offset 7, -20
 4187              		.cfi_offset 8, -16
 4188              		.cfi_offset 9, -12
 4189              		.cfi_offset 10, -8
 4190              		.cfi_offset 14, -4
 4191 0004 0546     		mov	r5, r0
 4192 0006 B2B0     		sub	sp, sp, #200
 4193              	.LCFI28:
 4194              		.cfi_def_cfa_offset 232
 4195              		.loc 1 695 18 view .LVU1353
 4196 0008 C820     		movs	r0, #200
 4197              	.LVL478:
 694:fips202.c     ****     state->ctx = malloc(PQC_SHAKECTX_BYTES);
 4198              		.loc 1 694 90 view .LVU1354
 4199 000a 0F46     		mov	r7, r1
 4200 000c 1646     		mov	r6, r2
 4201              		.loc 1 695 18 view .LVU1355
 4202 000e FFF7FEFF 		bl	malloc
 4203              	.LVL479:
 4204              		.loc 1 695 18 view .LVU1356
 4205 0012 0446     		mov	r4, r0
 4206              		.loc 1 695 16 view .LVU1357
 4207 0014 2860     		str	r0, [r5]
 696:fips202.c     ****     if (state->ctx == NULL) {
 4208              		.loc 1 696 5 is_stmt 1 view .LVU1358
 4209              		.loc 1 696 8 is_stmt 0 view .LVU1359
 4210 0016 10B9     		cbnz	r0, .L70
 697:fips202.c     ****         exit(111);
 4211              		.loc 1 697 9 is_stmt 1 view .LVU1360
 4212 0018 6F20     		movs	r0, #111
 4213 001a FFF7FEFF 		bl	exit
 4214              	.LVL480:
 4215              	.L70:
 4216              	.LBB18:
 4217              	.LBB19:
 392:fips202.c     ****     }
 4218              		.loc 1 392 14 is_stmt 0 view .LVU1361
 4219 001e C822     		movs	r2, #200
 4220 0020 0021     		movs	r1, #0
 4221 0022 FFF7FEFF 		bl	memset
 4222              	.LVL481:
 4223 0026 A4F10805 		sub	r5, r4, #8
 4224              	.LVL482:
 392:fips202.c     ****     }
 4225              		.loc 1 392 14 view .LVU1362
 4226 002a 04F1800A 		add	r10, r4, #128
 4227              	.LVL483:
 4228              	.L71:
 395:fips202.c     ****         for (i = 0; i < r / 8; ++i) {
 4229              		.loc 1 395 11 is_stmt 1 view .LVU1363
 4230 002e 872E     		cmp	r6, #135
 4231 0030 27D8     		bhi	.L73
 406:fips202.c     ****     }
 4232              		.loc 1 406 14 is_stmt 0 view .LVU1364
 4233 0032 8822     		movs	r2, #136
 4234 0034 0021     		movs	r1, #0
 4235 0036 6846     		mov	r0, sp
 4236 0038 FFF7FEFF 		bl	memset
 4237              	.LVL484:
 409:fips202.c     ****         
 4238              		.loc 1 409 14 view .LVU1365
 4239 003c 3246     		mov	r2, r6
 4240 003e 3946     		mov	r1, r7
 4241 0040 6846     		mov	r0, sp
 4242 0042 FFF7FEFF 		bl	memcpy
 4243              	.LVL485:
 412:fips202.c     ****     t[r - 1] |= 128;
 4244              		.loc 1 412 5 is_stmt 1 view .LVU1366
 412:fips202.c     ****     t[r - 1] |= 128;
 4245              		.loc 1 412 10 is_stmt 0 view .LVU1367
 4246 0046 32AB     		add	r3, sp, #200
 4247 0048 1E44     		add	r6, r6, r3
 4248              	.LVL486:
 412:fips202.c     ****     t[r - 1] |= 128;
 4249              		.loc 1 412 10 view .LVU1368
 4250 004a 1F23     		movs	r3, #31
 4251 004c 06F8C83C 		strb	r3, [r6, #-200]
 413:fips202.c     ****     //r/8
 4252              		.loc 1 413 5 is_stmt 1 view .LVU1369
 413:fips202.c     ****     //r/8
 4253              		.loc 1 413 14 is_stmt 0 view .LVU1370
 4254 0050 9DF88730 		ldrb	r3, [sp, #135]	@ zero_extendqisi2
 4255 0054 63F07F03 		orn	r3, r3, #127
 4256 0058 8DF88730 		strb	r3, [sp, #135]
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4257              		.loc 1 415 6 is_stmt 1 view .LVU1371
 4258              	.LVL487:
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4259              		.loc 1 415 18 view .LVU1372
 4260 005c 6E46     		mov	r6, sp
 4261 005e 1834     		adds	r4, r4, #24
 4262              	.LVL488:
 4263              	.L74:
 416:fips202.c     ****      }
 4264              		.loc 1 416 10 view .LVU1373
 416:fips202.c     ****      }
 4265              		.loc 1 416 18 is_stmt 0 view .LVU1374
 4266 0060 3046     		mov	r0, r6
 4267 0062 FFF7FEFF 		bl	load64
 4268              	.LVL489:
 416:fips202.c     ****      }
 4269              		.loc 1 416 15 view .LVU1375
 4270 0066 55F8082F 		ldr	r2, [r5, #8]!
 4271 006a 6B68     		ldr	r3, [r5, #4]
 4272 006c 4240     		eors	r2, r2, r0
 4273 006e 4B40     		eors	r3, r3, r1
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4274              		.loc 1 415 6 view .LVU1376
 4275 0070 A542     		cmp	r5, r4
 416:fips202.c     ****      }
 4276              		.loc 1 416 15 view .LVU1377
 4277 0072 C5E90023 		strd	r2, r3, [r5]
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4278              		.loc 1 415 25 is_stmt 1 view .LVU1378
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4279              		.loc 1 415 18 view .LVU1379
 415:fips202.c     ****          s[i] ^= load64(t + 8 * i);
 4280              		.loc 1 415 6 is_stmt 0 view .LVU1380
 4281 0076 06F10806 		add	r6, r6, #8
 4282 007a F1D1     		bne	.L74
 4283              	.LBE19:
 4284              	.LBE18:
 698:fips202.c     ****     }
 699:fips202.c     ****     keccak_absorb1(state->ctx, SHAKE256_RATE, input, inlen, 0x1F,p);
 700:fips202.c     **** }
 4285              		.loc 1 700 1 view .LVU1381
 4286 007c 32B0     		add	sp, sp, #200
 4287              	.LCFI29:
 4288              		.cfi_remember_state
 4289              		.cfi_def_cfa_offset 32
 4290              		@ sp needed
 4291 007e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4292              	.LVL490:
 4293              	.L73:
 4294              	.LCFI30:
 4295              		.cfi_restore_state
 4296              		.loc 1 700 1 view .LVU1382
 4297 0082 B946     		mov	r9, r7
 4298 0084 A846     		mov	r8, r5
 4299              	.L72:
 4300              	.LBB21:
 4301              	.LBB20:
 397:fips202.c     ****         }
 4302              		.loc 1 397 13 is_stmt 1 view .LVU1383
 397:fips202.c     ****         }
 4303              		.loc 1 397 21 is_stmt 0 view .LVU1384
 4304 0086 4846     		mov	r0, r9
 4305 0088 FFF7FEFF 		bl	load64
 4306              	.LVL491:
 397:fips202.c     ****         }
 4307              		.loc 1 397 18 view .LVU1385
 4308 008c 58F8082F 		ldr	r2, [r8, #8]!
 4309 0090 D8F80430 		ldr	r3, [r8, #4]
 4310 0094 4240     		eors	r2, r2, r0
 4311 0096 4B40     		eors	r3, r3, r1
 396:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 4312              		.loc 1 396 9 view .LVU1386
 4313 0098 C245     		cmp	r10, r8
 397:fips202.c     ****         }
 4314              		.loc 1 397 18 view .LVU1387
 4315 009a C8E90023 		strd	r2, r3, [r8]
 396:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 4316              		.loc 1 396 32 is_stmt 1 view .LVU1388
 396:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 4317              		.loc 1 396 21 view .LVU1389
 396:fips202.c     ****             s[i] ^= load64(m + 8 * i);
 4318              		.loc 1 396 9 is_stmt 0 view .LVU1390
 4319 009e 09F10809 		add	r9, r9, #8
 4320 00a2 F0D1     		bne	.L72
 400:fips202.c     ****         mlen -= r;
 4321              		.loc 1 400 9 is_stmt 1 view .LVU1391
 4322 00a4 2046     		mov	r0, r4
 4323 00a6 FFF7FEFF 		bl	KeccakF1600_StatePermute
 4324              	.LVL492:
 401:fips202.c     ****         m += r;
 4325              		.loc 1 401 9 view .LVU1392
 401:fips202.c     ****         m += r;
 4326              		.loc 1 401 14 is_stmt 0 view .LVU1393
 4327 00aa 883E     		subs	r6, r6, #136
 4328              	.LVL493:
 402:fips202.c     ****     }
 4329              		.loc 1 402 9 is_stmt 1 view .LVU1394
 402:fips202.c     ****     }
 4330              		.loc 1 402 11 is_stmt 0 view .LVU1395
 4331 00ac 8837     		adds	r7, r7, #136
 4332              	.LVL494:
 402:fips202.c     ****     }
 4333              		.loc 1 402 11 view .LVU1396
 4334 00ae BEE7     		b	.L71
 4335              	.LBE20:
 4336              	.LBE21:
 4337              		.cfi_endproc
 4338              	.LFE27:
 4340              		.section	.text.shake256_squeezeblocks,"ax",%progbits
 4341              		.align	1
 4342              		.global	shake256_squeezeblocks
 4343              		.syntax unified
 4344              		.thumb
 4345              		.thumb_func
 4346              		.fpu softvfp
 4348              	shake256_squeezeblocks:
 4349              	.LVL495:
 4350              	.LFB28:
 701:fips202.c     **** /*************************************************
 702:fips202.c     ****  * Name:        shake256_squeezeblocks
 703:fips202.c     ****  *
 704:fips202.c     ****  * Description: Squeeze step of SHAKE256 XOF. Squeezes full blocks of
 705:fips202.c     ****  *              SHAKE256_RATE bytes each. Modifies the state. Can be called
 706:fips202.c     ****  *              multiple times to keep squeezing, i.e., is incremental.
 707:fips202.c     ****  *
 708:fips202.c     ****  * Arguments:   - uint8_t *output: pointer to output blocks
 709:fips202.c     ****  *              - size_t nblocks: number of blocks to be squeezed
 710:fips202.c     ****  *                                (written to output)
 711:fips202.c     ****  *              - shake256ctx *state: pointer to input/output Keccak state
 712:fips202.c     ****  **************************************************/
 713:fips202.c     **** void shake256_squeezeblocks(uint8_t *output, size_t nblocks, shake256ctx *state) {
 4351              		.loc 1 713 82 is_stmt 1 view -0
 4352              		.cfi_startproc
 4353              		@ args = 0, pretend = 0, frame = 0
 4354              		@ frame_needed = 0, uses_anonymous_args = 0
 4355              		@ link register save eliminated.
 714:fips202.c     ****     keccak_squeezeblocks(output, nblocks, state->ctx, SHAKE256_RATE);
 4356              		.loc 1 714 5 view .LVU1398
 4357 0000 1268     		ldr	r2, [r2]
 4358              	.LVL496:
 4359              		.loc 1 714 5 is_stmt 0 view .LVU1399
 4360 0002 8823     		movs	r3, #136
 4361 0004 FFF7FEBF 		b	keccak_squeezeblocks
 4362              	.LVL497:
 4363              		.loc 1 714 5 view .LVU1400
 4364              		.cfi_endproc
 4365              	.LFE28:
 4367              		.section	.text.shake256_ctx_clone,"ax",%progbits
 4368              		.align	1
 4369              		.global	shake256_ctx_clone
 4370              		.syntax unified
 4371              		.thumb
 4372              		.thumb_func
 4373              		.fpu softvfp
 4375              	shake256_ctx_clone:
 4376              	.LVL498:
 4377              	.LFB29:
 715:fips202.c     **** }
 716:fips202.c     **** 
 717:fips202.c     **** void shake256_ctx_clone(shake256ctx *dest, const shake256ctx *src) {
 4378              		.loc 1 717 68 is_stmt 1 view -0
 4379              		.cfi_startproc
 4380              		@ args = 0, pretend = 0, frame = 0
 4381              		@ frame_needed = 0, uses_anonymous_args = 0
 718:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4382              		.loc 1 718 5 view .LVU1402
 717:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4383              		.loc 1 717 68 is_stmt 0 view .LVU1403
 4384 0000 38B5     		push	{r3, r4, r5, lr}
 4385              	.LCFI31:
 4386              		.cfi_def_cfa_offset 16
 4387              		.cfi_offset 3, -16
 4388              		.cfi_offset 4, -12
 4389              		.cfi_offset 5, -8
 4390              		.cfi_offset 14, -4
 717:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4391              		.loc 1 717 68 view .LVU1404
 4392 0002 0546     		mov	r5, r0
 4393              		.loc 1 718 17 view .LVU1405
 4394 0004 C820     		movs	r0, #200
 4395              	.LVL499:
 717:fips202.c     ****     dest->ctx = malloc(PQC_SHAKECTX_BYTES);
 4396              		.loc 1 717 68 view .LVU1406
 4397 0006 0C46     		mov	r4, r1
 4398              		.loc 1 718 17 view .LVU1407
 4399 0008 FFF7FEFF 		bl	malloc
 4400              	.LVL500:
 4401              		.loc 1 718 15 view .LVU1408
 4402 000c 2860     		str	r0, [r5]
 719:fips202.c     ****     if (dest->ctx == NULL) {
 4403              		.loc 1 719 5 is_stmt 1 view .LVU1409
 4404              		.loc 1 719 8 is_stmt 0 view .LVU1410
 4405 000e 10B9     		cbnz	r0, .L79
 720:fips202.c     ****         exit(111);
 4406              		.loc 1 720 9 is_stmt 1 view .LVU1411
 4407 0010 6F20     		movs	r0, #111
 4408 0012 FFF7FEFF 		bl	exit
 4409              	.LVL501:
 4410              	.L79:
 721:fips202.c     ****     }
 722:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKECTX_BYTES);
 4411              		.loc 1 722 5 view .LVU1412
 4412 0016 2168     		ldr	r1, [r4]
 4413 0018 C822     		movs	r2, #200
 723:fips202.c     **** }
 4414              		.loc 1 723 1 is_stmt 0 view .LVU1413
 4415 001a BDE83840 		pop	{r3, r4, r5, lr}
 4416              	.LCFI32:
 4417              		.cfi_restore 14
 4418              		.cfi_restore 5
 4419              		.cfi_restore 4
 4420              		.cfi_restore 3
 4421              		.cfi_def_cfa_offset 0
 4422              	.LVL502:
 722:fips202.c     **** }
 4423              		.loc 1 722 5 view .LVU1414
 4424 001e FFF7FEBF 		b	memcpy
 4425              	.LVL503:
 4426              		.cfi_endproc
 4427              	.LFE29:
 4429              		.section	.text.shake256_ctx_release,"ax",%progbits
 4430              		.align	1
 4431              		.global	shake256_ctx_release
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu softvfp
 4437              	shake256_ctx_release:
 4438              	.LVL504:
 4439              	.LFB30:
 724:fips202.c     **** 
 725:fips202.c     **** /** Release the allocated state. Call only once. */
 726:fips202.c     **** void shake256_ctx_release(shake256ctx *state) {
 4440              		.loc 1 726 47 is_stmt 1 view -0
 4441              		.cfi_startproc
 4442              		@ args = 0, pretend = 0, frame = 0
 4443              		@ frame_needed = 0, uses_anonymous_args = 0
 4444              		@ link register save eliminated.
 727:fips202.c     ****     free(state->ctx);
 4445              		.loc 1 727 5 view .LVU1416
 4446 0000 0068     		ldr	r0, [r0]
 4447              	.LVL505:
 4448              		.loc 1 727 5 is_stmt 0 view .LVU1417
 4449 0002 FFF7FEBF 		b	free
 4450              	.LVL506:
 4451              		.cfi_endproc
 4452              	.LFE30:
 4454              		.section	.text.shake128,"ax",%progbits
 4455              		.align	1
 4456              		.global	shake128
 4457              		.syntax unified
 4458              		.thumb
 4459              		.thumb_func
 4460              		.fpu softvfp
 4462              	shake128:
 4463              	.LVL507:
 4464              	.LFB31:
 728:fips202.c     **** }
 729:fips202.c     **** 
 730:fips202.c     **** /*************************************************
 731:fips202.c     ****  * Name:        shake128
 732:fips202.c     ****  *
 733:fips202.c     ****  * Description: SHAKE128 XOF with non-incremental API
 734:fips202.c     ****  *
 735:fips202.c     ****  * Arguments:   - uint8_t *output: pointer to output
 736:fips202.c     ****  *              - size_t outlen: requested output length in bytes
 737:fips202.c     ****  *              - const uint8_t *input: pointer to input
 738:fips202.c     ****  *              - size_t inlen: length of input in bytes
 739:fips202.c     ****  **************************************************/
 740:fips202.c     **** void shake128(uint8_t *output, size_t outlen,
 741:fips202.c     ****               const uint8_t *input, size_t inlen) {
 4465              		.loc 1 741 51 is_stmt 1 view -0
 4466              		.cfi_startproc
 4467              		@ args = 0, pretend = 0, frame = 176
 4468              		@ frame_needed = 0, uses_anonymous_args = 0
 742:fips202.c     ****     size_t nblocks = outlen / SHAKE128_RATE;
 4469              		.loc 1 742 5 view .LVU1419
 741:fips202.c     ****     size_t nblocks = outlen / SHAKE128_RATE;
 4470              		.loc 1 741 51 is_stmt 0 view .LVU1420
 4471 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4472              	.LCFI33:
 4473              		.cfi_def_cfa_offset 20
 4474              		.cfi_offset 4, -20
 4475              		.cfi_offset 5, -16
 4476              		.cfi_offset 6, -12
 4477              		.cfi_offset 7, -8
 4478              		.cfi_offset 14, -4
 4479 0002 ADB0     		sub	sp, sp, #180
 4480              	.LCFI34:
 4481              		.cfi_def_cfa_offset 200
 741:fips202.c     ****     size_t nblocks = outlen / SHAKE128_RATE;
 4482              		.loc 1 741 51 view .LVU1421
 4483 0004 0C46     		mov	r4, r1
 4484 0006 0646     		mov	r6, r0
 4485 0008 1146     		mov	r1, r2
 4486              	.LVL508:
 4487              		.loc 1 742 12 view .LVU1422
 4488 000a A827     		movs	r7, #168
 743:fips202.c     ****     uint8_t t[SHAKE128_RATE];
 744:fips202.c     ****     shake128ctx s;
 745:fips202.c     **** 
 746:fips202.c     ****     shake128_absorb(&s, input, inlen);
 4489              		.loc 1 746 5 view .LVU1423
 4490 000c 1A46     		mov	r2, r3
 4491              	.LVL509:
 4492              		.loc 1 746 5 view .LVU1424
 4493 000e 01A8     		add	r0, sp, #4
 4494              	.LVL510:
 4495              		.loc 1 746 5 view .LVU1425
 4496 0010 FFF7FEFF 		bl	shake128_absorb
 4497              	.LVL511:
 742:fips202.c     ****     uint8_t t[SHAKE128_RATE];
 4498              		.loc 1 742 12 view .LVU1426
 4499 0014 B4FBF7F5 		udiv	r5, r4, r7
 4500              	.LVL512:
 743:fips202.c     ****     uint8_t t[SHAKE128_RATE];
 4501              		.loc 1 743 5 is_stmt 1 view .LVU1427
 744:fips202.c     **** 
 4502              		.loc 1 744 5 view .LVU1428
 4503              		.loc 1 746 5 view .LVU1429
 747:fips202.c     ****     shake128_squeezeblocks(output, nblocks, &s);
 4504              		.loc 1 747 5 view .LVU1430
 4505 0018 01AA     		add	r2, sp, #4
 4506 001a 2946     		mov	r1, r5
 4507 001c 3046     		mov	r0, r6
 4508 001e 7D43     		muls	r5, r7, r5
 4509              	.LVL513:
 4510              		.loc 1 747 5 is_stmt 0 view .LVU1431
 4511 0020 FFF7FEFF 		bl	shake128_squeezeblocks
 4512              	.LVL514:
 748:fips202.c     **** 
 749:fips202.c     ****     output += nblocks * SHAKE128_RATE;
 4513              		.loc 1 749 5 is_stmt 1 view .LVU1432
 750:fips202.c     ****     outlen -= nblocks * SHAKE128_RATE;
 4514              		.loc 1 750 5 view .LVU1433
 751:fips202.c     **** 
 752:fips202.c     ****     if (outlen) {
 4515              		.loc 1 752 5 view .LVU1434
 4516              		.loc 1 752 8 is_stmt 0 view .LVU1435
 4517 0024 641B     		subs	r4, r4, r5
 4518              	.LVL515:
 4519              		.loc 1 752 8 view .LVU1436
 4520 0026 09D0     		beq	.L82
 753:fips202.c     ****         shake128_squeezeblocks(t, 1, &s);
 4521              		.loc 1 753 9 is_stmt 1 view .LVU1437
 4522 0028 01AA     		add	r2, sp, #4
 4523 002a 0121     		movs	r1, #1
 4524 002c 02A8     		add	r0, sp, #8
 4525 002e FFF7FEFF 		bl	shake128_squeezeblocks
 4526              	.LVL516:
 754:fips202.c     ****         for (size_t i = 0; i < outlen; ++i) {
 4527              		.loc 1 754 9 view .LVU1438
 4528              	.LBB22:
 4529              		.loc 1 754 14 view .LVU1439
 4530              		.loc 1 754 28 view .LVU1440
 755:fips202.c     ****             output[i] = t[i];
 4531              		.loc 1 755 23 is_stmt 0 view .LVU1441
 4532 0032 2246     		mov	r2, r4
 4533 0034 02A9     		add	r1, sp, #8
 4534 0036 7019     		adds	r0, r6, r5
 4535 0038 FFF7FEFF 		bl	memcpy
 4536              	.LVL517:
 4537              	.L82:
 4538              		.loc 1 755 23 view .LVU1442
 4539              	.LBE22:
 756:fips202.c     ****         }
 757:fips202.c     ****     }
 758:fips202.c     ****     shake128_ctx_release(&s);
 4540              		.loc 1 758 5 is_stmt 1 view .LVU1443
 4541 003c 01A8     		add	r0, sp, #4
 4542 003e FFF7FEFF 		bl	shake128_ctx_release
 4543              	.LVL518:
 759:fips202.c     **** }
 4544              		.loc 1 759 1 is_stmt 0 view .LVU1444
 4545 0042 2DB0     		add	sp, sp, #180
 4546              	.LCFI35:
 4547              		.cfi_def_cfa_offset 20
 4548              		@ sp needed
 4549 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 4550              		.loc 1 759 1 view .LVU1445
 4551              		.cfi_endproc
 4552              	.LFE31:
 4554              		.section	.text.shake256,"ax",%progbits
 4555              		.align	1
 4556              		.global	shake256
 4557              		.syntax unified
 4558              		.thumb
 4559              		.thumb_func
 4560              		.fpu softvfp
 4562              	shake256:
 4563              	.LVL519:
 4564              	.LFB32:
 760:fips202.c     **** 
 761:fips202.c     **** /*************************************************
 762:fips202.c     ****  * Name:        shake256
 763:fips202.c     ****  *
 764:fips202.c     ****  * Description: SHAKE256 XOF with non-incremental API
 765:fips202.c     ****  *
 766:fips202.c     ****  * Arguments:   - uint8_t *output: pointer to output
 767:fips202.c     ****  *              - size_t outlen: requested output length in bytes
 768:fips202.c     ****  *              - const uint8_t *input: pointer to input
 769:fips202.c     ****  *              - size_t inlen: length of input in bytes
 770:fips202.c     ****  **************************************************/
 771:fips202.c     **** void shake256(uint8_t *output, size_t outlen,
 772:fips202.c     ****               const uint8_t *input, size_t inlen) {
 4565              		.loc 1 772 51 is_stmt 1 view -0
 4566              		.cfi_startproc
 4567              		@ args = 0, pretend = 0, frame = 144
 4568              		@ frame_needed = 0, uses_anonymous_args = 0
 773:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4569              		.loc 1 773 5 view .LVU1447
 772:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4570              		.loc 1 772 51 is_stmt 0 view .LVU1448
 4571 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4572              	.LCFI36:
 4573              		.cfi_def_cfa_offset 20
 4574              		.cfi_offset 4, -20
 4575              		.cfi_offset 5, -16
 4576              		.cfi_offset 6, -12
 4577              		.cfi_offset 7, -8
 4578              		.cfi_offset 14, -4
 4579 0002 A5B0     		sub	sp, sp, #148
 4580              	.LCFI37:
 4581              		.cfi_def_cfa_offset 168
 772:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4582              		.loc 1 772 51 view .LVU1449
 4583 0004 0C46     		mov	r4, r1
 4584 0006 0646     		mov	r6, r0
 4585 0008 1146     		mov	r1, r2
 4586              	.LVL520:
 4587              		.loc 1 773 12 view .LVU1450
 4588 000a 8827     		movs	r7, #136
 774:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 775:fips202.c     ****     shake256ctx s;
 776:fips202.c     **** 	
 777:fips202.c     ****     shake256_absorb(&s, input, inlen);
 4589              		.loc 1 777 5 view .LVU1451
 4590 000c 1A46     		mov	r2, r3
 4591              	.LVL521:
 4592              		.loc 1 777 5 view .LVU1452
 4593 000e 01A8     		add	r0, sp, #4
 4594              	.LVL522:
 4595              		.loc 1 777 5 view .LVU1453
 4596 0010 FFF7FEFF 		bl	shake256_absorb
 4597              	.LVL523:
 773:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 4598              		.loc 1 773 12 view .LVU1454
 4599 0014 B4FBF7F5 		udiv	r5, r4, r7
 4600              	.LVL524:
 774:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 4601              		.loc 1 774 5 is_stmt 1 view .LVU1455
 775:fips202.c     **** 	
 4602              		.loc 1 775 5 view .LVU1456
 4603              		.loc 1 777 5 view .LVU1457
 778:fips202.c     ****     shake256_squeezeblocks(output, nblocks, &s);
 4604              		.loc 1 778 5 view .LVU1458
 4605 0018 01AA     		add	r2, sp, #4
 4606 001a 2946     		mov	r1, r5
 4607 001c 3046     		mov	r0, r6
 4608 001e 7D43     		muls	r5, r7, r5
 4609              	.LVL525:
 4610              		.loc 1 778 5 is_stmt 0 view .LVU1459
 4611 0020 FFF7FEFF 		bl	shake256_squeezeblocks
 4612              	.LVL526:
 779:fips202.c     **** 
 780:fips202.c     ****     output += nblocks * SHAKE256_RATE;
 4613              		.loc 1 780 5 is_stmt 1 view .LVU1460
 781:fips202.c     ****     outlen -= nblocks * SHAKE256_RATE;
 4614              		.loc 1 781 5 view .LVU1461
 782:fips202.c     **** 
 783:fips202.c     ****     if (outlen) {
 4615              		.loc 1 783 5 view .LVU1462
 4616              		.loc 1 783 8 is_stmt 0 view .LVU1463
 4617 0024 641B     		subs	r4, r4, r5
 4618              	.LVL527:
 4619              		.loc 1 783 8 view .LVU1464
 4620 0026 09D0     		beq	.L87
 784:fips202.c     ****         shake256_squeezeblocks(t, 1, &s);
 4621              		.loc 1 784 9 is_stmt 1 view .LVU1465
 4622 0028 01AA     		add	r2, sp, #4
 4623 002a 0121     		movs	r1, #1
 4624 002c 02A8     		add	r0, sp, #8
 4625 002e FFF7FEFF 		bl	shake256_squeezeblocks
 4626              	.LVL528:
 785:fips202.c     ****         for (size_t i = 0; i < outlen; ++i) {
 4627              		.loc 1 785 9 view .LVU1466
 4628              	.LBB23:
 4629              		.loc 1 785 14 view .LVU1467
 4630              		.loc 1 785 28 view .LVU1468
 786:fips202.c     ****             output[i] = t[i];
 4631              		.loc 1 786 23 is_stmt 0 view .LVU1469
 4632 0032 2246     		mov	r2, r4
 4633 0034 02A9     		add	r1, sp, #8
 4634 0036 7019     		adds	r0, r6, r5
 4635 0038 FFF7FEFF 		bl	memcpy
 4636              	.LVL529:
 4637              	.L87:
 4638              		.loc 1 786 23 view .LVU1470
 4639              	.LBE23:
 787:fips202.c     ****         }
 788:fips202.c     ****     }
 789:fips202.c     ****     shake256_ctx_release(&s);
 4640              		.loc 1 789 5 is_stmt 1 view .LVU1471
 4641 003c 01A8     		add	r0, sp, #4
 4642 003e FFF7FEFF 		bl	shake256_ctx_release
 4643              	.LVL530:
 790:fips202.c     **** }
 4644              		.loc 1 790 1 is_stmt 0 view .LVU1472
 4645 0042 25B0     		add	sp, sp, #148
 4646              	.LCFI38:
 4647              		.cfi_def_cfa_offset 20
 4648              		@ sp needed
 4649 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 4650              		.loc 1 790 1 view .LVU1473
 4651              		.cfi_endproc
 4652              	.LFE32:
 4654              		.section	.text.shake2561,"ax",%progbits
 4655              		.align	1
 4656              		.global	shake2561
 4657              		.syntax unified
 4658              		.thumb
 4659              		.thumb_func
 4660              		.fpu softvfp
 4662              	shake2561:
 4663              	.LVL531:
 4664              	.LFB33:
 791:fips202.c     **** 
 792:fips202.c     **** 
 793:fips202.c     **** void shake2561(uint8_t *output, size_t outlen,
 794:fips202.c     ****               const uint8_t *input, size_t inlen,uint8_t *p) {
 4665              		.loc 1 794 62 is_stmt 1 view -0
 4666              		.cfi_startproc
 4667              		@ args = 4, pretend = 0, frame = 144
 4668              		@ frame_needed = 0, uses_anonymous_args = 0
 795:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4669              		.loc 1 795 5 view .LVU1475
 794:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4670              		.loc 1 794 62 is_stmt 0 view .LVU1476
 4671 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4672              	.LCFI39:
 4673              		.cfi_def_cfa_offset 20
 4674              		.cfi_offset 4, -20
 4675              		.cfi_offset 5, -16
 4676              		.cfi_offset 6, -12
 4677              		.cfi_offset 7, -8
 4678              		.cfi_offset 14, -4
 4679 0002 A5B0     		sub	sp, sp, #148
 4680              	.LCFI40:
 4681              		.cfi_def_cfa_offset 168
 794:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4682              		.loc 1 794 62 view .LVU1477
 4683 0004 0C46     		mov	r4, r1
 4684 0006 0646     		mov	r6, r0
 4685 0008 1146     		mov	r1, r2
 4686              	.LVL532:
 4687              		.loc 1 795 12 view .LVU1478
 4688 000a 8827     		movs	r7, #136
 794:fips202.c     ****     size_t nblocks = outlen / SHAKE256_RATE;
 4689              		.loc 1 794 62 view .LVU1479
 4690 000c 1A46     		mov	r2, r3
 4691              	.LVL533:
 796:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 797:fips202.c     ****     shake256ctx s;
 798:fips202.c     ****     shake256_absorb1(&s, input, inlen,p);
 4692              		.loc 1 798 5 view .LVU1480
 4693 000e 01A8     		add	r0, sp, #4
 4694              	.LVL534:
 4695              		.loc 1 798 5 view .LVU1481
 4696 0010 2A9B     		ldr	r3, [sp, #168]
 4697              	.LVL535:
 795:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 4698              		.loc 1 795 12 view .LVU1482
 4699 0012 B4FBF7F5 		udiv	r5, r4, r7
 4700              	.LVL536:
 796:fips202.c     ****     uint8_t t[SHAKE256_RATE];
 4701              		.loc 1 796 5 is_stmt 1 view .LVU1483
 797:fips202.c     ****     shake256_absorb1(&s, input, inlen,p);
 4702              		.loc 1 797 5 view .LVU1484
 4703              		.loc 1 798 5 view .LVU1485
 4704 0016 FFF7FEFF 		bl	shake256_absorb1
 4705              	.LVL537:
 799:fips202.c     ****     shake256_squeezeblocks(output, nblocks, &s);
 4706              		.loc 1 799 5 view .LVU1486
 4707 001a 2946     		mov	r1, r5
 4708 001c 01AA     		add	r2, sp, #4
 4709 001e 3046     		mov	r0, r6
 4710 0020 7D43     		muls	r5, r7, r5
 4711              	.LVL538:
 4712              		.loc 1 799 5 is_stmt 0 view .LVU1487
 4713 0022 FFF7FEFF 		bl	shake256_squeezeblocks
 4714              	.LVL539:
 800:fips202.c     **** 	
 801:fips202.c     ****      
 802:fips202.c     ****     output += nblocks * SHAKE256_RATE;
 4715              		.loc 1 802 5 is_stmt 1 view .LVU1488
 803:fips202.c     ****     outlen -= nblocks * SHAKE256_RATE;
 4716              		.loc 1 803 5 view .LVU1489
 804:fips202.c     ****     if (outlen) {
 4717              		.loc 1 804 5 view .LVU1490
 4718              		.loc 1 804 8 is_stmt 0 view .LVU1491
 4719 0026 641B     		subs	r4, r4, r5
 4720              	.LVL540:
 4721              		.loc 1 804 8 view .LVU1492
 4722 0028 09D0     		beq	.L92
 805:fips202.c     ****         
 806:fips202.c     ****         shake256_squeezeblocks(t, 1, &s);
 4723              		.loc 1 806 9 is_stmt 1 view .LVU1493
 4724 002a 01AA     		add	r2, sp, #4
 4725 002c 0121     		movs	r1, #1
 4726 002e 02A8     		add	r0, sp, #8
 4727 0030 FFF7FEFF 		bl	shake256_squeezeblocks
 4728              	.LVL541:
 807:fips202.c     ****         for (size_t i = 0; i < outlen; ++i) {
 4729              		.loc 1 807 9 view .LVU1494
 4730              	.LBB24:
 4731              		.loc 1 807 14 view .LVU1495
 4732              		.loc 1 807 28 view .LVU1496
 808:fips202.c     ****             output[i] = t[i];
 4733              		.loc 1 808 23 is_stmt 0 view .LVU1497
 4734 0034 2246     		mov	r2, r4
 4735 0036 02A9     		add	r1, sp, #8
 4736 0038 7019     		adds	r0, r6, r5
 4737 003a FFF7FEFF 		bl	memcpy
 4738              	.LVL542:
 4739              	.L92:
 4740              		.loc 1 808 23 view .LVU1498
 4741              	.LBE24:
 809:fips202.c     ****         }
 810:fips202.c     ****     }
 811:fips202.c     ****     shake256_ctx_release(&s);
 4742              		.loc 1 811 5 is_stmt 1 view .LVU1499
 4743 003e 01A8     		add	r0, sp, #4
 4744 0040 FFF7FEFF 		bl	shake256_ctx_release
 4745              	.LVL543:
 812:fips202.c     **** }
 4746              		.loc 1 812 1 is_stmt 0 view .LVU1500
 4747 0044 25B0     		add	sp, sp, #148
 4748              	.LCFI41:
 4749              		.cfi_def_cfa_offset 20
 4750              		@ sp needed
 4751 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 4752              		.loc 1 812 1 view .LVU1501
 4753              		.cfi_endproc
 4754              	.LFE33:
 4756              		.section	.text.sha3_256_inc_init,"ax",%progbits
 4757              		.align	1
 4758              		.global	sha3_256_inc_init
 4759              		.syntax unified
 4760              		.thumb
 4761              		.thumb_func
 4762              		.fpu softvfp
 4764              	sha3_256_inc_init:
 4765              	.LVL544:
 4766              	.LFB34:
 813:fips202.c     **** void sha3_256_inc_init(sha3_256incctx *state) {
 4767              		.loc 1 813 47 is_stmt 1 view -0
 4768              		.cfi_startproc
 4769              		@ args = 0, pretend = 0, frame = 0
 4770              		@ frame_needed = 0, uses_anonymous_args = 0
 814:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 4771              		.loc 1 814 5 view .LVU1503
 813:fips202.c     **** void sha3_256_inc_init(sha3_256incctx *state) {
 4772              		.loc 1 813 47 is_stmt 0 view .LVU1504
 4773 0000 10B5     		push	{r4, lr}
 4774              	.LCFI42:
 4775              		.cfi_def_cfa_offset 8
 4776              		.cfi_offset 4, -8
 4777              		.cfi_offset 14, -4
 813:fips202.c     **** void sha3_256_inc_init(sha3_256incctx *state) {
 4778              		.loc 1 813 47 view .LVU1505
 4779 0002 0446     		mov	r4, r0
 4780              		.loc 1 814 18 view .LVU1506
 4781 0004 D020     		movs	r0, #208
 4782              	.LVL545:
 4783              		.loc 1 814 18 view .LVU1507
 4784 0006 FFF7FEFF 		bl	malloc
 4785              	.LVL546:
 4786              		.loc 1 814 16 view .LVU1508
 4787 000a 2060     		str	r0, [r4]
 815:fips202.c     ****     if (state->ctx == NULL) {
 4788              		.loc 1 815 5 is_stmt 1 view .LVU1509
 4789              		.loc 1 815 8 is_stmt 0 view .LVU1510
 4790 000c 10B9     		cbnz	r0, .L97
 816:fips202.c     ****         exit(111);
 4791              		.loc 1 816 9 is_stmt 1 view .LVU1511
 4792 000e 6F20     		movs	r0, #111
 4793 0010 FFF7FEFF 		bl	exit
 4794              	.LVL547:
 4795              	.L97:
 817:fips202.c     ****     }
 818:fips202.c     ****     keccak_inc_init(state->ctx);
 4796              		.loc 1 818 5 view .LVU1512
 819:fips202.c     **** }
 4797              		.loc 1 819 1 is_stmt 0 view .LVU1513
 4798 0014 BDE81040 		pop	{r4, lr}
 4799              	.LCFI43:
 4800              		.cfi_restore 14
 4801              		.cfi_restore 4
 4802              		.cfi_def_cfa_offset 0
 4803              	.LVL548:
 818:fips202.c     **** }
 4804              		.loc 1 818 5 view .LVU1514
 4805 0018 FFF7FEBF 		b	keccak_inc_init
 4806              	.LVL549:
 4807              		.cfi_endproc
 4808              	.LFE34:
 4810              		.section	.text.sha3_256_inc_ctx_clone,"ax",%progbits
 4811              		.align	1
 4812              		.global	sha3_256_inc_ctx_clone
 4813              		.syntax unified
 4814              		.thumb
 4815              		.thumb_func
 4816              		.fpu softvfp
 4818              	sha3_256_inc_ctx_clone:
 4819              	.LVL550:
 4820              	.LFB35:
 820:fips202.c     **** 
 821:fips202.c     **** void sha3_256_inc_ctx_clone(sha3_256incctx *dest, const sha3_256incctx *src) {
 4821              		.loc 1 821 78 is_stmt 1 view -0
 4822              		.cfi_startproc
 4823              		@ args = 0, pretend = 0, frame = 0
 4824              		@ frame_needed = 0, uses_anonymous_args = 0
 822:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 4825              		.loc 1 822 5 view .LVU1516
 821:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 4826              		.loc 1 821 78 is_stmt 0 view .LVU1517
 4827 0000 38B5     		push	{r3, r4, r5, lr}
 4828              	.LCFI44:
 4829              		.cfi_def_cfa_offset 16
 4830              		.cfi_offset 3, -16
 4831              		.cfi_offset 4, -12
 4832              		.cfi_offset 5, -8
 4833              		.cfi_offset 14, -4
 821:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 4834              		.loc 1 821 78 view .LVU1518
 4835 0002 0546     		mov	r5, r0
 4836              		.loc 1 822 17 view .LVU1519
 4837 0004 D020     		movs	r0, #208
 4838              	.LVL551:
 821:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 4839              		.loc 1 821 78 view .LVU1520
 4840 0006 0C46     		mov	r4, r1
 4841              		.loc 1 822 17 view .LVU1521
 4842 0008 FFF7FEFF 		bl	malloc
 4843              	.LVL552:
 4844              		.loc 1 822 15 view .LVU1522
 4845 000c 2860     		str	r0, [r5]
 823:fips202.c     ****     if (dest->ctx == NULL) {
 4846              		.loc 1 823 5 is_stmt 1 view .LVU1523
 4847              		.loc 1 823 8 is_stmt 0 view .LVU1524
 4848 000e 10B9     		cbnz	r0, .L99
 824:fips202.c     ****         exit(111);
 4849              		.loc 1 824 9 is_stmt 1 view .LVU1525
 4850 0010 6F20     		movs	r0, #111
 4851 0012 FFF7FEFF 		bl	exit
 4852              	.LVL553:
 4853              	.L99:
 825:fips202.c     ****     }
 826:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKEINCCTX_BYTES);
 4854              		.loc 1 826 5 view .LVU1526
 4855 0016 2168     		ldr	r1, [r4]
 4856 0018 D022     		movs	r2, #208
 827:fips202.c     **** }
 4857              		.loc 1 827 1 is_stmt 0 view .LVU1527
 4858 001a BDE83840 		pop	{r3, r4, r5, lr}
 4859              	.LCFI45:
 4860              		.cfi_restore 14
 4861              		.cfi_restore 5
 4862              		.cfi_restore 4
 4863              		.cfi_restore 3
 4864              		.cfi_def_cfa_offset 0
 4865              	.LVL554:
 826:fips202.c     **** }
 4866              		.loc 1 826 5 view .LVU1528
 4867 001e FFF7FEBF 		b	memcpy
 4868              	.LVL555:
 4869              		.cfi_endproc
 4870              	.LFE35:
 4872              		.section	.text.sha3_256_inc_ctx_release,"ax",%progbits
 4873              		.align	1
 4874              		.global	sha3_256_inc_ctx_release
 4875              		.syntax unified
 4876              		.thumb
 4877              		.thumb_func
 4878              		.fpu softvfp
 4880              	sha3_256_inc_ctx_release:
 4881              	.LVL556:
 4882              	.LFB36:
 828:fips202.c     **** 
 829:fips202.c     **** void sha3_256_inc_ctx_release(sha3_256incctx *state) {
 4883              		.loc 1 829 54 is_stmt 1 view -0
 4884              		.cfi_startproc
 4885              		@ args = 0, pretend = 0, frame = 0
 4886              		@ frame_needed = 0, uses_anonymous_args = 0
 4887              		@ link register save eliminated.
 830:fips202.c     ****     free(state->ctx);
 4888              		.loc 1 830 5 view .LVU1530
 4889 0000 0068     		ldr	r0, [r0]
 4890              	.LVL557:
 4891              		.loc 1 830 5 is_stmt 0 view .LVU1531
 4892 0002 FFF7FEBF 		b	free
 4893              	.LVL558:
 4894              		.cfi_endproc
 4895              	.LFE36:
 4897              		.section	.text.sha3_256_inc_absorb,"ax",%progbits
 4898              		.align	1
 4899              		.global	sha3_256_inc_absorb
 4900              		.syntax unified
 4901              		.thumb
 4902              		.thumb_func
 4903              		.fpu softvfp
 4905              	sha3_256_inc_absorb:
 4906              	.LVL559:
 4907              	.LFB37:
 831:fips202.c     **** }
 832:fips202.c     **** 
 833:fips202.c     **** void sha3_256_inc_absorb(sha3_256incctx *state, const uint8_t *input, size_t inlen) {
 4908              		.loc 1 833 85 is_stmt 1 view -0
 4909              		.cfi_startproc
 4910              		@ args = 0, pretend = 0, frame = 0
 4911              		@ frame_needed = 0, uses_anonymous_args = 0
 4912              		@ link register save eliminated.
 834:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_256_RATE, input, inlen);
 4913              		.loc 1 834 5 view .LVU1533
 833:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_256_RATE, input, inlen);
 4914              		.loc 1 833 85 is_stmt 0 view .LVU1534
 4915 0000 1346     		mov	r3, r2
 4916              		.loc 1 834 5 view .LVU1535
 4917 0002 0068     		ldr	r0, [r0]
 4918              	.LVL560:
 4919              		.loc 1 834 5 view .LVU1536
 4920 0004 0A46     		mov	r2, r1
 4921              	.LVL561:
 4922              		.loc 1 834 5 view .LVU1537
 4923 0006 8821     		movs	r1, #136
 4924              	.LVL562:
 4925              		.loc 1 834 5 view .LVU1538
 4926 0008 FFF7FEBF 		b	keccak_inc_absorb
 4927              	.LVL563:
 4928              		.loc 1 834 5 view .LVU1539
 4929              		.cfi_endproc
 4930              	.LFE37:
 4932              		.section	.text.sha3_256_inc_finalize,"ax",%progbits
 4933              		.align	1
 4934              		.global	sha3_256_inc_finalize
 4935              		.syntax unified
 4936              		.thumb
 4937              		.thumb_func
 4938              		.fpu softvfp
 4940              	sha3_256_inc_finalize:
 4941              	.LVL564:
 4942              	.LFB38:
 835:fips202.c     **** }
 836:fips202.c     **** 
 837:fips202.c     **** void sha3_256_inc_finalize(uint8_t *output, sha3_256incctx *state) {
 4943              		.loc 1 837 68 is_stmt 1 view -0
 4944              		.cfi_startproc
 4945              		@ args = 0, pretend = 0, frame = 136
 4946              		@ frame_needed = 0, uses_anonymous_args = 0
 838:fips202.c     ****     uint8_t t[SHA3_256_RATE];
 4947              		.loc 1 838 5 view .LVU1541
 839:fips202.c     ****     keccak_inc_finalize(state->ctx, SHA3_256_RATE, 0x06);
 4948              		.loc 1 839 5 view .LVU1542
 837:fips202.c     ****     uint8_t t[SHA3_256_RATE];
 4949              		.loc 1 837 68 is_stmt 0 view .LVU1543
 4950 0000 30B5     		push	{r4, r5, lr}
 4951              	.LCFI46:
 4952              		.cfi_def_cfa_offset 12
 4953              		.cfi_offset 4, -12
 4954              		.cfi_offset 5, -8
 4955              		.cfi_offset 14, -4
 4956 0002 0D46     		mov	r5, r1
 4957 0004 A3B0     		sub	sp, sp, #140
 4958              	.LCFI47:
 4959              		.cfi_def_cfa_offset 152
 837:fips202.c     ****     uint8_t t[SHA3_256_RATE];
 4960              		.loc 1 837 68 view .LVU1544
 4961 0006 0446     		mov	r4, r0
 4962              		.loc 1 839 5 view .LVU1545
 4963 0008 0622     		movs	r2, #6
 4964 000a 2868     		ldr	r0, [r5]
 4965              	.LVL565:
 4966              		.loc 1 839 5 view .LVU1546
 4967 000c 8821     		movs	r1, #136
 4968              	.LVL566:
 4969              		.loc 1 839 5 view .LVU1547
 4970 000e FFF7FEFF 		bl	keccak_inc_finalize
 4971              	.LVL567:
 840:fips202.c     **** 
 841:fips202.c     ****     keccak_squeezeblocks(t, 1, state->ctx, SHA3_256_RATE);
 4972              		.loc 1 841 5 is_stmt 1 view .LVU1548
 4973 0012 2A68     		ldr	r2, [r5]
 4974 0014 8823     		movs	r3, #136
 4975 0016 0121     		movs	r1, #1
 4976 0018 6846     		mov	r0, sp
 4977 001a FFF7FEFF 		bl	keccak_squeezeblocks
 4978              	.LVL568:
 842:fips202.c     **** 
 843:fips202.c     ****     sha3_256_inc_ctx_release(state);
 4979              		.loc 1 843 5 view .LVU1549
 4980 001e 2846     		mov	r0, r5
 4981 0020 FFF7FEFF 		bl	sha3_256_inc_ctx_release
 4982              	.LVL569:
 844:fips202.c     **** 
 845:fips202.c     ****     for (size_t i = 0; i < 32; i++) {
 4983              		.loc 1 845 5 view .LVU1550
 4984              	.LBB25:
 4985              		.loc 1 845 10 view .LVU1551
 4986              		.loc 1 845 24 view .LVU1552
 846:fips202.c     ****         output[i] = t[i];
 4987              		.loc 1 846 19 is_stmt 0 view .LVU1553
 4988 0024 08AD     		add	r5, sp, #32
 4989              	.LVL570:
 4990              		.loc 1 846 19 view .LVU1554
 4991 0026 6A46     		mov	r2, sp
 4992 0028 2346     		mov	r3, r4
 4993              	.LVL571:
 4994              	.L103:
 4995              		.loc 1 846 19 view .LVU1555
 4996 002a 1446     		mov	r4, r2
 4997 002c 03CC     		ldmia	r4!, {r0, r1}
 4998 002e AC42     		cmp	r4, r5
 4999 0030 1860     		str	r0, [r3]	@ unaligned
 5000 0032 5960     		str	r1, [r3, #4]	@ unaligned
 5001 0034 2246     		mov	r2, r4
 5002 0036 03F10803 		add	r3, r3, #8
 5003 003a F6D1     		bne	.L103
 5004              	.LBE25:
 847:fips202.c     ****     }
 848:fips202.c     **** }
 5005              		.loc 1 848 1 view .LVU1556
 5006 003c 23B0     		add	sp, sp, #140
 5007              	.LCFI48:
 5008              		.cfi_def_cfa_offset 12
 5009              		@ sp needed
 5010 003e 30BD     		pop	{r4, r5, pc}
 5011              		.cfi_endproc
 5012              	.LFE38:
 5014              		.section	.text.sha3_256,"ax",%progbits
 5015              		.align	1
 5016              		.global	sha3_256
 5017              		.syntax unified
 5018              		.thumb
 5019              		.thumb_func
 5020              		.fpu softvfp
 5022              	sha3_256:
 5023              	.LVL572:
 5024              	.LFB39:
 849:fips202.c     **** 
 850:fips202.c     **** /*************************************************
 851:fips202.c     ****  * Name:        sha3_256
 852:fips202.c     ****  *
 853:fips202.c     ****  * Description: SHA3-256 with non-incremental API
 854:fips202.c     ****  *
 855:fips202.c     ****  * Arguments:   - uint8_t *output:      pointer to output
 856:fips202.c     ****  *              - const uint8_t *input: pointer to input
 857:fips202.c     ****  *              - size_t inlen:   length of input in bytes
 858:fips202.c     ****  **************************************************/
 859:fips202.c     **** void sha3_256(uint8_t *output, const uint8_t *input, size_t inlen) {
 5025              		.loc 1 859 68 is_stmt 1 view -0
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 336
 5028              		@ frame_needed = 0, uses_anonymous_args = 0
 860:fips202.c     ****     uint64_t s[25];
 5029              		.loc 1 860 5 view .LVU1558
 861:fips202.c     ****     uint8_t t[SHA3_256_RATE];
 5030              		.loc 1 861 5 view .LVU1559
 862:fips202.c     **** 
 863:fips202.c     ****     /* Absorb input */
 864:fips202.c     ****     keccak_absorb(s, SHA3_256_RATE, input, inlen, 0x06);
 5031              		.loc 1 864 5 view .LVU1560
 859:fips202.c     ****     uint64_t s[25];
 5032              		.loc 1 859 68 is_stmt 0 view .LVU1561
 5033 0000 30B5     		push	{r4, r5, lr}
 5034              	.LCFI49:
 5035              		.cfi_def_cfa_offset 12
 5036              		.cfi_offset 4, -12
 5037              		.cfi_offset 5, -8
 5038              		.cfi_offset 14, -4
 5039 0002 D7B0     		sub	sp, sp, #348
 5040              	.LCFI50:
 5041              		.cfi_def_cfa_offset 360
 859:fips202.c     ****     uint64_t s[25];
 5042              		.loc 1 859 68 view .LVU1562
 5043 0004 1346     		mov	r3, r2
 5044              		.loc 1 864 5 view .LVU1563
 5045 0006 0622     		movs	r2, #6
 5046              	.LVL573:
 859:fips202.c     ****     uint64_t s[25];
 5047              		.loc 1 859 68 view .LVU1564
 5048 0008 0446     		mov	r4, r0
 5049              		.loc 1 864 5 view .LVU1565
 5050 000a 0092     		str	r2, [sp]
 5051 000c 24A8     		add	r0, sp, #144
 5052              	.LVL574:
 5053              		.loc 1 864 5 view .LVU1566
 5054 000e 0A46     		mov	r2, r1
 5055 0010 8821     		movs	r1, #136
 5056              	.LVL575:
 5057              		.loc 1 864 5 view .LVU1567
 5058 0012 FFF7FEFF 		bl	keccak_absorb
 5059              	.LVL576:
 865:fips202.c     **** 
 866:fips202.c     ****     /* Squeeze output */
 867:fips202.c     ****     keccak_squeezeblocks(t, 1, s, SHA3_256_RATE);
 5060              		.loc 1 867 5 is_stmt 1 view .LVU1568
 5061 0016 8823     		movs	r3, #136
 5062 0018 24AA     		add	r2, sp, #144
 5063 001a 0121     		movs	r1, #1
 5064 001c 02A8     		add	r0, sp, #8
 5065 001e FFF7FEFF 		bl	keccak_squeezeblocks
 5066              	.LVL577:
 868:fips202.c     **** 
 869:fips202.c     ****     for (size_t i = 0; i < 32; i++) {
 5067              		.loc 1 869 5 view .LVU1569
 5068              	.LBB26:
 5069              		.loc 1 869 10 view .LVU1570
 5070              		.loc 1 869 24 view .LVU1571
 870:fips202.c     ****         output[i] = t[i];
 5071              		.loc 1 870 19 is_stmt 0 view .LVU1572
 5072 0022 0AAD     		add	r5, sp, #40
 5073 0024 02AA     		add	r2, sp, #8
 5074 0026 2346     		mov	r3, r4
 5075              	.LVL578:
 5076              	.L106:
 5077              		.loc 1 870 19 view .LVU1573
 5078 0028 1446     		mov	r4, r2
 5079 002a 03CC     		ldmia	r4!, {r0, r1}
 5080 002c AC42     		cmp	r4, r5
 5081 002e 1860     		str	r0, [r3]	@ unaligned
 5082 0030 5960     		str	r1, [r3, #4]	@ unaligned
 5083 0032 2246     		mov	r2, r4
 5084 0034 03F10803 		add	r3, r3, #8
 5085 0038 F6D1     		bne	.L106
 5086              	.LBE26:
 871:fips202.c     ****     }
 872:fips202.c     **** }
 5087              		.loc 1 872 1 view .LVU1574
 5088 003a 57B0     		add	sp, sp, #348
 5089              	.LCFI51:
 5090              		.cfi_def_cfa_offset 12
 5091              		@ sp needed
 5092 003c 30BD     		pop	{r4, r5, pc}
 5093              		.cfi_endproc
 5094              	.LFE39:
 5096              		.section	.text.sha3_384_inc_init,"ax",%progbits
 5097              		.align	1
 5098              		.global	sha3_384_inc_init
 5099              		.syntax unified
 5100              		.thumb
 5101              		.thumb_func
 5102              		.fpu softvfp
 5104              	sha3_384_inc_init:
 5105              	.LVL579:
 5106              	.LFB40:
 873:fips202.c     **** 
 874:fips202.c     **** void sha3_384_inc_init(sha3_384incctx *state) {
 5107              		.loc 1 874 47 is_stmt 1 view -0
 5108              		.cfi_startproc
 5109              		@ args = 0, pretend = 0, frame = 0
 5110              		@ frame_needed = 0, uses_anonymous_args = 0
 875:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5111              		.loc 1 875 5 view .LVU1576
 874:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5112              		.loc 1 874 47 is_stmt 0 view .LVU1577
 5113 0000 10B5     		push	{r4, lr}
 5114              	.LCFI52:
 5115              		.cfi_def_cfa_offset 8
 5116              		.cfi_offset 4, -8
 5117              		.cfi_offset 14, -4
 874:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5118              		.loc 1 874 47 view .LVU1578
 5119 0002 0446     		mov	r4, r0
 5120              		.loc 1 875 18 view .LVU1579
 5121 0004 D020     		movs	r0, #208
 5122              	.LVL580:
 5123              		.loc 1 875 18 view .LVU1580
 5124 0006 FFF7FEFF 		bl	malloc
 5125              	.LVL581:
 5126              		.loc 1 875 16 view .LVU1581
 5127 000a 2060     		str	r0, [r4]
 876:fips202.c     ****     if (state->ctx == NULL) {
 5128              		.loc 1 876 5 is_stmt 1 view .LVU1582
 5129              		.loc 1 876 8 is_stmt 0 view .LVU1583
 5130 000c 10B9     		cbnz	r0, .L109
 877:fips202.c     ****         exit(111);
 5131              		.loc 1 877 9 is_stmt 1 view .LVU1584
 5132 000e 6F20     		movs	r0, #111
 5133 0010 FFF7FEFF 		bl	exit
 5134              	.LVL582:
 5135              	.L109:
 878:fips202.c     ****     }
 879:fips202.c     ****     keccak_inc_init(state->ctx);
 5136              		.loc 1 879 5 view .LVU1585
 880:fips202.c     **** }
 5137              		.loc 1 880 1 is_stmt 0 view .LVU1586
 5138 0014 BDE81040 		pop	{r4, lr}
 5139              	.LCFI53:
 5140              		.cfi_restore 14
 5141              		.cfi_restore 4
 5142              		.cfi_def_cfa_offset 0
 5143              	.LVL583:
 879:fips202.c     **** }
 5144              		.loc 1 879 5 view .LVU1587
 5145 0018 FFF7FEBF 		b	keccak_inc_init
 5146              	.LVL584:
 5147              		.cfi_endproc
 5148              	.LFE40:
 5150              		.section	.text.sha3_384_inc_ctx_clone,"ax",%progbits
 5151              		.align	1
 5152              		.global	sha3_384_inc_ctx_clone
 5153              		.syntax unified
 5154              		.thumb
 5155              		.thumb_func
 5156              		.fpu softvfp
 5158              	sha3_384_inc_ctx_clone:
 5159              	.LVL585:
 5160              	.LFB41:
 881:fips202.c     **** 
 882:fips202.c     **** void sha3_384_inc_ctx_clone(sha3_384incctx *dest, const sha3_384incctx *src) {
 5161              		.loc 1 882 78 is_stmt 1 view -0
 5162              		.cfi_startproc
 5163              		@ args = 0, pretend = 0, frame = 0
 5164              		@ frame_needed = 0, uses_anonymous_args = 0
 883:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5165              		.loc 1 883 5 view .LVU1589
 882:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5166              		.loc 1 882 78 is_stmt 0 view .LVU1590
 5167 0000 38B5     		push	{r3, r4, r5, lr}
 5168              	.LCFI54:
 5169              		.cfi_def_cfa_offset 16
 5170              		.cfi_offset 3, -16
 5171              		.cfi_offset 4, -12
 5172              		.cfi_offset 5, -8
 5173              		.cfi_offset 14, -4
 882:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5174              		.loc 1 882 78 view .LVU1591
 5175 0002 0546     		mov	r5, r0
 5176              		.loc 1 883 17 view .LVU1592
 5177 0004 D020     		movs	r0, #208
 5178              	.LVL586:
 882:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5179              		.loc 1 882 78 view .LVU1593
 5180 0006 0C46     		mov	r4, r1
 5181              		.loc 1 883 17 view .LVU1594
 5182 0008 FFF7FEFF 		bl	malloc
 5183              	.LVL587:
 5184              		.loc 1 883 15 view .LVU1595
 5185 000c 2860     		str	r0, [r5]
 884:fips202.c     ****     if (dest->ctx == NULL) {
 5186              		.loc 1 884 5 is_stmt 1 view .LVU1596
 5187              		.loc 1 884 8 is_stmt 0 view .LVU1597
 5188 000e 10B9     		cbnz	r0, .L111
 885:fips202.c     ****         exit(111);
 5189              		.loc 1 885 9 is_stmt 1 view .LVU1598
 5190 0010 6F20     		movs	r0, #111
 5191 0012 FFF7FEFF 		bl	exit
 5192              	.LVL588:
 5193              	.L111:
 886:fips202.c     ****     }
 887:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKEINCCTX_BYTES);
 5194              		.loc 1 887 5 view .LVU1599
 5195 0016 2168     		ldr	r1, [r4]
 5196 0018 D022     		movs	r2, #208
 888:fips202.c     **** }
 5197              		.loc 1 888 1 is_stmt 0 view .LVU1600
 5198 001a BDE83840 		pop	{r3, r4, r5, lr}
 5199              	.LCFI55:
 5200              		.cfi_restore 14
 5201              		.cfi_restore 5
 5202              		.cfi_restore 4
 5203              		.cfi_restore 3
 5204              		.cfi_def_cfa_offset 0
 5205              	.LVL589:
 887:fips202.c     **** }
 5206              		.loc 1 887 5 view .LVU1601
 5207 001e FFF7FEBF 		b	memcpy
 5208              	.LVL590:
 5209              		.cfi_endproc
 5210              	.LFE41:
 5212              		.section	.text.sha3_384_inc_absorb,"ax",%progbits
 5213              		.align	1
 5214              		.global	sha3_384_inc_absorb
 5215              		.syntax unified
 5216              		.thumb
 5217              		.thumb_func
 5218              		.fpu softvfp
 5220              	sha3_384_inc_absorb:
 5221              	.LVL591:
 5222              	.LFB42:
 889:fips202.c     **** 
 890:fips202.c     **** void sha3_384_inc_absorb(sha3_384incctx *state, const uint8_t *input, size_t inlen) {
 5223              		.loc 1 890 85 is_stmt 1 view -0
 5224              		.cfi_startproc
 5225              		@ args = 0, pretend = 0, frame = 0
 5226              		@ frame_needed = 0, uses_anonymous_args = 0
 5227              		@ link register save eliminated.
 891:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_384_RATE, input, inlen);
 5228              		.loc 1 891 5 view .LVU1603
 890:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_384_RATE, input, inlen);
 5229              		.loc 1 890 85 is_stmt 0 view .LVU1604
 5230 0000 1346     		mov	r3, r2
 5231              		.loc 1 891 5 view .LVU1605
 5232 0002 0068     		ldr	r0, [r0]
 5233              	.LVL592:
 5234              		.loc 1 891 5 view .LVU1606
 5235 0004 0A46     		mov	r2, r1
 5236              	.LVL593:
 5237              		.loc 1 891 5 view .LVU1607
 5238 0006 6821     		movs	r1, #104
 5239              	.LVL594:
 5240              		.loc 1 891 5 view .LVU1608
 5241 0008 FFF7FEBF 		b	keccak_inc_absorb
 5242              	.LVL595:
 5243              		.loc 1 891 5 view .LVU1609
 5244              		.cfi_endproc
 5245              	.LFE42:
 5247              		.section	.text.sha3_384_inc_ctx_release,"ax",%progbits
 5248              		.align	1
 5249              		.global	sha3_384_inc_ctx_release
 5250              		.syntax unified
 5251              		.thumb
 5252              		.thumb_func
 5253              		.fpu softvfp
 5255              	sha3_384_inc_ctx_release:
 5256              	.LVL596:
 5257              	.LFB43:
 892:fips202.c     **** }
 893:fips202.c     **** 
 894:fips202.c     **** void sha3_384_inc_ctx_release(sha3_384incctx *state) {
 5258              		.loc 1 894 54 is_stmt 1 view -0
 5259              		.cfi_startproc
 5260              		@ args = 0, pretend = 0, frame = 0
 5261              		@ frame_needed = 0, uses_anonymous_args = 0
 5262              		@ link register save eliminated.
 895:fips202.c     ****     free(state->ctx);
 5263              		.loc 1 895 5 view .LVU1611
 5264 0000 0068     		ldr	r0, [r0]
 5265              	.LVL597:
 5266              		.loc 1 895 5 is_stmt 0 view .LVU1612
 5267 0002 FFF7FEBF 		b	free
 5268              	.LVL598:
 5269              		.cfi_endproc
 5270              	.LFE43:
 5272              		.section	.text.sha3_384_inc_finalize,"ax",%progbits
 5273              		.align	1
 5274              		.global	sha3_384_inc_finalize
 5275              		.syntax unified
 5276              		.thumb
 5277              		.thumb_func
 5278              		.fpu softvfp
 5280              	sha3_384_inc_finalize:
 5281              	.LVL599:
 5282              	.LFB44:
 896:fips202.c     **** }
 897:fips202.c     **** 
 898:fips202.c     **** void sha3_384_inc_finalize(uint8_t *output, sha3_384incctx *state) {
 5283              		.loc 1 898 68 is_stmt 1 view -0
 5284              		.cfi_startproc
 5285              		@ args = 0, pretend = 0, frame = 104
 5286              		@ frame_needed = 0, uses_anonymous_args = 0
 899:fips202.c     ****     uint8_t t[SHA3_384_RATE];
 5287              		.loc 1 899 5 view .LVU1614
 900:fips202.c     ****     keccak_inc_finalize(state->ctx, SHA3_384_RATE, 0x06);
 5288              		.loc 1 900 5 view .LVU1615
 898:fips202.c     ****     uint8_t t[SHA3_384_RATE];
 5289              		.loc 1 898 68 is_stmt 0 view .LVU1616
 5290 0000 30B5     		push	{r4, r5, lr}
 5291              	.LCFI56:
 5292              		.cfi_def_cfa_offset 12
 5293              		.cfi_offset 4, -12
 5294              		.cfi_offset 5, -8
 5295              		.cfi_offset 14, -4
 5296 0002 0D46     		mov	r5, r1
 5297 0004 9BB0     		sub	sp, sp, #108
 5298              	.LCFI57:
 5299              		.cfi_def_cfa_offset 120
 898:fips202.c     ****     uint8_t t[SHA3_384_RATE];
 5300              		.loc 1 898 68 view .LVU1617
 5301 0006 0446     		mov	r4, r0
 5302              		.loc 1 900 5 view .LVU1618
 5303 0008 0622     		movs	r2, #6
 5304 000a 2868     		ldr	r0, [r5]
 5305              	.LVL600:
 5306              		.loc 1 900 5 view .LVU1619
 5307 000c 6821     		movs	r1, #104
 5308              	.LVL601:
 5309              		.loc 1 900 5 view .LVU1620
 5310 000e FFF7FEFF 		bl	keccak_inc_finalize
 5311              	.LVL602:
 901:fips202.c     **** 
 902:fips202.c     ****     keccak_squeezeblocks(t, 1, state->ctx, SHA3_384_RATE);
 5312              		.loc 1 902 5 is_stmt 1 view .LVU1621
 5313 0012 2A68     		ldr	r2, [r5]
 5314 0014 6823     		movs	r3, #104
 5315 0016 0121     		movs	r1, #1
 5316 0018 6846     		mov	r0, sp
 5317 001a FFF7FEFF 		bl	keccak_squeezeblocks
 5318              	.LVL603:
 903:fips202.c     **** 
 904:fips202.c     ****     sha3_384_inc_ctx_release(state);
 5319              		.loc 1 904 5 view .LVU1622
 5320 001e 2846     		mov	r0, r5
 5321 0020 FFF7FEFF 		bl	sha3_384_inc_ctx_release
 5322              	.LVL604:
 905:fips202.c     **** 
 906:fips202.c     ****     for (size_t i = 0; i < 48; i++) {
 5323              		.loc 1 906 5 view .LVU1623
 5324              	.LBB27:
 5325              		.loc 1 906 10 view .LVU1624
 5326              		.loc 1 906 24 view .LVU1625
 907:fips202.c     ****         output[i] = t[i];
 5327              		.loc 1 907 19 is_stmt 0 view .LVU1626
 5328 0024 0CAD     		add	r5, sp, #48
 5329              	.LVL605:
 5330              		.loc 1 907 19 view .LVU1627
 5331 0026 6A46     		mov	r2, sp
 5332 0028 2346     		mov	r3, r4
 5333              	.LVL606:
 5334              	.L115:
 5335              		.loc 1 907 19 view .LVU1628
 5336 002a 1446     		mov	r4, r2
 5337 002c 03CC     		ldmia	r4!, {r0, r1}
 5338 002e AC42     		cmp	r4, r5
 5339 0030 1860     		str	r0, [r3]	@ unaligned
 5340 0032 5960     		str	r1, [r3, #4]	@ unaligned
 5341 0034 2246     		mov	r2, r4
 5342 0036 03F10803 		add	r3, r3, #8
 5343 003a F6D1     		bne	.L115
 5344              	.LBE27:
 908:fips202.c     ****     }
 909:fips202.c     **** }
 5345              		.loc 1 909 1 view .LVU1629
 5346 003c 1BB0     		add	sp, sp, #108
 5347              	.LCFI58:
 5348              		.cfi_def_cfa_offset 12
 5349              		@ sp needed
 5350 003e 30BD     		pop	{r4, r5, pc}
 5351              		.cfi_endproc
 5352              	.LFE44:
 5354              		.section	.text.sha3_384,"ax",%progbits
 5355              		.align	1
 5356              		.global	sha3_384
 5357              		.syntax unified
 5358              		.thumb
 5359              		.thumb_func
 5360              		.fpu softvfp
 5362              	sha3_384:
 5363              	.LVL607:
 5364              	.LFB45:
 910:fips202.c     **** 
 911:fips202.c     **** /*************************************************
 912:fips202.c     ****  * Name:        sha3_384
 913:fips202.c     ****  *
 914:fips202.c     ****  * Description: SHA3-256 with non-incremental API
 915:fips202.c     ****  *
 916:fips202.c     ****  * Arguments:   - uint8_t *output:      pointer to output
 917:fips202.c     ****  *              - const uint8_t *input: pointer to input
 918:fips202.c     ****  *              - size_t inlen:   length of input in bytes
 919:fips202.c     ****  **************************************************/
 920:fips202.c     **** void sha3_384(uint8_t *output, const uint8_t *input, size_t inlen) {
 5365              		.loc 1 920 68 is_stmt 1 view -0
 5366              		.cfi_startproc
 5367              		@ args = 0, pretend = 0, frame = 304
 5368              		@ frame_needed = 0, uses_anonymous_args = 0
 921:fips202.c     ****     uint64_t s[25];
 5369              		.loc 1 921 5 view .LVU1631
 922:fips202.c     ****     uint8_t t[SHA3_384_RATE];
 5370              		.loc 1 922 5 view .LVU1632
 923:fips202.c     **** 
 924:fips202.c     ****     /* Absorb input */
 925:fips202.c     ****     keccak_absorb(s, SHA3_384_RATE, input, inlen, 0x06);
 5371              		.loc 1 925 5 view .LVU1633
 920:fips202.c     ****     uint64_t s[25];
 5372              		.loc 1 920 68 is_stmt 0 view .LVU1634
 5373 0000 30B5     		push	{r4, r5, lr}
 5374              	.LCFI59:
 5375              		.cfi_def_cfa_offset 12
 5376              		.cfi_offset 4, -12
 5377              		.cfi_offset 5, -8
 5378              		.cfi_offset 14, -4
 5379 0002 CFB0     		sub	sp, sp, #316
 5380              	.LCFI60:
 5381              		.cfi_def_cfa_offset 328
 920:fips202.c     ****     uint64_t s[25];
 5382              		.loc 1 920 68 view .LVU1635
 5383 0004 1346     		mov	r3, r2
 5384              		.loc 1 925 5 view .LVU1636
 5385 0006 0622     		movs	r2, #6
 5386              	.LVL608:
 920:fips202.c     ****     uint64_t s[25];
 5387              		.loc 1 920 68 view .LVU1637
 5388 0008 0446     		mov	r4, r0
 5389              		.loc 1 925 5 view .LVU1638
 5390 000a 0092     		str	r2, [sp]
 5391 000c 1CA8     		add	r0, sp, #112
 5392              	.LVL609:
 5393              		.loc 1 925 5 view .LVU1639
 5394 000e 0A46     		mov	r2, r1
 5395 0010 6821     		movs	r1, #104
 5396              	.LVL610:
 5397              		.loc 1 925 5 view .LVU1640
 5398 0012 FFF7FEFF 		bl	keccak_absorb
 5399              	.LVL611:
 926:fips202.c     **** 
 927:fips202.c     ****     /* Squeeze output */
 928:fips202.c     ****     keccak_squeezeblocks(t, 1, s, SHA3_384_RATE);
 5400              		.loc 1 928 5 is_stmt 1 view .LVU1641
 5401 0016 6823     		movs	r3, #104
 5402 0018 1CAA     		add	r2, sp, #112
 5403 001a 0121     		movs	r1, #1
 5404 001c 02A8     		add	r0, sp, #8
 5405 001e FFF7FEFF 		bl	keccak_squeezeblocks
 5406              	.LVL612:
 929:fips202.c     **** 
 930:fips202.c     ****     for (size_t i = 0; i < 48; i++) {
 5407              		.loc 1 930 5 view .LVU1642
 5408              	.LBB28:
 5409              		.loc 1 930 10 view .LVU1643
 5410              		.loc 1 930 24 view .LVU1644
 931:fips202.c     ****         output[i] = t[i];
 5411              		.loc 1 931 19 is_stmt 0 view .LVU1645
 5412 0022 0EAD     		add	r5, sp, #56
 5413 0024 02AA     		add	r2, sp, #8
 5414 0026 2346     		mov	r3, r4
 5415              	.LVL613:
 5416              	.L118:
 5417              		.loc 1 931 19 view .LVU1646
 5418 0028 1446     		mov	r4, r2
 5419 002a 03CC     		ldmia	r4!, {r0, r1}
 5420 002c AC42     		cmp	r4, r5
 5421 002e 1860     		str	r0, [r3]	@ unaligned
 5422 0030 5960     		str	r1, [r3, #4]	@ unaligned
 5423 0032 2246     		mov	r2, r4
 5424 0034 03F10803 		add	r3, r3, #8
 5425 0038 F6D1     		bne	.L118
 5426              	.LBE28:
 932:fips202.c     ****     }
 933:fips202.c     **** }
 5427              		.loc 1 933 1 view .LVU1647
 5428 003a 4FB0     		add	sp, sp, #316
 5429              	.LCFI61:
 5430              		.cfi_def_cfa_offset 12
 5431              		@ sp needed
 5432 003c 30BD     		pop	{r4, r5, pc}
 5433              		.cfi_endproc
 5434              	.LFE45:
 5436              		.section	.text.sha3_512_inc_init,"ax",%progbits
 5437              		.align	1
 5438              		.global	sha3_512_inc_init
 5439              		.syntax unified
 5440              		.thumb
 5441              		.thumb_func
 5442              		.fpu softvfp
 5444              	sha3_512_inc_init:
 5445              	.LVL614:
 5446              	.LFB46:
 934:fips202.c     **** 
 935:fips202.c     **** void sha3_512_inc_init(sha3_512incctx *state) {
 5447              		.loc 1 935 47 is_stmt 1 view -0
 5448              		.cfi_startproc
 5449              		@ args = 0, pretend = 0, frame = 0
 5450              		@ frame_needed = 0, uses_anonymous_args = 0
 936:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5451              		.loc 1 936 5 view .LVU1649
 935:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5452              		.loc 1 935 47 is_stmt 0 view .LVU1650
 5453 0000 10B5     		push	{r4, lr}
 5454              	.LCFI62:
 5455              		.cfi_def_cfa_offset 8
 5456              		.cfi_offset 4, -8
 5457              		.cfi_offset 14, -4
 935:fips202.c     ****     state->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5458              		.loc 1 935 47 view .LVU1651
 5459 0002 0446     		mov	r4, r0
 5460              		.loc 1 936 18 view .LVU1652
 5461 0004 D020     		movs	r0, #208
 5462              	.LVL615:
 5463              		.loc 1 936 18 view .LVU1653
 5464 0006 FFF7FEFF 		bl	malloc
 5465              	.LVL616:
 5466              		.loc 1 936 16 view .LVU1654
 5467 000a 2060     		str	r0, [r4]
 937:fips202.c     ****     if (state->ctx == NULL) {
 5468              		.loc 1 937 5 is_stmt 1 view .LVU1655
 5469              		.loc 1 937 8 is_stmt 0 view .LVU1656
 5470 000c 10B9     		cbnz	r0, .L121
 938:fips202.c     ****         exit(111);
 5471              		.loc 1 938 9 is_stmt 1 view .LVU1657
 5472 000e 6F20     		movs	r0, #111
 5473 0010 FFF7FEFF 		bl	exit
 5474              	.LVL617:
 5475              	.L121:
 939:fips202.c     ****     }
 940:fips202.c     ****     keccak_inc_init(state->ctx);
 5476              		.loc 1 940 5 view .LVU1658
 941:fips202.c     **** }
 5477              		.loc 1 941 1 is_stmt 0 view .LVU1659
 5478 0014 BDE81040 		pop	{r4, lr}
 5479              	.LCFI63:
 5480              		.cfi_restore 14
 5481              		.cfi_restore 4
 5482              		.cfi_def_cfa_offset 0
 5483              	.LVL618:
 940:fips202.c     **** }
 5484              		.loc 1 940 5 view .LVU1660
 5485 0018 FFF7FEBF 		b	keccak_inc_init
 5486              	.LVL619:
 5487              		.cfi_endproc
 5488              	.LFE46:
 5490              		.section	.text.sha3_512_inc_ctx_clone,"ax",%progbits
 5491              		.align	1
 5492              		.global	sha3_512_inc_ctx_clone
 5493              		.syntax unified
 5494              		.thumb
 5495              		.thumb_func
 5496              		.fpu softvfp
 5498              	sha3_512_inc_ctx_clone:
 5499              	.LVL620:
 5500              	.LFB47:
 942:fips202.c     **** 
 943:fips202.c     **** void sha3_512_inc_ctx_clone(sha3_512incctx *dest, const sha3_512incctx *src) {
 5501              		.loc 1 943 78 is_stmt 1 view -0
 5502              		.cfi_startproc
 5503              		@ args = 0, pretend = 0, frame = 0
 5504              		@ frame_needed = 0, uses_anonymous_args = 0
 944:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5505              		.loc 1 944 5 view .LVU1662
 943:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5506              		.loc 1 943 78 is_stmt 0 view .LVU1663
 5507 0000 38B5     		push	{r3, r4, r5, lr}
 5508              	.LCFI64:
 5509              		.cfi_def_cfa_offset 16
 5510              		.cfi_offset 3, -16
 5511              		.cfi_offset 4, -12
 5512              		.cfi_offset 5, -8
 5513              		.cfi_offset 14, -4
 943:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5514              		.loc 1 943 78 view .LVU1664
 5515 0002 0546     		mov	r5, r0
 5516              		.loc 1 944 17 view .LVU1665
 5517 0004 D020     		movs	r0, #208
 5518              	.LVL621:
 943:fips202.c     ****     dest->ctx = malloc(PQC_SHAKEINCCTX_BYTES);
 5519              		.loc 1 943 78 view .LVU1666
 5520 0006 0C46     		mov	r4, r1
 5521              		.loc 1 944 17 view .LVU1667
 5522 0008 FFF7FEFF 		bl	malloc
 5523              	.LVL622:
 5524              		.loc 1 944 15 view .LVU1668
 5525 000c 2860     		str	r0, [r5]
 945:fips202.c     ****     if (dest->ctx == NULL) {
 5526              		.loc 1 945 5 is_stmt 1 view .LVU1669
 5527              		.loc 1 945 8 is_stmt 0 view .LVU1670
 5528 000e 10B9     		cbnz	r0, .L123
 946:fips202.c     ****         exit(111);
 5529              		.loc 1 946 9 is_stmt 1 view .LVU1671
 5530 0010 6F20     		movs	r0, #111
 5531 0012 FFF7FEFF 		bl	exit
 5532              	.LVL623:
 5533              	.L123:
 947:fips202.c     ****     }
 948:fips202.c     ****     memcpy(dest->ctx, src->ctx, PQC_SHAKEINCCTX_BYTES);
 5534              		.loc 1 948 5 view .LVU1672
 5535 0016 2168     		ldr	r1, [r4]
 5536 0018 D022     		movs	r2, #208
 949:fips202.c     **** }
 5537              		.loc 1 949 1 is_stmt 0 view .LVU1673
 5538 001a BDE83840 		pop	{r3, r4, r5, lr}
 5539              	.LCFI65:
 5540              		.cfi_restore 14
 5541              		.cfi_restore 5
 5542              		.cfi_restore 4
 5543              		.cfi_restore 3
 5544              		.cfi_def_cfa_offset 0
 5545              	.LVL624:
 948:fips202.c     **** }
 5546              		.loc 1 948 5 view .LVU1674
 5547 001e FFF7FEBF 		b	memcpy
 5548              	.LVL625:
 5549              		.cfi_endproc
 5550              	.LFE47:
 5552              		.section	.text.sha3_512_inc_absorb,"ax",%progbits
 5553              		.align	1
 5554              		.global	sha3_512_inc_absorb
 5555              		.syntax unified
 5556              		.thumb
 5557              		.thumb_func
 5558              		.fpu softvfp
 5560              	sha3_512_inc_absorb:
 5561              	.LVL626:
 5562              	.LFB48:
 950:fips202.c     **** 
 951:fips202.c     **** void sha3_512_inc_absorb(sha3_512incctx *state, const uint8_t *input, size_t inlen) {
 5563              		.loc 1 951 85 is_stmt 1 view -0
 5564              		.cfi_startproc
 5565              		@ args = 0, pretend = 0, frame = 0
 5566              		@ frame_needed = 0, uses_anonymous_args = 0
 5567              		@ link register save eliminated.
 952:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_512_RATE, input, inlen);
 5568              		.loc 1 952 5 view .LVU1676
 951:fips202.c     ****     keccak_inc_absorb(state->ctx, SHA3_512_RATE, input, inlen);
 5569              		.loc 1 951 85 is_stmt 0 view .LVU1677
 5570 0000 1346     		mov	r3, r2
 5571              		.loc 1 952 5 view .LVU1678
 5572 0002 0068     		ldr	r0, [r0]
 5573              	.LVL627:
 5574              		.loc 1 952 5 view .LVU1679
 5575 0004 0A46     		mov	r2, r1
 5576              	.LVL628:
 5577              		.loc 1 952 5 view .LVU1680
 5578 0006 4821     		movs	r1, #72
 5579              	.LVL629:
 5580              		.loc 1 952 5 view .LVU1681
 5581 0008 FFF7FEBF 		b	keccak_inc_absorb
 5582              	.LVL630:
 5583              		.loc 1 952 5 view .LVU1682
 5584              		.cfi_endproc
 5585              	.LFE48:
 5587              		.section	.text.sha3_512_inc_ctx_release,"ax",%progbits
 5588              		.align	1
 5589              		.global	sha3_512_inc_ctx_release
 5590              		.syntax unified
 5591              		.thumb
 5592              		.thumb_func
 5593              		.fpu softvfp
 5595              	sha3_512_inc_ctx_release:
 5596              	.LVL631:
 5597              	.LFB49:
 953:fips202.c     **** }
 954:fips202.c     **** 
 955:fips202.c     **** void sha3_512_inc_ctx_release(sha3_512incctx *state) {
 5598              		.loc 1 955 54 is_stmt 1 view -0
 5599              		.cfi_startproc
 5600              		@ args = 0, pretend = 0, frame = 0
 5601              		@ frame_needed = 0, uses_anonymous_args = 0
 5602              		@ link register save eliminated.
 956:fips202.c     ****     free(state->ctx);
 5603              		.loc 1 956 5 view .LVU1684
 5604 0000 0068     		ldr	r0, [r0]
 5605              	.LVL632:
 5606              		.loc 1 956 5 is_stmt 0 view .LVU1685
 5607 0002 FFF7FEBF 		b	free
 5608              	.LVL633:
 5609              		.cfi_endproc
 5610              	.LFE49:
 5612              		.section	.text.sha3_512_inc_finalize,"ax",%progbits
 5613              		.align	1
 5614              		.global	sha3_512_inc_finalize
 5615              		.syntax unified
 5616              		.thumb
 5617              		.thumb_func
 5618              		.fpu softvfp
 5620              	sha3_512_inc_finalize:
 5621              	.LVL634:
 5622              	.LFB50:
 957:fips202.c     **** }
 958:fips202.c     **** 
 959:fips202.c     **** void sha3_512_inc_finalize(uint8_t *output, sha3_512incctx *state) {
 5623              		.loc 1 959 68 is_stmt 1 view -0
 5624              		.cfi_startproc
 5625              		@ args = 0, pretend = 0, frame = 72
 5626              		@ frame_needed = 0, uses_anonymous_args = 0
 960:fips202.c     ****     uint8_t t[SHA3_512_RATE];
 5627              		.loc 1 960 5 view .LVU1687
 961:fips202.c     ****     keccak_inc_finalize(state->ctx, SHA3_512_RATE, 0x06);
 5628              		.loc 1 961 5 view .LVU1688
 959:fips202.c     ****     uint8_t t[SHA3_512_RATE];
 5629              		.loc 1 959 68 is_stmt 0 view .LVU1689
 5630 0000 30B5     		push	{r4, r5, lr}
 5631              	.LCFI66:
 5632              		.cfi_def_cfa_offset 12
 5633              		.cfi_offset 4, -12
 5634              		.cfi_offset 5, -8
 5635              		.cfi_offset 14, -4
 5636 0002 0D46     		mov	r5, r1
 5637 0004 93B0     		sub	sp, sp, #76
 5638              	.LCFI67:
 5639              		.cfi_def_cfa_offset 88
 959:fips202.c     ****     uint8_t t[SHA3_512_RATE];
 5640              		.loc 1 959 68 view .LVU1690
 5641 0006 0446     		mov	r4, r0
 5642              		.loc 1 961 5 view .LVU1691
 5643 0008 0622     		movs	r2, #6
 5644 000a 2868     		ldr	r0, [r5]
 5645              	.LVL635:
 5646              		.loc 1 961 5 view .LVU1692
 5647 000c 4821     		movs	r1, #72
 5648              	.LVL636:
 5649              		.loc 1 961 5 view .LVU1693
 5650 000e FFF7FEFF 		bl	keccak_inc_finalize
 5651              	.LVL637:
 962:fips202.c     **** 
 963:fips202.c     ****     keccak_squeezeblocks(t, 1, state->ctx, SHA3_512_RATE);
 5652              		.loc 1 963 5 is_stmt 1 view .LVU1694
 5653 0012 2A68     		ldr	r2, [r5]
 5654 0014 4823     		movs	r3, #72
 5655 0016 0121     		movs	r1, #1
 5656 0018 6846     		mov	r0, sp
 5657 001a FFF7FEFF 		bl	keccak_squeezeblocks
 5658              	.LVL638:
 964:fips202.c     **** 
 965:fips202.c     ****     sha3_512_inc_ctx_release(state);
 5659              		.loc 1 965 5 view .LVU1695
 5660 001e 2846     		mov	r0, r5
 5661 0020 FFF7FEFF 		bl	sha3_512_inc_ctx_release
 5662              	.LVL639:
 966:fips202.c     **** 
 967:fips202.c     ****     for (size_t i = 0; i < 64; i++) {
 5663              		.loc 1 967 5 view .LVU1696
 5664              	.LBB29:
 5665              		.loc 1 967 10 view .LVU1697
 5666              		.loc 1 967 24 view .LVU1698
 968:fips202.c     ****         output[i] = t[i];
 5667              		.loc 1 968 19 is_stmt 0 view .LVU1699
 5668 0024 10AD     		add	r5, sp, #64
 5669              	.LVL640:
 5670              		.loc 1 968 19 view .LVU1700
 5671 0026 6A46     		mov	r2, sp
 5672 0028 2346     		mov	r3, r4
 5673              	.LVL641:
 5674              	.L127:
 5675              		.loc 1 968 19 view .LVU1701
 5676 002a 1446     		mov	r4, r2
 5677 002c 03CC     		ldmia	r4!, {r0, r1}
 5678 002e AC42     		cmp	r4, r5
 5679 0030 1860     		str	r0, [r3]	@ unaligned
 5680 0032 5960     		str	r1, [r3, #4]	@ unaligned
 5681 0034 2246     		mov	r2, r4
 5682 0036 03F10803 		add	r3, r3, #8
 5683 003a F6D1     		bne	.L127
 5684              	.LBE29:
 969:fips202.c     ****     }
 970:fips202.c     **** }
 5685              		.loc 1 970 1 view .LVU1702
 5686 003c 13B0     		add	sp, sp, #76
 5687              	.LCFI68:
 5688              		.cfi_def_cfa_offset 12
 5689              		@ sp needed
 5690 003e 30BD     		pop	{r4, r5, pc}
 5691              		.cfi_endproc
 5692              	.LFE50:
 5694              		.section	.text.sha3_512,"ax",%progbits
 5695              		.align	1
 5696              		.global	sha3_512
 5697              		.syntax unified
 5698              		.thumb
 5699              		.thumb_func
 5700              		.fpu softvfp
 5702              	sha3_512:
 5703              	.LVL642:
 5704              	.LFB51:
 971:fips202.c     **** 
 972:fips202.c     **** /*************************************************
 973:fips202.c     ****  * Name:        sha3_512
 974:fips202.c     ****  *
 975:fips202.c     ****  * Description: SHA3-512 with non-incremental API
 976:fips202.c     ****  *
 977:fips202.c     ****  * Arguments:   - uint8_t *output:      pointer to output
 978:fips202.c     ****  *              - const uint8_t *input: pointer to input
 979:fips202.c     ****  *              - size_t inlen:   length of input in bytes
 980:fips202.c     ****  **************************************************/
 981:fips202.c     **** void sha3_512(uint8_t *output, const uint8_t *input, size_t inlen) {
 5705              		.loc 1 981 68 is_stmt 1 view -0
 5706              		.cfi_startproc
 5707              		@ args = 0, pretend = 0, frame = 272
 5708              		@ frame_needed = 0, uses_anonymous_args = 0
 982:fips202.c     ****     uint64_t s[25];
 5709              		.loc 1 982 5 view .LVU1704
 983:fips202.c     ****     uint8_t t[SHA3_512_RATE];
 5710              		.loc 1 983 5 view .LVU1705
 984:fips202.c     **** 
 985:fips202.c     ****     /* Absorb input */
 986:fips202.c     ****     keccak_absorb(s, SHA3_512_RATE, input, inlen, 0x06);
 5711              		.loc 1 986 5 view .LVU1706
 981:fips202.c     ****     uint64_t s[25];
 5712              		.loc 1 981 68 is_stmt 0 view .LVU1707
 5713 0000 30B5     		push	{r4, r5, lr}
 5714              	.LCFI69:
 5715              		.cfi_def_cfa_offset 12
 5716              		.cfi_offset 4, -12
 5717              		.cfi_offset 5, -8
 5718              		.cfi_offset 14, -4
 5719 0002 C7B0     		sub	sp, sp, #284
 5720              	.LCFI70:
 5721              		.cfi_def_cfa_offset 296
 981:fips202.c     ****     uint64_t s[25];
 5722              		.loc 1 981 68 view .LVU1708
 5723 0004 1346     		mov	r3, r2
 5724              		.loc 1 986 5 view .LVU1709
 5725 0006 0622     		movs	r2, #6
 5726              	.LVL643:
 981:fips202.c     ****     uint64_t s[25];
 5727              		.loc 1 981 68 view .LVU1710
 5728 0008 0446     		mov	r4, r0
 5729              		.loc 1 986 5 view .LVU1711
 5730 000a 0092     		str	r2, [sp]
 5731 000c 14A8     		add	r0, sp, #80
 5732              	.LVL644:
 5733              		.loc 1 986 5 view .LVU1712
 5734 000e 0A46     		mov	r2, r1
 5735 0010 4821     		movs	r1, #72
 5736              	.LVL645:
 5737              		.loc 1 986 5 view .LVU1713
 5738 0012 FFF7FEFF 		bl	keccak_absorb
 5739              	.LVL646:
 987:fips202.c     **** 
 988:fips202.c     ****     /* Squeeze output */
 989:fips202.c     ****     keccak_squeezeblocks(t, 1, s, SHA3_512_RATE);
 5740              		.loc 1 989 5 is_stmt 1 view .LVU1714
 5741 0016 4823     		movs	r3, #72
 5742 0018 14AA     		add	r2, sp, #80
 5743 001a 0121     		movs	r1, #1
 5744 001c 02A8     		add	r0, sp, #8
 5745 001e FFF7FEFF 		bl	keccak_squeezeblocks
 5746              	.LVL647:
 990:fips202.c     **** 
 991:fips202.c     ****     for (size_t i = 0; i < 64; i++) {
 5747              		.loc 1 991 5 view .LVU1715
 5748              	.LBB30:
 5749              		.loc 1 991 10 view .LVU1716
 5750              		.loc 1 991 24 view .LVU1717
 992:fips202.c     ****         output[i] = t[i];
 5751              		.loc 1 992 19 is_stmt 0 view .LVU1718
 5752 0022 12AD     		add	r5, sp, #72
 5753 0024 02AA     		add	r2, sp, #8
 5754 0026 2346     		mov	r3, r4
 5755              	.LVL648:
 5756              	.L130:
 5757              		.loc 1 992 19 view .LVU1719
 5758 0028 1446     		mov	r4, r2
 5759 002a 03CC     		ldmia	r4!, {r0, r1}
 5760 002c AC42     		cmp	r4, r5
 5761 002e 1860     		str	r0, [r3]	@ unaligned
 5762 0030 5960     		str	r1, [r3, #4]	@ unaligned
 5763 0032 2246     		mov	r2, r4
 5764 0034 03F10803 		add	r3, r3, #8
 5765 0038 F6D1     		bne	.L130
 5766              	.LBE30:
 993:fips202.c     ****     }
 994:fips202.c     **** }
 5767              		.loc 1 994 1 view .LVU1720
 5768 003a 47B0     		add	sp, sp, #284
 5769              	.LCFI71:
 5770              		.cfi_def_cfa_offset 12
 5771              		@ sp needed
 5772 003c 30BD     		pop	{r4, r5, pc}
 5773              		.cfi_endproc
 5774              	.LFE51:
 5776              		.section	.rodata
 5777              		.align	3
 5778              		.set	.LANCHOR0,. + 0
 5781              	KeccakF_RoundConstants:
 5782 0000 01000000 		.word	1
 5783 0004 00000000 		.word	0
 5784 0008 82800000 		.word	32898
 5785 000c 00000000 		.word	0
 5786 0010 8A800000 		.word	32906
 5787 0014 00000080 		.word	-2147483648
 5788 0018 00800080 		.word	-2147450880
 5789 001c 00000080 		.word	-2147483648
 5790 0020 8B800000 		.word	32907
 5791 0024 00000000 		.word	0
 5792 0028 01000080 		.word	-2147483647
 5793 002c 00000000 		.word	0
 5794 0030 81800080 		.word	-2147450751
 5795 0034 00000080 		.word	-2147483648
 5796 0038 09800000 		.word	32777
 5797 003c 00000080 		.word	-2147483648
 5798 0040 8A000000 		.word	138
 5799 0044 00000000 		.word	0
 5800 0048 88000000 		.word	136
 5801 004c 00000000 		.word	0
 5802 0050 09800080 		.word	-2147450871
 5803 0054 00000000 		.word	0
 5804 0058 0A000080 		.word	-2147483638
 5805 005c 00000000 		.word	0
 5806 0060 8B800080 		.word	-2147450741
 5807 0064 00000000 		.word	0
 5808 0068 8B000000 		.word	139
 5809 006c 00000080 		.word	-2147483648
 5810 0070 89800000 		.word	32905
 5811 0074 00000080 		.word	-2147483648
 5812 0078 03800000 		.word	32771
 5813 007c 00000080 		.word	-2147483648
 5814 0080 02800000 		.word	32770
 5815 0084 00000080 		.word	-2147483648
 5816 0088 80000000 		.word	128
 5817 008c 00000080 		.word	-2147483648
 5818 0090 0A800000 		.word	32778
 5819 0094 00000000 		.word	0
 5820 0098 0A000080 		.word	-2147483638
 5821 009c 00000080 		.word	-2147483648
 5822 00a0 81800080 		.word	-2147450751
 5823 00a4 00000080 		.word	-2147483648
 5824 00a8 80800000 		.word	32896
 5825 00ac 00000080 		.word	-2147483648
 5826 00b0 01000080 		.word	-2147483647
 5827 00b4 00000000 		.word	0
 5828 00b8 08800080 		.word	-2147450872
 5829 00bc 00000080 		.word	-2147483648
 5830              		.text
 5831              	.Letext0:
 5832              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\lib\\gcc\\arm-none-eabi\\
 5833              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 5834              		.file 4 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 5835              		.file 5 "fips202.h"
 5836              		.file 6 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 5837              		.file 7 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 fips202.c
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:16     .text.load64:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:23     .text.load64:00000000 load64
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:88     .text.KeccakF1600_StatePermute:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:94     .text.KeccakF1600_StatePermute:00000000 KeccakF1600_StatePermute
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:362    .text.KeccakF1600_StatePermute:000000f8 $d
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:368    .text.KeccakF1600_StatePermute:000000fc $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2678   .text.KeccakF1600_StatePermute:00000e58 $d
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2683   .text.keccak_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2689   .text.keccak_absorb:00000000 keccak_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2861   .text.keccak_squeezeblocks:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2867   .text.keccak_squeezeblocks:00000000 keccak_squeezeblocks
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:2994   .text.keccak_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3000   .text.keccak_inc_init:00000000 keccak_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3036   .text.keccak_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3042   .text.keccak_inc_absorb:00000000 keccak_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3211   .text.keccak_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3217   .text.keccak_inc_finalize:00000000 keccak_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3289   .text.keccak_inc_squeeze:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3295   .text.keccak_inc_squeeze:00000000 keccak_inc_squeeze
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3462   .text.shake128_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3469   .text.shake128_inc_init:00000000 shake128_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3516   .text.shake128_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3523   .text.shake128_inc_absorb:00000000 shake128_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3551   .text.shake128_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3558   .text.shake128_inc_finalize:00000000 shake128_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3578   .text.shake128_inc_squeeze:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3585   .text.shake128_inc_squeeze:00000000 shake128_inc_squeeze
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3605   .text.shake128_inc_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3612   .text.shake128_inc_ctx_clone:00000000 shake128_inc_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3667   .text.shake128_inc_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3674   .text.shake128_inc_ctx_release:00000000 shake128_inc_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3692   .text.shake256_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3699   .text.shake256_inc_init:00000000 shake256_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3746   .text.shake256_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3753   .text.shake256_inc_absorb:00000000 shake256_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3781   .text.shake256_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3788   .text.shake256_inc_finalize:00000000 shake256_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3808   .text.shake256_inc_squeeze:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3815   .text.shake256_inc_squeeze:00000000 shake256_inc_squeeze
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3835   .text.shake256_inc_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3842   .text.shake256_inc_ctx_clone:00000000 shake256_inc_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3897   .text.shake256_inc_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3904   .text.shake256_inc_ctx_release:00000000 shake256_inc_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3922   .text.shake128_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3929   .text.shake128_absorb:00000000 shake128_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3986   .text.shake128_squeezeblocks:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:3993   .text.shake128_squeezeblocks:00000000 shake128_squeezeblocks
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4013   .text.shake128_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4020   .text.shake128_ctx_clone:00000000 shake128_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4075   .text.shake128_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4082   .text.shake128_ctx_release:00000000 shake128_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4100   .text.shake256_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4107   .text.shake256_absorb:00000000 shake256_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4164   .text.shake256_absorb1:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4171   .text.shake256_absorb1:00000000 shake256_absorb1
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4341   .text.shake256_squeezeblocks:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4348   .text.shake256_squeezeblocks:00000000 shake256_squeezeblocks
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4368   .text.shake256_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4375   .text.shake256_ctx_clone:00000000 shake256_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4430   .text.shake256_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4437   .text.shake256_ctx_release:00000000 shake256_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4455   .text.shake128:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4462   .text.shake128:00000000 shake128
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4555   .text.shake256:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4562   .text.shake256:00000000 shake256
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4655   .text.shake2561:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4662   .text.shake2561:00000000 shake2561
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4757   .text.sha3_256_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4764   .text.sha3_256_inc_init:00000000 sha3_256_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4811   .text.sha3_256_inc_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4818   .text.sha3_256_inc_ctx_clone:00000000 sha3_256_inc_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4873   .text.sha3_256_inc_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4880   .text.sha3_256_inc_ctx_release:00000000 sha3_256_inc_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4898   .text.sha3_256_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4905   .text.sha3_256_inc_absorb:00000000 sha3_256_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4933   .text.sha3_256_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:4940   .text.sha3_256_inc_finalize:00000000 sha3_256_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5015   .text.sha3_256:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5022   .text.sha3_256:00000000 sha3_256
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5097   .text.sha3_384_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5104   .text.sha3_384_inc_init:00000000 sha3_384_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5151   .text.sha3_384_inc_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5158   .text.sha3_384_inc_ctx_clone:00000000 sha3_384_inc_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5213   .text.sha3_384_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5220   .text.sha3_384_inc_absorb:00000000 sha3_384_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5248   .text.sha3_384_inc_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5255   .text.sha3_384_inc_ctx_release:00000000 sha3_384_inc_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5273   .text.sha3_384_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5280   .text.sha3_384_inc_finalize:00000000 sha3_384_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5355   .text.sha3_384:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5362   .text.sha3_384:00000000 sha3_384
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5437   .text.sha3_512_inc_init:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5444   .text.sha3_512_inc_init:00000000 sha3_512_inc_init
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5491   .text.sha3_512_inc_ctx_clone:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5498   .text.sha3_512_inc_ctx_clone:00000000 sha3_512_inc_ctx_clone
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5553   .text.sha3_512_inc_absorb:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5560   .text.sha3_512_inc_absorb:00000000 sha3_512_inc_absorb
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5588   .text.sha3_512_inc_ctx_release:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5595   .text.sha3_512_inc_ctx_release:00000000 sha3_512_inc_ctx_release
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5613   .text.sha3_512_inc_finalize:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5620   .text.sha3_512_inc_finalize:00000000 sha3_512_inc_finalize
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5695   .text.sha3_512:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5702   .text.sha3_512:00000000 sha3_512
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5777   .rodata:00000000 $d
C:\Users\dudixiao\AppData\Local\Temp\ccSbYObr.s:5781   .rodata:00000000 KeccakF_RoundConstants

UNDEFINED SYMBOLS
memset
memcpy
malloc
exit
free
