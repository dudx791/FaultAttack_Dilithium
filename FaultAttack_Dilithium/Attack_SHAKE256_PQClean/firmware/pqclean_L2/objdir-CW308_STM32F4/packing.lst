   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"packing.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_pack_pk,"ax",%progbits
  16              		.align	1
  17              		.global	PQCLEAN_DILITHIUM2_CLEAN_pack_pk
  18              		.arch armv7e-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	PQCLEAN_DILITHIUM2_CLEAN_pack_pk:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "packing.c"
   1:packing.c     **** #include "packing.h"
   2:packing.c     **** #include "params.h"
   3:packing.c     **** #include "poly.h"
   4:packing.c     **** #include "polyvec.h"
   5:packing.c     **** 
   6:packing.c     **** /*************************************************
   7:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_pack_pk
   8:packing.c     **** *
   9:packing.c     **** * Description: Bit-pack public key pk = (rho, t1).
  10:packing.c     **** *
  11:packing.c     **** * Arguments:   - uint8_t pk[]: output byte array
  12:packing.c     **** *              - const uint8_t rho[]: byte array containing rho
  13:packing.c     **** *              - const polyveck *t1: pointer to vector t1
  14:packing.c     **** **************************************************/
  15:packing.c     **** void PQCLEAN_DILITHIUM2_CLEAN_pack_pk(uint8_t pk[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_PUBLICKEYBYTES],
  16:packing.c     ****                                       const uint8_t rho[SEEDBYTES],
  17:packing.c     ****                                       const polyveck *t1) {
  28              		.loc 1 17 59 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 17 59 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 17 59 view .LVU2
  41 0002 0346     		mov	r3, r0
  18:packing.c     ****     unsigned int i;
  42              		.loc 1 18 5 is_stmt 1 view .LVU3
  19:packing.c     **** 
  20:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
  43              		.loc 1 20 5 view .LVU4
  44              	.LVL1:
  45              		.loc 1 20 17 view .LVU5
  17:packing.c     ****     unsigned int i;
  46              		.loc 1 17 59 is_stmt 0 view .LVU6
  47 0004 1546     		mov	r5, r2
  48 0006 0138     		subs	r0, r0, #1
  49              	.LVL2:
  17:packing.c     ****     unsigned int i;
  50              		.loc 1 17 59 view .LVU7
  51 0008 4A1E     		subs	r2, r1, #1
  52              	.LVL3:
  17:packing.c     ****     unsigned int i;
  53              		.loc 1 17 59 view .LVU8
  54 000a 1F31     		adds	r1, r1, #31
  55              	.LVL4:
  56              	.L2:
  21:packing.c     ****         pk[i] = rho[i];
  57              		.loc 1 21 9 is_stmt 1 discriminator 3 view .LVU9
  58              		.loc 1 21 20 is_stmt 0 discriminator 3 view .LVU10
  59 000c 12F8014F 		ldrb	r4, [r2, #1]!	@ zero_extendqisi2
  60              	.LVL5:
  61              		.loc 1 21 15 discriminator 3 view .LVU11
  62 0010 00F8014F 		strb	r4, [r0, #1]!
  20:packing.c     ****         pk[i] = rho[i];
  63              		.loc 1 20 32 is_stmt 1 discriminator 3 view .LVU12
  64              	.LVL6:
  20:packing.c     ****         pk[i] = rho[i];
  65              		.loc 1 20 17 discriminator 3 view .LVU13
  20:packing.c     ****         pk[i] = rho[i];
  66              		.loc 1 20 5 is_stmt 0 discriminator 3 view .LVU14
  67 0014 8A42     		cmp	r2, r1
  68 0016 F9D1     		bne	.L2
  69 0018 03F12006 		add	r6, r3, #32
  70 001c 03F5A464 		add	r4, r3, #1312
  71              	.LVL7:
  72              	.L3:
  22:packing.c     ****     }
  23:packing.c     ****     pk += SEEDBYTES;
  24:packing.c     **** 
  25:packing.c     ****     for (i = 0; i < K; ++i) {
  26:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(pk + i * POLYT1_PACKEDBYTES, &t1->vec[i]);
  73              		.loc 1 26 9 is_stmt 1 discriminator 3 view .LVU15
  74 0020 2946     		mov	r1, r5
  75 0022 3046     		mov	r0, r6
  25:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(pk + i * POLYT1_PACKEDBYTES, &t1->vec[i]);
  76              		.loc 1 25 5 is_stmt 0 discriminator 3 view .LVU16
  77 0024 06F5A076 		add	r6, r6, #320
  78              		.loc 1 26 9 discriminator 3 view .LVU17
  79 0028 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack
  80              	.LVL8:
  25:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(pk + i * POLYT1_PACKEDBYTES, &t1->vec[i]);
  81              		.loc 1 25 24 is_stmt 1 discriminator 3 view .LVU18
  25:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(pk + i * POLYT1_PACKEDBYTES, &t1->vec[i]);
  82              		.loc 1 25 17 discriminator 3 view .LVU19
  25:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(pk + i * POLYT1_PACKEDBYTES, &t1->vec[i]);
  83              		.loc 1 25 5 is_stmt 0 discriminator 3 view .LVU20
  84 002c A642     		cmp	r6, r4
  85 002e 05F58065 		add	r5, r5, #1024
  86 0032 F5D1     		bne	.L3
  27:packing.c     ****     }
  28:packing.c     **** }
  87              		.loc 1 28 1 view .LVU21
  88 0034 70BD     		pop	{r4, r5, r6, pc}
  89              		.cfi_endproc
  90              	.LFE0:
  92              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_unpack_pk,"ax",%progbits
  93              		.align	1
  94              		.global	PQCLEAN_DILITHIUM2_CLEAN_unpack_pk
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu softvfp
 100              	PQCLEAN_DILITHIUM2_CLEAN_unpack_pk:
 101              	.LVL9:
 102              	.LFB1:
  29:packing.c     **** 
  30:packing.c     **** /*************************************************
  31:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_unpack_pk
  32:packing.c     **** *
  33:packing.c     **** * Description: Unpack public key pk = (rho, t1).
  34:packing.c     **** *
  35:packing.c     **** * Arguments:   - const uint8_t rho[]: output byte array for rho
  36:packing.c     **** *              - const polyveck *t1: pointer to output vector t1
  37:packing.c     **** *              - uint8_t pk[]: byte array containing bit-packed pk
  38:packing.c     **** **************************************************/
  39:packing.c     **** void PQCLEAN_DILITHIUM2_CLEAN_unpack_pk(uint8_t rho[SEEDBYTES],
  40:packing.c     ****                                         polyveck *t1,
  41:packing.c     ****                                         const uint8_t pk[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_PUBLICKEYB
 103              		.loc 1 41 107 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
  42:packing.c     ****     unsigned int i;
 107              		.loc 1 42 5 view .LVU23
  43:packing.c     **** 
  44:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
 108              		.loc 1 44 5 view .LVU24
 109              		.loc 1 44 17 view .LVU25
  41:packing.c     ****     unsigned int i;
 110              		.loc 1 41 107 is_stmt 0 view .LVU26
 111 0000 70B5     		push	{r4, r5, r6, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 4, -16
 115              		.cfi_offset 5, -12
 116              		.cfi_offset 6, -8
 117              		.cfi_offset 14, -4
 118 0002 531E     		subs	r3, r2, #1
  41:packing.c     ****     unsigned int i;
 119              		.loc 1 41 107 view .LVU27
 120 0004 0D46     		mov	r5, r1
 121 0006 0138     		subs	r0, r0, #1
 122              	.LVL10:
  41:packing.c     ****     unsigned int i;
 123              		.loc 1 41 107 view .LVU28
 124 0008 02F11F01 		add	r1, r2, #31
 125              	.LVL11:
 126              	.L7:
  45:packing.c     ****         rho[i] = pk[i];
 127              		.loc 1 45 9 is_stmt 1 discriminator 3 view .LVU29
 128              		.loc 1 45 20 is_stmt 0 discriminator 3 view .LVU30
 129 000c 13F8014F 		ldrb	r4, [r3, #1]!	@ zero_extendqisi2
 130              		.loc 1 45 16 discriminator 3 view .LVU31
 131 0010 00F8014F 		strb	r4, [r0, #1]!
  44:packing.c     ****         rho[i] = pk[i];
 132              		.loc 1 44 32 is_stmt 1 discriminator 3 view .LVU32
  44:packing.c     ****         rho[i] = pk[i];
 133              		.loc 1 44 17 discriminator 3 view .LVU33
  44:packing.c     ****         rho[i] = pk[i];
 134              		.loc 1 44 5 is_stmt 0 discriminator 3 view .LVU34
 135 0014 8B42     		cmp	r3, r1
 136 0016 F9D1     		bne	.L7
 137 0018 02F12006 		add	r6, r2, #32
 138 001c 02F5A464 		add	r4, r2, #1312
 139              	.LVL12:
 140              	.L8:
  46:packing.c     ****     }
  47:packing.c     ****     pk += SEEDBYTES;
  48:packing.c     **** 
  49:packing.c     ****     for (i = 0; i < K; ++i) {
  50:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(&t1->vec[i], pk + i * POLYT1_PACKEDBYTES);
 141              		.loc 1 50 9 is_stmt 1 discriminator 3 view .LVU35
 142 0020 3146     		mov	r1, r6
 143 0022 2846     		mov	r0, r5
  49:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(&t1->vec[i], pk + i * POLYT1_PACKEDBYTES);
 144              		.loc 1 49 5 is_stmt 0 discriminator 3 view .LVU36
 145 0024 06F5A076 		add	r6, r6, #320
 146              		.loc 1 50 9 discriminator 3 view .LVU37
 147 0028 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack
 148              	.LVL13:
  49:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(&t1->vec[i], pk + i * POLYT1_PACKEDBYTES);
 149              		.loc 1 49 24 is_stmt 1 discriminator 3 view .LVU38
  49:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(&t1->vec[i], pk + i * POLYT1_PACKEDBYTES);
 150              		.loc 1 49 17 discriminator 3 view .LVU39
  49:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(&t1->vec[i], pk + i * POLYT1_PACKEDBYTES);
 151              		.loc 1 49 5 is_stmt 0 discriminator 3 view .LVU40
 152 002c A642     		cmp	r6, r4
 153 002e 05F58065 		add	r5, r5, #1024
 154 0032 F5D1     		bne	.L8
  51:packing.c     ****     }
  52:packing.c     **** }
 155              		.loc 1 52 1 view .LVU41
 156 0034 70BD     		pop	{r4, r5, r6, pc}
 157              		.cfi_endproc
 158              	.LFE1:
 160              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_pack_sk,"ax",%progbits
 161              		.align	1
 162              		.global	PQCLEAN_DILITHIUM2_CLEAN_pack_sk
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	PQCLEAN_DILITHIUM2_CLEAN_pack_sk:
 169              	.LVL14:
 170              	.LFB2:
  53:packing.c     **** 
  54:packing.c     **** /*************************************************
  55:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_pack_sk
  56:packing.c     **** *
  57:packing.c     **** * Description: Bit-pack secret key sk = (rho, tr, key, t0, s1, s2).
  58:packing.c     **** *
  59:packing.c     **** * Arguments:   - uint8_t sk[]: output byte array
  60:packing.c     **** *              - const uint8_t rho[]: byte array containing rho
  61:packing.c     **** *              - const uint8_t tr[]: byte array containing tr
  62:packing.c     **** *              - const uint8_t key[]: byte array containing key
  63:packing.c     **** *              - const polyveck *t0: pointer to vector t0
  64:packing.c     **** *              - const polyvecl *s1: pointer to vector s1
  65:packing.c     **** *              - const polyveck *s2: pointer to vector s2
  66:packing.c     **** **************************************************/
  67:packing.c     **** void PQCLEAN_DILITHIUM2_CLEAN_pack_sk(uint8_t sk[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_SECRETKEYBYTES],
  68:packing.c     ****                                       const uint8_t rho[SEEDBYTES],
  69:packing.c     ****                                       const uint8_t tr[TRBYTES],
  70:packing.c     ****                                       const uint8_t key[SEEDBYTES],
  71:packing.c     ****                                       const polyveck *t0,
  72:packing.c     ****                                       const polyvecl *s1,
  73:packing.c     ****                                       const polyveck *s2) {
 171              		.loc 1 73 59 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 12, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 73 59 is_stmt 0 view .LVU43
 176 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 24
 179              		.cfi_offset 3, -24
 180              		.cfi_offset 4, -20
 181              		.cfi_offset 5, -16
 182              		.cfi_offset 6, -12
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185              		.loc 1 73 59 view .LVU44
 186 0002 0546     		mov	r5, r0
  74:packing.c     ****     unsigned int i;
 187              		.loc 1 74 5 is_stmt 1 view .LVU45
  75:packing.c     **** 
  76:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
 188              		.loc 1 76 5 view .LVU46
 189              	.LVL15:
 190              		.loc 1 76 17 view .LVU47
 191 0004 6C1E     		subs	r4, r5, #1
 192 0006 481E     		subs	r0, r1, #1
 193              	.LVL16:
 194              		.loc 1 76 17 is_stmt 0 view .LVU48
 195 0008 1F31     		adds	r1, r1, #31
 196              	.LVL17:
 197              	.L12:
  77:packing.c     ****         sk[i] = rho[i];
 198              		.loc 1 77 9 is_stmt 1 discriminator 3 view .LVU49
 199              		.loc 1 77 20 is_stmt 0 discriminator 3 view .LVU50
 200 000a 10F8016F 		ldrb	r6, [r0, #1]!	@ zero_extendqisi2
 201              	.LVL18:
 202              		.loc 1 77 15 discriminator 3 view .LVU51
 203 000e 04F8016F 		strb	r6, [r4, #1]!
  76:packing.c     ****         sk[i] = rho[i];
 204              		.loc 1 76 32 is_stmt 1 discriminator 3 view .LVU52
 205              	.LVL19:
  76:packing.c     ****         sk[i] = rho[i];
 206              		.loc 1 76 17 discriminator 3 view .LVU53
  76:packing.c     ****         sk[i] = rho[i];
 207              		.loc 1 76 5 is_stmt 0 discriminator 3 view .LVU54
 208 0012 8842     		cmp	r0, r1
 209 0014 F9D1     		bne	.L12
 210 0016 591E     		subs	r1, r3, #1
 211              	.LVL20:
  76:packing.c     ****         sk[i] = rho[i];
 212              		.loc 1 76 5 discriminator 3 view .LVU55
 213 0018 05F11F00 		add	r0, r5, #31
 214              	.LVL21:
  76:packing.c     ****         sk[i] = rho[i];
 215              		.loc 1 76 5 discriminator 3 view .LVU56
 216 001c 1F33     		adds	r3, r3, #31
 217              	.LVL22:
 218              	.L13:
  78:packing.c     ****     }
  79:packing.c     ****     sk += SEEDBYTES;
  80:packing.c     **** 
  81:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
  82:packing.c     ****         sk[i] = key[i];
 219              		.loc 1 82 9 is_stmt 1 discriminator 3 view .LVU57
 220              		.loc 1 82 20 is_stmt 0 discriminator 3 view .LVU58
 221 001e 11F8014F 		ldrb	r4, [r1, #1]!	@ zero_extendqisi2
 222              	.LVL23:
 223              		.loc 1 82 15 discriminator 3 view .LVU59
 224 0022 00F8014F 		strb	r4, [r0, #1]!
  81:packing.c     ****         sk[i] = key[i];
 225              		.loc 1 81 32 is_stmt 1 discriminator 3 view .LVU60
 226              	.LVL24:
  81:packing.c     ****         sk[i] = key[i];
 227              		.loc 1 81 17 discriminator 3 view .LVU61
  81:packing.c     ****         sk[i] = key[i];
 228              		.loc 1 81 5 is_stmt 0 discriminator 3 view .LVU62
 229 0026 9942     		cmp	r1, r3
 230 0028 F9D1     		bne	.L13
  83:packing.c     ****     }
  84:packing.c     ****     sk += SEEDBYTES;
 231              		.loc 1 84 5 is_stmt 1 view .LVU63
 232              	.LVL25:
  85:packing.c     **** 
  86:packing.c     ****     for (i = 0; i < TRBYTES; ++i) {
 233              		.loc 1 86 5 view .LVU64
 234              		.loc 1 86 17 view .LVU65
 235 002a 531E     		subs	r3, r2, #1
 236              	.LVL26:
 237              		.loc 1 86 17 is_stmt 0 view .LVU66
 238 002c 05F13F01 		add	r1, r5, #63
 239 0030 3F32     		adds	r2, r2, #63
 240              	.LVL27:
 241              	.L14:
  87:packing.c     ****         sk[i] = tr[i];
 242              		.loc 1 87 9 is_stmt 1 discriminator 3 view .LVU67
 243              		.loc 1 87 19 is_stmt 0 discriminator 3 view .LVU68
 244 0032 13F8010F 		ldrb	r0, [r3, #1]!	@ zero_extendqisi2
 245              	.LVL28:
 246              		.loc 1 87 15 discriminator 3 view .LVU69
 247 0036 01F8010F 		strb	r0, [r1, #1]!
  86:packing.c     ****         sk[i] = tr[i];
 248              		.loc 1 86 30 is_stmt 1 discriminator 3 view .LVU70
 249              	.LVL29:
  86:packing.c     ****         sk[i] = tr[i];
 250              		.loc 1 86 17 discriminator 3 view .LVU71
  86:packing.c     ****         sk[i] = tr[i];
 251              		.loc 1 86 5 is_stmt 0 discriminator 3 view .LVU72
 252 003a 9342     		cmp	r3, r2
 253 003c F9D1     		bne	.L14
  88:packing.c     ****     }
  89:packing.c     ****     sk += TRBYTES;
 254              		.loc 1 89 5 is_stmt 1 view .LVU73
 255              	.LVL30:
  90:packing.c     **** 
  91:packing.c     ****     for (i = 0; i < L; ++i) {
 256              		.loc 1 91 5 view .LVU74
 257              		.loc 1 91 17 view .LVU75
 258 003e 079E     		ldr	r6, [sp, #28]
 259 0040 05F18004 		add	r4, r5, #128
 260              	.LVL31:
 261              		.loc 1 91 17 is_stmt 0 view .LVU76
 262 0044 05F50077 		add	r7, r5, #512
 263              	.LVL32:
 264              	.L15:
  92:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s1->vec[i]);
 265              		.loc 1 92 9 is_stmt 1 discriminator 3 view .LVU77
 266 0048 3146     		mov	r1, r6
 267 004a 2046     		mov	r0, r4
  91:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s1->vec[i]);
 268              		.loc 1 91 5 is_stmt 0 discriminator 3 view .LVU78
 269 004c 6034     		adds	r4, r4, #96
 270              		.loc 1 92 9 discriminator 3 view .LVU79
 271 004e FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
 272              	.LVL33:
  91:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s1->vec[i]);
 273              		.loc 1 91 24 is_stmt 1 discriminator 3 view .LVU80
  91:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s1->vec[i]);
 274              		.loc 1 91 17 discriminator 3 view .LVU81
  91:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s1->vec[i]);
 275              		.loc 1 91 5 is_stmt 0 discriminator 3 view .LVU82
 276 0052 BC42     		cmp	r4, r7
 277 0054 06F58066 		add	r6, r6, #1024
 278 0058 F6D1     		bne	.L15
  93:packing.c     ****     }
  94:packing.c     ****     sk += L * POLYETA_PACKEDBYTES;
 279              		.loc 1 94 5 is_stmt 1 view .LVU83
 280              	.LVL34:
  95:packing.c     **** 
  96:packing.c     ****     for (i = 0; i < K; ++i) {
 281              		.loc 1 96 5 view .LVU84
 282              		.loc 1 96 17 view .LVU85
 283 005a 089E     		ldr	r6, [sp, #32]
 284 005c 05F56077 		add	r7, r5, #896
 285              	.LVL35:
 286              	.L16:
  97:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s2->vec[i]);
 287              		.loc 1 97 9 discriminator 3 view .LVU86
 288 0060 3146     		mov	r1, r6
 289 0062 2046     		mov	r0, r4
  96:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s2->vec[i]);
 290              		.loc 1 96 5 is_stmt 0 discriminator 3 view .LVU87
 291 0064 6034     		adds	r4, r4, #96
 292              		.loc 1 97 9 discriminator 3 view .LVU88
 293 0066 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
 294              	.LVL36:
  96:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s2->vec[i]);
 295              		.loc 1 96 24 is_stmt 1 discriminator 3 view .LVU89
  96:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s2->vec[i]);
 296              		.loc 1 96 17 discriminator 3 view .LVU90
  96:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(sk + i * POLYETA_PACKEDBYTES, &s2->vec[i]);
 297              		.loc 1 96 5 is_stmt 0 discriminator 3 view .LVU91
 298 006a BC42     		cmp	r4, r7
 299 006c 06F58066 		add	r6, r6, #1024
 300 0070 F6D1     		bne	.L16
  98:packing.c     ****     }
  99:packing.c     ****     sk += K * POLYETA_PACKEDBYTES;
 301              		.loc 1 99 5 is_stmt 1 view .LVU92
 302              	.LVL37:
 100:packing.c     **** 
 101:packing.c     ****     for (i = 0; i < K; ++i) {
 303              		.loc 1 101 5 view .LVU93
 304              		.loc 1 101 17 view .LVU94
 305 0072 069E     		ldr	r6, [sp, #24]
 306 0074 05F52065 		add	r5, r5, #2560
 307              	.LVL38:
 308              	.L17:
 102:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(sk + i * POLYT0_PACKEDBYTES, &t0->vec[i]);
 309              		.loc 1 102 9 discriminator 3 view .LVU95
 310 0078 3146     		mov	r1, r6
 311 007a 2046     		mov	r0, r4
 101:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(sk + i * POLYT0_PACKEDBYTES, &t0->vec[i]);
 312              		.loc 1 101 5 is_stmt 0 discriminator 3 view .LVU96
 313 007c 04F5D074 		add	r4, r4, #416
 314              		.loc 1 102 9 discriminator 3 view .LVU97
 315 0080 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack
 316              	.LVL39:
 101:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(sk + i * POLYT0_PACKEDBYTES, &t0->vec[i]);
 317              		.loc 1 101 24 is_stmt 1 discriminator 3 view .LVU98
 101:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(sk + i * POLYT0_PACKEDBYTES, &t0->vec[i]);
 318              		.loc 1 101 17 discriminator 3 view .LVU99
 101:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(sk + i * POLYT0_PACKEDBYTES, &t0->vec[i]);
 319              		.loc 1 101 5 is_stmt 0 discriminator 3 view .LVU100
 320 0084 AC42     		cmp	r4, r5
 321 0086 06F58066 		add	r6, r6, #1024
 322 008a F5D1     		bne	.L17
 103:packing.c     ****     }
 104:packing.c     **** }
 323              		.loc 1 104 1 view .LVU101
 324 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 325              		.loc 1 104 1 view .LVU102
 326              		.cfi_endproc
 327              	.LFE2:
 329              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sk,"ax",%progbits
 330              		.align	1
 331              		.global	PQCLEAN_DILITHIUM2_CLEAN_unpack_sk
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 335              		.fpu softvfp
 337              	PQCLEAN_DILITHIUM2_CLEAN_unpack_sk:
 338              	.LVL40:
 339              	.LFB3:
 105:packing.c     **** 
 106:packing.c     **** /*************************************************
 107:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_unpack_sk
 108:packing.c     **** *
 109:packing.c     **** * Description: Unpack secret key sk = (rho, tr, key, t0, s1, s2).
 110:packing.c     **** *
 111:packing.c     **** * Arguments:   - const uint8_t rho[]: output byte array for rho
 112:packing.c     **** *              - const uint8_t tr[]: output byte array for tr
 113:packing.c     **** *              - const uint8_t key[]: output byte array for key
 114:packing.c     **** *              - const polyveck *t0: pointer to output vector t0
 115:packing.c     **** *              - const polyvecl *s1: pointer to output vector s1
 116:packing.c     **** *              - const polyveck *s2: pointer to output vector s2
 117:packing.c     **** *              - uint8_t sk[]: byte array containing bit-packed sk
 118:packing.c     **** **************************************************/
 119:packing.c     **** void PQCLEAN_DILITHIUM2_CLEAN_unpack_sk(uint8_t rho[SEEDBYTES],
 120:packing.c     ****                                         uint8_t tr[TRBYTES],
 121:packing.c     ****                                         uint8_t key[SEEDBYTES],
 122:packing.c     ****                                         polyveck *t0,
 123:packing.c     ****                                         polyvecl *s1,
 124:packing.c     ****                                         polyveck *s2,
 125:packing.c     ****                                         const uint8_t sk[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_SECRETKEYB
 340              		.loc 1 125 107 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 12, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 126:packing.c     ****     unsigned int i;
 344              		.loc 1 126 5 view .LVU104
 127:packing.c     **** 
 128:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
 345              		.loc 1 128 5 view .LVU105
 346              		.loc 1 128 17 view .LVU106
 125:packing.c     ****     unsigned int i;
 347              		.loc 1 125 107 is_stmt 0 view .LVU107
 348 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 349              	.LCFI3:
 350              		.cfi_def_cfa_offset 24
 351              		.cfi_offset 4, -24
 352              		.cfi_offset 5, -20
 353              		.cfi_offset 6, -16
 354              		.cfi_offset 7, -12
 355              		.cfi_offset 8, -8
 356              		.cfi_offset 14, -4
 125:packing.c     ****     unsigned int i;
 357              		.loc 1 125 107 view .LVU108
 358 0004 089D     		ldr	r5, [sp, #32]
 359 0006 1E46     		mov	r6, r3
 360 0008 6C1E     		subs	r4, r5, #1
 361 000a 0138     		subs	r0, r0, #1
 362              	.LVL41:
 125:packing.c     ****     unsigned int i;
 363              		.loc 1 125 107 view .LVU109
 364 000c 05F11F03 		add	r3, r5, #31
 365              	.LVL42:
 366              	.L25:
 129:packing.c     ****         rho[i] = sk[i];
 367              		.loc 1 129 9 is_stmt 1 discriminator 3 view .LVU110
 368              		.loc 1 129 20 is_stmt 0 discriminator 3 view .LVU111
 369 0010 14F8017F 		ldrb	r7, [r4, #1]!	@ zero_extendqisi2
 370              		.loc 1 129 16 discriminator 3 view .LVU112
 371 0014 00F8017F 		strb	r7, [r0, #1]!
 128:packing.c     ****         rho[i] = sk[i];
 372              		.loc 1 128 32 is_stmt 1 discriminator 3 view .LVU113
 128:packing.c     ****         rho[i] = sk[i];
 373              		.loc 1 128 17 discriminator 3 view .LVU114
 128:packing.c     ****         rho[i] = sk[i];
 374              		.loc 1 128 5 is_stmt 0 discriminator 3 view .LVU115
 375 0018 9C42     		cmp	r4, r3
 376 001a F9D1     		bne	.L25
 377 001c 013A     		subs	r2, r2, #1
 378              	.LVL43:
 128:packing.c     ****         rho[i] = sk[i];
 379              		.loc 1 128 5 discriminator 3 view .LVU116
 380 001e 05F13F03 		add	r3, r5, #63
 381              	.LVL44:
 382              	.L26:
 130:packing.c     ****     }
 131:packing.c     ****     sk += SEEDBYTES;
 132:packing.c     **** 
 133:packing.c     ****     for (i = 0; i < SEEDBYTES; ++i) {
 134:packing.c     ****         key[i] = sk[i];
 383              		.loc 1 134 9 is_stmt 1 discriminator 3 view .LVU117
 384              		.loc 1 134 20 is_stmt 0 discriminator 3 view .LVU118
 385 0022 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 386              		.loc 1 134 16 discriminator 3 view .LVU119
 387 0026 02F8010F 		strb	r0, [r2, #1]!
 133:packing.c     ****         key[i] = sk[i];
 388              		.loc 1 133 32 is_stmt 1 discriminator 3 view .LVU120
 133:packing.c     ****         key[i] = sk[i];
 389              		.loc 1 133 17 discriminator 3 view .LVU121
 133:packing.c     ****         key[i] = sk[i];
 390              		.loc 1 133 5 is_stmt 0 discriminator 3 view .LVU122
 391 002a 9C42     		cmp	r4, r3
 392 002c F9D1     		bne	.L26
 135:packing.c     ****     }
 136:packing.c     ****     sk += SEEDBYTES;
 393              		.loc 1 136 5 is_stmt 1 view .LVU123
 394              	.LVL45:
 137:packing.c     **** 
 138:packing.c     ****     for (i = 0; i < TRBYTES; ++i) {
 395              		.loc 1 138 5 view .LVU124
 396              		.loc 1 138 17 view .LVU125
 397 002e 0139     		subs	r1, r1, #1
 398              	.LVL46:
 399              		.loc 1 138 17 is_stmt 0 view .LVU126
 400 0030 05F17F03 		add	r3, r5, #127
 401              	.LVL47:
 402              	.L27:
 139:packing.c     ****         tr[i] = sk[i];
 403              		.loc 1 139 9 is_stmt 1 discriminator 3 view .LVU127
 404              		.loc 1 139 19 is_stmt 0 discriminator 3 view .LVU128
 405 0034 14F8012F 		ldrb	r2, [r4, #1]!	@ zero_extendqisi2
 406              		.loc 1 139 15 discriminator 3 view .LVU129
 407 0038 01F8012F 		strb	r2, [r1, #1]!
 138:packing.c     ****         tr[i] = sk[i];
 408              		.loc 1 138 30 is_stmt 1 discriminator 3 view .LVU130
 138:packing.c     ****         tr[i] = sk[i];
 409              		.loc 1 138 17 discriminator 3 view .LVU131
 138:packing.c     ****         tr[i] = sk[i];
 410              		.loc 1 138 5 is_stmt 0 discriminator 3 view .LVU132
 411 003c 9C42     		cmp	r4, r3
 412 003e F9D1     		bne	.L27
 140:packing.c     ****     }
 141:packing.c     ****     sk += TRBYTES;
 413              		.loc 1 141 5 is_stmt 1 view .LVU133
 414              	.LVL48:
 142:packing.c     **** 
 143:packing.c     ****     for (i = 0; i < L; ++i) {
 415              		.loc 1 143 5 view .LVU134
 416              		.loc 1 143 17 view .LVU135
 417 0040 069F     		ldr	r7, [sp, #24]
 418 0042 05F18004 		add	r4, r5, #128
 419              	.LVL49:
 420              		.loc 1 143 17 is_stmt 0 view .LVU136
 421 0046 05F50078 		add	r8, r5, #512
 422              	.LVL50:
 423              	.L28:
 144:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s1->vec[i], sk + i * POLYETA_PACKEDBYTES);
 424              		.loc 1 144 9 is_stmt 1 discriminator 3 view .LVU137
 425 004a 2146     		mov	r1, r4
 426 004c 3846     		mov	r0, r7
 143:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s1->vec[i], sk + i * POLYETA_PACKEDBYTES);
 427              		.loc 1 143 5 is_stmt 0 discriminator 3 view .LVU138
 428 004e 6034     		adds	r4, r4, #96
 429              		.loc 1 144 9 discriminator 3 view .LVU139
 430 0050 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
 431              	.LVL51:
 143:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s1->vec[i], sk + i * POLYETA_PACKEDBYTES);
 432              		.loc 1 143 24 is_stmt 1 discriminator 3 view .LVU140
 143:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s1->vec[i], sk + i * POLYETA_PACKEDBYTES);
 433              		.loc 1 143 17 discriminator 3 view .LVU141
 143:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s1->vec[i], sk + i * POLYETA_PACKEDBYTES);
 434              		.loc 1 143 5 is_stmt 0 discriminator 3 view .LVU142
 435 0054 4445     		cmp	r4, r8
 436 0056 07F58067 		add	r7, r7, #1024
 437 005a F6D1     		bne	.L28
 145:packing.c     ****     }
 146:packing.c     ****     sk += L * POLYETA_PACKEDBYTES;
 438              		.loc 1 146 5 is_stmt 1 view .LVU143
 439              	.LVL52:
 147:packing.c     **** 
 148:packing.c     ****     for (i = 0; i < K; ++i) {
 440              		.loc 1 148 5 view .LVU144
 441              		.loc 1 148 17 view .LVU145
 442 005c 079F     		ldr	r7, [sp, #28]
 443 005e 05F56078 		add	r8, r5, #896
 444              	.LVL53:
 445              	.L29:
 149:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s2->vec[i], sk + i * POLYETA_PACKEDBYTES);
 446              		.loc 1 149 9 discriminator 3 view .LVU146
 447 0062 2146     		mov	r1, r4
 448 0064 3846     		mov	r0, r7
 148:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s2->vec[i], sk + i * POLYETA_PACKEDBYTES);
 449              		.loc 1 148 5 is_stmt 0 discriminator 3 view .LVU147
 450 0066 6034     		adds	r4, r4, #96
 451              		.loc 1 149 9 discriminator 3 view .LVU148
 452 0068 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
 453              	.LVL54:
 148:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s2->vec[i], sk + i * POLYETA_PACKEDBYTES);
 454              		.loc 1 148 24 is_stmt 1 discriminator 3 view .LVU149
 148:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s2->vec[i], sk + i * POLYETA_PACKEDBYTES);
 455              		.loc 1 148 17 discriminator 3 view .LVU150
 148:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(&s2->vec[i], sk + i * POLYETA_PACKEDBYTES);
 456              		.loc 1 148 5 is_stmt 0 discriminator 3 view .LVU151
 457 006c 4445     		cmp	r4, r8
 458 006e 07F58067 		add	r7, r7, #1024
 459 0072 F6D1     		bne	.L29
 150:packing.c     ****     }
 151:packing.c     ****     sk += K * POLYETA_PACKEDBYTES;
 460              		.loc 1 151 5 is_stmt 1 view .LVU152
 461              	.LVL55:
 152:packing.c     **** 
 153:packing.c     ****     for (i = 0; i < K; ++i) {
 462              		.loc 1 153 5 view .LVU153
 463              		.loc 1 153 17 view .LVU154
 464 0074 05F52065 		add	r5, r5, #2560
 465              	.LVL56:
 466              	.L30:
 154:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(&t0->vec[i], sk + i * POLYT0_PACKEDBYTES);
 467              		.loc 1 154 9 discriminator 3 view .LVU155
 468 0078 2146     		mov	r1, r4
 469 007a 3046     		mov	r0, r6
 153:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(&t0->vec[i], sk + i * POLYT0_PACKEDBYTES);
 470              		.loc 1 153 5 is_stmt 0 discriminator 3 view .LVU156
 471 007c 04F5D074 		add	r4, r4, #416
 472              		.loc 1 154 9 discriminator 3 view .LVU157
 473 0080 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack
 474              	.LVL57:
 153:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(&t0->vec[i], sk + i * POLYT0_PACKEDBYTES);
 475              		.loc 1 153 24 is_stmt 1 discriminator 3 view .LVU158
 153:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(&t0->vec[i], sk + i * POLYT0_PACKEDBYTES);
 476              		.loc 1 153 17 discriminator 3 view .LVU159
 153:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(&t0->vec[i], sk + i * POLYT0_PACKEDBYTES);
 477              		.loc 1 153 5 is_stmt 0 discriminator 3 view .LVU160
 478 0084 AC42     		cmp	r4, r5
 479 0086 06F58066 		add	r6, r6, #1024
 480 008a F5D1     		bne	.L30
 155:packing.c     ****     }
 156:packing.c     **** }
 481              		.loc 1 156 1 view .LVU161
 482 008c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 483              		.loc 1 156 1 view .LVU162
 484              		.cfi_endproc
 485              	.LFE3:
 487              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_pack_sig,"ax",%progbits
 488              		.align	1
 489              		.global	PQCLEAN_DILITHIUM2_CLEAN_pack_sig
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu softvfp
 495              	PQCLEAN_DILITHIUM2_CLEAN_pack_sig:
 496              	.LVL58:
 497              	.LFB4:
 157:packing.c     **** 
 158:packing.c     **** /*************************************************
 159:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_pack_sig
 160:packing.c     **** *
 161:packing.c     **** * Description: Bit-pack signature sig = (c, z, h).
 162:packing.c     **** *
 163:packing.c     **** * Arguments:   - uint8_t sig[]: output byte array
 164:packing.c     **** *              - const uint8_t *c: pointer to PQCLEAN_DILITHIUM2_CLEAN_challenge hash length SEEDBY
 165:packing.c     **** *              - const polyvecl *z: pointer to vector z
 166:packing.c     **** *              - const polyveck *h: pointer to hint vector h
 167:packing.c     **** **************************************************/
 168:packing.c     **** void PQCLEAN_DILITHIUM2_CLEAN_pack_sig(uint8_t sig[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_BYTES],
 169:packing.c     ****                                        const uint8_t c[CTILDEBYTES],
 170:packing.c     ****                                        const polyvecl *z,
 171:packing.c     ****                                        const polyveck *h) {
 498              		.loc 1 171 59 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		.loc 1 171 59 is_stmt 0 view .LVU164
 503 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 504              	.LCFI4:
 505              		.cfi_def_cfa_offset 24
 506              		.cfi_offset 4, -24
 507              		.cfi_offset 5, -20
 508              		.cfi_offset 6, -16
 509              		.cfi_offset 7, -12
 510              		.cfi_offset 8, -8
 511              		.cfi_offset 14, -4
 512              		.loc 1 171 59 view .LVU165
 513 0004 1546     		mov	r5, r2
 514 0006 1E46     		mov	r6, r3
 515 0008 0446     		mov	r4, r0
 172:packing.c     ****     unsigned int i, j, k;
 516              		.loc 1 172 5 is_stmt 1 view .LVU166
 173:packing.c     **** 
 174:packing.c     ****     for (i = 0; i < CTILDEBYTES; ++i) {
 517              		.loc 1 174 5 view .LVU167
 518              	.LVL59:
 519              		.loc 1 174 17 view .LVU168
 520 000a 4B1E     		subs	r3, r1, #1
 521              	.LVL60:
 522              		.loc 1 174 17 is_stmt 0 view .LVU169
 523 000c 421E     		subs	r2, r0, #1
 524              	.LVL61:
 525              		.loc 1 174 17 view .LVU170
 526 000e 1F31     		adds	r1, r1, #31
 527              	.LVL62:
 528              	.L38:
 175:packing.c     ****         sig[i] = c[i];
 529              		.loc 1 175 9 is_stmt 1 discriminator 3 view .LVU171
 530              		.loc 1 175 19 is_stmt 0 discriminator 3 view .LVU172
 531 0010 13F8010F 		ldrb	r0, [r3, #1]!	@ zero_extendqisi2
 532              	.LVL63:
 533              		.loc 1 175 16 discriminator 3 view .LVU173
 534 0014 02F8010F 		strb	r0, [r2, #1]!
 174:packing.c     ****         sig[i] = c[i];
 535              		.loc 1 174 34 is_stmt 1 discriminator 3 view .LVU174
 536              	.LVL64:
 174:packing.c     ****         sig[i] = c[i];
 537              		.loc 1 174 17 discriminator 3 view .LVU175
 174:packing.c     ****         sig[i] = c[i];
 538              		.loc 1 174 5 is_stmt 0 discriminator 3 view .LVU176
 539 0018 8B42     		cmp	r3, r1
 540 001a F9D1     		bne	.L38
 541 001c 04F12007 		add	r7, r4, #32
 542 0020 04F51268 		add	r8, r4, #2336
 543              	.LVL65:
 544              	.L39:
 176:packing.c     ****     }
 177:packing.c     ****     sig += CTILDEBYTES;
 178:packing.c     **** 
 179:packing.c     ****     for (i = 0; i < L; ++i) {
 180:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(sig + i * POLYZ_PACKEDBYTES, &z->vec[i]);
 545              		.loc 1 180 9 is_stmt 1 discriminator 3 view .LVU177
 546 0024 2946     		mov	r1, r5
 547 0026 3846     		mov	r0, r7
 179:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(sig + i * POLYZ_PACKEDBYTES, &z->vec[i]);
 548              		.loc 1 179 5 is_stmt 0 discriminator 3 view .LVU178
 549 0028 07F51077 		add	r7, r7, #576
 550              		.loc 1 180 9 discriminator 3 view .LVU179
 551 002c FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyz_pack
 552              	.LVL66:
 179:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(sig + i * POLYZ_PACKEDBYTES, &z->vec[i]);
 553              		.loc 1 179 24 is_stmt 1 discriminator 3 view .LVU180
 179:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(sig + i * POLYZ_PACKEDBYTES, &z->vec[i]);
 554              		.loc 1 179 17 discriminator 3 view .LVU181
 179:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(sig + i * POLYZ_PACKEDBYTES, &z->vec[i]);
 555              		.loc 1 179 5 is_stmt 0 discriminator 3 view .LVU182
 556 0030 4745     		cmp	r7, r8
 557 0032 05F58065 		add	r5, r5, #1024
 558 0036 F5D1     		bne	.L39
 181:packing.c     ****     }
 182:packing.c     ****     sig += L * POLYZ_PACKEDBYTES;
 559              		.loc 1 182 5 is_stmt 1 view .LVU183
 560              	.LVL67:
 183:packing.c     **** 
 184:packing.c     ****     /* Encode h */
 185:packing.c     ****     for (i = 0; i < OMEGA + K; ++i) {
 561              		.loc 1 185 5 view .LVU184
 562              		.loc 1 185 17 view .LVU185
 186:packing.c     ****         sig[i] = 0;
 563              		.loc 1 186 16 is_stmt 0 view .LVU186
 564 0038 0021     		movs	r1, #0
 565 003a 5422     		movs	r2, #84
 566 003c 4046     		mov	r0, r8
 567 003e FFF7FEFF 		bl	memset
 568              	.LVL68:
 569              		.loc 1 186 16 view .LVU187
 570 0042 04F66F10 		addw	r0, r4, #2415
 571 0046 3346     		mov	r3, r6
 572 0048 04F67314 		addw	r4, r4, #2419
 187:packing.c     ****     }
 188:packing.c     **** 
 189:packing.c     ****     k = 0;
 573              		.loc 1 189 7 view .LVU188
 574 004c 0021     		movs	r1, #0
 575              	.LVL69:
 576              	.L40:
 190:packing.c     ****     for (i = 0; i < K; ++i) {
 191:packing.c     ****         for (j = 0; j < N; ++j) {
 577              		.loc 1 191 21 is_stmt 1 view .LVU189
 171:packing.c     ****     unsigned int i, j, k;
 578              		.loc 1 171 59 is_stmt 0 view .LVU190
 579 004e 1D46     		mov	r5, r3
 580              		.loc 1 191 16 view .LVU191
 581 0050 0022     		movs	r2, #0
 582              	.LVL70:
 583              	.L42:
 192:packing.c     ****             if (h->vec[i].coeffs[j] != 0) {
 584              		.loc 1 192 13 is_stmt 1 view .LVU192
 585              		.loc 1 192 33 is_stmt 0 view .LVU193
 586 0052 55F8046B 		ldr	r6, [r5], #4
 587              		.loc 1 192 16 view .LVU194
 588 0056 16B1     		cbz	r6, .L41
 193:packing.c     ****                 sig[k++] = (uint8_t) j;
 589              		.loc 1 193 17 is_stmt 1 view .LVU195
 590              	.LVL71:
 591              		.loc 1 193 26 is_stmt 0 view .LVU196
 592 0058 08F80120 		strb	r2, [r8, r1]
 593              		.loc 1 193 22 view .LVU197
 594 005c 0131     		adds	r1, r1, #1
 595              	.LVL72:
 596              	.L41:
 191:packing.c     ****             if (h->vec[i].coeffs[j] != 0) {
 597              		.loc 1 191 28 is_stmt 1 discriminator 2 view .LVU198
 598 005e 0132     		adds	r2, r2, #1
 599              	.LVL73:
 191:packing.c     ****             if (h->vec[i].coeffs[j] != 0) {
 600              		.loc 1 191 21 discriminator 2 view .LVU199
 191:packing.c     ****             if (h->vec[i].coeffs[j] != 0) {
 601              		.loc 1 191 9 is_stmt 0 discriminator 2 view .LVU200
 602 0060 B2F5807F 		cmp	r2, #256
 603 0064 F5D1     		bne	.L42
 194:packing.c     ****             }
 195:packing.c     ****         }
 196:packing.c     **** 
 197:packing.c     ****         sig[OMEGA + i] = (uint8_t) k;
 604              		.loc 1 197 9 is_stmt 1 discriminator 2 view .LVU201
 605              		.loc 1 197 26 is_stmt 0 discriminator 2 view .LVU202
 606 0066 00F8011F 		strb	r1, [r0, #1]!
 607              	.LVL74:
 190:packing.c     ****         for (j = 0; j < N; ++j) {
 608              		.loc 1 190 24 is_stmt 1 discriminator 2 view .LVU203
 190:packing.c     ****         for (j = 0; j < N; ++j) {
 609              		.loc 1 190 17 discriminator 2 view .LVU204
 190:packing.c     ****         for (j = 0; j < N; ++j) {
 610              		.loc 1 190 5 is_stmt 0 discriminator 2 view .LVU205
 611 006a A042     		cmp	r0, r4
 612 006c 03F58063 		add	r3, r3, #1024
 613 0070 EDD1     		bne	.L40
 198:packing.c     ****     }
 199:packing.c     **** }
 614              		.loc 1 199 1 view .LVU206
 615 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 616              		.loc 1 199 1 view .LVU207
 617              		.cfi_endproc
 618              	.LFE4:
 620              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sig,"ax",%progbits
 621              		.align	1
 622              		.global	PQCLEAN_DILITHIUM2_CLEAN_unpack_sig
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu softvfp
 628              	PQCLEAN_DILITHIUM2_CLEAN_unpack_sig:
 629              	.LVL75:
 630              	.LFB5:
 200:packing.c     **** 
 201:packing.c     **** /*************************************************
 202:packing.c     **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_unpack_sig
 203:packing.c     **** *
 204:packing.c     **** * Description: Unpack signature sig = (c, z, h).
 205:packing.c     **** *
 206:packing.c     **** * Arguments:   - uint8_t *c: pointer to output PQCLEAN_DILITHIUM2_CLEAN_challenge hash
 207:packing.c     **** *              - polyvecl *z: pointer to output vector z
 208:packing.c     **** *              - polyveck *h: pointer to output hint vector h
 209:packing.c     **** *              - const uint8_t sig[]: byte array containing
 210:packing.c     **** *                bit-packed signature
 211:packing.c     **** *
 212:packing.c     **** * Returns 1 in case of malformed signature; otherwise 0.
 213:packing.c     **** **************************************************/
 214:packing.c     **** int PQCLEAN_DILITHIUM2_CLEAN_unpack_sig(uint8_t c[CTILDEBYTES],
 215:packing.c     ****                                         polyvecl *z,
 216:packing.c     ****                                         polyveck *h,
 217:packing.c     ****                                         const uint8_t sig[PQCLEAN_DILITHIUM2_CLEAN_CRYPTO_BYTES]) {
 631              		.loc 1 217 99 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 218:packing.c     ****     unsigned int i, j, k;
 635              		.loc 1 218 5 view .LVU209
 219:packing.c     **** 
 220:packing.c     ****     for (i = 0; i < CTILDEBYTES; ++i) {
 636              		.loc 1 220 5 view .LVU210
 637              		.loc 1 220 17 view .LVU211
 217:packing.c     ****     unsigned int i, j, k;
 638              		.loc 1 217 99 is_stmt 0 view .LVU212
 639 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 640              	.LCFI5:
 641              		.cfi_def_cfa_offset 32
 642              		.cfi_offset 4, -32
 643              		.cfi_offset 5, -28
 644              		.cfi_offset 6, -24
 645              		.cfi_offset 7, -20
 646              		.cfi_offset 8, -16
 647              		.cfi_offset 9, -12
 648              		.cfi_offset 10, -8
 649              		.cfi_offset 14, -4
 217:packing.c     ****     unsigned int i, j, k;
 650              		.loc 1 217 99 view .LVU213
 651 0004 1C46     		mov	r4, r3
 652 0006 1746     		mov	r7, r2
 653 0008 0D46     		mov	r5, r1
 654 000a 013B     		subs	r3, r3, #1
 655              	.LVL76:
 217:packing.c     ****     unsigned int i, j, k;
 656              		.loc 1 217 99 view .LVU214
 657 000c 0138     		subs	r0, r0, #1
 658              	.LVL77:
 217:packing.c     ****     unsigned int i, j, k;
 659              		.loc 1 217 99 view .LVU215
 660 000e 04F11F02 		add	r2, r4, #31
 661              	.LVL78:
 662              	.L51:
 221:packing.c     ****         c[i] = sig[i];
 663              		.loc 1 221 9 is_stmt 1 discriminator 3 view .LVU216
 664              		.loc 1 221 19 is_stmt 0 discriminator 3 view .LVU217
 665 0012 13F8011F 		ldrb	r1, [r3, #1]!	@ zero_extendqisi2
 666              		.loc 1 221 14 discriminator 3 view .LVU218
 667 0016 00F8011F 		strb	r1, [r0, #1]!
 220:packing.c     ****         c[i] = sig[i];
 668              		.loc 1 220 34 is_stmt 1 discriminator 3 view .LVU219
 220:packing.c     ****         c[i] = sig[i];
 669              		.loc 1 220 17 discriminator 3 view .LVU220
 220:packing.c     ****         c[i] = sig[i];
 670              		.loc 1 220 5 is_stmt 0 discriminator 3 view .LVU221
 671 001a 9342     		cmp	r3, r2
 672 001c F9D1     		bne	.L51
 673 001e 04F12006 		add	r6, r4, #32
 674 0022 04F51268 		add	r8, r4, #2336
 675              	.LVL79:
 676              	.L52:
 222:packing.c     ****     }
 223:packing.c     ****     sig += CTILDEBYTES;
 224:packing.c     **** 
 225:packing.c     ****     for (i = 0; i < L; ++i) {
 226:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&z->vec[i], sig + i * POLYZ_PACKEDBYTES);
 677              		.loc 1 226 9 is_stmt 1 discriminator 3 view .LVU222
 678 0026 3146     		mov	r1, r6
 679 0028 2846     		mov	r0, r5
 225:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&z->vec[i], sig + i * POLYZ_PACKEDBYTES);
 680              		.loc 1 225 5 is_stmt 0 discriminator 3 view .LVU223
 681 002a 06F51076 		add	r6, r6, #576
 682              		.loc 1 226 9 discriminator 3 view .LVU224
 683 002e FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
 684              	.LVL80:
 225:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&z->vec[i], sig + i * POLYZ_PACKEDBYTES);
 685              		.loc 1 225 24 is_stmt 1 discriminator 3 view .LVU225
 225:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&z->vec[i], sig + i * POLYZ_PACKEDBYTES);
 686              		.loc 1 225 17 discriminator 3 view .LVU226
 225:packing.c     ****         PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&z->vec[i], sig + i * POLYZ_PACKEDBYTES);
 687              		.loc 1 225 5 is_stmt 0 discriminator 3 view .LVU227
 688 0032 4645     		cmp	r6, r8
 689 0034 05F58065 		add	r5, r5, #1024
 690 0038 F5D1     		bne	.L52
 227:packing.c     ****     }
 228:packing.c     ****     sig += L * POLYZ_PACKEDBYTES;
 691              		.loc 1 228 5 is_stmt 1 view .LVU228
 692              	.LVL81:
 229:packing.c     **** 
 230:packing.c     ****     /* Decode h */
 231:packing.c     ****     k = 0;
 693              		.loc 1 231 5 view .LVU229
 232:packing.c     ****     for (i = 0; i < K; ++i) {
 694              		.loc 1 232 5 view .LVU230
 695              		.loc 1 232 17 view .LVU231
 231:packing.c     ****     for (i = 0; i < K; ++i) {
 696              		.loc 1 231 7 is_stmt 0 view .LVU232
 697 003a 0025     		movs	r5, #0
 698 003c 04F66F19 		addw	r9, r4, #2415
 699              		.loc 1 232 12 view .LVU233
 700 0040 2E46     		mov	r6, r5
 233:packing.c     ****         for (j = 0; j < N; ++j) {
 234:packing.c     ****             h->vec[i].coeffs[j] = 0;
 235:packing.c     ****         }
 236:packing.c     **** 
 237:packing.c     ****         if (sig[OMEGA + i] < k || sig[OMEGA + i] > OMEGA) {
 238:packing.c     ****             return 1;
 239:packing.c     ****         }
 240:packing.c     **** 
 241:packing.c     ****         for (j = k; j < sig[OMEGA + i]; ++j) {
 242:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 243:packing.c     ****             if (j > k && sig[j] <= sig[j - 1]) {
 244:packing.c     ****                 return 1;
 245:packing.c     ****             }
 246:packing.c     ****             h->vec[i].coeffs[sig[j]] = 1;
 701              		.loc 1 246 38 view .LVU234
 702 0042 4FF0010A 		mov	r10, #1
 703              	.LVL82:
 704              	.L53:
 233:packing.c     ****         for (j = 0; j < N; ++j) {
 705              		.loc 1 233 21 is_stmt 1 view .LVU235
 234:packing.c     ****         }
 706              		.loc 1 234 33 is_stmt 0 view .LVU236
 707 0046 4FF48062 		mov	r2, #1024
 708 004a 0021     		movs	r1, #0
 709 004c 07EB8620 		add	r0, r7, r6, lsl #10
 710 0050 FFF7FEFF 		bl	memset
 711              	.LVL83:
 237:packing.c     ****             return 1;
 712              		.loc 1 237 9 is_stmt 1 view .LVU237
 237:packing.c     ****             return 1;
 713              		.loc 1 237 16 is_stmt 0 view .LVU238
 714 0054 19F8013F 		ldrb	r3, [r9, #1]!	@ zero_extendqisi2
 237:packing.c     ****             return 1;
 715              		.loc 1 237 12 view .LVU239
 716 0058 AB42     		cmp	r3, r5
 717 005a 02D2     		bcs	.L66
 718              	.LVL84:
 719              	.L55:
 238:packing.c     ****         }
 720              		.loc 1 238 20 view .LVU240
 721 005c 0120     		movs	r0, #1
 722              	.L50:
 247:packing.c     ****         }
 248:packing.c     **** 
 249:packing.c     ****         k = sig[OMEGA + i];
 250:packing.c     ****     }
 251:packing.c     **** 
 252:packing.c     ****     /* Extra indices are zero for strong unforgeability */
 253:packing.c     ****     for (j = k; j < OMEGA; ++j) {
 254:packing.c     ****         if (sig[j]) {
 255:packing.c     ****             return 1;
 256:packing.c     ****         }
 257:packing.c     ****     }
 258:packing.c     **** 
 259:packing.c     ****     return 0;
 260:packing.c     **** }
 723              		.loc 1 260 1 view .LVU241
 724 005e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 725              	.LVL85:
 726              	.L66:
 237:packing.c     ****             return 1;
 727              		.loc 1 237 32 discriminator 1 view .LVU242
 728 0062 502B     		cmp	r3, #80
 729 0064 FAD8     		bhi	.L55
 730 0066 05F61F11 		addw	r1, r5, #2335
 731 006a 2144     		add	r1, r1, r4
 237:packing.c     ****             return 1;
 732              		.loc 1 237 32 view .LVU243
 733 006c 2A46     		mov	r2, r5
 246:packing.c     ****         }
 734              		.loc 1 246 38 view .LVU244
 735 006e 3002     		lsls	r0, r6, #8
 736              	.L56:
 737              	.LVL86:
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 738              		.loc 1 241 21 is_stmt 1 discriminator 1 view .LVU245
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 739              		.loc 1 241 28 is_stmt 0 discriminator 1 view .LVU246
 740 0070 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 741              		.loc 1 241 9 discriminator 1 view .LVU247
 742 0074 9342     		cmp	r3, r2
 743 0076 04D8     		bhi	.L58
 249:packing.c     ****     }
 744              		.loc 1 249 9 is_stmt 1 discriminator 2 view .LVU248
 745              	.LVL87:
 232:packing.c     ****         for (j = 0; j < N; ++j) {
 746              		.loc 1 232 24 discriminator 2 view .LVU249
 747 0078 0136     		adds	r6, r6, #1
 748              	.LVL88:
 232:packing.c     ****         for (j = 0; j < N; ++j) {
 749              		.loc 1 232 17 discriminator 2 view .LVU250
 232:packing.c     ****         for (j = 0; j < N; ++j) {
 750              		.loc 1 232 5 is_stmt 0 discriminator 2 view .LVU251
 751 007a 042E     		cmp	r6, #4
 752 007c 14D0     		beq	.L59
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 753              		.loc 1 241 28 view .LVU252
 754 007e 1D46     		mov	r5, r3
 755 0080 E1E7     		b	.L53
 756              	.LVL89:
 757              	.L58:
 243:packing.c     ****                 return 1;
 758              		.loc 1 243 13 is_stmt 1 view .LVU253
 243:packing.c     ****                 return 1;
 759              		.loc 1 243 16 is_stmt 0 view .LVU254
 760 0082 AA42     		cmp	r2, r5
 761 0084 04D9     		bls	.L57
 243:packing.c     ****                 return 1;
 762              		.loc 1 243 23 discriminator 1 view .LVU255
 763 0086 91F800C0 		ldrb	ip, [r1]	@ zero_extendqisi2
 764 008a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 765 008c 9C45     		cmp	ip, r3
 766 008e E5D2     		bcs	.L55
 767              	.L57:
 246:packing.c     ****         }
 768              		.loc 1 246 13 is_stmt 1 discriminator 2 view .LVU256
 246:packing.c     ****         }
 769              		.loc 1 246 33 is_stmt 0 discriminator 2 view .LVU257
 770 0090 11F8013F 		ldrb	r3, [r1, #1]!	@ zero_extendqisi2
 246:packing.c     ****         }
 771              		.loc 1 246 38 discriminator 2 view .LVU258
 772 0094 0344     		add	r3, r3, r0
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 773              		.loc 1 241 41 discriminator 2 view .LVU259
 774 0096 0132     		adds	r2, r2, #1
 775              	.LVL90:
 246:packing.c     ****         }
 776              		.loc 1 246 38 discriminator 2 view .LVU260
 777 0098 47F823A0 		str	r10, [r7, r3, lsl #2]
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 778              		.loc 1 241 41 is_stmt 1 discriminator 2 view .LVU261
 779              	.LVL91:
 241:packing.c     ****             /* Coefficients are ordered for strong unforgeability */
 780              		.loc 1 241 41 is_stmt 0 discriminator 2 view .LVU262
 781 009c E8E7     		b	.L56
 782              	.LVL92:
 783              	.L61:
 254:packing.c     ****             return 1;
 784              		.loc 1 254 9 is_stmt 1 view .LVU263
 254:packing.c     ****             return 1;
 785              		.loc 1 254 12 is_stmt 0 view .LVU264
 786 009e 18F80320 		ldrb	r2, [r8, r3]	@ zero_extendqisi2
 787 00a2 002A     		cmp	r2, #0
 788 00a4 DAD1     		bne	.L55
 253:packing.c     ****         if (sig[j]) {
 789              		.loc 1 253 28 is_stmt 1 discriminator 2 view .LVU265
 790 00a6 0133     		adds	r3, r3, #1
 791              	.LVL93:
 792              	.L59:
 253:packing.c     ****         if (sig[j]) {
 793              		.loc 1 253 17 discriminator 1 view .LVU266
 253:packing.c     ****         if (sig[j]) {
 794              		.loc 1 253 5 is_stmt 0 discriminator 1 view .LVU267
 795 00a8 4F2B     		cmp	r3, #79
 796 00aa F8D9     		bls	.L61
 259:packing.c     **** }
 797              		.loc 1 259 12 view .LVU268
 798 00ac 0020     		movs	r0, #0
 799 00ae D6E7     		b	.L50
 800              		.cfi_endproc
 801              	.LFE5:
 803              		.text
 804              	.Letext0:
 805              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 806              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 807              		.file 4 "poly.h"
 808              		.file 5 "polyvec.h"
 809              		.file 6 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 packing.c
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:16     .text.PQCLEAN_DILITHIUM2_CLEAN_pack_pk:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:24     .text.PQCLEAN_DILITHIUM2_CLEAN_pack_pk:00000000 PQCLEAN_DILITHIUM2_CLEAN_pack_pk
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:93     .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_pk:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:100    .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_pk:00000000 PQCLEAN_DILITHIUM2_CLEAN_unpack_pk
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:161    .text.PQCLEAN_DILITHIUM2_CLEAN_pack_sk:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:168    .text.PQCLEAN_DILITHIUM2_CLEAN_pack_sk:00000000 PQCLEAN_DILITHIUM2_CLEAN_pack_sk
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:330    .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sk:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:337    .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sk:00000000 PQCLEAN_DILITHIUM2_CLEAN_unpack_sk
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:488    .text.PQCLEAN_DILITHIUM2_CLEAN_pack_sig:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:495    .text.PQCLEAN_DILITHIUM2_CLEAN_pack_sig:00000000 PQCLEAN_DILITHIUM2_CLEAN_pack_sig
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:621    .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sig:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccz0duwc.s:628    .text.PQCLEAN_DILITHIUM2_CLEAN_unpack_sig:00000000 PQCLEAN_DILITHIUM2_CLEAN_unpack_sig

UNDEFINED SYMBOLS
PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack
PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack
PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack
PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack
PQCLEAN_DILITHIUM2_CLEAN_polyz_pack
memset
PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
