   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"poly.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rej_uniform,"ax",%progbits
  16              		.align	1
  17              		.arch armv7e-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	rej_uniform:
  24              	.LVL0:
  25              	.LFB13:
  26              		.file 1 "poly.c"
   1:poly.c        **** #include "ntt.h"
   2:poly.c        **** #include "params.h"
   3:poly.c        **** #include "poly.h"
   4:poly.c        **** #include "reduce.h"
   5:poly.c        **** #include "rounding.h"
   6:poly.c        **** #include "symmetric.h"
   7:poly.c        **** #include <stdint.h>
   8:poly.c        **** 
   9:poly.c        **** #define DBENCH_START()
  10:poly.c        **** #define DBENCH_STOP(t)
  11:poly.c        **** 
  12:poly.c        **** /*************************************************
  13:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_reduce
  14:poly.c        **** *
  15:poly.c        **** * Description: Inplace reduction of all coefficients of polynomial to
  16:poly.c        **** *              representative in [-6283009,6283007].
  17:poly.c        **** *
  18:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  19:poly.c        **** **************************************************/
  20:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_reduce(poly *a) {
  21:poly.c        ****     unsigned int i;
  22:poly.c        ****     DBENCH_START();
  23:poly.c        **** 
  24:poly.c        ****     for (i = 0; i < N; ++i) {
  25:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
  26:poly.c        ****     }
  27:poly.c        **** 
  28:poly.c        ****     DBENCH_STOP(*tred);
  29:poly.c        **** }
  30:poly.c        **** 
  31:poly.c        **** /*************************************************
  32:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_caddq
  33:poly.c        **** *
  34:poly.c        **** * Description: For all coefficients of in/out polynomial add Q if
  35:poly.c        **** *              coefficient is negative.
  36:poly.c        **** *
  37:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  38:poly.c        **** **************************************************/
  39:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_caddq(poly *a) {
  40:poly.c        ****     unsigned int i;
  41:poly.c        ****     DBENCH_START();
  42:poly.c        **** 
  43:poly.c        ****     for (i = 0; i < N; ++i) {
  44:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
  45:poly.c        ****     }
  46:poly.c        **** 
  47:poly.c        ****     DBENCH_STOP(*tred);
  48:poly.c        **** }
  49:poly.c        **** 
  50:poly.c        **** /*************************************************
  51:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_add
  52:poly.c        **** *
  53:poly.c        **** * Description: Add polynomials. No modular reduction is performed.
  54:poly.c        **** *
  55:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
  56:poly.c        **** *              - const poly *a: pointer to first summand
  57:poly.c        **** *              - const poly *b: pointer to second summand
  58:poly.c        **** **************************************************/
  59:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_add(poly *c, const poly *a, const poly *b)  {
  60:poly.c        ****     unsigned int i;
  61:poly.c        ****     DBENCH_START();
  62:poly.c        **** 
  63:poly.c        ****     for (i = 0; i < N; ++i) {
  64:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
  65:poly.c        ****     }
  66:poly.c        **** 
  67:poly.c        ****     DBENCH_STOP(*tadd);
  68:poly.c        **** }
  69:poly.c        **** 
  70:poly.c        **** /*************************************************
  71:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_sub
  72:poly.c        **** *
  73:poly.c        **** * Description: Subtract polynomials. No modular reduction is
  74:poly.c        **** *              performed.
  75:poly.c        **** *
  76:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
  77:poly.c        **** *              - const poly *a: pointer to first input polynomial
  78:poly.c        **** *              - const poly *b: pointer to second input polynomial to be
  79:poly.c        **** *                               subtraced from first input polynomial
  80:poly.c        **** **************************************************/
  81:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_sub(poly *c, const poly *a, const poly *b) {
  82:poly.c        ****     unsigned int i;
  83:poly.c        ****     DBENCH_START();
  84:poly.c        **** 
  85:poly.c        ****     for (i = 0; i < N; ++i) {
  86:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
  87:poly.c        ****     }
  88:poly.c        **** 
  89:poly.c        ****     DBENCH_STOP(*tadd);
  90:poly.c        **** }
  91:poly.c        **** 
  92:poly.c        **** /*************************************************
  93:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl
  94:poly.c        **** *
  95:poly.c        **** * Description: Multiply polynomial by 2^D without modular reduction. Assumes
  96:poly.c        **** *              input coefficients to be less than 2^{31-D} in absolute value.
  97:poly.c        **** *
  98:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
  99:poly.c        **** **************************************************/
 100:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl(poly *a) {
 101:poly.c        ****     unsigned int i;
 102:poly.c        ****     DBENCH_START();
 103:poly.c        **** 
 104:poly.c        ****     for (i = 0; i < N; ++i) {
 105:poly.c        ****         a->coeffs[i] <<= D;
 106:poly.c        ****     }
 107:poly.c        **** 
 108:poly.c        ****     DBENCH_STOP(*tmul);
 109:poly.c        **** }
 110:poly.c        **** 
 111:poly.c        **** /*************************************************
 112:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_ntt
 113:poly.c        **** *
 114:poly.c        **** * Description: Inplace forward NTT. Coefficients can grow by
 115:poly.c        **** *              8*Q in absolute value.
 116:poly.c        **** *
 117:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
 118:poly.c        **** **************************************************/
 119:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_ntt(poly *a) {
 120:poly.c        ****     DBENCH_START();
 121:poly.c        **** 
 122:poly.c        ****     PQCLEAN_DILITHIUM2_CLEAN_ntt(a->coeffs);
 123:poly.c        **** 
 124:poly.c        ****     DBENCH_STOP(*tmul);
 125:poly.c        **** }
 126:poly.c        **** 
 127:poly.c        **** /*************************************************
 128:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont
 129:poly.c        **** *
 130:poly.c        **** * Description: Inplace inverse NTT and multiplication by 2^{32}.
 131:poly.c        **** *              Input coefficients need to be less than Q in absolute
 132:poly.c        **** *              value and output coefficients are again bounded by Q.
 133:poly.c        **** *
 134:poly.c        **** * Arguments:   - poly *a: pointer to input/output polynomial
 135:poly.c        **** **************************************************/
 136:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont(poly *a) {
 137:poly.c        ****     DBENCH_START();
 138:poly.c        **** 
 139:poly.c        ****     PQCLEAN_DILITHIUM2_CLEAN_invntt_tomont(a->coeffs);
 140:poly.c        **** 
 141:poly.c        ****     DBENCH_STOP(*tmul);
 142:poly.c        **** }
 143:poly.c        **** 
 144:poly.c        **** /*************************************************
 145:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery
 146:poly.c        **** *
 147:poly.c        **** * Description: Pointwise multiplication of polynomials in NTT domain
 148:poly.c        **** *              representation and multiplication of resulting polynomial
 149:poly.c        **** *              by 2^{-32}.
 150:poly.c        **** *
 151:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
 152:poly.c        **** *              - const poly *a: pointer to first input polynomial
 153:poly.c        **** *              - const poly *b: pointer to second input polynomial
 154:poly.c        **** **************************************************/
 155:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery(poly *c, const poly *a, const poly *b) {
 156:poly.c        ****     unsigned int i;
 157:poly.c        ****     DBENCH_START();
 158:poly.c        **** 
 159:poly.c        ****     for (i = 0; i < N; ++i) {
 160:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 161:poly.c        ****     }
 162:poly.c        **** 
 163:poly.c        ****     DBENCH_STOP(*tmul);
 164:poly.c        **** }
 165:poly.c        **** 
 166:poly.c        **** /*************************************************
 167:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_power2round
 168:poly.c        **** *
 169:poly.c        **** * Description: For all coefficients c of the input polynomial,
 170:poly.c        **** *              compute c0, c1 such that c mod Q = c1*2^D + c0
 171:poly.c        **** *              with -2^{D-1} < c0 <= 2^{D-1}. Assumes coefficients to be
 172:poly.c        **** *              standard representatives.
 173:poly.c        **** *
 174:poly.c        **** * Arguments:   - poly *a1: pointer to output polynomial with coefficients c1
 175:poly.c        **** *              - poly *a0: pointer to output polynomial with coefficients c0
 176:poly.c        **** *              - const poly *a: pointer to input polynomial
 177:poly.c        **** **************************************************/
 178:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_power2round(poly *a1, poly *a0, const poly *a) {
 179:poly.c        ****     unsigned int i;
 180:poly.c        ****     DBENCH_START();
 181:poly.c        **** 
 182:poly.c        ****     for (i = 0; i < N; ++i) {
 183:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 184:poly.c        ****     }
 185:poly.c        **** 
 186:poly.c        ****     DBENCH_STOP(*tround);
 187:poly.c        **** }
 188:poly.c        **** 
 189:poly.c        **** /*************************************************
 190:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_decompose
 191:poly.c        **** *
 192:poly.c        **** * Description: For all coefficients c of the input polynomial,
 193:poly.c        **** *              compute high and low bits c0, c1 such c mod Q = c1*ALPHA + c0
 194:poly.c        **** *              with -ALPHA/2 < c0 <= ALPHA/2 except c1 = (Q-1)/ALPHA where we
 195:poly.c        **** *              set c1 = 0 and -ALPHA/2 <= c0 = c mod Q - Q < 0.
 196:poly.c        **** *              Assumes coefficients to be standard representatives.
 197:poly.c        **** *
 198:poly.c        **** * Arguments:   - poly *a1: pointer to output polynomial with coefficients c1
 199:poly.c        **** *              - poly *a0: pointer to output polynomial with coefficients c0
 200:poly.c        **** *              - const poly *a: pointer to input polynomial
 201:poly.c        **** **************************************************/
 202:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_decompose(poly *a1, poly *a0, const poly *a) {
 203:poly.c        ****     unsigned int i;
 204:poly.c        ****     DBENCH_START();
 205:poly.c        **** 
 206:poly.c        ****     for (i = 0; i < N; ++i) {
 207:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 208:poly.c        ****     }
 209:poly.c        **** 
 210:poly.c        ****     DBENCH_STOP(*tround);
 211:poly.c        **** }
 212:poly.c        **** 
 213:poly.c        **** /*************************************************
 214:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint
 215:poly.c        **** *
 216:poly.c        **** * Description: Compute hint polynomial. The coefficients of which indicate
 217:poly.c        **** *              whether the low bits of the corresponding coefficient of
 218:poly.c        **** *              the input polynomial overflow into the high bits.
 219:poly.c        **** *
 220:poly.c        **** * Arguments:   - poly *h: pointer to output hint polynomial
 221:poly.c        **** *              - const poly *a0: pointer to low part of input polynomial
 222:poly.c        **** *              - const poly *a1: pointer to high part of input polynomial
 223:poly.c        **** *
 224:poly.c        **** * Returns number of 1 bits.
 225:poly.c        **** **************************************************/
 226:poly.c        **** unsigned int PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint(poly *h, const poly *a0, const poly *a1) {
 227:poly.c        ****     unsigned int i, s = 0;
 228:poly.c        ****     DBENCH_START();
 229:poly.c        **** 
 230:poly.c        ****     for (i = 0; i < N; ++i) {
 231:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 232:poly.c        ****         s += h->coeffs[i];
 233:poly.c        ****     }
 234:poly.c        **** 
 235:poly.c        ****     DBENCH_STOP(*tround);
 236:poly.c        ****     return s;
 237:poly.c        **** }
 238:poly.c        **** 
 239:poly.c        **** /*************************************************
 240:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint
 241:poly.c        **** *
 242:poly.c        **** * Description: Use hint polynomial to correct the high bits of a polynomial.
 243:poly.c        **** *
 244:poly.c        **** * Arguments:   - poly *b: pointer to output polynomial with corrected high bits
 245:poly.c        **** *              - const poly *a: pointer to input polynomial
 246:poly.c        **** *              - const poly *h: pointer to input hint polynomial
 247:poly.c        **** **************************************************/
 248:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint(poly *b, const poly *a, const poly *h) {
 249:poly.c        ****     unsigned int i;
 250:poly.c        ****     DBENCH_START();
 251:poly.c        **** 
 252:poly.c        ****     for (i = 0; i < N; ++i) {
 253:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 254:poly.c        ****     }
 255:poly.c        **** 
 256:poly.c        ****     DBENCH_STOP(*tround);
 257:poly.c        **** }
 258:poly.c        **** 
 259:poly.c        **** /*************************************************
 260:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm
 261:poly.c        **** *
 262:poly.c        **** * Description: Check infinity norm of polynomial against given bound.
 263:poly.c        **** *              Assumes input coefficients were reduced by PQCLEAN_DILITHIUM2_CLEAN_reduce32().
 264:poly.c        **** *
 265:poly.c        **** * Arguments:   - const poly *a: pointer to polynomial
 266:poly.c        **** *              - int32_t B: norm bound
 267:poly.c        **** *
 268:poly.c        **** * Returns 0 if norm is strictly smaller than B <= (Q-1)/8 and 1 otherwise.
 269:poly.c        **** **************************************************/
 270:poly.c        **** int PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm(const poly *a, int32_t B) {
 271:poly.c        ****     unsigned int i;
 272:poly.c        ****     int32_t t;
 273:poly.c        ****     DBENCH_START();
 274:poly.c        **** 
 275:poly.c        ****     if (B > (Q - 1) / 8) {
 276:poly.c        ****         return 1;
 277:poly.c        ****     }
 278:poly.c        **** 
 279:poly.c        ****     /* It is ok to leak which coefficient violates the bound since
 280:poly.c        ****        the probability for each coefficient is independent of secret
 281:poly.c        ****        data but we must not leak the sign of the centralized representative. */
 282:poly.c        ****     for (i = 0; i < N; ++i) {
 283:poly.c        ****         /* Absolute value */
 284:poly.c        ****         t = a->coeffs[i] >> 31;
 285:poly.c        ****         t = a->coeffs[i] - (t & 2 * a->coeffs[i]);
 286:poly.c        **** 
 287:poly.c        ****         if (t >= B) {
 288:poly.c        ****             DBENCH_STOP(*tsample);
 289:poly.c        ****             return 1;
 290:poly.c        ****         }
 291:poly.c        ****     }
 292:poly.c        **** 
 293:poly.c        ****     DBENCH_STOP(*tsample);
 294:poly.c        ****     return 0;
 295:poly.c        **** }
 296:poly.c        **** 
 297:poly.c        **** /*************************************************
 298:poly.c        **** * Name:        rej_uniform
 299:poly.c        **** *
 300:poly.c        **** * Description: Sample uniformly random coefficients in [0, Q-1] by
 301:poly.c        **** *              performing rejection sampling on array of random bytes.
 302:poly.c        **** *
 303:poly.c        **** * Arguments:   - int32_t *a: pointer to output array (allocated)
 304:poly.c        **** *              - unsigned int len: number of coefficients to be sampled
 305:poly.c        **** *              - const uint8_t *buf: array of random bytes
 306:poly.c        **** *              - unsigned int buflen: length of array of random bytes
 307:poly.c        **** *
 308:poly.c        **** * Returns number of sampled coefficients. Can be smaller than len if not enough
 309:poly.c        **** * random bytes were given.
 310:poly.c        **** **************************************************/
 311:poly.c        **** static unsigned int rej_uniform(int32_t *a,
 312:poly.c        ****                                 unsigned int len,
 313:poly.c        ****                                 const uint8_t *buf,
 314:poly.c        ****                                 unsigned int buflen) {
  27              		.loc 1 314 54 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 314 54 is_stmt 0 view .LVU1
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 315:poly.c        ****     unsigned int ctr, pos;
 316:poly.c        ****     uint32_t t;
 317:poly.c        ****     DBENCH_START();
 318:poly.c        **** 
 319:poly.c        ****     ctr = pos = 0;
 320:poly.c        ****     while (ctr < len && pos + 3 <= buflen) {
 321:poly.c        ****         t  = buf[pos++];
 322:poly.c        ****         t |= (uint32_t)buf[pos++] << 8;
 323:poly.c        ****         t |= (uint32_t)buf[pos++] << 16;
 324:poly.c        ****         t &= 0x7FFFFF;
 325:poly.c        **** 
 326:poly.c        ****         if (t < Q) {
  40              		.loc 1 326 12 view .LVU2
  41 0002 0F4F     		ldr	r7, .L6
 314:poly.c        ****     unsigned int ctr, pos;
  42              		.loc 1 314 54 view .LVU3
  43 0004 0546     		mov	r5, r0
 315:poly.c        ****     unsigned int ctr, pos;
  44              		.loc 1 315 5 is_stmt 1 view .LVU4
 316:poly.c        ****     DBENCH_START();
  45              		.loc 1 316 5 view .LVU5
 317:poly.c        **** 
  46              		.loc 1 317 19 view .LVU6
 319:poly.c        ****     while (ctr < len && pos + 3 <= buflen) {
  47              		.loc 1 319 5 view .LVU7
  48              	.LVL1:
 320:poly.c        ****         t  = buf[pos++];
  49              		.loc 1 320 5 view .LVU8
 320:poly.c        ****         t  = buf[pos++];
  50              		.loc 1 320 11 view .LVU9
 320:poly.c        ****         t  = buf[pos++];
  51              		.loc 1 320 22 is_stmt 0 view .LVU10
  52 0006 C2F10306 		rsb	r6, r2, #3
 319:poly.c        ****     while (ctr < len && pos + 3 <= buflen) {
  53              		.loc 1 319 9 view .LVU11
  54 000a 0020     		movs	r0, #0
  55              	.LVL2:
  56              	.L2:
 320:poly.c        ****         t  = buf[pos++];
  57              		.loc 1 320 22 discriminator 1 view .LVU12
  58 000c B418     		adds	r4, r6, r2
  59 000e A342     		cmp	r3, r4
  60 0010 14D3     		bcc	.L1
 321:poly.c        ****         t |= (uint32_t)buf[pos++] << 8;
  61              		.loc 1 321 9 is_stmt 1 view .LVU13
  62              	.LVL3:
 323:poly.c        ****         t &= 0x7FFFFF;
  63              		.loc 1 323 14 is_stmt 0 view .LVU14
  64 0012 9478     		ldrb	r4, [r2, #2]	@ zero_extendqisi2
 322:poly.c        ****         t |= (uint32_t)buf[pos++] << 16;
  65              		.loc 1 322 14 view .LVU15
  66 0014 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 321:poly.c        ****         t |= (uint32_t)buf[pos++] << 8;
  67              		.loc 1 321 12 view .LVU16
  68 0018 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
  69              	.LVL4:
 322:poly.c        ****         t |= (uint32_t)buf[pos++] << 16;
  70              		.loc 1 322 9 is_stmt 1 view .LVU17
 323:poly.c        ****         t &= 0x7FFFFF;
  71              		.loc 1 323 9 view .LVU18
 323:poly.c        ****         t &= 0x7FFFFF;
  72              		.loc 1 323 35 is_stmt 0 view .LVU19
  73 001c 2404     		lsls	r4, r4, #16
 323:poly.c        ****         t &= 0x7FFFFF;
  74              		.loc 1 323 11 view .LVU20
  75 001e 44EA0E24 		orr	r4, r4, lr, lsl #8
  76 0022 44EA0C04 		orr	r4, r4, ip
  77              	.LVL5:
 324:poly.c        **** 
  78              		.loc 1 324 9 is_stmt 1 view .LVU21
 324:poly.c        **** 
  79              		.loc 1 324 11 is_stmt 0 view .LVU22
  80 0026 C4F31604 		ubfx	r4, r4, #0, #23
  81              	.LVL6:
  82              		.loc 1 326 9 is_stmt 1 view .LVU23
  83              		.loc 1 326 12 is_stmt 0 view .LVU24
  84 002a BC42     		cmp	r4, r7
 327:poly.c        ****             a[ctr++] = t;
  85              		.loc 1 327 13 is_stmt 1 view .LVU25
  86              	.LVL7:
  87              		.loc 1 327 22 is_stmt 0 view .LVU26
  88 002c 9CBF     		itt	ls
  89 002e 45F82040 		strls	r4, [r5, r0, lsl #2]
  90              		.loc 1 327 18 view .LVU27
  91 0032 0130     		addls	r0, r0, #1
  92              	.LVL8:
 320:poly.c        ****         t  = buf[pos++];
  93              		.loc 1 320 11 is_stmt 1 view .LVU28
  94 0034 8142     		cmp	r1, r0
  95 0036 02F10302 		add	r2, r2, #3
  96              	.LVL9:
 320:poly.c        ****         t  = buf[pos++];
  97              		.loc 1 320 11 is_stmt 0 view .LVU29
  98 003a E7D8     		bhi	.L2
  99              	.LVL10:
 100              	.L1:
 328:poly.c        ****         }
 329:poly.c        ****     }
 330:poly.c        **** 
 331:poly.c        ****     DBENCH_STOP(*tsample);
 332:poly.c        ****     return ctr;
 333:poly.c        **** }
 101              		.loc 1 333 1 view .LVU30
 102 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 103              	.LVL11:
 104              	.L7:
 105              		.loc 1 333 1 view .LVU31
 106 003e 00BF     		.align	2
 107              	.L6:
 108 0040 00E07F00 		.word	8380416
 109              		.cfi_endproc
 110              	.LFE13:
 112              		.section	.text.rej_eta.constprop.0,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	rej_eta.constprop.0:
 120              	.LVL12:
 121              	.LFB28:
 334:poly.c        **** 
 335:poly.c        **** /*************************************************
 336:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_uniform
 337:poly.c        **** *
 338:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 339:poly.c        **** *              in [0,Q-1] by performing rejection sampling on the
 340:poly.c        **** *              output stream of SHAKE256(seed|nonce)
 341:poly.c        **** *
 342:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 343:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length SEEDBYTES
 344:poly.c        **** *              - uint16_t nonce: 2-byte nonce
 345:poly.c        **** **************************************************/
 346:poly.c        **** #define POLY_UNIFORM_NBLOCKS ((768 + STREAM128_BLOCKBYTES - 1)/STREAM128_BLOCKBYTES)
 347:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_uniform(poly *a,
 348:poly.c        ****         const uint8_t seed[SEEDBYTES],
 349:poly.c        ****         uint16_t nonce) {
 350:poly.c        ****     unsigned int i, ctr, off;
 351:poly.c        ****     unsigned int buflen = POLY_UNIFORM_NBLOCKS * STREAM128_BLOCKBYTES;
 352:poly.c        ****     uint8_t buf[POLY_UNIFORM_NBLOCKS * STREAM128_BLOCKBYTES + 2];
 353:poly.c        ****     stream128_state state;
 354:poly.c        **** 
 355:poly.c        ****     stream128_init(&state, seed, nonce);
 356:poly.c        ****     stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 357:poly.c        **** 
 358:poly.c        ****     ctr = rej_uniform(a->coeffs, N, buf, buflen);
 359:poly.c        **** 
 360:poly.c        ****     while (ctr < N) {
 361:poly.c        ****         off = buflen % 3;
 362:poly.c        ****         for (i = 0; i < off; ++i) {
 363:poly.c        ****             buf[i] = buf[buflen - off + i];
 364:poly.c        ****         }
 365:poly.c        **** 
 366:poly.c        ****         stream128_squeezeblocks(buf + off, 1, &state);
 367:poly.c        ****         buflen = STREAM128_BLOCKBYTES + off;
 368:poly.c        ****         ctr += rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 369:poly.c        ****     }
 370:poly.c        ****     stream128_release(&state);
 371:poly.c        **** }
 372:poly.c        **** 
 373:poly.c        **** /*************************************************
 374:poly.c        **** * Name:        rej_eta
 375:poly.c        **** *
 376:poly.c        **** * Description: Sample uniformly random coefficients in [-ETA, ETA] by
 377:poly.c        **** *              performing rejection sampling on array of random bytes.
 378:poly.c        **** *
 379:poly.c        **** * Arguments:   - int32_t *a: pointer to output array (allocated)
 380:poly.c        **** *              - unsigned int len: number of coefficients to be sampled
 381:poly.c        **** *              - const uint8_t *buf: array of random bytes
 382:poly.c        **** *              - unsigned int buflen: length of array of random bytes
 383:poly.c        **** *
 384:poly.c        **** * Returns number of sampled coefficients. Can be smaller than len if not enough
 385:poly.c        **** * random bytes were given.
 386:poly.c        **** **************************************************/
 387:poly.c        **** static unsigned int rej_eta(int32_t *a,
 122              		.loc 1 387 21 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		.loc 1 387 21 is_stmt 0 view .LVU33
 127 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 20
 130              		.cfi_offset 4, -20
 131              		.cfi_offset 5, -16
 132              		.cfi_offset 6, -12
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 388:poly.c        ****                             unsigned int len,
 389:poly.c        ****                             const uint8_t *buf,
 390:poly.c        ****                             unsigned int buflen) {
 391:poly.c        ****     unsigned int ctr, pos;
 392:poly.c        ****     uint32_t t0, t1;
 393:poly.c        ****     DBENCH_START();
 394:poly.c        **** 
 395:poly.c        ****     ctr = pos = 0;
 396:poly.c        ****     while (ctr < len && pos < buflen) {
 397:poly.c        ****         t0 = buf[pos] & 0x0F;
 398:poly.c        ****         t1 = buf[pos++] >> 4;
 399:poly.c        **** 
 400:poly.c        ****         if (t0 < 15) {
 401:poly.c        ****             t0 = t0 - (205 * t0 >> 10) * 5;
 402:poly.c        ****             a[ctr++] = 2 - t0;
 403:poly.c        ****         }
 404:poly.c        ****         if (t1 < 15 && ctr < len) {
 405:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 135              		.loc 1 405 28 view .LVU34
 136 0002 4FF0CD0C 		mov	ip, #205
 387:poly.c        ****                             unsigned int len,
 137              		.loc 1 387 21 view .LVU35
 138 0006 0646     		mov	r6, r0
 139              	.LVL13:
 396:poly.c        ****         t0 = buf[pos] & 0x0F;
 140              		.loc 1 396 11 is_stmt 1 view .LVU36
 396:poly.c        ****         t0 = buf[pos] & 0x0F;
 141              		.loc 1 396 11 is_stmt 0 view .LVU37
 142 0008 571E     		subs	r7, r2, #1
 143 000a 02F18704 		add	r4, r2, #135
 395:poly.c        ****     while (ctr < len && pos < buflen) {
 144              		.loc 1 395 9 view .LVU38
 145 000e 0020     		movs	r0, #0
 146              	.LVL14:
 147              	.L12:
 397:poly.c        ****         t1 = buf[pos++] >> 4;
 148              		.loc 1 397 9 is_stmt 1 view .LVU39
 397:poly.c        ****         t1 = buf[pos++] >> 4;
 149              		.loc 1 397 17 is_stmt 0 view .LVU40
 150 0010 17F8013F 		ldrb	r3, [r7, #1]!	@ zero_extendqisi2
 151              	.LVL15:
 397:poly.c        ****         t1 = buf[pos++] >> 4;
 152              		.loc 1 397 17 view .LVU41
 153 0014 03F00F0E 		and	lr, r3, #15
 154              	.LVL16:
 398:poly.c        **** 
 155              		.loc 1 398 9 is_stmt 1 view .LVU42
 400:poly.c        ****             t0 = t0 - (205 * t0 >> 10) * 5;
 156              		.loc 1 400 12 is_stmt 0 view .LVU43
 157 0018 BEF10F0F 		cmp	lr, #15
 398:poly.c        **** 
 158              		.loc 1 398 25 view .LVU44
 159 001c 4FEA1313 		lsr	r3, r3, #4
 160              	.LVL17:
 400:poly.c        ****             t0 = t0 - (205 * t0 >> 10) * 5;
 161              		.loc 1 400 9 is_stmt 1 view .LVU45
 400:poly.c        ****             t0 = t0 - (205 * t0 >> 10) * 5;
 162              		.loc 1 400 12 is_stmt 0 view .LVU46
 163 0020 23D0     		beq	.L9
 401:poly.c        ****             a[ctr++] = 2 - t0;
 164              		.loc 1 401 13 is_stmt 1 view .LVU47
 165              	.LVL18:
 402:poly.c        ****         }
 166              		.loc 1 402 13 view .LVU48
 401:poly.c        ****             a[ctr++] = 2 - t0;
 167              		.loc 1 401 28 is_stmt 0 view .LVU49
 168 0022 1EFB0CF2 		smulbb	r2, lr, ip
 401:poly.c        ****             a[ctr++] = 2 - t0;
 169              		.loc 1 401 33 view .LVU50
 170 0026 920A     		lsrs	r2, r2, #10
 401:poly.c        ****             a[ctr++] = 2 - t0;
 171              		.loc 1 401 40 view .LVU51
 172 0028 02EB8202 		add	r2, r2, r2, lsl #2
 402:poly.c        ****         }
 173              		.loc 1 402 26 view .LVU52
 174 002c CEF1020E 		rsb	lr, lr, #2
 175              	.LVL19:
 402:poly.c        ****         }
 176              		.loc 1 402 26 view .LVU53
 177 0030 7244     		add	r2, r2, lr
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 178              		.loc 1 404 12 view .LVU54
 179 0032 0F2B     		cmp	r3, #15
 402:poly.c        ****         }
 180              		.loc 1 402 22 view .LVU55
 181 0034 46F82020 		str	r2, [r6, r0, lsl #2]
 182              	.LVL20:
 402:poly.c        ****         }
 183              		.loc 1 402 18 view .LVU56
 184 0038 00F10105 		add	r5, r0, #1
 185              	.LVL21:
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 186              		.loc 1 404 9 is_stmt 1 view .LVU57
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 187              		.loc 1 404 12 is_stmt 0 view .LVU58
 188 003c 11D0     		beq	.L14
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 189              		.loc 1 404 21 view .LVU59
 190 003e 8D42     		cmp	r5, r1
 191 0040 11D2     		bcs	.L15
 192              	.L13:
 193              		.loc 1 405 13 is_stmt 1 view .LVU60
 194              	.LVL22:
 406:poly.c        ****             a[ctr++] = 2 - t1;
 195              		.loc 1 406 13 view .LVU61
 405:poly.c        ****             a[ctr++] = 2 - t1;
 196              		.loc 1 405 28 is_stmt 0 view .LVU62
 197 0042 13FB0CF2 		smulbb	r2, r3, ip
 405:poly.c        ****             a[ctr++] = 2 - t1;
 198              		.loc 1 405 33 view .LVU63
 199 0046 920A     		lsrs	r2, r2, #10
 405:poly.c        ****             a[ctr++] = 2 - t1;
 200              		.loc 1 405 40 view .LVU64
 201 0048 02EB8202 		add	r2, r2, r2, lsl #2
 202              		.loc 1 406 26 view .LVU65
 203 004c C3F10203 		rsb	r3, r3, #2
 204              	.LVL23:
 205              		.loc 1 406 26 view .LVU66
 206 0050 1A44     		add	r2, r2, r3
 207              		.loc 1 406 22 view .LVU67
 208 0052 46F82520 		str	r2, [r6, r5, lsl #2]
 209              		.loc 1 406 18 view .LVU68
 210 0056 681C     		adds	r0, r5, #1
 211              	.LVL24:
 212              	.L10:
 396:poly.c        ****         t0 = buf[pos] & 0x0F;
 213              		.loc 1 396 11 is_stmt 1 view .LVU69
 214 0058 8142     		cmp	r1, r0
 215 005a 01D9     		bls	.L8
 396:poly.c        ****         t0 = buf[pos] & 0x0F;
 216              		.loc 1 396 22 is_stmt 0 view .LVU70
 217 005c A742     		cmp	r7, r4
 218 005e D7D1     		bne	.L12
 219              	.LVL25:
 220              	.L8:
 407:poly.c        ****         }
 408:poly.c        ****     }
 409:poly.c        **** 
 410:poly.c        ****     DBENCH_STOP(*tsample);
 411:poly.c        ****     return ctr;
 412:poly.c        **** }
 221              		.loc 1 412 1 view .LVU71
 222 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 223              	.LVL26:
 224              	.L14:
 402:poly.c        ****         }
 225              		.loc 1 402 18 view .LVU72
 226 0062 2846     		mov	r0, r5
 227 0064 F8E7     		b	.L10
 228              	.L15:
 402:poly.c        ****         }
 229              		.loc 1 402 18 view .LVU73
 230 0066 2846     		mov	r0, r5
 231              	.LVL27:
 410:poly.c        ****     return ctr;
 232              		.loc 1 410 26 is_stmt 1 view .LVU74
 411:poly.c        **** }
 233              		.loc 1 411 5 view .LVU75
 411:poly.c        **** }
 234              		.loc 1 411 12 is_stmt 0 view .LVU76
 235 0068 FAE7     		b	.L8
 236              	.LVL28:
 237              	.L9:
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 238              		.loc 1 404 9 is_stmt 1 view .LVU77
 404:poly.c        ****             t1 = t1 - (205 * t1 >> 10) * 5;
 239              		.loc 1 404 12 is_stmt 0 view .LVU78
 240 006a 0F2B     		cmp	r3, #15
 241 006c F4D0     		beq	.L10
 242 006e 0546     		mov	r5, r0
 243 0070 E7E7     		b	.L13
 244              		.cfi_endproc
 245              	.LFE28:
 247              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_reduce,"ax",%progbits
 248              		.align	1
 249              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_reduce
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	PQCLEAN_DILITHIUM2_CLEAN_poly_reduce:
 256              	.LVL29:
 257              	.LFB0:
  20:poly.c        ****     unsigned int i;
 258              		.loc 1 20 52 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
  21:poly.c        ****     DBENCH_START();
 262              		.loc 1 21 5 view .LVU80
  22:poly.c        **** 
 263              		.loc 1 22 19 view .LVU81
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 264              		.loc 1 24 5 view .LVU82
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 265              		.loc 1 24 17 view .LVU83
  20:poly.c        ****     unsigned int i;
 266              		.loc 1 20 52 is_stmt 0 view .LVU84
 267 0000 38B5     		push	{r3, r4, r5, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 16
 270              		.cfi_offset 3, -16
 271              		.cfi_offset 4, -12
 272              		.cfi_offset 5, -8
 273              		.cfi_offset 14, -4
 274 0002 051F     		subs	r5, r0, #4
 275 0004 00F57F74 		add	r4, r0, #1020
 276              	.LVL30:
 277              	.L19:
  25:poly.c        ****     }
 278              		.loc 1 25 9 is_stmt 1 discriminator 3 view .LVU85
  25:poly.c        ****     }
 279              		.loc 1 25 24 is_stmt 0 discriminator 3 view .LVU86
 280 0008 55F8040F 		ldr	r0, [r5, #4]!
 281 000c FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_reduce32
 282              	.LVL31:
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 283              		.loc 1 24 5 discriminator 3 view .LVU87
 284 0010 A542     		cmp	r5, r4
  25:poly.c        ****     }
 285              		.loc 1 25 22 discriminator 3 view .LVU88
 286 0012 2860     		str	r0, [r5]
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 287              		.loc 1 24 24 is_stmt 1 discriminator 3 view .LVU89
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 288              		.loc 1 24 17 discriminator 3 view .LVU90
  24:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_reduce32(a->coeffs[i]);
 289              		.loc 1 24 5 is_stmt 0 discriminator 3 view .LVU91
 290 0014 F8D1     		bne	.L19
  29:poly.c        **** 
 291              		.loc 1 29 1 view .LVU92
 292 0016 38BD     		pop	{r3, r4, r5, pc}
  29:poly.c        **** 
 293              		.loc 1 29 1 view .LVU93
 294              		.cfi_endproc
 295              	.LFE0:
 297              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_caddq,"ax",%progbits
 298              		.align	1
 299              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_caddq
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	PQCLEAN_DILITHIUM2_CLEAN_poly_caddq:
 306              	.LVL32:
 307              	.LFB1:
  39:poly.c        ****     unsigned int i;
 308              		.loc 1 39 51 is_stmt 1 view -0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 0
 311              		@ frame_needed = 0, uses_anonymous_args = 0
  40:poly.c        ****     DBENCH_START();
 312              		.loc 1 40 5 view .LVU95
  41:poly.c        **** 
 313              		.loc 1 41 19 view .LVU96
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 314              		.loc 1 43 5 view .LVU97
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 315              		.loc 1 43 17 view .LVU98
  39:poly.c        ****     unsigned int i;
 316              		.loc 1 39 51 is_stmt 0 view .LVU99
 317 0000 38B5     		push	{r3, r4, r5, lr}
 318              	.LCFI3:
 319              		.cfi_def_cfa_offset 16
 320              		.cfi_offset 3, -16
 321              		.cfi_offset 4, -12
 322              		.cfi_offset 5, -8
 323              		.cfi_offset 14, -4
 324 0002 051F     		subs	r5, r0, #4
 325 0004 00F57F74 		add	r4, r0, #1020
 326              	.LVL33:
 327              	.L22:
  44:poly.c        ****     }
 328              		.loc 1 44 9 is_stmt 1 discriminator 3 view .LVU100
  44:poly.c        ****     }
 329              		.loc 1 44 24 is_stmt 0 discriminator 3 view .LVU101
 330 0008 55F8040F 		ldr	r0, [r5, #4]!
 331 000c FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_caddq
 332              	.LVL34:
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 333              		.loc 1 43 5 discriminator 3 view .LVU102
 334 0010 A542     		cmp	r5, r4
  44:poly.c        ****     }
 335              		.loc 1 44 22 discriminator 3 view .LVU103
 336 0012 2860     		str	r0, [r5]
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 337              		.loc 1 43 24 is_stmt 1 discriminator 3 view .LVU104
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 338              		.loc 1 43 17 discriminator 3 view .LVU105
  43:poly.c        ****         a->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_caddq(a->coeffs[i]);
 339              		.loc 1 43 5 is_stmt 0 discriminator 3 view .LVU106
 340 0014 F8D1     		bne	.L22
  48:poly.c        **** 
 341              		.loc 1 48 1 view .LVU107
 342 0016 38BD     		pop	{r3, r4, r5, pc}
  48:poly.c        **** 
 343              		.loc 1 48 1 view .LVU108
 344              		.cfi_endproc
 345              	.LFE1:
 347              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_add,"ax",%progbits
 348              		.align	1
 349              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_add
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	PQCLEAN_DILITHIUM2_CLEAN_poly_add:
 356              	.LVL35:
 357              	.LFB2:
  59:poly.c        ****     unsigned int i;
 358              		.loc 1 59 80 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
  60:poly.c        ****     DBENCH_START();
 362              		.loc 1 60 5 view .LVU110
  61:poly.c        **** 
 363              		.loc 1 61 19 view .LVU111
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 364              		.loc 1 63 5 view .LVU112
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 365              		.loc 1 63 17 view .LVU113
  59:poly.c        ****     unsigned int i;
 366              		.loc 1 59 80 is_stmt 0 view .LVU114
 367 0000 30B5     		push	{r4, r5, lr}
 368              	.LCFI4:
 369              		.cfi_def_cfa_offset 12
 370              		.cfi_offset 4, -12
 371              		.cfi_offset 5, -8
 372              		.cfi_offset 14, -4
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 373              		.loc 1 63 12 view .LVU115
 374 0002 0023     		movs	r3, #0
 375              	.LVL36:
 376              	.L25:
  64:poly.c        ****     }
 377              		.loc 1 64 9 is_stmt 1 discriminator 3 view .LVU116
  64:poly.c        ****     }
 378              		.loc 1 64 37 is_stmt 0 discriminator 3 view .LVU117
 379 0004 51F82340 		ldr	r4, [r1, r3, lsl #2]
 380 0008 52F82350 		ldr	r5, [r2, r3, lsl #2]
 381 000c 2C44     		add	r4, r4, r5
  64:poly.c        ****     }
 382              		.loc 1 64 22 discriminator 3 view .LVU118
 383 000e 40F82340 		str	r4, [r0, r3, lsl #2]
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 384              		.loc 1 63 24 is_stmt 1 discriminator 3 view .LVU119
 385 0012 0133     		adds	r3, r3, #1
 386              	.LVL37:
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 387              		.loc 1 63 17 discriminator 3 view .LVU120
  63:poly.c        ****         c->coeffs[i] = a->coeffs[i] + b->coeffs[i];
 388              		.loc 1 63 5 is_stmt 0 discriminator 3 view .LVU121
 389 0014 B3F5807F 		cmp	r3, #256
 390 0018 F4D1     		bne	.L25
  68:poly.c        **** 
 391              		.loc 1 68 1 view .LVU122
 392 001a 30BD     		pop	{r4, r5, pc}
 393              		.cfi_endproc
 394              	.LFE2:
 396              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_sub,"ax",%progbits
 397              		.align	1
 398              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_sub
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 402              		.fpu softvfp
 404              	PQCLEAN_DILITHIUM2_CLEAN_poly_sub:
 405              	.LVL38:
 406              	.LFB3:
  81:poly.c        ****     unsigned int i;
 407              		.loc 1 81 79 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
  82:poly.c        ****     DBENCH_START();
 411              		.loc 1 82 5 view .LVU124
  83:poly.c        **** 
 412              		.loc 1 83 19 view .LVU125
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 413              		.loc 1 85 5 view .LVU126
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 414              		.loc 1 85 17 view .LVU127
  81:poly.c        ****     unsigned int i;
 415              		.loc 1 81 79 is_stmt 0 view .LVU128
 416 0000 30B5     		push	{r4, r5, lr}
 417              	.LCFI5:
 418              		.cfi_def_cfa_offset 12
 419              		.cfi_offset 4, -12
 420              		.cfi_offset 5, -8
 421              		.cfi_offset 14, -4
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 422              		.loc 1 85 12 view .LVU129
 423 0002 0023     		movs	r3, #0
 424              	.LVL39:
 425              	.L28:
  86:poly.c        ****     }
 426              		.loc 1 86 9 is_stmt 1 discriminator 3 view .LVU130
  86:poly.c        ****     }
 427              		.loc 1 86 37 is_stmt 0 discriminator 3 view .LVU131
 428 0004 51F82340 		ldr	r4, [r1, r3, lsl #2]
 429 0008 52F82350 		ldr	r5, [r2, r3, lsl #2]
 430 000c 641B     		subs	r4, r4, r5
  86:poly.c        ****     }
 431              		.loc 1 86 22 discriminator 3 view .LVU132
 432 000e 40F82340 		str	r4, [r0, r3, lsl #2]
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 433              		.loc 1 85 24 is_stmt 1 discriminator 3 view .LVU133
 434 0012 0133     		adds	r3, r3, #1
 435              	.LVL40:
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 436              		.loc 1 85 17 discriminator 3 view .LVU134
  85:poly.c        ****         c->coeffs[i] = a->coeffs[i] - b->coeffs[i];
 437              		.loc 1 85 5 is_stmt 0 discriminator 3 view .LVU135
 438 0014 B3F5807F 		cmp	r3, #256
 439 0018 F4D1     		bne	.L28
  90:poly.c        **** 
 440              		.loc 1 90 1 view .LVU136
 441 001a 30BD     		pop	{r4, r5, pc}
 442              		.cfi_endproc
 443              	.LFE3:
 445              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl,"ax",%progbits
 446              		.align	1
 447              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl:
 454              	.LVL41:
 455              	.LFB4:
 100:poly.c        ****     unsigned int i;
 456              		.loc 1 100 52 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 101:poly.c        ****     DBENCH_START();
 461              		.loc 1 101 5 view .LVU138
 102:poly.c        **** 
 462              		.loc 1 102 19 view .LVU139
 104:poly.c        ****         a->coeffs[i] <<= D;
 463              		.loc 1 104 5 view .LVU140
 104:poly.c        ****         a->coeffs[i] <<= D;
 464              		.loc 1 104 17 view .LVU141
 465 0000 031F     		subs	r3, r0, #4
 466 0002 00F57F70 		add	r0, r0, #1020
 467              	.LVL42:
 468              	.L31:
 105:poly.c        ****     }
 469              		.loc 1 105 9 discriminator 3 view .LVU142
 105:poly.c        ****     }
 470              		.loc 1 105 22 is_stmt 0 discriminator 3 view .LVU143
 471 0006 53F8042F 		ldr	r2, [r3, #4]!
 472 000a 5203     		lsls	r2, r2, #13
 104:poly.c        ****         a->coeffs[i] <<= D;
 473              		.loc 1 104 5 discriminator 3 view .LVU144
 474 000c 8342     		cmp	r3, r0
 105:poly.c        ****     }
 475              		.loc 1 105 22 discriminator 3 view .LVU145
 476 000e 1A60     		str	r2, [r3]
 104:poly.c        ****         a->coeffs[i] <<= D;
 477              		.loc 1 104 24 is_stmt 1 discriminator 3 view .LVU146
 104:poly.c        ****         a->coeffs[i] <<= D;
 478              		.loc 1 104 17 discriminator 3 view .LVU147
 104:poly.c        ****         a->coeffs[i] <<= D;
 479              		.loc 1 104 5 is_stmt 0 discriminator 3 view .LVU148
 480 0010 F9D1     		bne	.L31
 109:poly.c        **** 
 481              		.loc 1 109 1 view .LVU149
 482 0012 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE4:
 486              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_ntt,"ax",%progbits
 487              		.align	1
 488              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_ntt
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu softvfp
 494              	PQCLEAN_DILITHIUM2_CLEAN_poly_ntt:
 495              	.LVL43:
 496              	.LFB5:
 119:poly.c        ****     DBENCH_START();
 497              		.loc 1 119 49 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 120:poly.c        **** 
 502              		.loc 1 120 19 view .LVU151
 122:poly.c        **** 
 503              		.loc 1 122 5 view .LVU152
 504 0000 FFF7FEBF 		b	PQCLEAN_DILITHIUM2_CLEAN_ntt
 505              	.LVL44:
 122:poly.c        **** 
 506              		.loc 1 122 5 is_stmt 0 view .LVU153
 507              		.cfi_endproc
 508              	.LFE5:
 510              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont,"ax",%progbits
 511              		.align	1
 512              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu softvfp
 518              	PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont:
 519              	.LVL45:
 520              	.LFB6:
 136:poly.c        ****     DBENCH_START();
 521              		.loc 1 136 59 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 137:poly.c        **** 
 526              		.loc 1 137 19 view .LVU155
 139:poly.c        **** 
 527              		.loc 1 139 5 view .LVU156
 528 0000 FFF7FEBF 		b	PQCLEAN_DILITHIUM2_CLEAN_invntt_tomont
 529              	.LVL46:
 139:poly.c        **** 
 530              		.loc 1 139 5 is_stmt 0 view .LVU157
 531              		.cfi_endproc
 532              	.LFE6:
 534              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery,"ax",%progbits
 535              		.align	1
 536              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery
 537              		.syntax unified
 538              		.thumb
 539              		.thumb_func
 540              		.fpu softvfp
 542              	PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery:
 543              	.LVL47:
 544              	.LFB7:
 155:poly.c        ****     unsigned int i;
 545              		.loc 1 155 96 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 156:poly.c        ****     DBENCH_START();
 549              		.loc 1 156 5 view .LVU159
 157:poly.c        **** 
 550              		.loc 1 157 19 view .LVU160
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 551              		.loc 1 159 5 view .LVU161
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 552              		.loc 1 159 17 view .LVU162
 155:poly.c        ****     unsigned int i;
 553              		.loc 1 155 96 is_stmt 0 view .LVU163
 554 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 555              	.LCFI6:
 556              		.cfi_def_cfa_offset 24
 557              		.cfi_offset 3, -24
 558              		.cfi_offset 4, -20
 559              		.cfi_offset 5, -16
 560              		.cfi_offset 6, -12
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 155:poly.c        ****     unsigned int i;
 563              		.loc 1 155 96 view .LVU164
 564 0002 0546     		mov	r5, r0
 565 0004 0F46     		mov	r7, r1
 566 0006 1646     		mov	r6, r2
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 567              		.loc 1 159 12 view .LVU165
 568 0008 0024     		movs	r4, #0
 569              	.LVL48:
 570              	.L36:
 160:poly.c        ****     }
 571              		.loc 1 160 9 is_stmt 1 discriminator 3 view .LVU166
 160:poly.c        ****     }
 572              		.loc 1 160 24 is_stmt 0 discriminator 3 view .LVU167
 573 000a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 574 000e 56F82400 		ldr	r0, [r6, r4, lsl #2]
 575 0012 81FB0001 		smull	r0, r1, r1, r0
 576 0016 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce
 577              	.LVL49:
 160:poly.c        ****     }
 578              		.loc 1 160 22 discriminator 3 view .LVU168
 579 001a 45F82400 		str	r0, [r5, r4, lsl #2]
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 580              		.loc 1 159 24 is_stmt 1 discriminator 3 view .LVU169
 581 001e 0134     		adds	r4, r4, #1
 582              	.LVL50:
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 583              		.loc 1 159 17 discriminator 3 view .LVU170
 159:poly.c        ****         c->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((int64_t)a->coeffs[i] * b->coeffs
 584              		.loc 1 159 5 is_stmt 0 discriminator 3 view .LVU171
 585 0020 B4F5807F 		cmp	r4, #256
 586 0024 F1D1     		bne	.L36
 164:poly.c        **** 
 587              		.loc 1 164 1 view .LVU172
 588 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 164:poly.c        **** 
 589              		.loc 1 164 1 view .LVU173
 590              		.cfi_endproc
 591              	.LFE7:
 593              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_power2round,"ax",%progbits
 594              		.align	1
 595              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_power2round
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu softvfp
 601              	PQCLEAN_DILITHIUM2_CLEAN_poly_power2round:
 602              	.LVL51:
 603              	.LFB8:
 178:poly.c        ****     unsigned int i;
 604              		.loc 1 178 83 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 179:poly.c        ****     DBENCH_START();
 608              		.loc 1 179 5 view .LVU175
 180:poly.c        **** 
 609              		.loc 1 180 19 view .LVU176
 182:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 610              		.loc 1 182 5 view .LVU177
 182:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 611              		.loc 1 182 17 view .LVU178
 178:poly.c        ****     unsigned int i;
 612              		.loc 1 178 83 is_stmt 0 view .LVU179
 613 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 614              	.LCFI7:
 615              		.cfi_def_cfa_offset 24
 616              		.cfi_offset 3, -24
 617              		.cfi_offset 4, -20
 618              		.cfi_offset 5, -16
 619              		.cfi_offset 6, -12
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 178:poly.c        ****     unsigned int i;
 622              		.loc 1 178 83 view .LVU180
 623 0002 0546     		mov	r5, r0
 624 0004 0E46     		mov	r6, r1
 625 0006 1746     		mov	r7, r2
 626 0008 0024     		movs	r4, #0
 627              	.LVL52:
 628              	.L39:
 183:poly.c        ****     }
 629              		.loc 1 183 9 is_stmt 1 discriminator 3 view .LVU181
 183:poly.c        ****     }
 630              		.loc 1 183 25 is_stmt 0 discriminator 3 view .LVU182
 631 000a 3959     		ldr	r1, [r7, r4]
 632 000c 3019     		adds	r0, r6, r4
 633 000e FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_power2round
 634              	.LVL53:
 183:poly.c        ****     }
 635              		.loc 1 183 23 discriminator 3 view .LVU183
 636 0012 2851     		str	r0, [r5, r4]
 182:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 637              		.loc 1 182 24 is_stmt 1 discriminator 3 view .LVU184
 182:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 638              		.loc 1 182 17 discriminator 3 view .LVU185
 182:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_power2round(&a0->coeffs[i], a->coeffs[i]);
 639              		.loc 1 182 5 is_stmt 0 discriminator 3 view .LVU186
 640 0014 0434     		adds	r4, r4, #4
 641 0016 B4F5806F 		cmp	r4, #1024
 642 001a F6D1     		bne	.L39
 187:poly.c        **** 
 643              		.loc 1 187 1 view .LVU187
 644 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 187:poly.c        **** 
 645              		.loc 1 187 1 view .LVU188
 646              		.cfi_endproc
 647              	.LFE8:
 649              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_decompose,"ax",%progbits
 650              		.align	1
 651              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_decompose
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu softvfp
 657              	PQCLEAN_DILITHIUM2_CLEAN_poly_decompose:
 658              	.LVL54:
 659              	.LFB9:
 202:poly.c        ****     unsigned int i;
 660              		.loc 1 202 81 is_stmt 1 view -0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 203:poly.c        ****     DBENCH_START();
 664              		.loc 1 203 5 view .LVU190
 204:poly.c        **** 
 665              		.loc 1 204 19 view .LVU191
 206:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 666              		.loc 1 206 5 view .LVU192
 206:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 667              		.loc 1 206 17 view .LVU193
 202:poly.c        ****     unsigned int i;
 668              		.loc 1 202 81 is_stmt 0 view .LVU194
 669 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 670              	.LCFI8:
 671              		.cfi_def_cfa_offset 24
 672              		.cfi_offset 3, -24
 673              		.cfi_offset 4, -20
 674              		.cfi_offset 5, -16
 675              		.cfi_offset 6, -12
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 202:poly.c        ****     unsigned int i;
 678              		.loc 1 202 81 view .LVU195
 679 0002 0546     		mov	r5, r0
 680 0004 0E46     		mov	r6, r1
 681 0006 1746     		mov	r7, r2
 682 0008 0024     		movs	r4, #0
 683              	.LVL55:
 684              	.L42:
 207:poly.c        ****     }
 685              		.loc 1 207 9 is_stmt 1 discriminator 3 view .LVU196
 207:poly.c        ****     }
 686              		.loc 1 207 25 is_stmt 0 discriminator 3 view .LVU197
 687 000a 3959     		ldr	r1, [r7, r4]
 688 000c 3019     		adds	r0, r6, r4
 689 000e FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_decompose
 690              	.LVL56:
 207:poly.c        ****     }
 691              		.loc 1 207 23 discriminator 3 view .LVU198
 692 0012 2851     		str	r0, [r5, r4]
 206:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 693              		.loc 1 206 24 is_stmt 1 discriminator 3 view .LVU199
 206:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 694              		.loc 1 206 17 discriminator 3 view .LVU200
 206:poly.c        ****         a1->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_decompose(&a0->coeffs[i], a->coeffs[i]);
 695              		.loc 1 206 5 is_stmt 0 discriminator 3 view .LVU201
 696 0014 0434     		adds	r4, r4, #4
 697 0016 B4F5806F 		cmp	r4, #1024
 698 001a F6D1     		bne	.L42
 211:poly.c        **** 
 699              		.loc 1 211 1 view .LVU202
 700 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 211:poly.c        **** 
 701              		.loc 1 211 1 view .LVU203
 702              		.cfi_endproc
 703              	.LFE9:
 705              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint,"ax",%progbits
 706              		.align	1
 707              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu softvfp
 713              	PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint:
 714              	.LVL57:
 715              	.LFB10:
 226:poly.c        ****     unsigned int i, s = 0;
 716              		.loc 1 226 95 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 227:poly.c        ****     DBENCH_START();
 720              		.loc 1 227 5 view .LVU205
 228:poly.c        **** 
 721              		.loc 1 228 19 view .LVU206
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 722              		.loc 1 230 5 view .LVU207
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 723              		.loc 1 230 17 view .LVU208
 226:poly.c        ****     unsigned int i, s = 0;
 724              		.loc 1 226 95 is_stmt 0 view .LVU209
 725 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 726              	.LCFI9:
 727              		.cfi_def_cfa_offset 24
 728              		.cfi_offset 4, -24
 729              		.cfi_offset 5, -20
 730              		.cfi_offset 6, -16
 731              		.cfi_offset 7, -12
 732              		.cfi_offset 8, -8
 733              		.cfi_offset 14, -4
 227:poly.c        ****     DBENCH_START();
 734              		.loc 1 227 21 view .LVU210
 735 0004 0025     		movs	r5, #0
 226:poly.c        ****     unsigned int i, s = 0;
 736              		.loc 1 226 95 view .LVU211
 737 0006 0646     		mov	r6, r0
 738 0008 0F46     		mov	r7, r1
 739 000a 9046     		mov	r8, r2
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 740              		.loc 1 230 12 view .LVU212
 741 000c 2C46     		mov	r4, r5
 742              	.LVL58:
 743              	.L45:
 231:poly.c        ****         s += h->coeffs[i];
 744              		.loc 1 231 9 is_stmt 1 discriminator 3 view .LVU213
 231:poly.c        ****         s += h->coeffs[i];
 745              		.loc 1 231 24 is_stmt 0 discriminator 3 view .LVU214
 746 000e 58F82410 		ldr	r1, [r8, r4, lsl #2]
 747 0012 57F82400 		ldr	r0, [r7, r4, lsl #2]
 748 0016 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_make_hint
 749              	.LVL59:
 231:poly.c        ****         s += h->coeffs[i];
 750              		.loc 1 231 22 discriminator 3 view .LVU215
 751 001a 46F82400 		str	r0, [r6, r4, lsl #2]
 232:poly.c        ****     }
 752              		.loc 1 232 9 is_stmt 1 discriminator 3 view .LVU216
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 753              		.loc 1 230 24 is_stmt 0 discriminator 3 view .LVU217
 754 001e 0134     		adds	r4, r4, #1
 755              	.LVL60:
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 756              		.loc 1 230 5 discriminator 3 view .LVU218
 757 0020 B4F5807F 		cmp	r4, #256
 232:poly.c        ****     }
 758              		.loc 1 232 11 discriminator 3 view .LVU219
 759 0024 0544     		add	r5, r5, r0
 760              	.LVL61:
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 761              		.loc 1 230 24 is_stmt 1 discriminator 3 view .LVU220
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 762              		.loc 1 230 17 discriminator 3 view .LVU221
 230:poly.c        ****         h->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_make_hint(a0->coeffs[i], a1->coeffs[i]);
 763              		.loc 1 230 5 is_stmt 0 discriminator 3 view .LVU222
 764 0026 F2D1     		bne	.L45
 235:poly.c        ****     return s;
 765              		.loc 1 235 25 is_stmt 1 view .LVU223
 236:poly.c        **** }
 766              		.loc 1 236 5 view .LVU224
 237:poly.c        **** 
 767              		.loc 1 237 1 is_stmt 0 view .LVU225
 768 0028 2846     		mov	r0, r5
 769 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 237:poly.c        **** 
 770              		.loc 1 237 1 view .LVU226
 771              		.cfi_endproc
 772              	.LFE10:
 774              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint,"ax",%progbits
 775              		.align	1
 776              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint:
 783              	.LVL62:
 784              	.LFB11:
 248:poly.c        ****     unsigned int i;
 785              		.loc 1 248 84 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 249:poly.c        ****     DBENCH_START();
 789              		.loc 1 249 5 view .LVU228
 250:poly.c        **** 
 790              		.loc 1 250 19 view .LVU229
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 791              		.loc 1 252 5 view .LVU230
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 792              		.loc 1 252 17 view .LVU231
 248:poly.c        ****     unsigned int i;
 793              		.loc 1 248 84 is_stmt 0 view .LVU232
 794 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 795              	.LCFI10:
 796              		.cfi_def_cfa_offset 24
 797              		.cfi_offset 3, -24
 798              		.cfi_offset 4, -20
 799              		.cfi_offset 5, -16
 800              		.cfi_offset 6, -12
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 248:poly.c        ****     unsigned int i;
 803              		.loc 1 248 84 view .LVU233
 804 0002 0546     		mov	r5, r0
 805 0004 0E46     		mov	r6, r1
 806 0006 1746     		mov	r7, r2
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 807              		.loc 1 252 12 view .LVU234
 808 0008 0024     		movs	r4, #0
 809              	.LVL63:
 810              	.L48:
 253:poly.c        ****     }
 811              		.loc 1 253 9 is_stmt 1 discriminator 3 view .LVU235
 253:poly.c        ****     }
 812              		.loc 1 253 24 is_stmt 0 discriminator 3 view .LVU236
 813 000a 57F82410 		ldr	r1, [r7, r4, lsl #2]
 814 000e 56F82400 		ldr	r0, [r6, r4, lsl #2]
 815 0012 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_use_hint
 816              	.LVL64:
 253:poly.c        ****     }
 817              		.loc 1 253 22 discriminator 3 view .LVU237
 818 0016 45F82400 		str	r0, [r5, r4, lsl #2]
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 819              		.loc 1 252 24 is_stmt 1 discriminator 3 view .LVU238
 820 001a 0134     		adds	r4, r4, #1
 821              	.LVL65:
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 822              		.loc 1 252 17 discriminator 3 view .LVU239
 252:poly.c        ****         b->coeffs[i] = PQCLEAN_DILITHIUM2_CLEAN_use_hint(a->coeffs[i], h->coeffs[i]);
 823              		.loc 1 252 5 is_stmt 0 discriminator 3 view .LVU240
 824 001c B4F5807F 		cmp	r4, #256
 825 0020 F3D1     		bne	.L48
 257:poly.c        **** 
 826              		.loc 1 257 1 view .LVU241
 827 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 257:poly.c        **** 
 828              		.loc 1 257 1 view .LVU242
 829              		.cfi_endproc
 830              	.LFE11:
 832              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm,"ax",%progbits
 833              		.align	1
 834              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu softvfp
 840              	PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm:
 841              	.LVL66:
 842              	.LFB12:
 270:poly.c        ****     unsigned int i;
 843              		.loc 1 270 69 is_stmt 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 271:poly.c        ****     int32_t t;
 847              		.loc 1 271 5 view .LVU244
 272:poly.c        ****     DBENCH_START();
 848              		.loc 1 272 5 view .LVU245
 273:poly.c        **** 
 849              		.loc 1 273 19 view .LVU246
 275:poly.c        ****         return 1;
 850              		.loc 1 275 5 view .LVU247
 275:poly.c        ****         return 1;
 851              		.loc 1 275 8 is_stmt 0 view .LVU248
 852 0000 0A4B     		ldr	r3, .L56
 853 0002 9942     		cmp	r1, r3
 270:poly.c        ****     unsigned int i;
 854              		.loc 1 270 69 view .LVU249
 855 0004 10B5     		push	{r4, lr}
 856              	.LCFI11:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 4, -8
 859              		.cfi_offset 14, -4
 275:poly.c        ****         return 1;
 860              		.loc 1 275 8 view .LVU250
 861 0006 0EDC     		bgt	.L54
 862 0008 021F     		subs	r2, r0, #4
 863 000a 00F57F70 		add	r0, r0, #1020
 864              	.LVL67:
 865              	.L52:
 284:poly.c        ****         t = a->coeffs[i] - (t & 2 * a->coeffs[i]);
 866              		.loc 1 284 9 is_stmt 1 view .LVU251
 284:poly.c        ****         t = a->coeffs[i] - (t & 2 * a->coeffs[i]);
 867              		.loc 1 284 22 is_stmt 0 view .LVU252
 868 000e 52F8043F 		ldr	r3, [r2, #4]!
 869              	.LVL68:
 285:poly.c        **** 
 870              		.loc 1 285 9 is_stmt 1 view .LVU253
 284:poly.c        ****         t = a->coeffs[i] - (t & 2 * a->coeffs[i]);
 871              		.loc 1 284 11 is_stmt 0 view .LVU254
 872 0012 DC17     		asrs	r4, r3, #31
 873              	.LVL69:
 285:poly.c        **** 
 874              		.loc 1 285 31 view .LVU255
 875 0014 04EA4304 		and	r4, r4, r3, lsl #1
 876              	.LVL70:
 287:poly.c        ****             DBENCH_STOP(*tsample);
 877              		.loc 1 287 9 is_stmt 1 view .LVU256
 285:poly.c        **** 
 878              		.loc 1 285 11 is_stmt 0 view .LVU257
 879 0018 1B1B     		subs	r3, r3, r4
 880              	.LVL71:
 287:poly.c        ****             DBENCH_STOP(*tsample);
 881              		.loc 1 287 12 view .LVU258
 882 001a 9942     		cmp	r1, r3
 883 001c 03DD     		ble	.L54
 282:poly.c        ****         /* Absolute value */
 884              		.loc 1 282 24 is_stmt 1 discriminator 2 view .LVU259
 282:poly.c        ****         /* Absolute value */
 885              		.loc 1 282 17 discriminator 2 view .LVU260
 282:poly.c        ****         /* Absolute value */
 886              		.loc 1 282 5 is_stmt 0 discriminator 2 view .LVU261
 887 001e 8242     		cmp	r2, r0
 888 0020 F5D1     		bne	.L52
 294:poly.c        **** }
 889              		.loc 1 294 12 view .LVU262
 890 0022 0020     		movs	r0, #0
 891              	.LVL72:
 892              	.L50:
 295:poly.c        **** 
 893              		.loc 1 295 1 view .LVU263
 894 0024 10BD     		pop	{r4, pc}
 895              	.L54:
 276:poly.c        ****     }
 896              		.loc 1 276 16 view .LVU264
 897 0026 0120     		movs	r0, #1
 898 0028 FCE7     		b	.L50
 899              	.L57:
 900 002a 00BF     		.align	2
 901              	.L56:
 902 002c 00FC0F00 		.word	1047552
 903              		.cfi_endproc
 904              	.LFE12:
 906              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform,"ax",%progbits
 907              		.align	1
 908              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu softvfp
 914              	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform:
 915              	.LVL73:
 916              	.LFB14:
 349:poly.c        ****     unsigned int i, ctr, off;
 917              		.loc 1 349 25 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 848
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 350:poly.c        ****     unsigned int buflen = POLY_UNIFORM_NBLOCKS * STREAM128_BLOCKBYTES;
 921              		.loc 1 350 5 view .LVU266
 351:poly.c        ****     uint8_t buf[POLY_UNIFORM_NBLOCKS * STREAM128_BLOCKBYTES + 2];
 922              		.loc 1 351 5 view .LVU267
 352:poly.c        ****     stream128_state state;
 923              		.loc 1 352 5 view .LVU268
 353:poly.c        **** 
 924              		.loc 1 353 5 view .LVU269
 355:poly.c        ****     stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 925              		.loc 1 355 5 view .LVU270
 349:poly.c        ****     unsigned int i, ctr, off;
 926              		.loc 1 349 25 is_stmt 0 view .LVU271
 927 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 928              	.LCFI12:
 929              		.cfi_def_cfa_offset 20
 930              		.cfi_offset 4, -20
 931              		.cfi_offset 5, -16
 932              		.cfi_offset 6, -12
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 ADF5557D 		sub	sp, sp, #852
 936              	.LCFI13:
 937              		.cfi_def_cfa_offset 872
 349:poly.c        ****     unsigned int i, ctr, off;
 938              		.loc 1 349 25 view .LVU272
 939 0006 0646     		mov	r6, r0
 355:poly.c        ****     stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 940              		.loc 1 355 5 view .LVU273
 941 0008 6846     		mov	r0, sp
 942              	.LVL74:
 355:poly.c        ****     stream128_squeezeblocks(buf, POLY_UNIFORM_NBLOCKS, &state);
 943              		.loc 1 355 5 view .LVU274
 944 000a FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_dilithium_shake128_stream_init
 945              	.LVL75:
 356:poly.c        **** 
 946              		.loc 1 356 5 is_stmt 1 view .LVU275
 947 000e 6A46     		mov	r2, sp
 948 0010 4FF45271 		mov	r1, #840
 949 0014 01A8     		add	r0, sp, #4
 950 0016 FFF7FEFF 		bl	shake128_inc_squeeze
 951              	.LVL76:
 358:poly.c        **** 
 952              		.loc 1 358 5 view .LVU276
 358:poly.c        **** 
 953              		.loc 1 358 11 is_stmt 0 view .LVU277
 954 001a 4FF45273 		mov	r3, #840
 955 001e 01AA     		add	r2, sp, #4
 956 0020 4FF48071 		mov	r1, #256
 957 0024 3046     		mov	r0, r6
 958 0026 FFF7FEFF 		bl	rej_uniform
 959              	.LVL77:
 361:poly.c        ****         for (i = 0; i < off; ++i) {
 960              		.loc 1 361 13 view .LVU278
 961 002a 0327     		movs	r7, #3
 358:poly.c        **** 
 962              		.loc 1 358 11 view .LVU279
 963 002c 0446     		mov	r4, r0
 964              	.LVL78:
 360:poly.c        ****         off = buflen % 3;
 965              		.loc 1 360 5 is_stmt 1 view .LVU280
 966              	.L59:
 360:poly.c        ****         off = buflen % 3;
 967              		.loc 1 360 11 view .LVU281
 968 002e FF2C     		cmp	r4, #255
 969 0030 05D9     		bls	.L62
 370:poly.c        **** }
 970              		.loc 1 370 5 view .LVU282
 971 0032 6846     		mov	r0, sp
 972 0034 FFF7FEFF 		bl	shake128_inc_ctx_release
 973              	.LVL79:
 371:poly.c        **** 
 974              		.loc 1 371 1 is_stmt 0 view .LVU283
 975 0038 0DF5557D 		add	sp, sp, #852
 976              	.LCFI14:
 977              		.cfi_remember_state
 978              		.cfi_def_cfa_offset 20
 979              		@ sp needed
 980 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 981              	.LVL80:
 982              	.L62:
 983              	.LCFI15:
 984              		.cfi_restore_state
 361:poly.c        ****         for (i = 0; i < off; ++i) {
 985              		.loc 1 361 9 is_stmt 1 view .LVU284
 361:poly.c        ****         for (i = 0; i < off; ++i) {
 986              		.loc 1 361 13 is_stmt 0 view .LVU285
 987 003e B3FBF7F2 		udiv	r2, r3, r7
 988 0042 02EB4202 		add	r2, r2, r2, lsl #1
 989 0046 981A     		subs	r0, r3, r2
 990              	.LVL81:
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 991              		.loc 1 362 9 is_stmt 1 view .LVU286
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 992              		.loc 1 362 9 is_stmt 0 view .LVU287
 993 0048 01A9     		add	r1, sp, #4
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 994              		.loc 1 362 16 view .LVU288
 995 004a 0025     		movs	r5, #0
 363:poly.c        ****         }
 996              		.loc 1 363 25 view .LVU289
 997 004c D21A     		subs	r2, r2, r3
 998              	.LVL82:
 999              	.L60:
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 1000              		.loc 1 362 21 is_stmt 1 discriminator 1 view .LVU290
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 1001              		.loc 1 362 9 is_stmt 0 discriminator 1 view .LVU291
 1002 004e 8542     		cmp	r5, r0
 1003 0050 10D1     		bne	.L61
 366:poly.c        ****         buflen = STREAM128_BLOCKBYTES + off;
 1004              		.loc 1 366 9 is_stmt 1 view .LVU292
 1005 0052 01AB     		add	r3, sp, #4
 1006              	.LVL83:
 366:poly.c        ****         buflen = STREAM128_BLOCKBYTES + off;
 1007              		.loc 1 366 9 is_stmt 0 view .LVU293
 1008 0054 5819     		adds	r0, r3, r5
 1009              	.LVL84:
 366:poly.c        ****         buflen = STREAM128_BLOCKBYTES + off;
 1010              		.loc 1 366 9 view .LVU294
 1011 0056 6A46     		mov	r2, sp
 1012 0058 A821     		movs	r1, #168
 1013 005a FFF7FEFF 		bl	shake128_inc_squeeze
 1014              	.LVL85:
 367:poly.c        ****         ctr += rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 1015              		.loc 1 367 9 is_stmt 1 view .LVU295
 368:poly.c        ****     }
 1016              		.loc 1 368 16 is_stmt 0 view .LVU296
 1017 005e C4F58071 		rsb	r1, r4, #256
 1018 0062 06EB8400 		add	r0, r6, r4, lsl #2
 367:poly.c        ****         ctr += rej_uniform(a->coeffs + ctr, N - ctr, buf, buflen);
 1019              		.loc 1 367 16 view .LVU297
 1020 0066 05F1A803 		add	r3, r5, #168
 1021              	.LVL86:
 368:poly.c        ****     }
 1022              		.loc 1 368 9 is_stmt 1 view .LVU298
 368:poly.c        ****     }
 1023              		.loc 1 368 16 is_stmt 0 view .LVU299
 1024 006a 01AA     		add	r2, sp, #4
 1025 006c FFF7FEFF 		bl	rej_uniform
 1026              	.LVL87:
 368:poly.c        ****     }
 1027              		.loc 1 368 13 view .LVU300
 1028 0070 0444     		add	r4, r4, r0
 1029              	.LVL88:
 368:poly.c        ****     }
 1030              		.loc 1 368 13 view .LVU301
 1031 0072 DCE7     		b	.L59
 1032              	.LVL89:
 1033              	.L61:
 363:poly.c        ****         }
 1034              		.loc 1 363 13 is_stmt 1 discriminator 3 view .LVU302
 363:poly.c        ****         }
 1035              		.loc 1 363 25 is_stmt 0 discriminator 3 view .LVU303
 1036 0074 03EB010C 		add	ip, r3, r1
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 1037              		.loc 1 362 30 discriminator 3 view .LVU304
 1038 0078 0135     		adds	r5, r5, #1
 1039              	.LVL90:
 363:poly.c        ****         }
 1040              		.loc 1 363 25 discriminator 3 view .LVU305
 1041 007a 1CF802C0 		ldrb	ip, [ip, r2]	@ zero_extendqisi2
 363:poly.c        ****         }
 1042              		.loc 1 363 20 discriminator 3 view .LVU306
 1043 007e 01F801CB 		strb	ip, [r1], #1
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 1044              		.loc 1 362 30 is_stmt 1 discriminator 3 view .LVU307
 1045              	.LVL91:
 362:poly.c        ****             buf[i] = buf[buflen - off + i];
 1046              		.loc 1 362 30 is_stmt 0 discriminator 3 view .LVU308
 1047 0082 E4E7     		b	.L60
 1048              		.cfi_endproc
 1049              	.LFE14:
 1051              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta,"ax",%progbits
 1052              		.align	1
 1053              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu softvfp
 1059              	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta:
 1060              	.LVL92:
 1061              	.LFB16:
 413:poly.c        **** 
 414:poly.c        **** /*************************************************
 415:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta
 416:poly.c        **** *
 417:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 418:poly.c        **** *              in [-ETA,ETA] by performing rejection sampling on the
 419:poly.c        **** *              output stream from SHAKE256(seed|nonce)
 420:poly.c        **** *
 421:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 422:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length CRHBYTES
 423:poly.c        **** *              - uint16_t nonce: 2-byte nonce
 424:poly.c        **** **************************************************/
 425:poly.c        **** #define POLY_UNIFORM_ETA_NBLOCKS ((136 + STREAM256_BLOCKBYTES - 1)/STREAM256_BLOCKBYTES)
 426:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta(poly *a,
 427:poly.c        ****         const uint8_t seed[CRHBYTES],
 428:poly.c        ****         uint16_t nonce) {
 1062              		.loc 1 428 25 is_stmt 1 view -0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 144
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 429:poly.c        ****     unsigned int ctr;
 1066              		.loc 1 429 5 view .LVU310
 430:poly.c        ****     unsigned int buflen = POLY_UNIFORM_ETA_NBLOCKS * STREAM256_BLOCKBYTES;
 1067              		.loc 1 430 5 view .LVU311
 431:poly.c        ****     uint8_t buf[POLY_UNIFORM_ETA_NBLOCKS * STREAM256_BLOCKBYTES];
 1068              		.loc 1 431 5 view .LVU312
 432:poly.c        ****     stream256_state state;
 1069              		.loc 1 432 5 view .LVU313
 433:poly.c        **** 
 434:poly.c        ****     stream256_init(&state, seed, nonce);
 1070              		.loc 1 434 5 view .LVU314
 428:poly.c        ****     unsigned int ctr;
 1071              		.loc 1 428 25 is_stmt 0 view .LVU315
 1072 0000 30B5     		push	{r4, r5, lr}
 1073              	.LCFI16:
 1074              		.cfi_def_cfa_offset 12
 1075              		.cfi_offset 4, -12
 1076              		.cfi_offset 5, -8
 1077              		.cfi_offset 14, -4
 1078 0002 A5B0     		sub	sp, sp, #148
 1079              	.LCFI17:
 1080              		.cfi_def_cfa_offset 160
 428:poly.c        ****     unsigned int ctr;
 1081              		.loc 1 428 25 view .LVU316
 1082 0004 0546     		mov	r5, r0
 1083              		.loc 1 434 5 view .LVU317
 1084 0006 01A8     		add	r0, sp, #4
 1085              	.LVL93:
 1086              		.loc 1 434 5 view .LVU318
 1087 0008 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_dilithium_shake256_stream_init
 1088              	.LVL94:
 435:poly.c        ****     stream256_squeezeblocks(buf, POLY_UNIFORM_ETA_NBLOCKS, &state);
 1089              		.loc 1 435 5 is_stmt 1 view .LVU319
 1090 000c 01AA     		add	r2, sp, #4
 1091 000e 8821     		movs	r1, #136
 1092 0010 02A8     		add	r0, sp, #8
 1093 0012 FFF7FEFF 		bl	shake256_inc_squeeze
 1094              	.LVL95:
 436:poly.c        **** 
 437:poly.c        ****     ctr = rej_eta(a->coeffs, N, buf, buflen);
 1095              		.loc 1 437 5 view .LVU320
 1096              		.loc 1 437 11 is_stmt 0 view .LVU321
 1097 0016 02AA     		add	r2, sp, #8
 1098 0018 4FF48071 		mov	r1, #256
 1099 001c 2846     		mov	r0, r5
 1100 001e FFF7FEFF 		bl	rej_eta.constprop.0
 1101              	.LVL96:
 1102 0022 0446     		mov	r4, r0
 1103              	.LVL97:
 438:poly.c        **** 
 439:poly.c        ****     while (ctr < N) {
 1104              		.loc 1 439 5 is_stmt 1 view .LVU322
 1105              	.L64:
 1106              		.loc 1 439 11 view .LVU323
 1107 0024 FF2C     		cmp	r4, #255
 1108 0026 04D9     		bls	.L65
 440:poly.c        ****         stream256_squeezeblocks(buf, 1, &state);
 441:poly.c        ****         ctr += rej_eta(a->coeffs + ctr, N - ctr, buf, STREAM256_BLOCKBYTES);
 442:poly.c        ****     }
 443:poly.c        ****     stream256_release(&state);
 1109              		.loc 1 443 5 view .LVU324
 1110 0028 01A8     		add	r0, sp, #4
 1111 002a FFF7FEFF 		bl	shake256_inc_ctx_release
 1112              	.LVL98:
 444:poly.c        **** }
 1113              		.loc 1 444 1 is_stmt 0 view .LVU325
 1114 002e 25B0     		add	sp, sp, #148
 1115              	.LCFI18:
 1116              		.cfi_remember_state
 1117              		.cfi_def_cfa_offset 12
 1118              		@ sp needed
 1119 0030 30BD     		pop	{r4, r5, pc}
 1120              	.LVL99:
 1121              	.L65:
 1122              	.LCFI19:
 1123              		.cfi_restore_state
 440:poly.c        ****         stream256_squeezeblocks(buf, 1, &state);
 1124              		.loc 1 440 9 is_stmt 1 view .LVU326
 1125 0032 01AA     		add	r2, sp, #4
 1126 0034 8821     		movs	r1, #136
 1127 0036 02A8     		add	r0, sp, #8
 1128 0038 FFF7FEFF 		bl	shake256_inc_squeeze
 1129              	.LVL100:
 441:poly.c        ****     }
 1130              		.loc 1 441 9 view .LVU327
 441:poly.c        ****     }
 1131              		.loc 1 441 16 is_stmt 0 view .LVU328
 1132 003c C4F58071 		rsb	r1, r4, #256
 1133 0040 05EB8400 		add	r0, r5, r4, lsl #2
 1134 0044 02AA     		add	r2, sp, #8
 1135 0046 FFF7FEFF 		bl	rej_eta.constprop.0
 1136              	.LVL101:
 441:poly.c        ****     }
 1137              		.loc 1 441 13 view .LVU329
 1138 004a 0444     		add	r4, r4, r0
 1139              	.LVL102:
 441:poly.c        ****     }
 1140              		.loc 1 441 13 view .LVU330
 1141 004c EAE7     		b	.L64
 1142              		.cfi_endproc
 1143              	.LFE16:
 1145              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_challenge,"ax",%progbits
 1146              		.align	1
 1147              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_challenge
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1151              		.fpu softvfp
 1153              	PQCLEAN_DILITHIUM2_CLEAN_poly_challenge:
 1154              	.LVL103:
 1155              	.LFB18:
 445:poly.c        **** 
 446:poly.c        **** /*************************************************
 447:poly.c        **** * Name:        poly_uniform_gamma1m1
 448:poly.c        **** *
 449:poly.c        **** * Description: Sample polynomial with uniformly random coefficients
 450:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1] by unpacking output stream
 451:poly.c        **** *              of SHAKE256(seed|nonce)
 452:poly.c        **** *
 453:poly.c        **** * Arguments:   - poly *a: pointer to output polynomial
 454:poly.c        **** *              - const uint8_t seed[]: byte array with seed of length CRHBYTES
 455:poly.c        **** *              - uint16_t nonce: 16-bit nonce
 456:poly.c        **** **************************************************/
 457:poly.c        **** #define POLY_UNIFORM_GAMMA1_NBLOCKS ((POLYZ_PACKEDBYTES + STREAM256_BLOCKBYTES - 1)/STREAM256_BLOCK
 458:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1(poly *a,
 459:poly.c        ****         const uint8_t seed[CRHBYTES],
 460:poly.c        ****         uint16_t nonce) {
 461:poly.c        ****     uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS * STREAM256_BLOCKBYTES];
 462:poly.c        ****     stream256_state state;
 463:poly.c        **** 
 464:poly.c        ****     stream256_init(&state, seed, nonce);
 465:poly.c        ****     stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 466:poly.c        ****     stream256_release(&state);
 467:poly.c        ****     PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(a, buf);
 468:poly.c        **** }
 469:poly.c        **** 
 470:poly.c        **** /*************************************************
 471:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_challenge
 472:poly.c        **** *
 473:poly.c        **** * Description: Implementation of H. Samples polynomial with TAU nonzero
 474:poly.c        **** *              coefficients in {-1,1} using the output stream of
 475:poly.c        **** *              SHAKE256(seed).
 476:poly.c        **** *
 477:poly.c        **** * Arguments:   - poly *c: pointer to output polynomial
 478:poly.c        **** *              - const uint8_t mu[]: byte array containing seed of length SEEDBYTES
 479:poly.c        **** **************************************************/
 480:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_poly_challenge(poly *c, const uint8_t seed[SEEDBYTES]) {
 1156              		.loc 1 480 86 is_stmt 1 view -0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 144
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 481:poly.c        ****     unsigned int i, b, pos;
 1160              		.loc 1 481 5 view .LVU332
 482:poly.c        ****     uint64_t signs;
 1161              		.loc 1 482 5 view .LVU333
 483:poly.c        ****     uint8_t buf[SHAKE256_RATE];
 1162              		.loc 1 483 5 view .LVU334
 484:poly.c        ****     shake256incctx state;
 1163              		.loc 1 484 5 view .LVU335
 485:poly.c        **** 
 486:poly.c        ****     shake256_inc_init(&state);
 1164              		.loc 1 486 5 view .LVU336
 480:poly.c        ****     unsigned int i, b, pos;
 1165              		.loc 1 480 86 is_stmt 0 view .LVU337
 1166 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1167              	.LCFI20:
 1168              		.cfi_def_cfa_offset 20
 1169              		.cfi_offset 4, -20
 1170              		.cfi_offset 5, -16
 1171              		.cfi_offset 6, -12
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 A5B0     		sub	sp, sp, #148
 1175              	.LCFI21:
 1176              		.cfi_def_cfa_offset 168
 480:poly.c        ****     unsigned int i, b, pos;
 1177              		.loc 1 480 86 view .LVU338
 1178 0004 0C46     		mov	r4, r1
 1179 0006 0546     		mov	r5, r0
 1180              		.loc 1 486 5 view .LVU339
 1181 0008 01A8     		add	r0, sp, #4
 1182              	.LVL104:
 1183              		.loc 1 486 5 view .LVU340
 1184 000a FFF7FEFF 		bl	shake256_inc_init
 1185              	.LVL105:
 487:poly.c        ****     shake256_inc_absorb(&state, seed, SEEDBYTES);
 1186              		.loc 1 487 5 is_stmt 1 view .LVU341
 1187 000e 2146     		mov	r1, r4
 1188 0010 2022     		movs	r2, #32
 1189 0012 01A8     		add	r0, sp, #4
 1190 0014 FFF7FEFF 		bl	shake256_inc_absorb
 1191              	.LVL106:
 488:poly.c        ****     shake256_inc_finalize(&state);
 1192              		.loc 1 488 5 view .LVU342
 1193 0018 01A8     		add	r0, sp, #4
 1194 001a FFF7FEFF 		bl	shake256_inc_finalize
 1195              	.LVL107:
 489:poly.c        ****     shake256_inc_squeeze(buf, sizeof buf, &state);
 1196              		.loc 1 489 5 view .LVU343
 1197 001e 01AA     		add	r2, sp, #4
 1198 0020 8821     		movs	r1, #136
 1199 0022 02A8     		add	r0, sp, #8
 1200 0024 FFF7FEFF 		bl	shake256_inc_squeeze
 1201              	.LVL108:
 490:poly.c        **** 
 491:poly.c        ****     signs = 0;
 1202              		.loc 1 491 5 view .LVU344
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1203              		.loc 1 492 5 view .LVU345
 1204              		.loc 1 492 17 view .LVU346
 489:poly.c        ****     shake256_inc_squeeze(buf, sizeof buf, &state);
 1205              		.loc 1 489 5 is_stmt 0 view .LVU347
 1206 0028 0023     		movs	r3, #0
 1207 002a 02AE     		add	r6, sp, #8
 491:poly.c        ****     for (i = 0; i < 8; ++i) {
 1208              		.loc 1 491 11 view .LVU348
 1209 002c 1C46     		mov	r4, r3
 1210              	.LVL109:
 491:poly.c        ****     for (i = 0; i < 8; ++i) {
 1211              		.loc 1 491 11 view .LVU349
 1212 002e 1F46     		mov	r7, r3
 1213              	.LVL110:
 1214              	.L67:
 493:poly.c        ****         signs |= (uint64_t)buf[i] << 8 * i;
 1215              		.loc 1 493 9 is_stmt 1 discriminator 3 view .LVU350
 1216              		.loc 1 493 31 is_stmt 0 discriminator 3 view .LVU351
 1217 0030 16F8011B 		ldrb	r1, [r6], #1	@ zero_extendqisi2
 1218              	.LVL111:
 1219              		.loc 1 493 35 discriminator 3 view .LVU352
 1220 0034 A3F12002 		sub	r2, r3, #32
 1221 0038 C3F12000 		rsb	r0, r3, #32
 1222 003c 01FA02F2 		lsl	r2, r1, r2
 1223 0040 21FA00F0 		lsr	r0, r1, r0
 1224 0044 9940     		lsls	r1, r1, r3
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1225              		.loc 1 492 5 discriminator 3 view .LVU353
 1226 0046 0833     		adds	r3, r3, #8
 1227              		.loc 1 493 35 discriminator 3 view .LVU354
 1228 0048 0243     		orrs	r2, r2, r0
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1229              		.loc 1 492 5 discriminator 3 view .LVU355
 1230 004a 402B     		cmp	r3, #64
 1231              		.loc 1 493 15 discriminator 3 view .LVU356
 1232 004c 44EA0104 		orr	r4, r4, r1
 1233              	.LVL112:
 1234              		.loc 1 493 15 discriminator 3 view .LVU357
 1235 0050 47EA0207 		orr	r7, r7, r2
 1236              	.LVL113:
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1237              		.loc 1 492 24 is_stmt 1 discriminator 3 view .LVU358
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1238              		.loc 1 492 17 discriminator 3 view .LVU359
 492:poly.c        ****     for (i = 0; i < 8; ++i) {
 1239              		.loc 1 492 5 is_stmt 0 discriminator 3 view .LVU360
 1240 0054 ECD1     		bne	.L67
 494:poly.c        ****     }
 495:poly.c        ****     pos = 8;
 496:poly.c        **** 
 497:poly.c        ****     for (i = 0; i < N; ++i) {
 498:poly.c        ****         c->coeffs[i] = 0;
 1241              		.loc 1 498 22 view .LVU361
 1242 0056 0021     		movs	r1, #0
 1243 0058 4FF48062 		mov	r2, #1024
 1244 005c 2846     		mov	r0, r5
 1245 005e FFF7FEFF 		bl	memset
 1246              	.LVL114:
 499:poly.c        ****     }
 500:poly.c        ****     for (i = N - TAU; i < N; ++i) {
 1247              		.loc 1 500 12 view .LVU362
 1248 0062 D926     		movs	r6, #217
 495:poly.c        **** 
 1249              		.loc 1 495 9 view .LVU363
 1250 0064 0821     		movs	r1, #8
 1251              	.LVL115:
 1252              	.L69:
 501:poly.c        ****         do {
 1253              		.loc 1 501 9 is_stmt 1 view .LVU364
 502:poly.c        ****             if (pos >= SHAKE256_RATE) {
 1254              		.loc 1 502 13 view .LVU365
 1255              		.loc 1 502 16 is_stmt 0 view .LVU366
 1256 0066 8729     		cmp	r1, #135
 1257 0068 25D9     		bls	.L71
 503:poly.c        ****                 shake256_inc_squeeze(buf, sizeof buf, &state);
 1258              		.loc 1 503 17 is_stmt 1 view .LVU367
 1259 006a 01AA     		add	r2, sp, #4
 1260 006c 8821     		movs	r1, #136
 1261              	.LVL116:
 1262              		.loc 1 503 17 is_stmt 0 view .LVU368
 1263 006e 02A8     		add	r0, sp, #8
 1264 0070 FFF7FEFF 		bl	shake256_inc_squeeze
 1265              	.LVL117:
 504:poly.c        ****                 pos = 0;
 1266              		.loc 1 504 17 is_stmt 1 view .LVU369
 1267              		.loc 1 504 21 is_stmt 0 view .LVU370
 1268 0074 0023     		movs	r3, #0
 1269              	.LVL118:
 1270              	.L68:
 505:poly.c        ****             }
 506:poly.c        **** 
 507:poly.c        ****             b = buf[pos++];
 1271              		.loc 1 507 13 is_stmt 1 view .LVU371
 1272              		.loc 1 507 20 is_stmt 0 view .LVU372
 1273 0076 24AA     		add	r2, sp, #144
 1274              		.loc 1 507 24 view .LVU373
 1275 0078 591C     		adds	r1, r3, #1
 1276              	.LVL119:
 1277              		.loc 1 507 20 view .LVU374
 1278 007a 1344     		add	r3, r3, r2
 1279              		.loc 1 507 15 view .LVU375
 1280 007c 13F8882C 		ldrb	r2, [r3, #-136]	@ zero_extendqisi2
 1281              	.LVL120:
 508:poly.c        ****         } while (b > i);
 1282              		.loc 1 508 17 is_stmt 1 view .LVU376
 1283              		.loc 1 508 9 is_stmt 0 view .LVU377
 1284 0080 B242     		cmp	r2, r6
 1285 0082 F0D8     		bhi	.L69
 509:poly.c        **** 
 510:poly.c        ****         c->coeffs[i] = c->coeffs[b];
 1286              		.loc 1 510 9 is_stmt 1 discriminator 2 view .LVU378
 1287              		.loc 1 510 33 is_stmt 0 discriminator 2 view .LVU379
 1288 0084 55F82230 		ldr	r3, [r5, r2, lsl #2]
 1289              		.loc 1 510 22 discriminator 2 view .LVU380
 1290 0088 45F82630 		str	r3, [r5, r6, lsl #2]
 511:poly.c        ****         c->coeffs[b] = 1 - 2 * (signs & 1);
 1291              		.loc 1 511 9 is_stmt 1 discriminator 2 view .LVU381
 1292              		.loc 1 511 26 is_stmt 0 discriminator 2 view .LVU382
 1293 008c 04F00103 		and	r3, r4, #1
 1294 0090 5B00     		lsls	r3, r3, #1
 500:poly.c        ****         do {
 1295              		.loc 1 500 30 discriminator 2 view .LVU383
 1296 0092 0136     		adds	r6, r6, #1
 1297              		.loc 1 511 26 discriminator 2 view .LVU384
 1298 0094 C3F10103 		rsb	r3, r3, #1
 512:poly.c        ****         signs >>= 1;
 1299              		.loc 1 512 15 discriminator 2 view .LVU385
 1300 0098 6408     		lsrs	r4, r4, #1
 500:poly.c        ****         do {
 1301              		.loc 1 500 5 discriminator 2 view .LVU386
 1302 009a B6F5807F 		cmp	r6, #256
 1303              		.loc 1 512 15 discriminator 2 view .LVU387
 1304 009e 44EAC774 		orr	r4, r4, r7, lsl #31
 511:poly.c        ****         c->coeffs[b] = 1 - 2 * (signs & 1);
 1305              		.loc 1 511 22 discriminator 2 view .LVU388
 1306 00a2 45F82230 		str	r3, [r5, r2, lsl #2]
 1307              		.loc 1 512 9 is_stmt 1 discriminator 2 view .LVU389
 1308              		.loc 1 512 15 is_stmt 0 discriminator 2 view .LVU390
 1309 00a6 4FEA5707 		lsr	r7, r7, #1
 500:poly.c        ****         do {
 1310              		.loc 1 500 30 is_stmt 1 discriminator 2 view .LVU391
 1311              	.LVL121:
 500:poly.c        ****         do {
 1312              		.loc 1 500 23 discriminator 2 view .LVU392
 500:poly.c        ****         do {
 1313              		.loc 1 500 5 is_stmt 0 discriminator 2 view .LVU393
 1314 00aa DCD1     		bne	.L69
 513:poly.c        ****     }
 514:poly.c        ****     shake256_inc_ctx_release(&state);
 1315              		.loc 1 514 5 is_stmt 1 view .LVU394
 1316 00ac 01A8     		add	r0, sp, #4
 1317 00ae FFF7FEFF 		bl	shake256_inc_ctx_release
 1318              	.LVL122:
 515:poly.c        **** }
 1319              		.loc 1 515 1 is_stmt 0 view .LVU395
 1320 00b2 25B0     		add	sp, sp, #148
 1321              	.LCFI22:
 1322              		.cfi_remember_state
 1323              		.cfi_def_cfa_offset 20
 1324              		@ sp needed
 1325 00b4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1326              	.LVL123:
 1327              	.L71:
 1328              	.LCFI23:
 1329              		.cfi_restore_state
 1330              		.loc 1 515 1 view .LVU396
 1331 00b6 0B46     		mov	r3, r1
 1332 00b8 DDE7     		b	.L68
 1333              		.cfi_endproc
 1334              	.LFE18:
 1336              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack,"ax",%progbits
 1337              		.align	1
 1338              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu softvfp
 1344              	PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack:
 1345              	.LVL124:
 1346              	.LFB19:
 516:poly.c        **** 
 517:poly.c        **** /*************************************************
 518:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
 519:poly.c        **** *
 520:poly.c        **** * Description: Bit-pack polynomial with coefficients in [-ETA,ETA].
 521:poly.c        **** *
 522:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 523:poly.c        **** *                            POLYETA_PACKEDBYTES bytes
 524:poly.c        **** *              - const poly *a: pointer to input polynomial
 525:poly.c        **** **************************************************/
 526:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack(uint8_t *r, const poly *a) {
 1347              		.loc 1 526 71 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 527:poly.c        ****     unsigned int i;
 1351              		.loc 1 527 5 view .LVU398
 528:poly.c        ****     uint8_t t[8];
 1352              		.loc 1 528 5 view .LVU399
 529:poly.c        ****     DBENCH_START();
 1353              		.loc 1 529 19 view .LVU400
 530:poly.c        **** 
 531:poly.c        ****     for (i = 0; i < N / 8; ++i) {
 1354              		.loc 1 531 5 view .LVU401
 1355              		.loc 1 531 17 view .LVU402
 526:poly.c        ****     unsigned int i;
 1356              		.loc 1 526 71 is_stmt 0 view .LVU403
 1357 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1358              	.LCFI24:
 1359              		.cfi_def_cfa_offset 24
 1360              		.cfi_offset 4, -24
 1361              		.cfi_offset 5, -20
 1362              		.cfi_offset 6, -16
 1363              		.cfi_offset 7, -12
 1364              		.cfi_offset 8, -8
 1365              		.cfi_offset 14, -4
 1366 0004 01F58065 		add	r5, r1, #1024
 1367              	.LVL125:
 1368              	.L76:
 532:poly.c        ****         t[0] = (uint8_t) (ETA - a->coeffs[8 * i + 0]);
 1369              		.loc 1 532 9 is_stmt 1 discriminator 3 view .LVU404
 533:poly.c        ****         t[1] = (uint8_t) (ETA - a->coeffs[8 * i + 1]);
 1370              		.loc 1 533 9 discriminator 3 view .LVU405
 534:poly.c        ****         t[2] = (uint8_t) (ETA - a->coeffs[8 * i + 2]);
 1371              		.loc 1 534 9 discriminator 3 view .LVU406
 1372              		.loc 1 534 16 is_stmt 0 discriminator 3 view .LVU407
 1373 0008 8B68     		ldr	r3, [r1, #8]
 535:poly.c        ****         t[3] = (uint8_t) (ETA - a->coeffs[8 * i + 3]);
 536:poly.c        ****         t[4] = (uint8_t) (ETA - a->coeffs[8 * i + 4]);
 537:poly.c        ****         t[5] = (uint8_t) (ETA - a->coeffs[8 * i + 5]);
 1374              		.loc 1 537 16 discriminator 3 view .LVU408
 1375 000a 4C69     		ldr	r4, [r1, #20]
 533:poly.c        ****         t[2] = (uint8_t) (ETA - a->coeffs[8 * i + 2]);
 1376              		.loc 1 533 16 discriminator 3 view .LVU409
 1377 000c 4F68     		ldr	r7, [r1, #4]
 538:poly.c        ****         t[6] = (uint8_t) (ETA - a->coeffs[8 * i + 6]);
 539:poly.c        ****         t[7] = (uint8_t) (ETA - a->coeffs[8 * i + 7]);
 1378              		.loc 1 539 16 discriminator 3 view .LVU410
 1379 000e CA69     		ldr	r2, [r1, #28]
 538:poly.c        ****         t[6] = (uint8_t) (ETA - a->coeffs[8 * i + 6]);
 1380              		.loc 1 538 16 discriminator 3 view .LVU411
 1381 0010 8E69     		ldr	r6, [r1, #24]
 534:poly.c        ****         t[3] = (uint8_t) (ETA - a->coeffs[8 * i + 3]);
 1382              		.loc 1 534 16 discriminator 3 view .LVU412
 1383 0012 C3F10203 		rsb	r3, r3, #2
 1384 0016 5FFA83FC 		uxtb	ip, r3
 1385              	.LVL126:
 535:poly.c        ****         t[4] = (uint8_t) (ETA - a->coeffs[8 * i + 4]);
 1386              		.loc 1 535 9 is_stmt 1 discriminator 3 view .LVU413
 535:poly.c        ****         t[4] = (uint8_t) (ETA - a->coeffs[8 * i + 4]);
 1387              		.loc 1 535 16 is_stmt 0 discriminator 3 view .LVU414
 1388 001a CB68     		ldr	r3, [r1, #12]
 1389 001c C3F10203 		rsb	r3, r3, #2
 1390 0020 5FFA83FE 		uxtb	lr, r3
 1391              	.LVL127:
 536:poly.c        ****         t[5] = (uint8_t) (ETA - a->coeffs[8 * i + 5]);
 1392              		.loc 1 536 9 is_stmt 1 discriminator 3 view .LVU415
 536:poly.c        ****         t[5] = (uint8_t) (ETA - a->coeffs[8 * i + 5]);
 1393              		.loc 1 536 16 is_stmt 0 discriminator 3 view .LVU416
 1394 0024 0B69     		ldr	r3, [r1, #16]
 1395 0026 C3F10203 		rsb	r3, r3, #2
 1396 002a DBB2     		uxtb	r3, r3
 1397              	.LVL128:
 537:poly.c        ****         t[6] = (uint8_t) (ETA - a->coeffs[8 * i + 6]);
 1398              		.loc 1 537 9 is_stmt 1 discriminator 3 view .LVU417
 540:poly.c        **** 
 541:poly.c        ****         r[3 * i + 0]  = (t[0] >> 0) | (t[1] << 3) | (t[2] << 6);
 542:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1399              		.loc 1 542 59 is_stmt 0 discriminator 3 view .LVU418
 1400 002c 1B01     		lsls	r3, r3, #4
 1401              	.LVL129:
 533:poly.c        ****         t[2] = (uint8_t) (ETA - a->coeffs[8 * i + 2]);
 1402              		.loc 1 533 16 discriminator 3 view .LVU419
 1403 002e C7F10207 		rsb	r7, r7, #2
 537:poly.c        ****         t[6] = (uint8_t) (ETA - a->coeffs[8 * i + 6]);
 1404              		.loc 1 537 16 discriminator 3 view .LVU420
 1405 0032 C4F10204 		rsb	r4, r4, #2
 1406              		.loc 1 542 51 discriminator 3 view .LVU421
 1407 0036 43EA4E03 		orr	r3, r3, lr, lsl #1
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1408              		.loc 1 541 41 discriminator 3 view .LVU422
 1409 003a 5FFA87F8 		uxtb	r8, r7
 537:poly.c        ****         t[6] = (uint8_t) (ETA - a->coeffs[8 * i + 6]);
 1410              		.loc 1 537 16 discriminator 3 view .LVU423
 1411 003e E4B2     		uxtb	r4, r4
 1412              	.LVL130:
 538:poly.c        ****         t[7] = (uint8_t) (ETA - a->coeffs[8 * i + 7]);
 1413              		.loc 1 538 9 is_stmt 1 discriminator 3 view .LVU424
 539:poly.c        **** 
 1414              		.loc 1 539 16 is_stmt 0 discriminator 3 view .LVU425
 1415 0040 C2F10202 		rsb	r2, r2, #2
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1416              		.loc 1 541 59 discriminator 3 view .LVU426
 1417 0044 4FEA8C17 		lsl	r7, ip, #6
 1418              		.loc 1 542 51 discriminator 3 view .LVU427
 1419 0048 43EA9C03 		orr	r3, r3, ip, lsr #2
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1420              		.loc 1 541 51 discriminator 3 view .LVU428
 1421 004c 47EAC807 		orr	r7, r7, r8, lsl #3
 1422              		.loc 1 542 65 discriminator 3 view .LVU429
 1423 0050 43EAC413 		orr	r3, r3, r4, lsl #7
 532:poly.c        ****         t[1] = (uint8_t) (ETA - a->coeffs[8 * i + 1]);
 1424              		.loc 1 532 16 discriminator 3 view .LVU430
 1425 0054 51F8208B 		ldr	r8, [r1], #32
 1426              	.LVL131:
 1427              		.loc 1 542 23 discriminator 3 view .LVU431
 1428 0058 4370     		strb	r3, [r0, #1]
 1429              	.LVL132:
 538:poly.c        ****         t[7] = (uint8_t) (ETA - a->coeffs[8 * i + 7]);
 1430              		.loc 1 538 16 discriminator 3 view .LVU432
 1431 005a C6F10206 		rsb	r6, r6, #2
 539:poly.c        **** 
 1432              		.loc 1 539 16 discriminator 3 view .LVU433
 1433 005e D2B2     		uxtb	r2, r2
 538:poly.c        ****         t[7] = (uint8_t) (ETA - a->coeffs[8 * i + 7]);
 1434              		.loc 1 538 16 discriminator 3 view .LVU434
 1435 0060 F6B2     		uxtb	r6, r6
 1436              	.LVL133:
 539:poly.c        **** 
 1437              		.loc 1 539 9 is_stmt 1 discriminator 3 view .LVU435
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1438              		.loc 1 541 9 discriminator 3 view .LVU436
 543:poly.c        ****         r[3 * i + 2]  = (t[5] >> 1) | (t[6] << 2) | (t[7] << 5);
 1439              		.loc 1 543 59 is_stmt 0 discriminator 3 view .LVU437
 1440 0062 5301     		lsls	r3, r2, #5
 532:poly.c        ****         t[1] = (uint8_t) (ETA - a->coeffs[8 * i + 1]);
 1441              		.loc 1 532 16 discriminator 3 view .LVU438
 1442 0064 C8F10208 		rsb	r8, r8, #2
 1443              		.loc 1 543 51 discriminator 3 view .LVU439
 1444 0068 43EA8603 		orr	r3, r3, r6, lsl #2
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1445              		.loc 1 541 51 discriminator 3 view .LVU440
 1446 006c 47EA0807 		orr	r7, r7, r8
 1447              		.loc 1 543 51 discriminator 3 view .LVU441
 1448 0070 43EA5403 		orr	r3, r3, r4, lsr #1
 531:poly.c        ****         t[0] = (uint8_t) (ETA - a->coeffs[8 * i + 0]);
 1449              		.loc 1 531 5 discriminator 3 view .LVU442
 1450 0074 8D42     		cmp	r5, r1
 541:poly.c        ****         r[3 * i + 1]  = (t[2] >> 2) | (t[3] << 1) | (t[4] << 4) | (t[5] << 7);
 1451              		.loc 1 541 23 discriminator 3 view .LVU443
 1452 0076 0770     		strb	r7, [r0]
 542:poly.c        ****         r[3 * i + 2]  = (t[5] >> 1) | (t[6] << 2) | (t[7] << 5);
 1453              		.loc 1 542 9 is_stmt 1 discriminator 3 view .LVU444
 1454              		.loc 1 543 9 discriminator 3 view .LVU445
 1455              		.loc 1 543 23 is_stmt 0 discriminator 3 view .LVU446
 1456 0078 8370     		strb	r3, [r0, #2]
 531:poly.c        ****         t[0] = (uint8_t) (ETA - a->coeffs[8 * i + 0]);
 1457              		.loc 1 531 28 is_stmt 1 discriminator 3 view .LVU447
 531:poly.c        ****         t[0] = (uint8_t) (ETA - a->coeffs[8 * i + 0]);
 1458              		.loc 1 531 17 discriminator 3 view .LVU448
 531:poly.c        ****         t[0] = (uint8_t) (ETA - a->coeffs[8 * i + 0]);
 1459              		.loc 1 531 5 is_stmt 0 discriminator 3 view .LVU449
 1460 007a 00F10300 		add	r0, r0, #3
 1461 007e C3D1     		bne	.L76
 544:poly.c        ****     }
 545:poly.c        **** 
 546:poly.c        ****     DBENCH_STOP(*tpack);
 547:poly.c        **** }
 1462              		.loc 1 547 1 view .LVU450
 1463 0080 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1464              		.loc 1 547 1 view .LVU451
 1465              		.cfi_endproc
 1466              	.LFE19:
 1468              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack,"ax",%progbits
 1469              		.align	1
 1470              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
 1471              		.syntax unified
 1472              		.thumb
 1473              		.thumb_func
 1474              		.fpu softvfp
 1476              	PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack:
 1477              	.LVL134:
 1478              	.LFB20:
 548:poly.c        **** 
 549:poly.c        **** /*************************************************
 550:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
 551:poly.c        **** *
 552:poly.c        **** * Description: Unpack polynomial with coefficients in [-ETA,ETA].
 553:poly.c        **** *
 554:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 555:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 556:poly.c        **** **************************************************/
 557:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack(poly *r, const uint8_t *a) {
 1479              		.loc 1 557 73 is_stmt 1 view -0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 558:poly.c        ****     unsigned int i;
 1483              		.loc 1 558 5 view .LVU453
 559:poly.c        ****     DBENCH_START();
 1484              		.loc 1 559 19 view .LVU454
 560:poly.c        **** 
 561:poly.c        ****     for (i = 0; i < N / 8; ++i) {
 1485              		.loc 1 561 5 view .LVU455
 1486              		.loc 1 561 17 view .LVU456
 557:poly.c        ****     unsigned int i;
 1487              		.loc 1 557 73 is_stmt 0 view .LVU457
 1488 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1489              	.LCFI25:
 1490              		.cfi_def_cfa_offset 24
 1491              		.cfi_offset 4, -24
 1492              		.cfi_offset 5, -20
 1493              		.cfi_offset 6, -16
 1494              		.cfi_offset 7, -12
 1495              		.cfi_offset 8, -8
 1496              		.cfi_offset 14, -4
 1497 0004 00F58065 		add	r5, r0, #1024
 1498              	.LVL135:
 1499              	.L79:
 562:poly.c        ****         r->coeffs[8 * i + 0] =  (a[3 * i + 0] >> 0) & 7;
 1500              		.loc 1 562 9 is_stmt 1 discriminator 3 view .LVU458
 1501              		.loc 1 562 53 is_stmt 0 discriminator 3 view .LVU459
 1502 0008 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 1503 000a 07F00707 		and	r7, r7, #7
 1504              		.loc 1 562 30 discriminator 3 view .LVU460
 1505 000e 0760     		str	r7, [r0]
 563:poly.c        ****         r->coeffs[8 * i + 1] =  (a[3 * i + 0] >> 3) & 7;
 1506              		.loc 1 563 9 is_stmt 1 discriminator 3 view .LVU461
 1507              		.loc 1 563 53 is_stmt 0 discriminator 3 view .LVU462
 1508 0010 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 1509 0012 C6F3C206 		ubfx	r6, r6, #3, #3
 1510              		.loc 1 563 30 discriminator 3 view .LVU463
 1511 0016 4660     		str	r6, [r0, #4]
 564:poly.c        ****         r->coeffs[8 * i + 2] = ((a[3 * i + 0] >> 6) | (a[3 * i + 1] << 2)) & 7;
 1512              		.loc 1 564 9 is_stmt 1 discriminator 3 view .LVU464
 1513              		.loc 1 564 57 is_stmt 0 discriminator 3 view .LVU465
 1514 0018 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1515              		.loc 1 564 47 discriminator 3 view .LVU466
 1516 001a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1517              		.loc 1 564 69 discriminator 3 view .LVU467
 1518 001c 9B00     		lsls	r3, r3, #2
 1519              		.loc 1 564 53 discriminator 3 view .LVU468
 1520 001e 43EA9213 		orr	r3, r3, r2, lsr #6
 1521              		.loc 1 564 76 discriminator 3 view .LVU469
 1522 0022 03F00702 		and	r2, r3, #7
 1523              		.loc 1 564 30 discriminator 3 view .LVU470
 1524 0026 8260     		str	r2, [r0, #8]
 565:poly.c        ****         r->coeffs[8 * i + 3] =  (a[3 * i + 1] >> 1) & 7;
 1525              		.loc 1 565 9 is_stmt 1 discriminator 3 view .LVU471
 1526              		.loc 1 565 53 is_stmt 0 discriminator 3 view .LVU472
 1527 0028 91F801E0 		ldrb	lr, [r1, #1]	@ zero_extendqisi2
 1528 002c CEF3420E 		ubfx	lr, lr, #1, #3
 1529              		.loc 1 565 30 discriminator 3 view .LVU473
 1530 0030 C0F80CE0 		str	lr, [r0, #12]
 566:poly.c        ****         r->coeffs[8 * i + 4] =  (a[3 * i + 1] >> 4) & 7;
 1531              		.loc 1 566 9 is_stmt 1 discriminator 3 view .LVU474
 1532              		.loc 1 566 53 is_stmt 0 discriminator 3 view .LVU475
 1533 0034 91F801C0 		ldrb	ip, [r1, #1]	@ zero_extendqisi2
 1534 0038 CCF3021C 		ubfx	ip, ip, #4, #3
 1535              		.loc 1 566 30 discriminator 3 view .LVU476
 1536 003c C0F810C0 		str	ip, [r0, #16]
 567:poly.c        ****         r->coeffs[8 * i + 5] = ((a[3 * i + 1] >> 7) | (a[3 * i + 2] << 1)) & 7;
 1537              		.loc 1 567 9 is_stmt 1 discriminator 3 view .LVU477
 1538              		.loc 1 567 57 is_stmt 0 discriminator 3 view .LVU478
 1539 0040 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1540              		.loc 1 567 47 discriminator 3 view .LVU479
 1541 0042 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1542              		.loc 1 567 69 discriminator 3 view .LVU480
 1543 0044 5B00     		lsls	r3, r3, #1
 1544              		.loc 1 567 53 discriminator 3 view .LVU481
 1545 0046 43EAD413 		orr	r3, r3, r4, lsr #7
 1546              		.loc 1 567 76 discriminator 3 view .LVU482
 1547 004a 03F00703 		and	r3, r3, #7
 1548              		.loc 1 567 30 discriminator 3 view .LVU483
 1549 004e 4361     		str	r3, [r0, #20]
 568:poly.c        ****         r->coeffs[8 * i + 6] =  (a[3 * i + 2] >> 2) & 7;
 1550              		.loc 1 568 9 is_stmt 1 discriminator 3 view .LVU484
 1551              		.loc 1 568 53 is_stmt 0 discriminator 3 view .LVU485
 1552 0050 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 1553 0052 C4F38204 		ubfx	r4, r4, #2, #3
 1554              		.loc 1 568 30 discriminator 3 view .LVU486
 1555 0056 8461     		str	r4, [r0, #24]
 569:poly.c        ****         r->coeffs[8 * i + 7] =  (a[3 * i + 2] >> 5) & 7;
 1556              		.loc 1 569 9 is_stmt 1 discriminator 3 view .LVU487
 1557              		.loc 1 569 53 is_stmt 0 discriminator 3 view .LVU488
 1558 0058 91F80280 		ldrb	r8, [r1, #2]	@ zero_extendqisi2
 570:poly.c        **** 
 571:poly.c        ****         r->coeffs[8 * i + 0] = ETA - r->coeffs[8 * i + 0];
 572:poly.c        ****         r->coeffs[8 * i + 1] = ETA - r->coeffs[8 * i + 1];
 573:poly.c        ****         r->coeffs[8 * i + 2] = ETA - r->coeffs[8 * i + 2];
 1559              		.loc 1 573 36 discriminator 3 view .LVU489
 1560 005c C2F10202 		rsb	r2, r2, #2
 1561              		.loc 1 573 30 discriminator 3 view .LVU490
 1562 0060 8260     		str	r2, [r0, #8]
 574:poly.c        ****         r->coeffs[8 * i + 3] = ETA - r->coeffs[8 * i + 3];
 575:poly.c        ****         r->coeffs[8 * i + 4] = ETA - r->coeffs[8 * i + 4];
 576:poly.c        ****         r->coeffs[8 * i + 5] = ETA - r->coeffs[8 * i + 5];
 1563              		.loc 1 576 36 discriminator 3 view .LVU491
 1564 0062 C3F10203 		rsb	r3, r3, #2
 574:poly.c        ****         r->coeffs[8 * i + 3] = ETA - r->coeffs[8 * i + 3];
 1565              		.loc 1 574 36 discriminator 3 view .LVU492
 1566 0066 CEF10202 		rsb	r2, lr, #2
 569:poly.c        **** 
 1567              		.loc 1 569 53 discriminator 3 view .LVU493
 1568 006a 4FEA5818 		lsr	r8, r8, #5
 571:poly.c        ****         r->coeffs[8 * i + 1] = ETA - r->coeffs[8 * i + 1];
 1569              		.loc 1 571 9 is_stmt 1 discriminator 3 view .LVU494
 574:poly.c        ****         r->coeffs[8 * i + 3] = ETA - r->coeffs[8 * i + 3];
 1570              		.loc 1 574 30 is_stmt 0 discriminator 3 view .LVU495
 1571 006e C260     		str	r2, [r0, #12]
 1572              		.loc 1 576 30 discriminator 3 view .LVU496
 1573 0070 4361     		str	r3, [r0, #20]
 571:poly.c        ****         r->coeffs[8 * i + 1] = ETA - r->coeffs[8 * i + 1];
 1574              		.loc 1 571 36 discriminator 3 view .LVU497
 1575 0072 C7F10207 		rsb	r7, r7, #2
 572:poly.c        ****         r->coeffs[8 * i + 2] = ETA - r->coeffs[8 * i + 2];
 1576              		.loc 1 572 36 discriminator 3 view .LVU498
 1577 0076 C6F10206 		rsb	r6, r6, #2
 575:poly.c        ****         r->coeffs[8 * i + 5] = ETA - r->coeffs[8 * i + 5];
 1578              		.loc 1 575 36 discriminator 3 view .LVU499
 1579 007a CCF10202 		rsb	r2, ip, #2
 577:poly.c        ****         r->coeffs[8 * i + 6] = ETA - r->coeffs[8 * i + 6];
 1580              		.loc 1 577 36 discriminator 3 view .LVU500
 1581 007e C4F10204 		rsb	r4, r4, #2
 578:poly.c        ****         r->coeffs[8 * i + 7] = ETA - r->coeffs[8 * i + 7];
 1582              		.loc 1 578 36 discriminator 3 view .LVU501
 1583 0082 C8F10203 		rsb	r3, r8, #2
 571:poly.c        ****         r->coeffs[8 * i + 1] = ETA - r->coeffs[8 * i + 1];
 1584              		.loc 1 571 30 discriminator 3 view .LVU502
 1585 0086 0760     		str	r7, [r0]
 572:poly.c        ****         r->coeffs[8 * i + 2] = ETA - r->coeffs[8 * i + 2];
 1586              		.loc 1 572 9 is_stmt 1 discriminator 3 view .LVU503
 572:poly.c        ****         r->coeffs[8 * i + 2] = ETA - r->coeffs[8 * i + 2];
 1587              		.loc 1 572 30 is_stmt 0 discriminator 3 view .LVU504
 1588 0088 4660     		str	r6, [r0, #4]
 573:poly.c        ****         r->coeffs[8 * i + 3] = ETA - r->coeffs[8 * i + 3];
 1589              		.loc 1 573 9 is_stmt 1 discriminator 3 view .LVU505
 574:poly.c        ****         r->coeffs[8 * i + 4] = ETA - r->coeffs[8 * i + 4];
 1590              		.loc 1 574 9 discriminator 3 view .LVU506
 575:poly.c        ****         r->coeffs[8 * i + 5] = ETA - r->coeffs[8 * i + 5];
 1591              		.loc 1 575 9 discriminator 3 view .LVU507
 575:poly.c        ****         r->coeffs[8 * i + 5] = ETA - r->coeffs[8 * i + 5];
 1592              		.loc 1 575 30 is_stmt 0 discriminator 3 view .LVU508
 1593 008a 0261     		str	r2, [r0, #16]
 576:poly.c        ****         r->coeffs[8 * i + 6] = ETA - r->coeffs[8 * i + 6];
 1594              		.loc 1 576 9 is_stmt 1 discriminator 3 view .LVU509
 577:poly.c        ****         r->coeffs[8 * i + 7] = ETA - r->coeffs[8 * i + 7];
 1595              		.loc 1 577 9 discriminator 3 view .LVU510
 577:poly.c        ****         r->coeffs[8 * i + 7] = ETA - r->coeffs[8 * i + 7];
 1596              		.loc 1 577 30 is_stmt 0 discriminator 3 view .LVU511
 1597 008c 8461     		str	r4, [r0, #24]
 1598              		.loc 1 578 9 is_stmt 1 discriminator 3 view .LVU512
 1599              		.loc 1 578 30 is_stmt 0 discriminator 3 view .LVU513
 1600 008e C361     		str	r3, [r0, #28]
 561:poly.c        ****         r->coeffs[8 * i + 0] =  (a[3 * i + 0] >> 0) & 7;
 1601              		.loc 1 561 28 is_stmt 1 discriminator 3 view .LVU514
 561:poly.c        ****         r->coeffs[8 * i + 0] =  (a[3 * i + 0] >> 0) & 7;
 1602              		.loc 1 561 17 discriminator 3 view .LVU515
 561:poly.c        ****         r->coeffs[8 * i + 0] =  (a[3 * i + 0] >> 0) & 7;
 1603              		.loc 1 561 5 is_stmt 0 discriminator 3 view .LVU516
 1604 0090 2030     		adds	r0, r0, #32
 1605 0092 A842     		cmp	r0, r5
 1606 0094 01F10301 		add	r1, r1, #3
 1607 0098 B6D1     		bne	.L79
 579:poly.c        ****     }
 580:poly.c        **** 
 581:poly.c        ****     DBENCH_STOP(*tpack);
 582:poly.c        **** }
 1608              		.loc 1 582 1 view .LVU517
 1609 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1610              		.loc 1 582 1 view .LVU518
 1611              		.cfi_endproc
 1612              	.LFE20:
 1614              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack,"ax",%progbits
 1615              		.align	1
 1616              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu softvfp
 1622              	PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack:
 1623              	.LVL136:
 1624              	.LFB21:
 583:poly.c        **** 
 584:poly.c        **** /*************************************************
 585:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack
 586:poly.c        **** *
 587:poly.c        **** * Description: Bit-pack polynomial t1 with coefficients fitting in 10 bits.
 588:poly.c        **** *              Input coefficients are assumed to be standard representatives.
 589:poly.c        **** *
 590:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 591:poly.c        **** *                            POLYT1_PACKEDBYTES bytes
 592:poly.c        **** *              - const poly *a: pointer to input polynomial
 593:poly.c        **** **************************************************/
 594:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack(uint8_t *r, const poly *a) {
 1625              		.loc 1 594 70 is_stmt 1 view -0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 0
 1628              		@ frame_needed = 0, uses_anonymous_args = 0
 595:poly.c        ****     unsigned int i;
 1629              		.loc 1 595 5 view .LVU520
 596:poly.c        ****     DBENCH_START();
 1630              		.loc 1 596 19 view .LVU521
 597:poly.c        **** 
 598:poly.c        ****     for (i = 0; i < N / 4; ++i) {
 1631              		.loc 1 598 5 view .LVU522
 1632              		.loc 1 598 17 view .LVU523
 594:poly.c        ****     unsigned int i;
 1633              		.loc 1 594 70 is_stmt 0 view .LVU524
 1634 0000 10B5     		push	{r4, lr}
 1635              	.LCFI26:
 1636              		.cfi_def_cfa_offset 8
 1637              		.cfi_offset 4, -8
 1638              		.cfi_offset 14, -4
 1639 0002 01F58062 		add	r2, r1, #1024
 1640              	.LVL137:
 1641              	.L82:
 599:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1642              		.loc 1 599 9 is_stmt 1 discriminator 3 view .LVU525
 1643              		.loc 1 599 24 is_stmt 0 discriminator 3 view .LVU526
 1644 0006 0B68     		ldr	r3, [r1]
 1645 0008 0370     		strb	r3, [r0]
 600:poly.c        ****         r[5 * i + 1] = (uint8_t) ((a->coeffs[4 * i + 0] >> 8) | (a->coeffs[4 * i + 1] << 2));
 1646              		.loc 1 600 9 is_stmt 1 discriminator 3 view .LVU527
 1647              		.loc 1 600 87 is_stmt 0 discriminator 3 view .LVU528
 1648 000a D1E90043 		ldrd	r4, r3, [r1]
 1649 000e 9B00     		lsls	r3, r3, #2
 1650              		.loc 1 600 63 discriminator 3 view .LVU529
 1651 0010 43EA2423 		orr	r3, r3, r4, asr #8
 1652              		.loc 1 600 22 discriminator 3 view .LVU530
 1653 0014 4370     		strb	r3, [r0, #1]
 601:poly.c        ****         r[5 * i + 2] = (uint8_t) ((a->coeffs[4 * i + 1] >> 6) | (a->coeffs[4 * i + 2] << 4));
 1654              		.loc 1 601 9 is_stmt 1 discriminator 3 view .LVU531
 1655              		.loc 1 601 87 is_stmt 0 discriminator 3 view .LVU532
 1656 0016 D1E90143 		ldrd	r4, r3, [r1, #4]
 1657 001a 1B01     		lsls	r3, r3, #4
 1658              		.loc 1 601 63 discriminator 3 view .LVU533
 1659 001c 43EAA413 		orr	r3, r3, r4, asr #6
 1660              		.loc 1 601 22 discriminator 3 view .LVU534
 1661 0020 8370     		strb	r3, [r0, #2]
 602:poly.c        ****         r[5 * i + 3] = (uint8_t) ((a->coeffs[4 * i + 2] >> 4) | (a->coeffs[4 * i + 3] << 6));
 1662              		.loc 1 602 9 is_stmt 1 discriminator 3 view .LVU535
 1663              		.loc 1 602 87 is_stmt 0 discriminator 3 view .LVU536
 1664 0022 D1E90243 		ldrd	r4, r3, [r1, #8]
 1665 0026 9B01     		lsls	r3, r3, #6
 1666              		.loc 1 602 63 discriminator 3 view .LVU537
 1667 0028 43EA2413 		orr	r3, r3, r4, asr #4
 1668              		.loc 1 602 22 discriminator 3 view .LVU538
 1669 002c C370     		strb	r3, [r0, #3]
 603:poly.c        ****         r[5 * i + 4] = (uint8_t) (a->coeffs[4 * i + 3] >> 2);
 1670              		.loc 1 603 9 is_stmt 1 discriminator 3 view .LVU539
 1671              		.loc 1 603 56 is_stmt 0 discriminator 3 view .LVU540
 1672 002e CB68     		ldr	r3, [r1, #12]
 598:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1673              		.loc 1 598 5 discriminator 3 view .LVU541
 1674 0030 1031     		adds	r1, r1, #16
 1675              		.loc 1 603 56 discriminator 3 view .LVU542
 1676 0032 9B10     		asrs	r3, r3, #2
 598:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1677              		.loc 1 598 5 discriminator 3 view .LVU543
 1678 0034 9142     		cmp	r1, r2
 1679              		.loc 1 603 24 discriminator 3 view .LVU544
 1680 0036 0371     		strb	r3, [r0, #4]
 598:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1681              		.loc 1 598 28 is_stmt 1 discriminator 3 view .LVU545
 598:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1682              		.loc 1 598 17 discriminator 3 view .LVU546
 598:poly.c        ****         r[5 * i + 0] = (uint8_t) (a->coeffs[4 * i + 0] >> 0);
 1683              		.loc 1 598 5 is_stmt 0 discriminator 3 view .LVU547
 1684 0038 00F10500 		add	r0, r0, #5
 1685 003c E3D1     		bne	.L82
 604:poly.c        ****     }
 605:poly.c        **** 
 606:poly.c        ****     DBENCH_STOP(*tpack);
 607:poly.c        **** }
 1686              		.loc 1 607 1 view .LVU548
 1687 003e 10BD     		pop	{r4, pc}
 1688              		.cfi_endproc
 1689              	.LFE21:
 1691              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack,"ax",%progbits
 1692              		.align	1
 1693              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack
 1694              		.syntax unified
 1695              		.thumb
 1696              		.thumb_func
 1697              		.fpu softvfp
 1699              	PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack:
 1700              	.LVL138:
 1701              	.LFB22:
 608:poly.c        **** 
 609:poly.c        **** /*************************************************
 610:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack
 611:poly.c        **** *
 612:poly.c        **** * Description: Unpack polynomial t1 with 10-bit coefficients.
 613:poly.c        **** *              Output coefficients are standard representatives.
 614:poly.c        **** *
 615:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 616:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 617:poly.c        **** **************************************************/
 618:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack(poly *r, const uint8_t *a) {
 1702              		.loc 1 618 72 is_stmt 1 view -0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 619:poly.c        ****     unsigned int i;
 1706              		.loc 1 619 5 view .LVU550
 620:poly.c        ****     DBENCH_START();
 1707              		.loc 1 620 19 view .LVU551
 621:poly.c        **** 
 622:poly.c        ****     for (i = 0; i < N / 4; ++i) {
 1708              		.loc 1 622 5 view .LVU552
 1709              		.loc 1 622 17 view .LVU553
 618:poly.c        ****     unsigned int i;
 1710              		.loc 1 618 72 is_stmt 0 view .LVU554
 1711 0000 10B5     		push	{r4, lr}
 1712              	.LCFI27:
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 4, -8
 1715              		.cfi_offset 14, -4
 1716 0002 01F5A072 		add	r2, r1, #320
 1717              	.LVL139:
 1718              	.L85:
 623:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1719              		.loc 1 623 9 is_stmt 1 discriminator 3 view .LVU555
 1720              		.loc 1 623 56 is_stmt 0 discriminator 3 view .LVU556
 1721 0006 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1722              		.loc 1 623 47 discriminator 3 view .LVU557
 1723 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1724              		.loc 1 623 53 discriminator 3 view .LVU558
 1725 000a 43EA0423 		orr	r3, r3, r4, lsl #8
 1726              		.loc 1 623 86 discriminator 3 view .LVU559
 1727 000e C3F30903 		ubfx	r3, r3, #0, #10
 1728              		.loc 1 623 30 discriminator 3 view .LVU560
 1729 0012 0360     		str	r3, [r0]
 624:poly.c        ****         r->coeffs[4 * i + 1] = ((a[5 * i + 1] >> 2) | ((uint32_t)a[5 * i + 2] << 6)) & 0x3FF;
 1730              		.loc 1 624 9 is_stmt 1 discriminator 3 view .LVU561
 1731              		.loc 1 624 56 is_stmt 0 discriminator 3 view .LVU562
 1732 0014 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1733              		.loc 1 624 47 discriminator 3 view .LVU563
 1734 0016 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 1735              		.loc 1 624 79 discriminator 3 view .LVU564
 1736 0018 9B01     		lsls	r3, r3, #6
 1737              		.loc 1 624 53 discriminator 3 view .LVU565
 1738 001a 43EA9403 		orr	r3, r3, r4, lsr #2
 1739              		.loc 1 624 86 discriminator 3 view .LVU566
 1740 001e C3F30903 		ubfx	r3, r3, #0, #10
 1741              		.loc 1 624 30 discriminator 3 view .LVU567
 1742 0022 4360     		str	r3, [r0, #4]
 625:poly.c        ****         r->coeffs[4 * i + 2] = ((a[5 * i + 2] >> 4) | ((uint32_t)a[5 * i + 3] << 4)) & 0x3FF;
 1743              		.loc 1 625 9 is_stmt 1 discriminator 3 view .LVU568
 1744              		.loc 1 625 56 is_stmt 0 discriminator 3 view .LVU569
 1745 0024 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1746              		.loc 1 625 47 discriminator 3 view .LVU570
 1747 0026 8C78     		ldrb	r4, [r1, #2]	@ zero_extendqisi2
 1748              		.loc 1 625 79 discriminator 3 view .LVU571
 1749 0028 1B01     		lsls	r3, r3, #4
 1750              		.loc 1 625 53 discriminator 3 view .LVU572
 1751 002a 43EA1413 		orr	r3, r3, r4, lsr #4
 1752              		.loc 1 625 86 discriminator 3 view .LVU573
 1753 002e C3F30903 		ubfx	r3, r3, #0, #10
 1754              		.loc 1 625 30 discriminator 3 view .LVU574
 1755 0032 8360     		str	r3, [r0, #8]
 626:poly.c        ****         r->coeffs[4 * i + 3] = ((a[5 * i + 3] >> 6) | ((uint32_t)a[5 * i + 4] << 2)) & 0x3FF;
 1756              		.loc 1 626 9 is_stmt 1 discriminator 3 view .LVU575
 1757              		.loc 1 626 56 is_stmt 0 discriminator 3 view .LVU576
 1758 0034 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 1759              		.loc 1 626 47 discriminator 3 view .LVU577
 1760 0036 CC78     		ldrb	r4, [r1, #3]	@ zero_extendqisi2
 1761              		.loc 1 626 79 discriminator 3 view .LVU578
 1762 0038 9B00     		lsls	r3, r3, #2
 622:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1763              		.loc 1 622 5 discriminator 3 view .LVU579
 1764 003a 0531     		adds	r1, r1, #5
 1765              		.loc 1 626 53 discriminator 3 view .LVU580
 1766 003c 43EA9413 		orr	r3, r3, r4, lsr #6
 622:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1767              		.loc 1 622 5 discriminator 3 view .LVU581
 1768 0040 8A42     		cmp	r2, r1
 1769              		.loc 1 626 30 discriminator 3 view .LVU582
 1770 0042 C360     		str	r3, [r0, #12]
 622:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1771              		.loc 1 622 28 is_stmt 1 discriminator 3 view .LVU583
 622:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1772              		.loc 1 622 17 discriminator 3 view .LVU584
 622:poly.c        ****         r->coeffs[4 * i + 0] = ((a[5 * i + 0] >> 0) | ((uint32_t)a[5 * i + 1] << 8)) & 0x3FF;
 1773              		.loc 1 622 5 is_stmt 0 discriminator 3 view .LVU585
 1774 0044 00F11000 		add	r0, r0, #16
 1775 0048 DDD1     		bne	.L85
 627:poly.c        ****     }
 628:poly.c        **** 
 629:poly.c        ****     DBENCH_STOP(*tpack);
 630:poly.c        **** }
 1776              		.loc 1 630 1 view .LVU586
 1777 004a 10BD     		pop	{r4, pc}
 1778              		.cfi_endproc
 1779              	.LFE22:
 1781              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack,"ax",%progbits
 1782              		.align	1
 1783              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack
 1784              		.syntax unified
 1785              		.thumb
 1786              		.thumb_func
 1787              		.fpu softvfp
 1789              	PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack:
 1790              	.LVL140:
 1791              	.LFB23:
 631:poly.c        **** 
 632:poly.c        **** /*************************************************
 633:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack
 634:poly.c        **** *
 635:poly.c        **** * Description: Bit-pack polynomial t0 with coefficients in ]-2^{D-1}, 2^{D-1}].
 636:poly.c        **** *
 637:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 638:poly.c        **** *                            POLYT0_PACKEDBYTES bytes
 639:poly.c        **** *              - const poly *a: pointer to input polynomial
 640:poly.c        **** **************************************************/
 641:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack(uint8_t *r, const poly *a) {
 1792              		.loc 1 641 70 is_stmt 1 view -0
 1793              		.cfi_startproc
 1794              		@ args = 0, pretend = 0, frame = 0
 1795              		@ frame_needed = 0, uses_anonymous_args = 0
 642:poly.c        ****     unsigned int i;
 1796              		.loc 1 642 5 view .LVU588
 643:poly.c        ****     uint32_t t[8];
 1797              		.loc 1 643 5 view .LVU589
 644:poly.c        ****     DBENCH_START();
 1798              		.loc 1 644 19 view .LVU590
 645:poly.c        **** 
 646:poly.c        ****     for (i = 0; i < N / 8; ++i) {
 1799              		.loc 1 646 5 view .LVU591
 1800              		.loc 1 646 17 view .LVU592
 641:poly.c        ****     unsigned int i;
 1801              		.loc 1 641 70 is_stmt 0 view .LVU593
 1802 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1803              	.LCFI28:
 1804              		.cfi_def_cfa_offset 28
 1805              		.cfi_offset 4, -28
 1806              		.cfi_offset 5, -24
 1807              		.cfi_offset 6, -20
 1808              		.cfi_offset 7, -16
 1809              		.cfi_offset 8, -12
 1810              		.cfi_offset 9, -8
 1811              		.cfi_offset 14, -4
 1812 0004 00F5D07C 		add	ip, r0, #416
 1813              	.LVL141:
 1814              	.L88:
 647:poly.c        ****         t[0] = (1 << (D - 1)) - a->coeffs[8 * i + 0];
 1815              		.loc 1 647 9 is_stmt 1 discriminator 3 view .LVU594
 648:poly.c        ****         t[1] = (1 << (D - 1)) - a->coeffs[8 * i + 1];
 649:poly.c        ****         t[2] = (1 << (D - 1)) - a->coeffs[8 * i + 2];
 650:poly.c        ****         t[3] = (1 << (D - 1)) - a->coeffs[8 * i + 3];
 651:poly.c        ****         t[4] = (1 << (D - 1)) - a->coeffs[8 * i + 4];
 652:poly.c        ****         t[5] = (1 << (D - 1)) - a->coeffs[8 * i + 5];
 1816              		.loc 1 652 31 is_stmt 0 discriminator 3 view .LVU595
 1817 0008 4D69     		ldr	r5, [r1, #20]
 648:poly.c        ****         t[1] = (1 << (D - 1)) - a->coeffs[8 * i + 1];
 1818              		.loc 1 648 31 discriminator 3 view .LVU596
 1819 000a 4C68     		ldr	r4, [r1, #4]
 647:poly.c        ****         t[0] = (1 << (D - 1)) - a->coeffs[8 * i + 0];
 1820              		.loc 1 647 31 discriminator 3 view .LVU597
 1821 000c 0F68     		ldr	r7, [r1]
 649:poly.c        ****         t[3] = (1 << (D - 1)) - a->coeffs[8 * i + 3];
 1822              		.loc 1 649 31 discriminator 3 view .LVU598
 1823 000e 8E68     		ldr	r6, [r1, #8]
 650:poly.c        ****         t[4] = (1 << (D - 1)) - a->coeffs[8 * i + 4];
 1824              		.loc 1 650 31 discriminator 3 view .LVU599
 1825 0010 CA68     		ldr	r2, [r1, #12]
 651:poly.c        ****         t[5] = (1 << (D - 1)) - a->coeffs[8 * i + 5];
 1826              		.loc 1 651 31 discriminator 3 view .LVU600
 1827 0012 0B69     		ldr	r3, [r1, #16]
 648:poly.c        ****         t[2] = (1 << (D - 1)) - a->coeffs[8 * i + 2];
 1828              		.loc 1 648 31 discriminator 3 view .LVU601
 1829 0014 C4F58054 		rsb	r4, r4, #4096
 1830              		.loc 1 652 31 discriminator 3 view .LVU602
 1831 0018 C5F58058 		rsb	r8, r5, #4096
 653:poly.c        ****         t[6] = (1 << (D - 1)) - a->coeffs[8 * i + 6];
 1832              		.loc 1 653 31 discriminator 3 view .LVU603
 1833 001c 8D69     		ldr	r5, [r1, #24]
 647:poly.c        ****         t[1] = (1 << (D - 1)) - a->coeffs[8 * i + 1];
 1834              		.loc 1 647 31 discriminator 3 view .LVU604
 1835 001e C7F58057 		rsb	r7, r7, #4096
 1836              	.LVL142:
 648:poly.c        ****         t[2] = (1 << (D - 1)) - a->coeffs[8 * i + 2];
 1837              		.loc 1 648 9 is_stmt 1 discriminator 3 view .LVU605
 649:poly.c        ****         t[3] = (1 << (D - 1)) - a->coeffs[8 * i + 3];
 1838              		.loc 1 649 9 discriminator 3 view .LVU606
 654:poly.c        ****         t[7] = (1 << (D - 1)) - a->coeffs[8 * i + 7];
 655:poly.c        **** 
 656:poly.c        ****         r[13 * i + 0]  =  (uint8_t) t[0];
 657:poly.c        ****         r[13 * i + 1]  =  (uint8_t) (t[0] >>  8);
 658:poly.c        ****         r[13 * i + 1] |=  (uint8_t) (t[1] <<  5);
 1839              		.loc 1 658 27 is_stmt 0 discriminator 3 view .LVU607
 1840 0022 4FEA4419 		lsl	r9, r4, #5
 653:poly.c        ****         t[7] = (1 << (D - 1)) - a->coeffs[8 * i + 7];
 1841              		.loc 1 653 31 discriminator 3 view .LVU608
 1842 0026 C5F5805E 		rsb	lr, r5, #4096
 654:poly.c        ****         t[7] = (1 << (D - 1)) - a->coeffs[8 * i + 7];
 1843              		.loc 1 654 31 discriminator 3 view .LVU609
 1844 002a CD69     		ldr	r5, [r1, #28]
 656:poly.c        ****         r[13 * i + 1]  =  (uint8_t) (t[0] >>  8);
 1845              		.loc 1 656 27 discriminator 3 view .LVU610
 1846 002c 0770     		strb	r7, [r0]
 1847              		.loc 1 658 23 discriminator 3 view .LVU611
 1848 002e 49EA1727 		orr	r7, r9, r7, lsr #8
 1849              	.LVL143:
 1850              		.loc 1 658 23 discriminator 3 view .LVU612
 1851 0032 4770     		strb	r7, [r0, #1]
 649:poly.c        ****         t[3] = (1 << (D - 1)) - a->coeffs[8 * i + 3];
 1852              		.loc 1 649 31 discriminator 3 view .LVU613
 1853 0034 C6F58056 		rsb	r6, r6, #4096
 1854              	.LVL144:
 650:poly.c        ****         t[4] = (1 << (D - 1)) - a->coeffs[8 * i + 4];
 1855              		.loc 1 650 9 is_stmt 1 discriminator 3 view .LVU614
 659:poly.c        ****         r[13 * i + 2]  =  (uint8_t) (t[1] >>  3);
 1856              		.loc 1 659 43 is_stmt 0 discriminator 3 view .LVU615
 1857 0038 E708     		lsrs	r7, r4, #3
 1858              		.loc 1 659 27 discriminator 3 view .LVU616
 1859 003a 8770     		strb	r7, [r0, #2]
 660:poly.c        ****         r[13 * i + 3]  =  (uint8_t) (t[1] >> 11);
 661:poly.c        ****         r[13 * i + 3] |=  (uint8_t) (t[2] <<  2);
 1860              		.loc 1 661 27 discriminator 3 view .LVU617
 1861 003c B700     		lsls	r7, r6, #2
 650:poly.c        ****         t[4] = (1 << (D - 1)) - a->coeffs[8 * i + 4];
 1862              		.loc 1 650 31 discriminator 3 view .LVU618
 1863 003e C2F58052 		rsb	r2, r2, #4096
 1864              	.LVL145:
 651:poly.c        ****         t[5] = (1 << (D - 1)) - a->coeffs[8 * i + 5];
 1865              		.loc 1 651 9 is_stmt 1 discriminator 3 view .LVU619
 1866              		.loc 1 661 23 is_stmt 0 discriminator 3 view .LVU620
 1867 0042 47EAD424 		orr	r4, r7, r4, lsr #11
 1868              	.LVL146:
 1869              		.loc 1 661 23 discriminator 3 view .LVU621
 1870 0046 C470     		strb	r4, [r0, #3]
 662:poly.c        ****         r[13 * i + 4]  =  (uint8_t) (t[2] >>  6);
 663:poly.c        ****         r[13 * i + 4] |=  (uint8_t) (t[3] <<  7);
 1871              		.loc 1 663 27 discriminator 3 view .LVU622
 1872 0048 D401     		lsls	r4, r2, #7
 651:poly.c        ****         t[5] = (1 << (D - 1)) - a->coeffs[8 * i + 5];
 1873              		.loc 1 651 31 discriminator 3 view .LVU623
 1874 004a C3F58053 		rsb	r3, r3, #4096
 1875              	.LVL147:
 652:poly.c        ****         t[6] = (1 << (D - 1)) - a->coeffs[8 * i + 6];
 1876              		.loc 1 652 9 is_stmt 1 discriminator 3 view .LVU624
 653:poly.c        ****         t[7] = (1 << (D - 1)) - a->coeffs[8 * i + 7];
 1877              		.loc 1 653 9 discriminator 3 view .LVU625
 654:poly.c        **** 
 1878              		.loc 1 654 9 discriminator 3 view .LVU626
 1879              		.loc 1 663 23 is_stmt 0 discriminator 3 view .LVU627
 1880 004e 44EA9616 		orr	r6, r4, r6, lsr #6
 1881              	.LVL148:
 664:poly.c        ****         r[13 * i + 5]  =  (uint8_t) (t[3] >>  1);
 1882              		.loc 1 664 43 discriminator 3 view .LVU628
 1883 0052 5408     		lsrs	r4, r2, #1
 1884              		.loc 1 664 27 discriminator 3 view .LVU629
 1885 0054 4471     		strb	r4, [r0, #5]
 665:poly.c        ****         r[13 * i + 6]  =  (uint8_t) (t[3] >>  9);
 666:poly.c        ****         r[13 * i + 6] |=  (uint8_t) (t[4] <<  4);
 1886              		.loc 1 666 27 discriminator 3 view .LVU630
 1887 0056 1C01     		lsls	r4, r3, #4
 1888              		.loc 1 666 23 discriminator 3 view .LVU631
 1889 0058 44EA5222 		orr	r2, r4, r2, lsr #9
 1890              	.LVL149:
 1891              		.loc 1 666 23 discriminator 3 view .LVU632
 1892 005c 8271     		strb	r2, [r0, #6]
 667:poly.c        ****         r[13 * i + 7]  =  (uint8_t) (t[4] >>  4);
 1893              		.loc 1 667 43 discriminator 3 view .LVU633
 1894 005e 1A09     		lsrs	r2, r3, #4
 1895              		.loc 1 667 27 discriminator 3 view .LVU634
 1896 0060 C271     		strb	r2, [r0, #7]
 668:poly.c        ****         r[13 * i + 8]  =  (uint8_t) (t[4] >> 12);
 669:poly.c        ****         r[13 * i + 8] |=  (uint8_t) (t[5] <<  1);
 1897              		.loc 1 669 27 discriminator 3 view .LVU635
 1898 0062 4FEA4802 		lsl	r2, r8, #1
 1899              		.loc 1 669 23 discriminator 3 view .LVU636
 1900 0066 42EA1333 		orr	r3, r2, r3, lsr #12
 1901              	.LVL150:
 1902              		.loc 1 669 23 discriminator 3 view .LVU637
 1903 006a 0372     		strb	r3, [r0, #8]
 670:poly.c        ****         r[13 * i + 9]  =  (uint8_t) (t[5] >>  7);
 671:poly.c        ****         r[13 * i + 9] |=  (uint8_t) (t[6] <<  6);
 1904              		.loc 1 671 27 discriminator 3 view .LVU638
 1905 006c 4FEA8E13 		lsl	r3, lr, #6
 1906              		.loc 1 671 23 discriminator 3 view .LVU639
 1907 0070 43EAD813 		orr	r3, r3, r8, lsr #7
 1908 0074 4372     		strb	r3, [r0, #9]
 654:poly.c        **** 
 1909              		.loc 1 654 31 discriminator 3 view .LVU640
 1910 0076 C5F58055 		rsb	r5, r5, #4096
 1911              	.LVL151:
 656:poly.c        ****         r[13 * i + 1]  =  (uint8_t) (t[0] >>  8);
 1912              		.loc 1 656 9 is_stmt 1 discriminator 3 view .LVU641
 657:poly.c        ****         r[13 * i + 1] |=  (uint8_t) (t[1] <<  5);
 1913              		.loc 1 657 9 discriminator 3 view .LVU642
 658:poly.c        ****         r[13 * i + 2]  =  (uint8_t) (t[1] >>  3);
 1914              		.loc 1 658 9 discriminator 3 view .LVU643
 659:poly.c        ****         r[13 * i + 3]  =  (uint8_t) (t[1] >> 11);
 1915              		.loc 1 659 9 discriminator 3 view .LVU644
 660:poly.c        ****         r[13 * i + 3] |=  (uint8_t) (t[2] <<  2);
 1916              		.loc 1 660 9 discriminator 3 view .LVU645
 661:poly.c        ****         r[13 * i + 4]  =  (uint8_t) (t[2] >>  6);
 1917              		.loc 1 661 9 discriminator 3 view .LVU646
 662:poly.c        ****         r[13 * i + 4] |=  (uint8_t) (t[3] <<  7);
 1918              		.loc 1 662 9 discriminator 3 view .LVU647
 663:poly.c        ****         r[13 * i + 5]  =  (uint8_t) (t[3] >>  1);
 1919              		.loc 1 663 9 discriminator 3 view .LVU648
 672:poly.c        ****         r[13 * i + 10]  =  (uint8_t) (t[6] >>  2);
 1920              		.loc 1 672 44 is_stmt 0 discriminator 3 view .LVU649
 1921 007a 4FEA9E03 		lsr	r3, lr, #2
 1922              		.loc 1 672 28 discriminator 3 view .LVU650
 1923 007e 8372     		strb	r3, [r0, #10]
 673:poly.c        ****         r[13 * i + 11]  =  (uint8_t) (t[6] >> 10);
 674:poly.c        ****         r[13 * i + 11] |=  (uint8_t) (t[7] <<  3);
 1924              		.loc 1 674 28 discriminator 3 view .LVU651
 1925 0080 EB00     		lsls	r3, r5, #3
 1926              		.loc 1 674 24 discriminator 3 view .LVU652
 1927 0082 43EA9E23 		orr	r3, r3, lr, lsr #10
 675:poly.c        ****         r[13 * i + 12]  =  (uint8_t) (t[7] >>  5);
 1928              		.loc 1 675 44 discriminator 3 view .LVU653
 1929 0086 6D09     		lsrs	r5, r5, #5
 1930              	.LVL152:
 663:poly.c        ****         r[13 * i + 5]  =  (uint8_t) (t[3] >>  1);
 1931              		.loc 1 663 23 discriminator 3 view .LVU654
 1932 0088 0671     		strb	r6, [r0, #4]
 664:poly.c        ****         r[13 * i + 6]  =  (uint8_t) (t[3] >>  9);
 1933              		.loc 1 664 9 is_stmt 1 discriminator 3 view .LVU655
 665:poly.c        ****         r[13 * i + 6] |=  (uint8_t) (t[4] <<  4);
 1934              		.loc 1 665 9 discriminator 3 view .LVU656
 666:poly.c        ****         r[13 * i + 7]  =  (uint8_t) (t[4] >>  4);
 1935              		.loc 1 666 9 discriminator 3 view .LVU657
 667:poly.c        ****         r[13 * i + 8]  =  (uint8_t) (t[4] >> 12);
 1936              		.loc 1 667 9 discriminator 3 view .LVU658
 668:poly.c        ****         r[13 * i + 8] |=  (uint8_t) (t[5] <<  1);
 1937              		.loc 1 668 9 discriminator 3 view .LVU659
 669:poly.c        ****         r[13 * i + 9]  =  (uint8_t) (t[5] >>  7);
 1938              		.loc 1 669 9 discriminator 3 view .LVU660
 670:poly.c        ****         r[13 * i + 9] |=  (uint8_t) (t[6] <<  6);
 1939              		.loc 1 670 9 discriminator 3 view .LVU661
 671:poly.c        ****         r[13 * i + 10]  =  (uint8_t) (t[6] >>  2);
 1940              		.loc 1 671 9 discriminator 3 view .LVU662
 672:poly.c        ****         r[13 * i + 11]  =  (uint8_t) (t[6] >> 10);
 1941              		.loc 1 672 9 discriminator 3 view .LVU663
 673:poly.c        ****         r[13 * i + 11] |=  (uint8_t) (t[7] <<  3);
 1942              		.loc 1 673 9 discriminator 3 view .LVU664
 674:poly.c        ****         r[13 * i + 12]  =  (uint8_t) (t[7] >>  5);
 1943              		.loc 1 674 9 discriminator 3 view .LVU665
 674:poly.c        ****         r[13 * i + 12]  =  (uint8_t) (t[7] >>  5);
 1944              		.loc 1 674 24 is_stmt 0 discriminator 3 view .LVU666
 1945 008a C372     		strb	r3, [r0, #11]
 1946              		.loc 1 675 9 is_stmt 1 discriminator 3 view .LVU667
 1947              		.loc 1 675 28 is_stmt 0 discriminator 3 view .LVU668
 1948 008c 0573     		strb	r5, [r0, #12]
 646:poly.c        ****         t[0] = (1 << (D - 1)) - a->coeffs[8 * i + 0];
 1949              		.loc 1 646 28 is_stmt 1 discriminator 3 view .LVU669
 646:poly.c        ****         t[0] = (1 << (D - 1)) - a->coeffs[8 * i + 0];
 1950              		.loc 1 646 17 discriminator 3 view .LVU670
 646:poly.c        ****         t[0] = (1 << (D - 1)) - a->coeffs[8 * i + 0];
 1951              		.loc 1 646 5 is_stmt 0 discriminator 3 view .LVU671
 1952 008e 0D30     		adds	r0, r0, #13
 1953 0090 8445     		cmp	ip, r0
 1954 0092 01F12001 		add	r1, r1, #32
 1955 0096 B7D1     		bne	.L88
 676:poly.c        ****     }
 677:poly.c        **** 
 678:poly.c        ****     DBENCH_STOP(*tpack);
 679:poly.c        **** }
 1956              		.loc 1 679 1 view .LVU672
 1957 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1958              		.loc 1 679 1 view .LVU673
 1959              		.cfi_endproc
 1960              	.LFE23:
 1962              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack,"ax",%progbits
 1963              		.align	1
 1964              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack
 1965              		.syntax unified
 1966              		.thumb
 1967              		.thumb_func
 1968              		.fpu softvfp
 1970              	PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack:
 1971              	.LVL153:
 1972              	.LFB24:
 680:poly.c        **** 
 681:poly.c        **** /*************************************************
 682:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack
 683:poly.c        **** *
 684:poly.c        **** * Description: Unpack polynomial t0 with coefficients in ]-2^{D-1}, 2^{D-1}].
 685:poly.c        **** *
 686:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 687:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 688:poly.c        **** **************************************************/
 689:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack(poly *r, const uint8_t *a) {
 1973              		.loc 1 689 72 is_stmt 1 view -0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 690:poly.c        ****     unsigned int i;
 1977              		.loc 1 690 5 view .LVU675
 691:poly.c        ****     DBENCH_START();
 1978              		.loc 1 691 19 view .LVU676
 692:poly.c        **** 
 693:poly.c        ****     for (i = 0; i < N / 8; ++i) {
 1979              		.loc 1 693 5 view .LVU677
 1980              		.loc 1 693 17 view .LVU678
 689:poly.c        ****     unsigned int i;
 1981              		.loc 1 689 72 is_stmt 0 view .LVU679
 1982 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1983              	.LCFI29:
 1984              		.cfi_def_cfa_offset 28
 1985              		.cfi_offset 4, -28
 1986              		.cfi_offset 5, -24
 1987              		.cfi_offset 6, -20
 1988              		.cfi_offset 7, -16
 1989              		.cfi_offset 8, -12
 1990              		.cfi_offset 9, -8
 1991              		.cfi_offset 14, -4
 1992 0004 00F5806C 		add	ip, r0, #1024
 1993              	.LVL154:
 1994              	.L91:
 694:poly.c        ****         r->coeffs[8 * i + 0]  = a[13 * i + 0];
 1995              		.loc 1 694 9 is_stmt 1 discriminator 3 view .LVU680
 1996              		.loc 1 694 34 is_stmt 0 discriminator 3 view .LVU681
 1997 0008 0F78     		ldrb	r7, [r1]	@ zero_extendqisi2
 1998 000a 0760     		str	r7, [r0]
 695:poly.c        ****         r->coeffs[8 * i + 0] |= (uint32_t)a[13 * i + 1] << 8;
 1999              		.loc 1 695 9 is_stmt 1 discriminator 3 view .LVU682
 696:poly.c        ****         r->coeffs[8 * i + 0] &= 0x1FFF;
 2000              		.loc 1 696 9 discriminator 3 view .LVU683
 695:poly.c        ****         r->coeffs[8 * i + 0] |= (uint32_t)a[13 * i + 1] << 8;
 2001              		.loc 1 695 33 is_stmt 0 discriminator 3 view .LVU684
 2002 000c 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 695:poly.c        ****         r->coeffs[8 * i + 0] |= (uint32_t)a[13 * i + 1] << 8;
 2003              		.loc 1 695 30 discriminator 3 view .LVU685
 2004 000e 47EA0327 		orr	r7, r7, r3, lsl #8
 2005              		.loc 1 696 30 discriminator 3 view .LVU686
 2006 0012 C7F30C07 		ubfx	r7, r7, #0, #13
 2007 0016 0760     		str	r7, [r0]
 697:poly.c        **** 
 698:poly.c        ****         r->coeffs[8 * i + 1]  = a[13 * i + 1] >> 5;
 2008              		.loc 1 698 9 is_stmt 1 discriminator 3 view .LVU687
 2009              		.loc 1 698 47 is_stmt 0 discriminator 3 view .LVU688
 2010 0018 4D78     		ldrb	r5, [r1, #1]	@ zero_extendqisi2
 2011 001a 6D09     		lsrs	r5, r5, #5
 2012 001c 4560     		str	r5, [r0, #4]
 699:poly.c        ****         r->coeffs[8 * i + 1] |= (uint32_t)a[13 * i + 2] << 3;
 2013              		.loc 1 699 9 is_stmt 1 discriminator 3 view .LVU689
 2014              		.loc 1 699 33 is_stmt 0 discriminator 3 view .LVU690
 2015 001e 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 2016              		.loc 1 699 30 discriminator 3 view .LVU691
 2017 0020 45EAC305 		orr	r5, r5, r3, lsl #3
 2018 0024 4560     		str	r5, [r0, #4]
 700:poly.c        ****         r->coeffs[8 * i + 1] |= (uint32_t)a[13 * i + 3] << 11;
 2019              		.loc 1 700 9 is_stmt 1 discriminator 3 view .LVU692
 701:poly.c        ****         r->coeffs[8 * i + 1] &= 0x1FFF;
 2020              		.loc 1 701 9 discriminator 3 view .LVU693
 700:poly.c        ****         r->coeffs[8 * i + 1] |= (uint32_t)a[13 * i + 3] << 11;
 2021              		.loc 1 700 33 is_stmt 0 discriminator 3 view .LVU694
 2022 0026 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 700:poly.c        ****         r->coeffs[8 * i + 1] |= (uint32_t)a[13 * i + 3] << 11;
 2023              		.loc 1 700 30 discriminator 3 view .LVU695
 2024 0028 45EAC325 		orr	r5, r5, r3, lsl #11
 2025              		.loc 1 701 30 discriminator 3 view .LVU696
 2026 002c C5F30C05 		ubfx	r5, r5, #0, #13
 2027 0030 4560     		str	r5, [r0, #4]
 702:poly.c        **** 
 703:poly.c        ****         r->coeffs[8 * i + 2]  = a[13 * i + 3] >> 2;
 2028              		.loc 1 703 9 is_stmt 1 discriminator 3 view .LVU697
 2029              		.loc 1 703 47 is_stmt 0 discriminator 3 view .LVU698
 2030 0032 CE78     		ldrb	r6, [r1, #3]	@ zero_extendqisi2
 2031 0034 B608     		lsrs	r6, r6, #2
 2032 0036 8660     		str	r6, [r0, #8]
 704:poly.c        ****         r->coeffs[8 * i + 2] |= (uint32_t)a[13 * i + 4] << 6;
 2033              		.loc 1 704 9 is_stmt 1 discriminator 3 view .LVU699
 705:poly.c        ****         r->coeffs[8 * i + 2] &= 0x1FFF;
 2034              		.loc 1 705 9 discriminator 3 view .LVU700
 704:poly.c        ****         r->coeffs[8 * i + 2] |= (uint32_t)a[13 * i + 4] << 6;
 2035              		.loc 1 704 33 is_stmt 0 discriminator 3 view .LVU701
 2036 0038 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 704:poly.c        ****         r->coeffs[8 * i + 2] |= (uint32_t)a[13 * i + 4] << 6;
 2037              		.loc 1 704 30 discriminator 3 view .LVU702
 2038 003a 46EA8316 		orr	r6, r6, r3, lsl #6
 2039              		.loc 1 705 30 discriminator 3 view .LVU703
 2040 003e C6F30C06 		ubfx	r6, r6, #0, #13
 2041 0042 8660     		str	r6, [r0, #8]
 706:poly.c        **** 
 707:poly.c        ****         r->coeffs[8 * i + 3]  = a[13 * i + 4] >> 7;
 2042              		.loc 1 707 9 is_stmt 1 discriminator 3 view .LVU704
 2043              		.loc 1 707 47 is_stmt 0 discriminator 3 view .LVU705
 2044 0044 0C79     		ldrb	r4, [r1, #4]	@ zero_extendqisi2
 2045 0046 E409     		lsrs	r4, r4, #7
 2046 0048 C460     		str	r4, [r0, #12]
 708:poly.c        ****         r->coeffs[8 * i + 3] |= (uint32_t)a[13 * i + 5] << 1;
 2047              		.loc 1 708 9 is_stmt 1 discriminator 3 view .LVU706
 2048              		.loc 1 708 33 is_stmt 0 discriminator 3 view .LVU707
 2049 004a 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 2050              		.loc 1 708 30 discriminator 3 view .LVU708
 2051 004c 44EA4304 		orr	r4, r4, r3, lsl #1
 2052 0050 C460     		str	r4, [r0, #12]
 709:poly.c        ****         r->coeffs[8 * i + 3] |= (uint32_t)a[13 * i + 6] << 9;
 2053              		.loc 1 709 9 is_stmt 1 discriminator 3 view .LVU709
 710:poly.c        ****         r->coeffs[8 * i + 3] &= 0x1FFF;
 2054              		.loc 1 710 9 discriminator 3 view .LVU710
 709:poly.c        ****         r->coeffs[8 * i + 3] |= (uint32_t)a[13 * i + 6] << 9;
 2055              		.loc 1 709 33 is_stmt 0 discriminator 3 view .LVU711
 2056 0052 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 709:poly.c        ****         r->coeffs[8 * i + 3] |= (uint32_t)a[13 * i + 6] << 9;
 2057              		.loc 1 709 30 discriminator 3 view .LVU712
 2058 0054 44EA4324 		orr	r4, r4, r3, lsl #9
 2059              		.loc 1 710 30 discriminator 3 view .LVU713
 2060 0058 C4F30C04 		ubfx	r4, r4, #0, #13
 2061 005c C460     		str	r4, [r0, #12]
 711:poly.c        **** 
 712:poly.c        ****         r->coeffs[8 * i + 4]  = a[13 * i + 6] >> 4;
 2062              		.loc 1 712 9 is_stmt 1 discriminator 3 view .LVU714
 2063              		.loc 1 712 47 is_stmt 0 discriminator 3 view .LVU715
 2064 005e 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 2065 0060 1209     		lsrs	r2, r2, #4
 2066 0062 0261     		str	r2, [r0, #16]
 713:poly.c        ****         r->coeffs[8 * i + 4] |= (uint32_t)a[13 * i + 7] << 4;
 2067              		.loc 1 713 9 is_stmt 1 discriminator 3 view .LVU716
 2068              		.loc 1 713 33 is_stmt 0 discriminator 3 view .LVU717
 2069 0064 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 2070              		.loc 1 713 30 discriminator 3 view .LVU718
 2071 0066 42EA0312 		orr	r2, r2, r3, lsl #4
 2072 006a 0261     		str	r2, [r0, #16]
 714:poly.c        ****         r->coeffs[8 * i + 4] |= (uint32_t)a[13 * i + 8] << 12;
 2073              		.loc 1 714 9 is_stmt 1 discriminator 3 view .LVU719
 715:poly.c        ****         r->coeffs[8 * i + 4] &= 0x1FFF;
 2074              		.loc 1 715 9 discriminator 3 view .LVU720
 714:poly.c        ****         r->coeffs[8 * i + 4] |= (uint32_t)a[13 * i + 8] << 12;
 2075              		.loc 1 714 33 is_stmt 0 discriminator 3 view .LVU721
 2076 006c 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 714:poly.c        ****         r->coeffs[8 * i + 4] |= (uint32_t)a[13 * i + 8] << 12;
 2077              		.loc 1 714 30 discriminator 3 view .LVU722
 2078 006e 42EA0332 		orr	r2, r2, r3, lsl #12
 2079              		.loc 1 715 30 discriminator 3 view .LVU723
 2080 0072 C2F30C02 		ubfx	r2, r2, #0, #13
 2081 0076 0261     		str	r2, [r0, #16]
 716:poly.c        **** 
 717:poly.c        ****         r->coeffs[8 * i + 5]  = a[13 * i + 8] >> 1;
 2082              		.loc 1 717 9 is_stmt 1 discriminator 3 view .LVU724
 2083              		.loc 1 717 47 is_stmt 0 discriminator 3 view .LVU725
 2084 0078 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 2085 007a 5B08     		lsrs	r3, r3, #1
 2086 007c 4361     		str	r3, [r0, #20]
 718:poly.c        ****         r->coeffs[8 * i + 5] |= (uint32_t)a[13 * i + 9] << 7;
 2087              		.loc 1 718 9 is_stmt 1 discriminator 3 view .LVU726
 719:poly.c        ****         r->coeffs[8 * i + 5] &= 0x1FFF;
 2088              		.loc 1 719 9 discriminator 3 view .LVU727
 718:poly.c        ****         r->coeffs[8 * i + 5] |= (uint32_t)a[13 * i + 9] << 7;
 2089              		.loc 1 718 33 is_stmt 0 discriminator 3 view .LVU728
 2090 007e 91F809E0 		ldrb	lr, [r1, #9]	@ zero_extendqisi2
 718:poly.c        ****         r->coeffs[8 * i + 5] |= (uint32_t)a[13 * i + 9] << 7;
 2091              		.loc 1 718 30 discriminator 3 view .LVU729
 2092 0082 43EACE13 		orr	r3, r3, lr, lsl #7
 2093              		.loc 1 719 30 discriminator 3 view .LVU730
 2094 0086 C3F30C0E 		ubfx	lr, r3, #0, #13
 2095 008a C0F814E0 		str	lr, [r0, #20]
 720:poly.c        **** 
 721:poly.c        ****         r->coeffs[8 * i + 6]  = a[13 * i + 9] >> 6;
 2096              		.loc 1 721 9 is_stmt 1 discriminator 3 view .LVU731
 2097              		.loc 1 721 47 is_stmt 0 discriminator 3 view .LVU732
 2098 008e 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 2099 0090 9B09     		lsrs	r3, r3, #6
 2100 0092 8361     		str	r3, [r0, #24]
 722:poly.c        ****         r->coeffs[8 * i + 6] |= (uint32_t)a[13 * i + 10] << 2;
 2101              		.loc 1 722 9 is_stmt 1 discriminator 3 view .LVU733
 2102              		.loc 1 722 33 is_stmt 0 discriminator 3 view .LVU734
 2103 0094 91F80A80 		ldrb	r8, [r1, #10]	@ zero_extendqisi2
 2104              		.loc 1 722 30 discriminator 3 view .LVU735
 2105 0098 43EA8803 		orr	r3, r3, r8, lsl #2
 2106 009c 8361     		str	r3, [r0, #24]
 723:poly.c        ****         r->coeffs[8 * i + 6] |= (uint32_t)a[13 * i + 11] << 10;
 2107              		.loc 1 723 9 is_stmt 1 discriminator 3 view .LVU736
 724:poly.c        ****         r->coeffs[8 * i + 6] &= 0x1FFF;
 2108              		.loc 1 724 9 discriminator 3 view .LVU737
 723:poly.c        ****         r->coeffs[8 * i + 6] |= (uint32_t)a[13 * i + 11] << 10;
 2109              		.loc 1 723 33 is_stmt 0 discriminator 3 view .LVU738
 2110 009e 91F80B80 		ldrb	r8, [r1, #11]	@ zero_extendqisi2
 723:poly.c        ****         r->coeffs[8 * i + 6] |= (uint32_t)a[13 * i + 11] << 10;
 2111              		.loc 1 723 30 discriminator 3 view .LVU739
 2112 00a2 43EA8823 		orr	r3, r3, r8, lsl #10
 2113              		.loc 1 724 30 discriminator 3 view .LVU740
 2114 00a6 C3F30C03 		ubfx	r3, r3, #0, #13
 2115 00aa 8361     		str	r3, [r0, #24]
 725:poly.c        **** 
 726:poly.c        ****         r->coeffs[8 * i + 7]  = a[13 * i + 11] >> 3;
 2116              		.loc 1 726 9 is_stmt 1 discriminator 3 view .LVU741
 2117              		.loc 1 726 48 is_stmt 0 discriminator 3 view .LVU742
 2118 00ac 91F80B80 		ldrb	r8, [r1, #11]	@ zero_extendqisi2
 2119 00b0 4FEAD808 		lsr	r8, r8, #3
 2120 00b4 C0F81C80 		str	r8, [r0, #28]
 727:poly.c        ****         r->coeffs[8 * i + 7] |= (uint32_t)a[13 * i + 12] << 5;
 2121              		.loc 1 727 9 is_stmt 1 discriminator 3 view .LVU743
 2122              		.loc 1 727 33 is_stmt 0 discriminator 3 view .LVU744
 2123 00b8 91F80C90 		ldrb	r9, [r1, #12]	@ zero_extendqisi2
 728:poly.c        ****         r->coeffs[8 * i + 7] &= 0x1FFF;
 729:poly.c        **** 
 730:poly.c        ****         r->coeffs[8 * i + 0] = (1 << (D - 1)) - r->coeffs[8 * i + 0];
 731:poly.c        ****         r->coeffs[8 * i + 1] = (1 << (D - 1)) - r->coeffs[8 * i + 1];
 732:poly.c        ****         r->coeffs[8 * i + 2] = (1 << (D - 1)) - r->coeffs[8 * i + 2];
 733:poly.c        ****         r->coeffs[8 * i + 3] = (1 << (D - 1)) - r->coeffs[8 * i + 3];
 734:poly.c        ****         r->coeffs[8 * i + 4] = (1 << (D - 1)) - r->coeffs[8 * i + 4];
 2124              		.loc 1 734 47 discriminator 3 view .LVU745
 2125 00bc C2F58052 		rsb	r2, r2, #4096
 735:poly.c        ****         r->coeffs[8 * i + 5] = (1 << (D - 1)) - r->coeffs[8 * i + 5];
 736:poly.c        ****         r->coeffs[8 * i + 6] = (1 << (D - 1)) - r->coeffs[8 * i + 6];
 2126              		.loc 1 736 47 discriminator 3 view .LVU746
 2127 00c0 C3F58053 		rsb	r3, r3, #4096
 727:poly.c        ****         r->coeffs[8 * i + 7] &= 0x1FFF;
 2128              		.loc 1 727 30 discriminator 3 view .LVU747
 2129 00c4 48EA4918 		orr	r8, r8, r9, lsl #5
 728:poly.c        ****         r->coeffs[8 * i + 7] &= 0x1FFF;
 2130              		.loc 1 728 9 is_stmt 1 discriminator 3 view .LVU748
 730:poly.c        ****         r->coeffs[8 * i + 1] = (1 << (D - 1)) - r->coeffs[8 * i + 1];
 2131              		.loc 1 730 9 discriminator 3 view .LVU749
 734:poly.c        ****         r->coeffs[8 * i + 5] = (1 << (D - 1)) - r->coeffs[8 * i + 5];
 2132              		.loc 1 734 30 is_stmt 0 discriminator 3 view .LVU750
 2133 00c8 0261     		str	r2, [r0, #16]
 2134              		.loc 1 736 30 discriminator 3 view .LVU751
 2135 00ca 8361     		str	r3, [r0, #24]
 730:poly.c        ****         r->coeffs[8 * i + 1] = (1 << (D - 1)) - r->coeffs[8 * i + 1];
 2136              		.loc 1 730 47 discriminator 3 view .LVU752
 2137 00cc C7F58057 		rsb	r7, r7, #4096
 731:poly.c        ****         r->coeffs[8 * i + 2] = (1 << (D - 1)) - r->coeffs[8 * i + 2];
 2138              		.loc 1 731 47 discriminator 3 view .LVU753
 2139 00d0 C5F58055 		rsb	r5, r5, #4096
 732:poly.c        ****         r->coeffs[8 * i + 3] = (1 << (D - 1)) - r->coeffs[8 * i + 3];
 2140              		.loc 1 732 47 discriminator 3 view .LVU754
 2141 00d4 C6F58056 		rsb	r6, r6, #4096
 733:poly.c        ****         r->coeffs[8 * i + 4] = (1 << (D - 1)) - r->coeffs[8 * i + 4];
 2142              		.loc 1 733 47 discriminator 3 view .LVU755
 2143 00d8 C4F58054 		rsb	r4, r4, #4096
 735:poly.c        ****         r->coeffs[8 * i + 6] = (1 << (D - 1)) - r->coeffs[8 * i + 6];
 2144              		.loc 1 735 47 discriminator 3 view .LVU756
 2145 00dc CEF58052 		rsb	r2, lr, #4096
 737:poly.c        ****         r->coeffs[8 * i + 7] = (1 << (D - 1)) - r->coeffs[8 * i + 7];
 2146              		.loc 1 737 47 discriminator 3 view .LVU757
 2147 00e0 C8F58053 		rsb	r3, r8, #4096
 730:poly.c        ****         r->coeffs[8 * i + 1] = (1 << (D - 1)) - r->coeffs[8 * i + 1];
 2148              		.loc 1 730 30 discriminator 3 view .LVU758
 2149 00e4 0760     		str	r7, [r0]
 731:poly.c        ****         r->coeffs[8 * i + 2] = (1 << (D - 1)) - r->coeffs[8 * i + 2];
 2150              		.loc 1 731 9 is_stmt 1 discriminator 3 view .LVU759
 731:poly.c        ****         r->coeffs[8 * i + 2] = (1 << (D - 1)) - r->coeffs[8 * i + 2];
 2151              		.loc 1 731 30 is_stmt 0 discriminator 3 view .LVU760
 2152 00e6 4560     		str	r5, [r0, #4]
 732:poly.c        ****         r->coeffs[8 * i + 3] = (1 << (D - 1)) - r->coeffs[8 * i + 3];
 2153              		.loc 1 732 9 is_stmt 1 discriminator 3 view .LVU761
 732:poly.c        ****         r->coeffs[8 * i + 3] = (1 << (D - 1)) - r->coeffs[8 * i + 3];
 2154              		.loc 1 732 30 is_stmt 0 discriminator 3 view .LVU762
 2155 00e8 8660     		str	r6, [r0, #8]
 733:poly.c        ****         r->coeffs[8 * i + 4] = (1 << (D - 1)) - r->coeffs[8 * i + 4];
 2156              		.loc 1 733 9 is_stmt 1 discriminator 3 view .LVU763
 733:poly.c        ****         r->coeffs[8 * i + 4] = (1 << (D - 1)) - r->coeffs[8 * i + 4];
 2157              		.loc 1 733 30 is_stmt 0 discriminator 3 view .LVU764
 2158 00ea C460     		str	r4, [r0, #12]
 734:poly.c        ****         r->coeffs[8 * i + 5] = (1 << (D - 1)) - r->coeffs[8 * i + 5];
 2159              		.loc 1 734 9 is_stmt 1 discriminator 3 view .LVU765
 735:poly.c        ****         r->coeffs[8 * i + 6] = (1 << (D - 1)) - r->coeffs[8 * i + 6];
 2160              		.loc 1 735 9 discriminator 3 view .LVU766
 735:poly.c        ****         r->coeffs[8 * i + 6] = (1 << (D - 1)) - r->coeffs[8 * i + 6];
 2161              		.loc 1 735 30 is_stmt 0 discriminator 3 view .LVU767
 2162 00ec 4261     		str	r2, [r0, #20]
 736:poly.c        ****         r->coeffs[8 * i + 7] = (1 << (D - 1)) - r->coeffs[8 * i + 7];
 2163              		.loc 1 736 9 is_stmt 1 discriminator 3 view .LVU768
 2164              		.loc 1 737 9 discriminator 3 view .LVU769
 2165              		.loc 1 737 30 is_stmt 0 discriminator 3 view .LVU770
 2166 00ee C361     		str	r3, [r0, #28]
 693:poly.c        ****         r->coeffs[8 * i + 0]  = a[13 * i + 0];
 2167              		.loc 1 693 28 is_stmt 1 discriminator 3 view .LVU771
 693:poly.c        ****         r->coeffs[8 * i + 0]  = a[13 * i + 0];
 2168              		.loc 1 693 17 discriminator 3 view .LVU772
 693:poly.c        ****         r->coeffs[8 * i + 0]  = a[13 * i + 0];
 2169              		.loc 1 693 5 is_stmt 0 discriminator 3 view .LVU773
 2170 00f0 2030     		adds	r0, r0, #32
 2171 00f2 6045     		cmp	r0, ip
 2172 00f4 01F10D01 		add	r1, r1, #13
 2173 00f8 86D1     		bne	.L91
 738:poly.c        ****     }
 739:poly.c        **** 
 740:poly.c        ****     DBENCH_STOP(*tpack);
 741:poly.c        **** }
 2174              		.loc 1 741 1 view .LVU774
 2175 00fa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2176              		.cfi_endproc
 2177              	.LFE24:
 2179              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyz_pack,"ax",%progbits
 2180              		.align	1
 2181              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyz_pack
 2182              		.syntax unified
 2183              		.thumb
 2184              		.thumb_func
 2185              		.fpu softvfp
 2187              	PQCLEAN_DILITHIUM2_CLEAN_polyz_pack:
 2188              	.LVL155:
 2189              	.LFB25:
 742:poly.c        **** 
 743:poly.c        **** /*************************************************
 744:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyz_pack
 745:poly.c        **** *
 746:poly.c        **** * Description: Bit-pack polynomial with coefficients
 747:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1].
 748:poly.c        **** *
 749:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 750:poly.c        **** *                            POLYZ_PACKEDBYTES bytes
 751:poly.c        **** *              - const poly *a: pointer to input polynomial
 752:poly.c        **** **************************************************/
 753:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(uint8_t *r, const poly *a) {
 2190              		.loc 1 753 69 is_stmt 1 view -0
 2191              		.cfi_startproc
 2192              		@ args = 0, pretend = 0, frame = 0
 2193              		@ frame_needed = 0, uses_anonymous_args = 0
 754:poly.c        ****     unsigned int i;
 2194              		.loc 1 754 5 view .LVU776
 755:poly.c        ****     uint32_t t[4];
 2195              		.loc 1 755 5 view .LVU777
 756:poly.c        ****     DBENCH_START();
 2196              		.loc 1 756 19 view .LVU778
 757:poly.c        **** 
 758:poly.c        ****     for (i = 0; i < N / 4; ++i) {
 2197              		.loc 1 758 5 view .LVU779
 2198              		.loc 1 758 17 view .LVU780
 753:poly.c        ****     unsigned int i;
 2199              		.loc 1 753 69 is_stmt 0 view .LVU781
 2200 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2201              	.LCFI30:
 2202              		.cfi_def_cfa_offset 20
 2203              		.cfi_offset 4, -20
 2204              		.cfi_offset 5, -16
 2205              		.cfi_offset 6, -12
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 00F51076 		add	r6, r0, #576
 2209              	.LVL156:
 2210              	.L94:
 759:poly.c        ****         t[0] = GAMMA1 - a->coeffs[4 * i + 0];
 2211              		.loc 1 759 9 is_stmt 1 discriminator 3 view .LVU782
 2212              		.loc 1 759 23 is_stmt 0 discriminator 3 view .LVU783
 2213 0006 0D68     		ldr	r5, [r1]
 760:poly.c        ****         t[1] = GAMMA1 - a->coeffs[4 * i + 1];
 2214              		.loc 1 760 23 discriminator 3 view .LVU784
 2215 0008 4C68     		ldr	r4, [r1, #4]
 761:poly.c        ****         t[2] = GAMMA1 - a->coeffs[4 * i + 2];
 2216              		.loc 1 761 23 discriminator 3 view .LVU785
 2217 000a 8A68     		ldr	r2, [r1, #8]
 762:poly.c        ****         t[3] = GAMMA1 - a->coeffs[4 * i + 3];
 2218              		.loc 1 762 23 discriminator 3 view .LVU786
 2219 000c CB68     		ldr	r3, [r1, #12]
 759:poly.c        ****         t[1] = GAMMA1 - a->coeffs[4 * i + 1];
 2220              		.loc 1 759 23 discriminator 3 view .LVU787
 2221 000e C5F50035 		rsb	r5, r5, #131072
 2222              	.LVL157:
 760:poly.c        ****         t[2] = GAMMA1 - a->coeffs[4 * i + 2];
 2223              		.loc 1 760 9 is_stmt 1 discriminator 3 view .LVU788
 760:poly.c        ****         t[2] = GAMMA1 - a->coeffs[4 * i + 2];
 2224              		.loc 1 760 23 is_stmt 0 discriminator 3 view .LVU789
 2225 0012 C4F50034 		rsb	r4, r4, #131072
 2226              	.LVL158:
 761:poly.c        ****         t[3] = GAMMA1 - a->coeffs[4 * i + 3];
 2227              		.loc 1 761 9 is_stmt 1 discriminator 3 view .LVU790
 763:poly.c        **** 
 764:poly.c        ****         r[9 * i + 0]  = (uint8_t) t[0];
 765:poly.c        ****         r[9 * i + 1]  = (uint8_t) (t[0] >> 8);
 2228              		.loc 1 765 41 is_stmt 0 discriminator 3 view .LVU791
 2229 0016 2F0A     		lsrs	r7, r5, #8
 2230              		.loc 1 765 25 discriminator 3 view .LVU792
 2231 0018 4770     		strb	r7, [r0, #1]
 766:poly.c        ****         r[9 * i + 2]  = (uint8_t) (t[0] >> 16);
 767:poly.c        ****         r[9 * i + 2] |= (uint8_t) (t[1] << 2);
 2232              		.loc 1 767 25 discriminator 3 view .LVU793
 2233 001a A700     		lsls	r7, r4, #2
 764:poly.c        ****         r[9 * i + 1]  = (uint8_t) (t[0] >> 8);
 2234              		.loc 1 764 25 discriminator 3 view .LVU794
 2235 001c 0570     		strb	r5, [r0]
 2236              		.loc 1 767 22 discriminator 3 view .LVU795
 2237 001e 47EA1545 		orr	r5, r7, r5, lsr #16
 2238              	.LVL159:
 761:poly.c        ****         t[3] = GAMMA1 - a->coeffs[4 * i + 3];
 2239              		.loc 1 761 23 discriminator 3 view .LVU796
 2240 0022 C2F50032 		rsb	r2, r2, #131072
 2241              	.LVL160:
 762:poly.c        **** 
 2242              		.loc 1 762 9 is_stmt 1 discriminator 3 view .LVU797
 2243              		.loc 1 767 22 is_stmt 0 discriminator 3 view .LVU798
 2244 0026 8570     		strb	r5, [r0, #2]
 768:poly.c        ****         r[9 * i + 3]  = (uint8_t) (t[1] >> 6);
 2245              		.loc 1 768 41 discriminator 3 view .LVU799
 2246 0028 A509     		lsrs	r5, r4, #6
 2247              		.loc 1 768 25 discriminator 3 view .LVU800
 2248 002a C570     		strb	r5, [r0, #3]
 769:poly.c        ****         r[9 * i + 4]  = (uint8_t) (t[1] >> 14);
 770:poly.c        ****         r[9 * i + 4] |= (uint8_t) (t[2] << 4);
 2249              		.loc 1 770 25 discriminator 3 view .LVU801
 2250 002c 1501     		lsls	r5, r2, #4
 2251              		.loc 1 770 22 discriminator 3 view .LVU802
 2252 002e 45EA9434 		orr	r4, r5, r4, lsr #14
 2253              	.LVL161:
 762:poly.c        **** 
 2254              		.loc 1 762 23 discriminator 3 view .LVU803
 2255 0032 C3F50033 		rsb	r3, r3, #131072
 2256              	.LVL162:
 764:poly.c        ****         r[9 * i + 1]  = (uint8_t) (t[0] >> 8);
 2257              		.loc 1 764 9 is_stmt 1 discriminator 3 view .LVU804
 765:poly.c        ****         r[9 * i + 2]  = (uint8_t) (t[0] >> 16);
 2258              		.loc 1 765 9 discriminator 3 view .LVU805
 766:poly.c        ****         r[9 * i + 2] |= (uint8_t) (t[1] << 2);
 2259              		.loc 1 766 9 discriminator 3 view .LVU806
 767:poly.c        ****         r[9 * i + 3]  = (uint8_t) (t[1] >> 6);
 2260              		.loc 1 767 9 discriminator 3 view .LVU807
 768:poly.c        ****         r[9 * i + 4]  = (uint8_t) (t[1] >> 14);
 2261              		.loc 1 768 9 discriminator 3 view .LVU808
 769:poly.c        ****         r[9 * i + 4] |= (uint8_t) (t[2] << 4);
 2262              		.loc 1 769 9 discriminator 3 view .LVU809
 2263              		.loc 1 770 9 discriminator 3 view .LVU810
 2264              		.loc 1 770 22 is_stmt 0 discriminator 3 view .LVU811
 2265 0036 0471     		strb	r4, [r0, #4]
 771:poly.c        ****         r[9 * i + 5]  = (uint8_t) (t[2] >> 4);
 2266              		.loc 1 771 9 is_stmt 1 discriminator 3 view .LVU812
 2267              		.loc 1 771 41 is_stmt 0 discriminator 3 view .LVU813
 2268 0038 1409     		lsrs	r4, r2, #4
 2269              		.loc 1 771 25 discriminator 3 view .LVU814
 2270 003a 4471     		strb	r4, [r0, #5]
 772:poly.c        ****         r[9 * i + 6]  = (uint8_t) (t[2] >> 12);
 2271              		.loc 1 772 9 is_stmt 1 discriminator 3 view .LVU815
 773:poly.c        ****         r[9 * i + 6] |= (uint8_t) (t[3] << 6);
 2272              		.loc 1 773 9 discriminator 3 view .LVU816
 2273              		.loc 1 773 25 is_stmt 0 discriminator 3 view .LVU817
 2274 003c 9C01     		lsls	r4, r3, #6
 2275              		.loc 1 773 22 discriminator 3 view .LVU818
 2276 003e 44EA1232 		orr	r2, r4, r2, lsr #12
 2277              	.LVL163:
 2278              		.loc 1 773 22 discriminator 3 view .LVU819
 2279 0042 8271     		strb	r2, [r0, #6]
 774:poly.c        ****         r[9 * i + 7]  = (uint8_t) (t[3] >> 2);
 2280              		.loc 1 774 9 is_stmt 1 discriminator 3 view .LVU820
 2281              		.loc 1 774 41 is_stmt 0 discriminator 3 view .LVU821
 2282 0044 9A08     		lsrs	r2, r3, #2
 775:poly.c        ****         r[9 * i + 8]  = (uint8_t) (t[3] >> 10);
 2283              		.loc 1 775 41 discriminator 3 view .LVU822
 2284 0046 9B0A     		lsrs	r3, r3, #10
 2285              	.LVL164:
 774:poly.c        ****         r[9 * i + 7]  = (uint8_t) (t[3] >> 2);
 2286              		.loc 1 774 25 discriminator 3 view .LVU823
 2287 0048 C271     		strb	r2, [r0, #7]
 2288              		.loc 1 775 9 is_stmt 1 discriminator 3 view .LVU824
 2289              		.loc 1 775 25 is_stmt 0 discriminator 3 view .LVU825
 2290 004a 0372     		strb	r3, [r0, #8]
 758:poly.c        ****         t[0] = GAMMA1 - a->coeffs[4 * i + 0];
 2291              		.loc 1 758 28 is_stmt 1 discriminator 3 view .LVU826
 758:poly.c        ****         t[0] = GAMMA1 - a->coeffs[4 * i + 0];
 2292              		.loc 1 758 17 discriminator 3 view .LVU827
 758:poly.c        ****         t[0] = GAMMA1 - a->coeffs[4 * i + 0];
 2293              		.loc 1 758 5 is_stmt 0 discriminator 3 view .LVU828
 2294 004c 0930     		adds	r0, r0, #9
 2295 004e 8642     		cmp	r6, r0
 2296 0050 01F11001 		add	r1, r1, #16
 2297 0054 D7D1     		bne	.L94
 776:poly.c        ****     }
 777:poly.c        **** 
 778:poly.c        ****     DBENCH_STOP(*tpack);
 779:poly.c        **** }
 2298              		.loc 1 779 1 view .LVU829
 2299 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 2300              		.loc 1 779 1 view .LVU830
 2301              		.cfi_endproc
 2302              	.LFE25:
 2304              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack,"ax",%progbits
 2305              		.align	1
 2306              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
 2307              		.syntax unified
 2308              		.thumb
 2309              		.thumb_func
 2310              		.fpu softvfp
 2312              	PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack:
 2313              	.LVL165:
 2314              	.LFB26:
 780:poly.c        **** 
 781:poly.c        **** /*************************************************
 782:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
 783:poly.c        **** *
 784:poly.c        **** * Description: Unpack polynomial z with coefficients
 785:poly.c        **** *              in [-(GAMMA1 - 1), GAMMA1].
 786:poly.c        **** *
 787:poly.c        **** * Arguments:   - poly *r: pointer to output polynomial
 788:poly.c        **** *              - const uint8_t *a: byte array with bit-packed polynomial
 789:poly.c        **** **************************************************/
 790:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(poly *r, const uint8_t *a) {
 2315              		.loc 1 790 71 is_stmt 1 view -0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 0
 2318              		@ frame_needed = 0, uses_anonymous_args = 0
 791:poly.c        ****     unsigned int i;
 2319              		.loc 1 791 5 view .LVU832
 792:poly.c        ****     DBENCH_START();
 2320              		.loc 1 792 19 view .LVU833
 793:poly.c        **** 
 794:poly.c        ****     for (i = 0; i < N / 4; ++i) {
 2321              		.loc 1 794 5 view .LVU834
 2322              		.loc 1 794 17 view .LVU835
 790:poly.c        ****     unsigned int i;
 2323              		.loc 1 790 71 is_stmt 0 view .LVU836
 2324 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2325              	.LCFI31:
 2326              		.cfi_def_cfa_offset 20
 2327              		.cfi_offset 4, -20
 2328              		.cfi_offset 5, -16
 2329              		.cfi_offset 6, -12
 2330              		.cfi_offset 7, -8
 2331              		.cfi_offset 14, -4
 2332 0002 00F58066 		add	r6, r0, #1024
 2333              	.LVL166:
 2334              	.L97:
 795:poly.c        ****         r->coeffs[4 * i + 0]  = a[9 * i + 0];
 2335              		.loc 1 795 9 is_stmt 1 discriminator 3 view .LVU837
 2336              		.loc 1 795 34 is_stmt 0 discriminator 3 view .LVU838
 2337 0006 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 2338 0008 0460     		str	r4, [r0]
 796:poly.c        ****         r->coeffs[4 * i + 0] |= (uint32_t)a[9 * i + 1] << 8;
 2339              		.loc 1 796 9 is_stmt 1 discriminator 3 view .LVU839
 2340              		.loc 1 796 33 is_stmt 0 discriminator 3 view .LVU840
 2341 000a 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 2342              		.loc 1 796 30 discriminator 3 view .LVU841
 2343 000c 44EA0324 		orr	r4, r4, r3, lsl #8
 2344 0010 0460     		str	r4, [r0]
 797:poly.c        ****         r->coeffs[4 * i + 0] |= (uint32_t)a[9 * i + 2] << 16;
 2345              		.loc 1 797 9 is_stmt 1 discriminator 3 view .LVU842
 798:poly.c        ****         r->coeffs[4 * i + 0] &= 0x3FFFF;
 2346              		.loc 1 798 9 discriminator 3 view .LVU843
 797:poly.c        ****         r->coeffs[4 * i + 0] |= (uint32_t)a[9 * i + 2] << 16;
 2347              		.loc 1 797 33 is_stmt 0 discriminator 3 view .LVU844
 2348 0012 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 797:poly.c        ****         r->coeffs[4 * i + 0] |= (uint32_t)a[9 * i + 2] << 16;
 2349              		.loc 1 797 30 discriminator 3 view .LVU845
 2350 0014 44EA0344 		orr	r4, r4, r3, lsl #16
 2351              		.loc 1 798 30 discriminator 3 view .LVU846
 2352 0018 C4F31104 		ubfx	r4, r4, #0, #18
 2353 001c 0460     		str	r4, [r0]
 799:poly.c        **** 
 800:poly.c        ****         r->coeffs[4 * i + 1]  = a[9 * i + 2] >> 2;
 2354              		.loc 1 800 9 is_stmt 1 discriminator 3 view .LVU847
 2355              		.loc 1 800 46 is_stmt 0 discriminator 3 view .LVU848
 2356 001e 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2357 0020 9208     		lsrs	r2, r2, #2
 2358 0022 4260     		str	r2, [r0, #4]
 801:poly.c        ****         r->coeffs[4 * i + 1] |= (uint32_t)a[9 * i + 3] << 6;
 2359              		.loc 1 801 9 is_stmt 1 discriminator 3 view .LVU849
 2360              		.loc 1 801 33 is_stmt 0 discriminator 3 view .LVU850
 2361 0024 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 2362              		.loc 1 801 30 discriminator 3 view .LVU851
 2363 0026 42EA8312 		orr	r2, r2, r3, lsl #6
 2364 002a 4260     		str	r2, [r0, #4]
 802:poly.c        ****         r->coeffs[4 * i + 1] |= (uint32_t)a[9 * i + 4] << 14;
 2365              		.loc 1 802 9 is_stmt 1 discriminator 3 view .LVU852
 803:poly.c        ****         r->coeffs[4 * i + 1] &= 0x3FFFF;
 2366              		.loc 1 803 9 discriminator 3 view .LVU853
 802:poly.c        ****         r->coeffs[4 * i + 1] |= (uint32_t)a[9 * i + 4] << 14;
 2367              		.loc 1 802 33 is_stmt 0 discriminator 3 view .LVU854
 2368 002c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 802:poly.c        ****         r->coeffs[4 * i + 1] |= (uint32_t)a[9 * i + 4] << 14;
 2369              		.loc 1 802 30 discriminator 3 view .LVU855
 2370 002e 42EA8332 		orr	r2, r2, r3, lsl #14
 2371              		.loc 1 803 30 discriminator 3 view .LVU856
 2372 0032 C2F31102 		ubfx	r2, r2, #0, #18
 2373 0036 4260     		str	r2, [r0, #4]
 804:poly.c        **** 
 805:poly.c        ****         r->coeffs[4 * i + 2]  = a[9 * i + 4] >> 4;
 2374              		.loc 1 805 9 is_stmt 1 discriminator 3 view .LVU857
 2375              		.loc 1 805 46 is_stmt 0 discriminator 3 view .LVU858
 2376 0038 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 2377 003a 1B09     		lsrs	r3, r3, #4
 2378 003c 8360     		str	r3, [r0, #8]
 806:poly.c        ****         r->coeffs[4 * i + 2] |= (uint32_t)a[9 * i + 5] << 4;
 2379              		.loc 1 806 9 is_stmt 1 discriminator 3 view .LVU859
 2380              		.loc 1 806 33 is_stmt 0 discriminator 3 view .LVU860
 2381 003e 4D79     		ldrb	r5, [r1, #5]	@ zero_extendqisi2
 2382              		.loc 1 806 30 discriminator 3 view .LVU861
 2383 0040 43EA0513 		orr	r3, r3, r5, lsl #4
 2384 0044 8360     		str	r3, [r0, #8]
 807:poly.c        ****         r->coeffs[4 * i + 2] |= (uint32_t)a[9 * i + 6] << 12;
 2385              		.loc 1 807 9 is_stmt 1 discriminator 3 view .LVU862
 808:poly.c        ****         r->coeffs[4 * i + 2] &= 0x3FFFF;
 2386              		.loc 1 808 9 discriminator 3 view .LVU863
 807:poly.c        ****         r->coeffs[4 * i + 2] |= (uint32_t)a[9 * i + 6] << 12;
 2387              		.loc 1 807 33 is_stmt 0 discriminator 3 view .LVU864
 2388 0046 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
 807:poly.c        ****         r->coeffs[4 * i + 2] |= (uint32_t)a[9 * i + 6] << 12;
 2389              		.loc 1 807 30 discriminator 3 view .LVU865
 2390 0048 43EA0533 		orr	r3, r3, r5, lsl #12
 2391              		.loc 1 808 30 discriminator 3 view .LVU866
 2392 004c C3F31103 		ubfx	r3, r3, #0, #18
 2393 0050 8360     		str	r3, [r0, #8]
 809:poly.c        **** 
 810:poly.c        ****         r->coeffs[4 * i + 3]  = a[9 * i + 6] >> 6;
 2394              		.loc 1 810 9 is_stmt 1 discriminator 3 view .LVU867
 2395              		.loc 1 810 46 is_stmt 0 discriminator 3 view .LVU868
 2396 0052 8D79     		ldrb	r5, [r1, #6]	@ zero_extendqisi2
 2397 0054 AD09     		lsrs	r5, r5, #6
 2398 0056 C560     		str	r5, [r0, #12]
 811:poly.c        ****         r->coeffs[4 * i + 3] |= (uint32_t)a[9 * i + 7] << 2;
 2399              		.loc 1 811 9 is_stmt 1 discriminator 3 view .LVU869
 2400              		.loc 1 811 33 is_stmt 0 discriminator 3 view .LVU870
 2401 0058 CF79     		ldrb	r7, [r1, #7]	@ zero_extendqisi2
 2402              		.loc 1 811 30 discriminator 3 view .LVU871
 2403 005a 45EA8705 		orr	r5, r5, r7, lsl #2
 2404 005e C560     		str	r5, [r0, #12]
 812:poly.c        ****         r->coeffs[4 * i + 3] |= (uint32_t)a[9 * i + 8] << 10;
 2405              		.loc 1 812 9 is_stmt 1 discriminator 3 view .LVU872
 2406              		.loc 1 812 33 is_stmt 0 discriminator 3 view .LVU873
 2407 0060 0F7A     		ldrb	r7, [r1, #8]	@ zero_extendqisi2
 2408              		.loc 1 812 30 discriminator 3 view .LVU874
 2409 0062 45EA8725 		orr	r5, r5, r7, lsl #10
 813:poly.c        ****         r->coeffs[4 * i + 3] &= 0x3FFFF;
 2410              		.loc 1 813 9 is_stmt 1 discriminator 3 view .LVU875
 814:poly.c        **** 
 815:poly.c        ****         r->coeffs[4 * i + 0] = GAMMA1 - r->coeffs[4 * i + 0];
 2411              		.loc 1 815 9 discriminator 3 view .LVU876
 2412              		.loc 1 815 39 is_stmt 0 discriminator 3 view .LVU877
 2413 0066 C4F50034 		rsb	r4, r4, #131072
 816:poly.c        ****         r->coeffs[4 * i + 1] = GAMMA1 - r->coeffs[4 * i + 1];
 2414              		.loc 1 816 39 discriminator 3 view .LVU878
 2415 006a C2F50032 		rsb	r2, r2, #131072
 817:poly.c        ****         r->coeffs[4 * i + 2] = GAMMA1 - r->coeffs[4 * i + 2];
 2416              		.loc 1 817 39 discriminator 3 view .LVU879
 2417 006e C3F50033 		rsb	r3, r3, #131072
 818:poly.c        ****         r->coeffs[4 * i + 3] = GAMMA1 - r->coeffs[4 * i + 3];
 2418              		.loc 1 818 39 discriminator 3 view .LVU880
 2419 0072 C5F50035 		rsb	r5, r5, #131072
 815:poly.c        ****         r->coeffs[4 * i + 1] = GAMMA1 - r->coeffs[4 * i + 1];
 2420              		.loc 1 815 30 discriminator 3 view .LVU881
 2421 0076 0460     		str	r4, [r0]
 816:poly.c        ****         r->coeffs[4 * i + 2] = GAMMA1 - r->coeffs[4 * i + 2];
 2422              		.loc 1 816 9 is_stmt 1 discriminator 3 view .LVU882
 816:poly.c        ****         r->coeffs[4 * i + 2] = GAMMA1 - r->coeffs[4 * i + 2];
 2423              		.loc 1 816 30 is_stmt 0 discriminator 3 view .LVU883
 2424 0078 4260     		str	r2, [r0, #4]
 817:poly.c        ****         r->coeffs[4 * i + 3] = GAMMA1 - r->coeffs[4 * i + 3];
 2425              		.loc 1 817 9 is_stmt 1 discriminator 3 view .LVU884
 817:poly.c        ****         r->coeffs[4 * i + 3] = GAMMA1 - r->coeffs[4 * i + 3];
 2426              		.loc 1 817 30 is_stmt 0 discriminator 3 view .LVU885
 2427 007a 8360     		str	r3, [r0, #8]
 2428              		.loc 1 818 9 is_stmt 1 discriminator 3 view .LVU886
 2429              		.loc 1 818 30 is_stmt 0 discriminator 3 view .LVU887
 2430 007c C560     		str	r5, [r0, #12]
 794:poly.c        ****         r->coeffs[4 * i + 0]  = a[9 * i + 0];
 2431              		.loc 1 794 28 is_stmt 1 discriminator 3 view .LVU888
 794:poly.c        ****         r->coeffs[4 * i + 0]  = a[9 * i + 0];
 2432              		.loc 1 794 17 discriminator 3 view .LVU889
 794:poly.c        ****         r->coeffs[4 * i + 0]  = a[9 * i + 0];
 2433              		.loc 1 794 5 is_stmt 0 discriminator 3 view .LVU890
 2434 007e 1030     		adds	r0, r0, #16
 2435 0080 B042     		cmp	r0, r6
 2436 0082 01F10901 		add	r1, r1, #9
 2437 0086 BED1     		bne	.L97
 819:poly.c        ****     }
 820:poly.c        **** 
 821:poly.c        ****     DBENCH_STOP(*tpack);
 822:poly.c        **** }
 2438              		.loc 1 822 1 view .LVU891
 2439 0088 F0BD     		pop	{r4, r5, r6, r7, pc}
 2440              		.loc 1 822 1 view .LVU892
 2441              		.cfi_endproc
 2442              	.LFE26:
 2444              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1,"ax",%progbits
 2445              		.align	1
 2446              		.global	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1
 2447              		.syntax unified
 2448              		.thumb
 2449              		.thumb_func
 2450              		.fpu softvfp
 2452              	PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1:
 2453              	.LVL167:
 2454              	.LFB17:
 460:poly.c        ****     uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS * STREAM256_BLOCKBYTES];
 2455              		.loc 1 460 25 is_stmt 1 view -0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 688
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
 461:poly.c        ****     stream256_state state;
 2459              		.loc 1 461 5 view .LVU894
 462:poly.c        **** 
 2460              		.loc 1 462 5 view .LVU895
 464:poly.c        ****     stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2461              		.loc 1 464 5 view .LVU896
 460:poly.c        ****     uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS * STREAM256_BLOCKBYTES];
 2462              		.loc 1 460 25 is_stmt 0 view .LVU897
 2463 0000 10B5     		push	{r4, lr}
 2464              	.LCFI32:
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 4, -8
 2467              		.cfi_offset 14, -4
 2468 0002 ADF52C7D 		sub	sp, sp, #688
 2469              	.LCFI33:
 2470              		.cfi_def_cfa_offset 696
 460:poly.c        ****     uint8_t buf[POLY_UNIFORM_GAMMA1_NBLOCKS * STREAM256_BLOCKBYTES];
 2471              		.loc 1 460 25 view .LVU898
 2472 0006 0446     		mov	r4, r0
 464:poly.c        ****     stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2473              		.loc 1 464 5 view .LVU899
 2474 0008 01A8     		add	r0, sp, #4
 2475              	.LVL168:
 464:poly.c        ****     stream256_squeezeblocks(buf, POLY_UNIFORM_GAMMA1_NBLOCKS, &state);
 2476              		.loc 1 464 5 view .LVU900
 2477 000a FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_dilithium_shake256_stream_init
 2478              	.LVL169:
 465:poly.c        ****     stream256_release(&state);
 2479              		.loc 1 465 5 is_stmt 1 view .LVU901
 2480 000e 01AA     		add	r2, sp, #4
 2481 0010 4FF42A71 		mov	r1, #680
 2482 0014 02A8     		add	r0, sp, #8
 2483 0016 FFF7FEFF 		bl	shake256_inc_squeeze
 2484              	.LVL170:
 466:poly.c        ****     PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(a, buf);
 2485              		.loc 1 466 5 view .LVU902
 2486 001a 01A8     		add	r0, sp, #4
 2487 001c FFF7FEFF 		bl	shake256_inc_ctx_release
 2488              	.LVL171:
 467:poly.c        **** }
 2489              		.loc 1 467 5 view .LVU903
 2490 0020 02A9     		add	r1, sp, #8
 2491 0022 2046     		mov	r0, r4
 2492 0024 FFF7FEFF 		bl	PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
 2493              	.LVL172:
 468:poly.c        **** 
 2494              		.loc 1 468 1 is_stmt 0 view .LVU904
 2495 0028 0DF52C7D 		add	sp, sp, #688
 2496              	.LCFI34:
 2497              		.cfi_def_cfa_offset 8
 2498              		@ sp needed
 2499 002c 10BD     		pop	{r4, pc}
 468:poly.c        **** 
 2500              		.loc 1 468 1 view .LVU905
 2501              		.cfi_endproc
 2502              	.LFE17:
 2504              		.section	.text.PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack,"ax",%progbits
 2505              		.align	1
 2506              		.global	PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu softvfp
 2512              	PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack:
 2513              	.LVL173:
 2514              	.LFB27:
 823:poly.c        **** 
 824:poly.c        **** /*************************************************
 825:poly.c        **** * Name:        PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack
 826:poly.c        **** *
 827:poly.c        **** * Description: Bit-pack polynomial w1 with coefficients in [0,15] or [0,43].
 828:poly.c        **** *              Input coefficients are assumed to be standard representatives.
 829:poly.c        **** *
 830:poly.c        **** * Arguments:   - uint8_t *r: pointer to output byte array with at least
 831:poly.c        **** *                            POLYW1_PACKEDBYTES bytes
 832:poly.c        **** *              - const poly *a: pointer to input polynomial
 833:poly.c        **** **************************************************/
 834:poly.c        **** void PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack(uint8_t *r, const poly *a) {
 2515              		.loc 1 834 70 is_stmt 1 view -0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 0
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
 835:poly.c        ****     unsigned int i;
 2519              		.loc 1 835 5 view .LVU907
 836:poly.c        ****     DBENCH_START();
 2520              		.loc 1 836 19 view .LVU908
 837:poly.c        **** 
 838:poly.c        ****     for (i = 0; i < N / 4; ++i) {
 2521              		.loc 1 838 5 view .LVU909
 2522              		.loc 1 838 17 view .LVU910
 834:poly.c        ****     unsigned int i;
 2523              		.loc 1 834 70 is_stmt 0 view .LVU911
 2524 0000 10B5     		push	{r4, lr}
 2525              	.LCFI35:
 2526              		.cfi_def_cfa_offset 8
 2527              		.cfi_offset 4, -8
 2528              		.cfi_offset 14, -4
 2529 0002 00F1C002 		add	r2, r0, #192
 2530              	.LVL174:
 2531              	.L101:
 839:poly.c        ****         r[3 * i + 0]  = (uint8_t) a->coeffs[4 * i + 0];
 2532              		.loc 1 839 9 is_stmt 1 discriminator 3 view .LVU912
 2533              		.loc 1 839 25 is_stmt 0 discriminator 3 view .LVU913
 2534 0006 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 2535              		.loc 1 839 23 discriminator 3 view .LVU914
 2536 0008 0370     		strb	r3, [r0]
 840:poly.c        ****         r[3 * i + 0] |= (uint8_t) (a->coeffs[4 * i + 1] << 6);
 2537              		.loc 1 840 9 is_stmt 1 discriminator 3 view .LVU915
 2538              		.loc 1 840 25 is_stmt 0 discriminator 3 view .LVU916
 2539 000a 4C68     		ldr	r4, [r1, #4]
 2540              		.loc 1 840 22 discriminator 3 view .LVU917
 2541 000c 43EA8413 		orr	r3, r3, r4, lsl #6
 2542 0010 0370     		strb	r3, [r0]
 841:poly.c        ****         r[3 * i + 1]  = (uint8_t) (a->coeffs[4 * i + 1] >> 2);
 2543              		.loc 1 841 9 is_stmt 1 discriminator 3 view .LVU918
 2544              		.loc 1 841 57 is_stmt 0 discriminator 3 view .LVU919
 2545 0012 4B68     		ldr	r3, [r1, #4]
 2546              		.loc 1 841 25 discriminator 3 view .LVU920
 2547 0014 C3F38703 		ubfx	r3, r3, #2, #8
 2548              		.loc 1 841 23 discriminator 3 view .LVU921
 2549 0018 4370     		strb	r3, [r0, #1]
 842:poly.c        ****         r[3 * i + 1] |= (uint8_t) (a->coeffs[4 * i + 2] << 4);
 2550              		.loc 1 842 9 is_stmt 1 discriminator 3 view .LVU922
 2551              		.loc 1 842 25 is_stmt 0 discriminator 3 view .LVU923
 2552 001a 8C68     		ldr	r4, [r1, #8]
 2553              		.loc 1 842 22 discriminator 3 view .LVU924
 2554 001c 43EA0413 		orr	r3, r3, r4, lsl #4
 2555 0020 4370     		strb	r3, [r0, #1]
 843:poly.c        ****         r[3 * i + 2]  = (uint8_t) (a->coeffs[4 * i + 2] >> 4);
 2556              		.loc 1 843 9 is_stmt 1 discriminator 3 view .LVU925
 2557              		.loc 1 843 57 is_stmt 0 discriminator 3 view .LVU926
 2558 0022 8B68     		ldr	r3, [r1, #8]
 2559              		.loc 1 843 25 discriminator 3 view .LVU927
 2560 0024 C3F30713 		ubfx	r3, r3, #4, #8
 2561              		.loc 1 843 23 discriminator 3 view .LVU928
 2562 0028 8370     		strb	r3, [r0, #2]
 844:poly.c        ****         r[3 * i + 2] |= (uint8_t) (a->coeffs[4 * i + 3] << 2);
 2563              		.loc 1 844 9 is_stmt 1 discriminator 3 view .LVU929
 2564              		.loc 1 844 25 is_stmt 0 discriminator 3 view .LVU930
 2565 002a CC68     		ldr	r4, [r1, #12]
 2566              		.loc 1 844 22 discriminator 3 view .LVU931
 2567 002c 43EA8403 		orr	r3, r3, r4, lsl #2
 2568 0030 8370     		strb	r3, [r0, #2]
 838:poly.c        ****         r[3 * i + 0]  = (uint8_t) a->coeffs[4 * i + 0];
 2569              		.loc 1 838 28 is_stmt 1 discriminator 3 view .LVU932
 838:poly.c        ****         r[3 * i + 0]  = (uint8_t) a->coeffs[4 * i + 0];
 2570              		.loc 1 838 17 discriminator 3 view .LVU933
 838:poly.c        ****         r[3 * i + 0]  = (uint8_t) a->coeffs[4 * i + 0];
 2571              		.loc 1 838 5 is_stmt 0 discriminator 3 view .LVU934
 2572 0032 0330     		adds	r0, r0, #3
 2573 0034 9042     		cmp	r0, r2
 2574 0036 01F11001 		add	r1, r1, #16
 2575 003a E4D1     		bne	.L101
 845:poly.c        ****     }
 846:poly.c        **** 
 847:poly.c        ****     DBENCH_STOP(*tpack);
 848:poly.c        **** }
 2576              		.loc 1 848 1 view .LVU935
 2577 003c 10BD     		pop	{r4, pc}
 2578              		.cfi_endproc
 2579              	.LFE27:
 2581              		.text
 2582              	.Letext0:
 2583              		.file 2 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\m
 2584              		.file 3 "d:\\cw_software\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\s
 2585              		.file 4 "poly.h"
 2586              		.file 5 "fips202.h"
 2587              		.file 6 "symmetric.h"
 2588              		.file 7 "rounding.h"
 2589              		.file 8 "reduce.h"
 2590              		.file 9 "ntt.h"
 2591              		.file 10 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 poly.c
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:16     .text.rej_uniform:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:23     .text.rej_uniform:00000000 rej_uniform
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:108    .text.rej_uniform:00000040 $d
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:113    .text.rej_eta.constprop.0:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:119    .text.rej_eta.constprop.0:00000000 rej_eta.constprop.0
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:248    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_reduce:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:255    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_reduce:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_reduce
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:298    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_caddq:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:305    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_caddq:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_caddq
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:348    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_add:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:355    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_add:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_add
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:397    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_sub:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:404    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_sub:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_sub
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:446    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:453    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_shiftl
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:487    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_ntt:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:494    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_ntt:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_ntt
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:511    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:518    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_invntt_tomont
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:535    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:542    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_pointwise_montgomery
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:594    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_power2round:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:601    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_power2round:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_power2round
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:650    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_decompose:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:657    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_decompose:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_decompose
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:706    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:713    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_make_hint
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:775    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:782    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_use_hint
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:833    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:840    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:902    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_chknorm:0000002c $d
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:907    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:914    .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_uniform
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1052   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1059   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_eta
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1146   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_challenge:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1153   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_challenge:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_challenge
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1337   .text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1344   .text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyeta_pack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1469   .text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1476   .text.PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyeta_unpack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1615   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1622   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyt1_pack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1692   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1699   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyt1_unpack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1782   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1789   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyt0_pack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1963   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:1970   .text.PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyt0_unpack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2180   .text.PQCLEAN_DILITHIUM2_CLEAN_polyz_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2187   .text.PQCLEAN_DILITHIUM2_CLEAN_polyz_pack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyz_pack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2305   .text.PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2312   .text.PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2445   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2452   .text.PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1:00000000 PQCLEAN_DILITHIUM2_CLEAN_poly_uniform_gamma1
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2505   .text.PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack:00000000 $t
C:\Users\dudixiao\AppData\Local\Temp\ccfoiEmo.s:2512   .text.PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack:00000000 PQCLEAN_DILITHIUM2_CLEAN_polyw1_pack

UNDEFINED SYMBOLS
PQCLEAN_DILITHIUM2_CLEAN_reduce32
PQCLEAN_DILITHIUM2_CLEAN_caddq
PQCLEAN_DILITHIUM2_CLEAN_ntt
PQCLEAN_DILITHIUM2_CLEAN_invntt_tomont
PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce
PQCLEAN_DILITHIUM2_CLEAN_power2round
PQCLEAN_DILITHIUM2_CLEAN_decompose
PQCLEAN_DILITHIUM2_CLEAN_make_hint
PQCLEAN_DILITHIUM2_CLEAN_use_hint
PQCLEAN_DILITHIUM2_CLEAN_dilithium_shake128_stream_init
shake128_inc_squeeze
shake128_inc_ctx_release
PQCLEAN_DILITHIUM2_CLEAN_dilithium_shake256_stream_init
shake256_inc_squeeze
shake256_inc_ctx_release
shake256_inc_init
shake256_inc_absorb
shake256_inc_finalize
memset
